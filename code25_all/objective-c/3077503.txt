#import <Foundation/Foundation.h>

@interface FirstLevelViewController : UITableViewController 
<UITableViewDataSource, UITableViewDelegate> {
NSArray *controllers;
}

@property (nonatomic, retain) NSArray *controllers; 


@end


#import "FirstLevelViewController.h"
#import "BirthDay.h"
#import "Height.h"
#import "Model.h"


@implementation FirstLevelViewController
@synthesize controllers; 

-(void)viewDidLoad {


NSMutableArray  *array = [[NSMutableArray alloc]init];

Model *frank = [[Model alloc]init]; 
frank.date = @"Oh No You Didn't"; 
self.title = [frank date]; 


BirthDay *birthday = [[BirthDay alloc]initWithNibName:@"Birthday" bundle:nil]; 
birthday.title = @"Birth Date"; 

[array addObject:birthday];
[birthday release]; 

Height *height = [[Height alloc]initWithNibName:@"Height" bundle:nil]; 
height.title = @"Height"; 
[array addObject:height]; 
[height release];   

self.controllers = array; 

#import <Foundation/Foundation.h>
#import "FirstLevelViewController.h"
#import "BirthDay.h"
#import "model.h"


@interface Model : NSObject {
    NSString *date; 
}

@property (nonatomic, retain) NSString *date; 
@end


#import "Model.h"

@implementation Model
@synthesize date; 


@end

@interface BirthDay : UIViewController <UIPickerViewDelegate, UIPickerViewDataSource>{

    UILabel *dateLabel;
    UIPickerView *datePicker; 


}

@property (nonatomic, retain) IBOutlet UILabel *dateLabel; 
@property (nonatomic, retain) IBOutlet UIPickerView *datePicker; 

@end


#import "BirthDay.h"
#import "FirstLevelViewController.h"
#import "Model.h"

@implementation BirthDay
@synthesize datePicker;
@synthesize dateLabel; 

-(IBAction)updateLabel {

    NSDate *dateOfBirth = [datePicker date]; 
    NSDate *todaysDate = [NSDate date]; 

    NSCalendar *gregorian = [[NSCalendar alloc] initWithCalendarIdentifier:NSGregorianCalendar];
    NSUInteger unitFlags = NSMonthCalendarUnit | NSDayCalendarUnit; 

    NSDateComponents *components = [gregorian components:unitFlags fromDate:dateOfBirth toDate:todaysDate options:0]; 
    NSInteger months = [components month]; 
    NSInteger days = [components day];

    float Months = months; 
    if (days > 14) {
        Months = Months + 0.5; 
    }




    NSString *message = [[NSString alloc]initWithFormat: @"%.1f Months and %d Days old", Months, days];

    dateLabel.text = message; 

}

@end


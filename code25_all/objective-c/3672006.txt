double *MatrixAllocateArray( NSUInteger rows, NSUInteger columns )
{
     // Allocate an array to hold [rows][columns] matrix values
     NSCParameterAssert(rows!=0);
     NSCParameterAssert(columns!=0);
     __strong double *array = NSAllocateCollectable(SIZEOFARRAY(rows,columns),0); //(WARNINGS APPEAR HERE)
     NSCAssert2(array!=NULL,@"falled to allocate %dx%d matrix",rows,columns);

     return array;
}

double *MatrixAllocateEmptyArray( NSUInteger rows, NSUInteger columns )
{
     // Allocate a matrix array and fill it with zeros
     __strong double *emptyArray = MatrixAllocateArray(rows,columns);
     bzero(emptyArray,SIZEOFARRAY(rows,columns));

     return emptyArray;
}

- (id)initWithRows:(NSUInteger)rowCount columns:(NSUInteger)colCount
{
     // Create an empty matrix

     return [self initWithAllocatedArray:MatrixAllocateEmptyArray(rowCount,colCount)
           rows:rowCount
        columns:colCount];
}


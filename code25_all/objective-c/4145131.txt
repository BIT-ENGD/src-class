- (void)showDetails:(id)sender {

 DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil ];

    // HERE I NEED TO PASS THE COORDINATES OF THE PIN TO THE DETAILVIEWCONTROLLER.
    [self.navigationController pushViewController:detailViewController animated:YES];
 [detailViewController release];
}


- (MKAnnotationView *)mapView:(MKMapView *)theMapView viewForAnnotation:(id <MKAnnotation>)annotation {

 // If it's the user location, just return nil.
 if ([annotation isKindOfClass:[MKUserLocation class]])
  return nil;
 else { // Handles the other annotations.
  // Try to dequeue an existing pin view first.
  static NSString *AnnotationIdentifier = @"AnnotationIdentifier";
  MKPinAnnotationView *pinView = (MKPinAnnotationView *)[self.mapView dequeueReusableAnnotationViewWithIdentifier:AnnotationIdentifier];

  if (!pinView) {
   // If an existing pin view was not available, creates one.
   MKPinAnnotationView *customPinView = [[[MKPinAnnotationView alloc] initWithAnnotation:annotation reuseIdentifier:AnnotationIdentifier] autorelease];
   customPinView.animatesDrop = YES;
   customPinView.canShowCallout = YES;

   // Adds a detail disclosure button.
   UIButton *rightButton = [UIButton buttonWithType:UIButtonTypeDetailDisclosure];
   [rightButton addTarget:self action:@selector(showDetails:) forControlEvents:UIControlEventTouchUpInside];
   customPinView.rightCalloutAccessoryView = rightButton;

   return customPinView;
  } else
   pinView.annotation = annotation;
 }

 return nil;
}


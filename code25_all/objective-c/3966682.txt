-(void)addStoryItemAction:(Sentence*)sentence{

[self dismissModalViewControllerAnimated:YES];  
Story *story = [[Story alloc] initWithSentence: sentence];

sentence.belongsTo = story;

//crash and burn here.

Story *storySetter = (Story*)   [NSEntityDescription insertNewObjectForEntityForName:@"Story" inManagedObjectContext:managedObjectContext];
[storySetter setSentences:      story.sentences];
[storySetter setCreationDate:   story.creationDate];
[storySetter setOrder:          story.order];

NSError *error;  

BOOL isSaved = [managedObjectContext save:&error];
NSLog(@"isSaved? %@", (isSaved ? @"YES" :@"NO ") );

if (!isSaved) {
    NSLog(@"%@:%s Error saving context: %@", [self class], _cmd, [error localizedDescription]);
    return;
}

 #import <Foundation/Foundation.h>
 #import "Story.h"

 @class Story;

 @interface Sentence : NSManagedObject {
 }
 @property (assign) NSString  *text;
 @property (assign) NSString  *image;
 @property (assign) NSInteger *order;
 @property (nonatomic, retain) Story  *belongsTo;

 - (id)initWithContent:(NSString*)sentenceText image:(NSString*)sentenceImage order: (NSInteger*)sentencePosition;
 @end

 #import "Sentence.h"
 @implementation Sentence
 @synthesize text;
 @synthesize image;
 @synthesize order;
 @dynamic belongsTo;

 - (id)initWithContent:(NSString*)sentenceText image:(NSString*)sentenceImage order: (NSInteger*)sentencePosition{
[self setText:  sentenceText];
[self setImage: sentenceImage];
[self setOrder: sentencePosition];  
return self;
 }
 @end

 #import <Foundation/Foundation.h>
 #import <CoreData/CoreData.h>
 #import "Sentence.h" 
 @class Sentence;
 @interface Story : NSManagedObject {
 }
 @property (assign) NSSet     *sentences;
 @property (assign) NSDate    *creationDate;
 @property (assign) NSInteger *order;

 - (id)initWithSentence:(Sentence*)sentence;
 @end

 #import "Story.h"
 @implementation Story
 @synthesize sentences;
 @synthesize creationDate;
 @synthesize order;

 - (id)initWithSentence: (Sentence*) sentence{

NSLog(@"initWithSencence: sentence: %@", sentence);
sentences = [[NSSet alloc] initWithObjects:sentence, nil];
//[sentences setByAddingObject:sentence];
[self setSentences:sentences];
NSLog(@"sentences (in story object): %@", sentences);
creationDate = [NSDate date];
[self setCreationDate:creationDate];
//later expansion, position should be max(position of all stories) ++
[self setOrder:0];

 return self;
 }

 @end


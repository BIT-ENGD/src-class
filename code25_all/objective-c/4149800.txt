@interface myCustomClass : NSObject {
    NSString * text;
}
@property (nonatomic, retain) NSString * text;
- (void)changetext;

@implementation myCustomClass

@synthesize text;
static myCustomClass * _sharedInstance;

- (id)init
{
    if ((self = [super init])) {
        text = @ "";
    }
    return self;
}

+ (myCustomClass *)sharedInstance
{
    if (!_sharedInstance) {
        _sharedInstance = [[myCustomClass alloc] init];
    }

    return _sharedInstance;
}
- (void)changetext {
    text = @ "changed";
}

@interface FirstViewController:UIViewController {

    IBOutlet UILabel * label;
}
@property (nonatomic, retain) IBOutlet UILavel * label;

@implementation FirstViewController

@synthesize label;
- (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id) object change:(NSDictionary *)change context:(void *)context
{
    label.text = [change valueForKey:@ "new"];
}
- (void)viewDidLoad {
    myCustomClass * myEngine = [myCustomClass sharedInstance];
    [myEngine addObserver : self forKeyPath : @ "text" options : NSKeyValueObservingOptionNew context : nil];
    [myEngine changetext];

    [super viewDidLoad];
}


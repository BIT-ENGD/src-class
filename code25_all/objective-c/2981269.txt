+ (Actor *)shareActorState
{
    static Actor *actorState;

    @synchronized(self) {
        if (!actorState) {
            actorState = [[Actor alloc] init];
        }
    }

    return actorState;  
}


-(id)init
{
    if (self = [super init]) {

        NSLog(@"New Init for Actor started...\nStrength: %d", self.strength);
    }

    return self;
}

-(id)initWithCoder:(NSCoder *)coder
{

    if (self = [super init]) {

        strength = [coder decodeIntegerForKey:@"strength"];
        dexterity = [coder decodeIntegerForKey:@"dexterity"];
        stamina = [coder decodeIntegerForKey:@"stamina"];
        will = [coder decodeIntegerForKey:@"will"];
        intelligence = [coder decodeIntegerForKey:@"intelligence"];
        agility = [coder decodeIntegerForKey:@"agility"];
        aura = [coder decodeIntegerForKey:@"aura"];
        eyesight = [coder decodeIntegerForKey:@"eyesight"];
        NSLog(@"InitWithCoder executed....\nStrength: %d\nDexterity: %d", self.strength, self.dexterity);
        [self retain];

    }

    return self;                 
}

-(void) encodeWithCoder:(NSCoder *)encoder
{
    [encoder encodeInteger:strength forKey:@"strength"];
    [encoder encodeInteger:dexterity forKey:@"dexterity"];
    [encoder encodeInteger:stamina forKey:@"stamina"];
    [encoder encodeInteger:will forKey:@"will"];
    [encoder encodeInteger:intelligence forKey:@"intelligence"];
    [encoder encodeInteger:agility forKey:@"agility"];
    [encoder encodeInteger:aura forKey:@"aura"];
    [encoder encodeInteger:eyesight forKey:@"eyesight"];
    NSLog(@"encodeWithCoder executed....");
}


-(void)dealloc
{
    //My dealloc stuff goes here
    [super dealloc];
}


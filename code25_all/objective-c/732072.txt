@interface WordObject : NSObject
{
    int word_id;
    NSString *word;
}

@property int word_id;
@property (copy) NSString *word;

@end

-(void) reloadTableData {
        [tableDataArray removeAllObjects];

        for (int i = 0; i <= 25; i++)
        {
            NSMutableArray *words_in_section = [ [NSMutableArray alloc] init];
            [tableDataArray addObject:words_in_section];
            [words_in_section release];
        }

        WordObject *tempWordObj;

        int cur_section;

        while ( tempWordObj = [ [WordsDatabase sharedWordsDatabase] getNext] )
        {   
            cur_section = toupper([ [tempWordObj word] characterAtIndex:0 ] ) - 'A';

            NSMutableArray *temp_array = [tableDataArray objectAtIndex:cur_section];
            [temp_array addObject:tempWordObj];
            [tableDataArray replaceObjectAtIndex:cur_section withObject:temp_array];
        }

        [mainTableView reloadData];

        [mainTableView scrollRectToVisible:CGRectMake(0, 0, 1, 1) animated:NO];
    }

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    static NSString *CellIdentifier = @"Cell";

    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil) {
        cell = [[[UITableViewCell alloc] initWithFrame:CellFrame reuseIdentifier:cellIdentifier] autorelease];
    }


    WordObject *tempWordObj = [ [tableDataArray objectAtIndex:[indexPath section] ] objectAtIndex:[indexPath row] ];

    if (!tempWordObj)
    {
        return cell;
    }

    cell.text = [tempWordObj word];

    return cell;
}

-(void) freeMemory
{   
    if (tableDataArray)
    {
        [tableDataArray release];
        tableDataArray = nil;
    }
}

    -(WordObject*) getNext {
    if(sqlite3_step(getStmt) == SQLITE_DONE)
    {
        sqlite3_reset(getStmt);
        return nil;
    }


    WordObject *tempWord = [ [WordObject alloc] init];
    tempWord.word_id = sqlite3_column_int(getWordsStmt, 0);

    tempWord.word = [NSString stringWithUTF8String:(char *)sqlite3_column_text(getWordsStmt, 1)]; //Here a leak occurs

    return [tempWord autorelease];
}


[self performSelectorInBackground:@selector(loadTableData) withObject:nil];

(void)connection:(NSURLConnection *)theConnection didReceiveData:(NSData *)incrementalData

(void)connectionDidFinishLoading:(NSURLConnection*)theConnection

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath

    -(void)connectionDidFinishLoading:(NSURLConnection*)theConnection{
[connection release];
connection=nil;
if ([[self subviews] count]>0) {
    //then this must be another image, the old one is still in subviews
    [[[self subviews] objectAtIndex:0] removeFromSuperview]; //so remove it (releases it also)
}

//make an image view for the image
UIImageView* imageView = [[[UIImageView alloc] initWithImage:[UIImage imageWithData:data]] autorelease];
//make sizing choices based on your needs, experiment with these. maybe not all the calls below are needed.
imageView.contentMode = UIViewContentModeScaleAspectFit;
imageView.autoresizingMask = ( UIViewAutoresizingFlexibleWidth || UIViewAutoresizingFlexibleHeight );
for(UIView *view in self.subviews){ //****i do this to remove a UIActivityIndicatorView which is placed until the image is completely fetched 
        [view removeFromSuperview];
}
[self addSubview:imageView];
imageView.frame = self.bounds;
[imageView setNeedsLayout];
[self setNeedsLayout];
[data release]; //don't need this any more, its in the UIImageView now
data=nil;}

[self performSelectorInBackground:@selector(loadTableData) withObject:nil];


@interface LoginViewController : UIViewController {

}

@property (nonatomic, retain) IBOutlet UITextField *usernameTextView;
@property (nonatomic, retain) IBOutlet UIImageView *captchaImageView;
@property (nonatomic, retain) IBOutlet UITextField *captchaTextView;
@property (nonatomic, retain) IBOutlet NSObject <BackEndSystemDelegate> *systemDelegate;

- (IBAction) submitCaptcha:(id) sender;
- (IBAction)dismissKeyboard: (id)sender;
- (IBAction) animateViewUp: (id) sender;
- (IBAction) animateViewDown: (id) sender;
- (void) animateViewOnYAxis: (int) offset;
- (void) loadCaptchaImage;

@end

loadNibNamed
- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {    
    NSObject <BackEndSystemDelegate> *systemDelegate = [[ACMEBackEndSystemDelegate alloc] init];


    // Init LoginView, and load nib with systemDelegate
    self.viewController = [[LoginViewController alloc] init];
    NSDictionary *proxies = [NSDictionary dictionaryWithObject:systemDelegate forKey:@"systemDelegate"];
    NSDictionary *options = [NSDictionary dictionaryWithObject:proxies forKey:UINibExternalObjects];

    NSArray *toplevelobjects = [[NSBundle mainBundle] loadNibNamed:@"LoginViewController" 
                                                             owner:self.viewController 
                                                           options:options];

    if (toplevelobjects) {
        NSLog(@"toplevelobjects is nil");
    } else {
        NSLog(@"toplevelobjects count %d", [toplevelobjects count]);
    }


    NSLog(@"Controller: %@, View: %@", viewController, viewController.view);

    // Add the view controller's view to the window and display.
    [window addSubview:viewController.view];
    [window makeKeyAndVisible];

    return YES;
}


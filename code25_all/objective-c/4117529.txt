- (IBAction)setPlayer:(id)sender {

 haserror = @"false";
 errmsg = [NSMutableString stringWithCapacity:0];
 [errmsg retain];
 [errmsg appendString: @"There was a problem setting your team up\n\n"];
 thisTeamName = [txtTeamName stringValue];
 thisTeamColor = [pdTeamColor itemTitleAtIndex:[pdTeamColor indexOfSelectedItem]];

 //validate form
 if ([thisTeamName isEqualToString:@""]) {
  haserror = @"true";
  [errmsg appendString: @"You must enter a team name\n\n"];
 }

 if ([thisTeamColor isEqualToString:@"Select A Color"]) {
  haserror = @"true";
  [errmsg appendString: @"You must select a team color\n\n"];
 }

 //check for errors
 if (haserror == @"true")  {
  [self showAlert: errmsg];
 } else { 

  //set up treasury
  treasury = 1000;

  //convert to string for display
  [lblTreasury setStringValue: [NSString stringWithFormat:@"$%i", treasury] ];


  //add items to dictionary
  if (activePlayer == @"1") { 

   [p1TeamData setObject:thisTeamName forKey:@"teamName"];
   [p1TeamData setObject:thisTeamColor forKey:@"teamColor"];
   [p1TeamData setObject:[NSString stringWithFormat:@"%i", treasury] forKey:@"cash"];
  } else { 
   [p2TeamData setObject:thisTeamName forKey:@"teamName"];
   [p2TeamData setObject:thisTeamColor forKey:@"teamColor"];
   [p2TeamData setObject:[NSString stringWithFormat:@"%i", treasury] forKey:@"cash"];
  }

  NSLog(@"%@", [p1TeamData allKeys]);  

 }

 [errmsg release];
}

@interface GameController :NSObject {

IBOutlet id btnSaveData;
IBOutlet id lblTreasury;
IBOutlet id pdPickPlayer;
IBOutlet id pdTeamColor;
IBOutlet id txtTeamName;

int activePlayer;
NSString* activePlayerName;
NSString* activePlayerTeamColor;
int  treasury;

NSMutableDictionary* p1TeamData;
NSMutableDictionary* p2TeamData;

NSArray* players;
NSArray* teamColors;
NSArray* unittypes;

NSString* thisTeamName;
NSString* thisTeamColor;

NSMutableString* errmsg;
NSString* haserror;


- (MKAnnotationView *)mapView:(MKMapView *)mapView viewForAnnotation:(id <MKAnnotation>)annotation{
    NSLog(@"This is called");
    MKPinAnnotationView *annView=[[MKPinAnnotationView alloc] initWithAnnotation:annotation reuseIdentifier:@"customloc"];
    [annView setPinColor:MKPinAnnotationColorPurple];
    UIButton *button = [UIButton buttonWithType:UIButtonTypeDetailDisclosure];
    [button addTarget:self action:@selector(goDetail:) forControlEvents:UIControlEventTouchUpInside];

    annView.leftCalloutAccessoryView = button;
    annView.canShowCallout = YES;
    [annView setSelected:YES];
    [annView addObserver:self forKeyPath:@"selected" options:NSKeyValueObservingOptionNew context:nil];

    return annView;
}

-(void)addPins:(float)lat lon:(float)lon{

    CLLocationCoordinate2D location;
    location.latitude = lat;
    location.longitude = lon;

    // forcus around you
    MKCoordinateRegion region;
    region.center=location;
    MKCoordinateSpan span;
    span.latitudeDelta=0.005f; // this should be adjusted for high vs. low latitude - calc by cosign or sign
    span.longitudeDelta=0.005f;
    region.span=span;   
    [map setRegion:region animated:TRUE];   

    // add custom place mark
    CustomPlacemark *placemark=[[[CustomPlacemark alloc] initWithCoordinate:location] autorelease];
    placemark.title = @"";
    placemark.subtitle = @"";
    [map addAnnotation:placemark];
    [placemark release];
}


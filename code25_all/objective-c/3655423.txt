-(IBAction) btnConnect:(id) sender {
if(sender == server){
    [self.currentSession initWithSessionID:@"BT" displayName:nil sessionMode:GKSessionModeServer];
    currentSession.available == YES;
    NSLog(@"Setup Server");
}else{
    [self.currentSession initWithSessionID:@"BT" displayName:nil sessionMode:GKSessionModeClient];
    currentSession.available == YES;
    NSLog(@"Setup Client");
}
currentSession.delegate = self;
currentSession.disconnectTimeout = 0;
[currentSession setDataReceiveHandler:self withContext:nil];
[client setHidden:YES];
[server setHidden:YES];
[disconnect setHidden:NO];       
}

- (void)session:(GKSession *)session peer:(NSString *)peerID didChangeState:(GKPeerConnectionState)state {
NSLog(@"didChangeState was called with status: %@.", state);
switch (state)
{
    case GKPeerStateConnected:
        NSLog(@"connected");
        break;
    case GKPeerStateDisconnected:
        NSLog(@"disconnected");
        [self.currentSession release];
        currentSession = nil;
        [connect setHidden:NO];
        [disconnect setHidden:YES];
        break;
    case GKPeerStateAvailable:
    NSLog(@"Server is Available, Presenting UIALert...");
    NSLog(@"%@", peerID);
    peerName = [session displayNameForPeer:peerID];
    NSLog(@"%@", peerName);
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Server Available!" message:[NSString stringWithFormat:@"The Server %@ is Available, Would you like to Connect?", peerName] delegate:self cancelButtonTitle:@"Decline" otherButtonTitles:@"Accept", nil];
    [alert show];
    [alert release];
    if(selection == @"accept"){
        [session connectToPeer:peerID withTimeout:15];
        session.available = NO;
    }else{
    }
            break;
      }
 }

- (void)session:(GKSession *)session didReceiveConnectionRequestFromPeer:(NSString *)peerID{
NSLog(@"Recieved Connection Request");
NSLog(@"%@", peerID);
peerName = [session displayNameForPeer:peerID];
NSLog(@"%@", peerName);
UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Connection Request" message:[NSString stringWithFormat:@"The Client %@ is trying to connect.", peerName] delegate:self cancelButtonTitle:@"Decline" otherButtonTitles:@"Accept", nil];
[alert show];
[alert release];
if(selection == @"accept"){
    [session acceptConnectionFromPeer:peerID error:nil];
}else{
    [session denyConnectionFromPeer:peerID];
}
}


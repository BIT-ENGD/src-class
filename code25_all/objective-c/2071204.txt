#import <UIKit/UIKit.h>
#import <OpenGLES/ES2/gl.h>

@interface Object3D : NSObject 
{
    GLfloat x;
    GLfloat y;
    GLfloat z;
}

@property  GLfloat x;
@property  GLfloat y;
@property  GLfloat z;

-(void) render;

@end

#import "Thumbnail3D.h"
#import "ConstantsAndMacros.h"
#import "OpenGLCommon.h"

@implementation Thumbnail3D

@synthesize width;
@synthesize height;

-(void)render
{
    Triangle3D  triangle[2];
    triangle[0].v1 = Vertex3DMake(0.0, 1.0, -3.0);
    triangle[0].v2 = Vertex3DMake(1.0, 0.0, -3.0);
    triangle[0].v3 = Vertex3DMake(-1.0, 0.0, -3.0);
    triangle[1].v1 = Vertex3DMake(-1.0, 0.0, -3.0);
    triangle[1].v2 = Vertex3DMake(1.0, 0.0, -3.0);
    triangle[1].v3 = Vertex3DMake(0.0, -1.0, -3.0);

    glLoadIdentity();
    glClearColor(0.7, 0.7, 0.7, 1.0);
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    glEnableClientState(GL_VERTEX_ARRAY);
    glColor4f(1.0, 0.0, 0.0, 1.0);
    glVertexPointer(3, GL_FLOAT, 0, &triangle);
    glDrawArrays(GL_TRIANGLES, 0, 18);
    glDisableClientState(GL_VERTEX_ARRAY);
}

-(void)initWithPosition:(Vertex3D *)vertex
{
    x = vertex.x;
    y = vertex.y;
    z = vertex.z;
}

@end


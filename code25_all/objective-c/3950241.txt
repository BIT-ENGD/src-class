#import <Foundation/Foundation.h>


@interface scoreData : NSObject {

    int score;
}

@property int score;

+ (scoreData *)sharedData;

@end

#import "scoreData.h"


static scoreData *sharedData = nil;

@implementation scoreData

@synthesize score;

#pragma mark -
#pragma mark Singleton Methods
+ (scoreData *)sharedData {
    if(sharedData == nil){
        sharedData = [[super allocWithZone:NULL] init];
    }
    return sharedData;
}
+ (id)allocWithZone:(NSZone *)zone {
    return [[self sharedManager] retain];
}
- (id)copyWithZone:(NSZone *)zone {
    return self;
}
- (id)retain {
    return self;
}
- (unsigned)retainCount {
    return NSUIntegerMax;
}
- (void)release {
    //do nothing
}
- (id)autorelease {
    return self;
}

@end

scoreData *score = [scoreData sharedData];
score.score = 0;


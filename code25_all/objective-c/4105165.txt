// Device.H file
@interface Device : NSObject {  
    @private int nodeLevel;
}

@property (readwrite, assign, nonatomic) int nodeLevel;


// Device.m file
@implementation Device

@synthesize nodeLevel; 

- (id)init {
    self.nodeLevel = 0;
    return self;
}

-(NSMutableArray *)getDevices {

...

NSMutableArray *devices = [[NSMutableArray alloc] initWithCapacity:[rDevices count]];

for (NSDictionary *d in rDevices) {
     Device *newDevice = [[Device alloc] init] autorelease];
     newDevice.nodeLevel = d.nodeLevel;

     [devices addObject: newDevice];
}

return [devices autorelease];

}

@property (nonatomic, retain) NSMutableArray *devices;

// In method cellForRowAtIndex

AppDelegate *appDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];
Device *d = (Device *)[[appDelegate.devices objectAtIndex:indexPath.row]];

// cell is a custom cell with a UISlider object       
cell.sliderLevel.value = [d nodeLevel];

// cell is a custom cell with a UISlider object   
cell.sliderLevel.value = [[d nodeLevel] intValue];


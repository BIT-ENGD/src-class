cellforrowatindexpath
static NSString *CellIdentifier = @"FacilityCell";      
StoreDetailFacilityCell *cell = (StoreDetailFacilityCell *)[tableView dequeueReusableCellWithIdentifier:CellIdentifier];
if (cell == nil) {
    cell = [[[StoreDetailFacilityCell alloc] initWithFrame:CGRectZero reuseIdentifier:CellIdentifier] autorelease];
}
[cell configureCell:[storeFacilities objectAtIndex:indexPath.row] atRow:indexPath];
return cell;

StoreDetailFacilityCell.m
@implementation StoreDetailFacilityCell
@synthesize storeDetailFacilityCellView;

-(id)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier {
    if (self = [super initWithStyle:UITableViewCellStyleDefault reuseIdentifier:reuseIdentifier]) {
        CGRect tzvFrame = CGRectMake(0.0, 0.0, self.contentView.bounds.size.width, self.contentView.bounds.size.height);
        storeDetailFacilityCellView = [[StoreDetailFacilityCellView alloc] initWithFrame:tzvFrame];
        [self.contentView addSubview:storeDetailFacilityCellView];
    }
    return self;
}

-(void)configureCell:(NSDictionary *)storeFacility atRow:(NSIndexPath *)row {
    NSLog([NSString stringWithFormat:@"updating %@ at row %i",[storeFacility objectForKey:@"facilityKey"],row.row]);
    storeDetailFacilityCellView.storeFacility = storeFacility;
}
-(void)redisplay {
    [storeDetailFacilityCellView setNeedsDisplay];
}
-(void)dealloc {
    [storeDetailFacilityCellView release];
    [super dealloc];
}

StoreDetailFacilityCellView.m
@implementation StoreDetailFacilityCellView

@synthesize highlighted;
@synthesize editing;
@synthesize storeFacility;

-(id)initWithFrame:(CGRect)frame {
    if (self = [super initWithFrame:frame]) {
        self.opaque = NO;
        self.backgroundColor = [UIColor clearColor];
    }
    return self;
}

-(void)setHighlighted:(BOOL)lit {
    if (highlighted != lit) {
        highlighted = lit;  
        [self setNeedsDisplay];
    }
}
-(void)drawRect:(CGRect)rect {
    UIColor *mainTextColor = nil;
    UIFont *mainFont = [UIFont systemFontOfSize:14];
    if (self.highlighted) {
        mainTextColor = [UIColor whiteColor];
    } else {
        mainTextColor = [UIColor blackColor];
    }
    if (!self.editing) {
        CGPoint point;
        [mainTextColor set];
        point = CGPointMake(80, 9);
        [[storeFacility objectForKey:@"facilityTitle"] drawAtPoint:point withFont:mainFont];
    }
}

-(void)dealloc {
    [storeFacility release];
    [super dealloc];
}


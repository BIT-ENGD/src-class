-(void) saveLog {
    NSManagedObjectContext *managedObjectContext = [(AppDelegate_Shared *)[[UIApplication sharedApplication] delegate] managedObjectContext]; 

    FormPickerCell *bloodPressure = (FormPickerCell *) [self.formController fieldAsObject:@"bloodpressure"];


    NSInteger systolic = [(PressureDataSource*)bloodPressure.pickerCellDelegate selectedSystolicPressureForFormPickerCell:bloodPressure];
    NSInteger diastolic = [(PressureDataSource*)bloodPressure.pickerCellDelegate selectedDiastolicPressureForFormPickerCell:bloodPressure];
    NSLog(@"bp is %d / %d", systolic, diastolic);
    NSLog(@"date is %@", [self.formController valueForField:@"date"]);

    NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];
    [dateFormatter setDateFormat:@"yyyy-MM-dd HH:mm:ss ZZZ"];

    if (self.isNewLog && !self.validationHasFailed) {
        self.log = [NSEntityDescription
                     insertNewObjectForEntityForName:@"Log" inManagedObjectContext:managedObjectContext];

    }

    NSString *heartRate = [[self.formController valueForField:@"heartrate"] stringByReplacingOccurrencesOfString:@" bpm" withString:@""];

    NSNumberFormatter * f = [[NSNumberFormatter alloc] init];
    [f setNumberStyle:NSNumberFormatterDecimalStyle];

    self.log.created        = [NSDate date];
    self.log.notes          = [self.formController valueForField:@"notes"];
    self.log.systolic       = [NSNumber numberWithInteger:systolic];
    self.log.diastolic      = [NSNumber numberWithInteger:diastolic];
    self.log.stressLevel    = [self.formController valueForField:@"stresslevel"];
    self.log.logDate        = [dateFormatter dateFromString:[self.formController valueForField:@"date"]];
    self.log.heartrate      = [f numberFromString:heartRate];
    NSLog(@"Log date is %@",[self.formController valueForField:@"date"]);

    [f release];

    NSError *error;
    NSString *title;
    NSString *growlDescription;

    if ([self.log validateForInsert:&error]){
        NSLog(@"after validation returned true");
        if(![managedObjectContext save:&error]) {
            NSLog(@"Unresolved error");
            title = @"Error Occurred";
            growlDescription = [error localizedDescription];
            self.validationHasFailed = YES;
        } else {
            title = @"Log Saved!";
            growlDescription = @"Log saved successfully";
            [self.navigationController popViewControllerAnimated:YES];
        }       
    } else {
        NSLog(@"after validation returned false");
        NSLog(@"Unresolved error");
        title = @"Error Occurred";
        growlDescription = [error localizedDescription];
        self.validationHasFailed = YES;
    }

    IZGrowlNotification *notification = [[IZGrowlNotification alloc] initWithTitle:title 
                                                                       description:growlDescription
                                                                             image:nil
                                                                           context:nil 
                                                                          delegate:self];
    [[IZGrowlManager sharedManager] postNotification:notification];
    [notification release];     
    error = nil;    




}


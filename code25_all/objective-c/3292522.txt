counter
- (void)prepareToEnterBackground {
    NSUserDefaults *defaults;
    defaults = [NSUserDefaults standardUserDefaults];

    [defaults setBool:[self timerIsRunning] forKey:@"timer_is_running"];
    [defaults setInteger:workPlayStatus forKey:@"work_play_status"];
    if ([self timerIsRunning]) {
        [defaults setFloat:([[NSDate date] timeIntervalSince1970] + (float) counter) forKey:@"timestamp_for_status_change"];
    } else {
        [defaults setFloat:0.0 forKey:@"timestamp_for_status_change"];
    }

    if (timer!=nil) {
        [timer invalidate];
        timer = nil;
    }
}

- (void)restoreFromBackground {
    NSUserDefaults *defaults;
    defaults = [NSUserDefaults standardUserDefaults];

    NSInteger remainingTimerSeconds;
    if ([defaults integerForKey:@"timer_is_running"]) {
        remainingTimerSeconds = (int) ([defaults floatForKey:@"timestamp_for_status_change"] - [[NSDate date] timeIntervalSince1970]);
        if (remainingTimerSeconds <= 0) {
            remainingTimerSeconds = 0;
        }
    } else {
        remainingTimerSeconds = 0;
    }

    if (remainingTimerSeconds > 0) {
        counter = remainingTimerSeconds;
        workPlayStatus = [defaults integerForKey:@"work_play_status"];
        timer = [NSTimer scheduledTimerWithTimeInterval:1 
            target:self
            selector:@selector(advanceTimer:)
            userInfo:nil
            repeats:YES];
    }
}


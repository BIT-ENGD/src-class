string baseTemp
string targetTemp

NSLog(@"Please type Fahrenheit, Celsius, Kelvin or Rankine to select your base temperature");
scanf or some other method here("string format specifier here" &baseTemp);
NSLog(@"Please type Fahrenheit, Celsius, Kelvin or Rankine to select your target temperature");
scanf or some other method here("string format specifier here" &targetTemp);

#import <Cocoa/Cocoa.h>


@interface Temperature : NSObject

{
    double kelvin;
}

//Instance methods to convert argument to kevin
-(void) setFahrenheitValue: (double) f;
-(void) setCelsiusValue: (double) c;
-(void) setKelvinValue: (double) k;
-(void) setRankineValue: (double) r;

//Instance methods for extracting the kelvin value using any scale
-(double) fahrenheitValue;
-(double) celsiusValue;
-(double) kelvinValue;
-(double) rankineValue;

@end

#import "class.h"

@implementation Temperature;

-(void) setFahrenheitValue: (double) f
{
    kelvin = ((f + 459.67)*(5.0/9.0));
}

-(void) setCelsiusValue: (double) c
{
    kelvin = (c + 273.15);
}

-(void) setKelvinValue: (double) k
{
    kelvin = k;
}

-(void) setRankineValue: (double) r
{
    kelvin = (r*(5.0/9.0));
}



-(double) fahrenheitValue
{
    return ((kelvin*(9.0/5.0)) - 459.67);
}

-(double) celsiusValue
{
    return (kelvin - 273.15);
}

-(double) kelvinValue
{
    return (kelvin);
}

-(double) rankineValue
{
    return (kelvin * (9.0/5.0));
}

@end

#import <Cocoa/Cocoa.h>
#import "class.h"

int main(int argc, char *argv[])
{
    int result;
    int prompt;
    double sourceTemp;

    printf("Please choose a source temperature scale:\n[1] Fahrenheit\n[2] Celsius\n[3] Kelvin\n[4] Rankine\n\n");

    result = scanf("%i", &prompt);

    if (result != 1)
        printf("I couldn't understand your input, I need only one number!");

    else if (result == EOF)
        printf("I apologize, I encountered an error when trying to read your input.");

    else if (result == 1)
    {
    printf("\nNow, please enter the temperature you would like to convert:\n\n");

    scanf("%lf", &sourceTemp);

    Temperature *converter = [[Temperature alloc] init];

    switch (prompt) 
    {
        case 1:
            //end-user chooses Fahrenheit
            [converter setFahrenheitValue:sourceTemp];
            break;

        case 2:
            //end-user chooses Celsius
            [converter setCelsiusValue:sourceTemp];
            break;

        case 3:
            //end-user chooses Kelvin
            [converter setKelvinValue:sourceTemp];
            break;

        case 4:
            //end-user chooses Rankine
            [converter setRankineValue:sourceTemp];
            break;
    }

    printf("\nNow, please choose a target temperature scale:\n[1] Fahrenheit\n[2] Celsius\n[3] Kelvin\n[4] Rankine\n\n");

    scanf("%i", &prompt);

    switch (prompt) 
    {
        case 1:
            //end-user chooses Fahrenheit
            printf("%lf degrees Fahrenheit\n", [converter fahrenheitValue]);
            break;

        case 2:
            //end-user chooses Celsius
            printf("%lf degrees Celsius\n", [converter celsiusValue]);
            break;

        case 3:
            //end-user chooses Kelvin
            printf("%lf degrees Kelvin\n", [converter kelvinValue]);
            break;

        case 4:
            //end-user chooses Rankine
            printf("%lf degrees Rankine\n", [converter rankineValue]);
            break;
    }

    }

}

switch (prompt) 
{
    case 1:
        //end-user chooses Fahrenheit
        [converter setFahrenheitValue:sourceTemp];
        sourceTempText = 1;
        break;

    case 2:
        //end-user chooses Celsius
        [converter setCelsiusValue:sourceTemp];
        sourceTempText = 2;
        break;

    case 3:
        //end-user chooses Kelvin
        [converter setKelvinValue:sourceTemp];
        sourceTempText = 3;
        break;

    case 4:
        //end-user chooses Rankine
        [converter setRankineValue:sourceTemp];
        sourceTempText = 4;
        break;
}

switch (prompt2) 
{
    case 1:
        //end-user chooses Fahrenheit
        printf("%lf degrees sourceTempText is %lf degrees Fahrenheit\n", sourceTemp, [converter fahrenheitValue]);
        break;

    case 2:
        //end-user chooses Celsius
        printf("%lf degrees sourceTempText is %lf degrees Celsius\n", sourceTemp, [converter celsiusValue]);
        break;

    case 3:
        //end-user chooses Kelvin
        printf("%lf degrees sourceTempText is %lf degrees Kelvin\n", sourceTemp, [converter kelvinValue]);
        break;

    case 4:
        //end-user chooses Rankine
        printf("%lf degrees sourceTempText is %lf degrees Rankine\n", sourceTemp, [converter rankineValue]);
        break;
}


NSManagedObjects
Store
Aisle
Store
Aisle
Aisle
Store
Aisle
Store
Store
Aisle
.Aisles
AddAislesObject:
Store.h
Store
.Stores
Aisle
Aisles
Store
Aisle
.Aisles
Store
NSSet
-(NSArray *)getAisleListByStore: (Store *)aStore {

// this method should return an NSArray of aisles for aStore

NSManagedObjectContext *context = [self managedObjectContext];
NSFetchRequest *fetchRequest = [[NSFetchRequest alloc] init];
NSEntityDescription *entity = [NSEntityDescription entityForName:@"Store" inManagedObjectContext:context];
NSPredicate *predicate = [NSPredicate predicateWithFormat:@"name MATCHES[c] %@ AND location MATCHES[c] %@", aStore.name, aStore.location];

[fetchRequest setEntity:entity];
[fetchRequest setPredicate:predicate];

NSError *error;
NSArray *storesList = [context executeFetchRequest:fetchRequest error:&error];
[fetchRequest release];

if (storesList == nil || [storesList count] != 1) {

    // error detected
    NSLog(@"Error retrieving stores: %@", [error localizedDescription]);
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Error" message:@"Error retrieving stores" delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil];
    [alert show];
    [alert release];
    return nil;

} else {

    // get aisles

    // debugs
    for (Store *theStore in storesList) {
        NSLog(@"Name: %@", theStore.name);
        NSLog(@"Aisle count: %d", [theStore.aisles count]);
        NSSet *aisleList = theStore.aisles;

        for (Aisle *theAisle in aisleList) {
            NSLog(@"Aisle name: %@", theAisle.name);
        }
    }

    // Store *theStore = [storesList objectAtIndex:0];

    // NSArray *aisles = (NSArray *)theStore.aisles;
    // return aisles;
}


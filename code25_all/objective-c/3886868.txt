@implementation NSDictionary (NSDictionary_4)

void compatability_method(Class class, SEL newer_version_selector, SEL compatability_selector) {
    Method existingMethod = class_getInstanceMethod(class, newer_version_selector);
    if (!existingMethod) {
        Method compatabilityMethod = class_getInstanceMethod(class, compatability_selector);
        class_replaceMethod(class, newer_version_selector, method_getImplementation(compatabilityMethod), method_getTypeEncoding(compatabilityMethod));
    }
}

+(void)load {
    if (self == [NSDictionary class]) {
        compatability_method(self, @selector(enumerateKeysAndObjectsUsingBlock:), @selector(four_enumerateKeysAndObjectsUsingBlock:));
    }
}

-(void)four_enumerateKeysAndObjectsUsingBlock:(void (^)(id key, id obj, BOOL *stop))block {
    BOOL stop = false;

    for (id key in self) {
        block(key, [self objectForKey:key], &stop);
        if (stop) {
            break;
        }
    }
}


@end


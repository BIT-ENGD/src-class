NSManagedObjectContext *context = [self managedObjectContext];
 if (!context) {
  //Handle error
 }

 if (context == nil) {
  NSLog(@"Context is nil in appdelegate");
 } 
 else {
  NSLog(@"Context is set in appdelegate"); 
 }

rootViewController.context = context;

#import <UIKit/UIKit.h>
@interface RootViewController : UITableViewController <NSFetchedResultsControllerDelegate> { 
 NSFetchedResultsController *fetchedResultsController;
 NSManagedObjectContext *context;
 NSMutableArray *rootViewContentArray;
}
@property (nonatomic, retain) NSFetchedResultsController *fetchedResultsController;
@property (nonatomic, retain) NSManagedObjectContext *context;
@end


#import "RootViewController.h"
#import "DetailViewController.h"
#import "SwapViewController.h"
#import "Swap.h"

@implementation RootViewController
@synthesize fetchedResultsController, context;

#pragma mark -
#pragma mark View lifecycle

- (void)viewDidLoad {
    [super viewDidLoad];

 //initialize array for rootView

 rootViewContentArray = [[NSMutableArray alloc] init];

 NSArray .....set array values....

        //check context
 if (context == nil){
  NSLog(@"RootViewcontroller context is nil during viewdidload");
 } 
 if (!(context == nil)){
  NSLog(@"RootViewcontroller context is set during viewdidload");
 }

 //fill array
.........
}


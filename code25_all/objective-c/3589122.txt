@interface MyView : UINavigationController < UITableViewDataSource, UITableViewDelegate, UINavigationBarDelegate >
{
   UITableView* mTableView;
   NSMutableArray* data;
}

@implementation MyView

- (void)viewDidLoad
{
    [super viewDidLoad];
    int th = self.navigationBar.frame.size.height;
    int w = self.view.frame.size.width;
    int h = self.view.frame.size.height;

    mTableView = [[[UITableView alloc] initWithFrame:
                CGRectMake(0.0f, th, w, h - th) style:UITableViewStylePlain] retain];
    mTableView.autoresizingMask = UIViewAutoresizingFlexibleWidth |
                                      UIViewAutoresizingFlexibleHeight;
    mTableView.dataSource = self;
    mTableView.delegate = self;
    [mTableView setRowHeight:55];

    [self.view addSubview:mTableView];

    data = [[[NSMutableArray alloc] init] retain];

    for (int i = 0; i < 150; i++)
    {

        [data addObject:[NSDictionary
        dictionaryWithObjects:[NSArray arrayWithObjects:@"good", [UIColor blackColor], nil]

        forKeys:[NSArray  arrayWithObjects:@"name", @"color", nil]]];
    }
}

- (NSInteger) numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}


- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 150;
}

- (UITableViewCell *)tableViewCellWithReuseIdentifier:(NSString *)identifier
{
    UITableViewCell *cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifier] autorelease];
    cell.textLabel.text = @"goooood";
    return cell;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
  static NSString *CellIdentifier = @"Cell";
  UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];

  if (cell == nil)
        cell = [self tableViewCellWithReuseIdentifier:CellIdentifier];

  return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
}


- (void)viewDidUnload
{
    [super viewDidUnload];
}

- (void)dealloc
{
    [super dealloc];
}

- (BOOL)canBecomeFirstResponder
{
    return YES;
}

@end


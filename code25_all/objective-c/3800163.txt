substringWithRange

-(void) loadDeckData
{
deckArray =[[NSMutableArray alloc] init];

NSString* path = [[NSBundle mainBundle] pathForResource:@"rugby" ofType:@"txt" 
    inDirectory:@""];
NSString* data = [NSString stringWithContentsOfFile:path encoding: 
    NSUTF8StringEncoding error: NULL];  

NSString *newString = @"";
NSString *newline = @"\n";
NSString *comma = @",";


int commaCount = 0;
int rangeCount = 0;
NSString *nameHolder = @"";
NSString *infoHolder = @"";
NSMutableArray *statsHolder = [[NSMutableArray alloc] init];

for (int i=0; i<data.length; i++) 
{

    newString = [data substringWithRange:NSMakeRange(i, 1)];

    if ([newString isEqualToString: comma]) //if we find a comma
    {
        if (commaCount == 0)// if it was the first comma we are parsing the 
                    NAME
        {
            nameHolder = [data substringWithRange:NSMakeRange(i-
                            rangeCount, rangeCount)];
        }
        else if (commaCount == 1)// 
        {
            infoHolder = [data substringWithRange:NSMakeRange(i-
                            rangeCount, rangeCount)];
            //NSLog(infoHolder);
        }
        else // if we are on to 2nd,3rd,nth comma we are parsing stats
        {
            NSInteger theValue = [[data 
                            substringWithRange:NSMakeRange(i-rangeCount,rangeCount)] 
                            integerValue];
            NSNumber* boxedValue = [NSNumber 
                            numberWithInteger:theValue];
            [statsHolder addObject:boxedValue];
        }

        rangeCount=0;
        commaCount++;
    }
    else if ([newString isEqualToString: newline]) 
    {
        NSInteger theValue = [[data substringWithRange:NSMakeRange(i-
                    rangeCount,rangeCount)] integerValue];
        NSNumber* boxedValue = [NSNumber numberWithInteger:theValue];
        [statsHolder addObject:boxedValue];
        commaCount=0;
        rangeCount=0;
        Card  *myCard = [[Card alloc] init];
        myCard.name = nameHolder;
        myCard.information = infoHolder;
        for (int x = 0; x < [statsHolder count]; x++)
             {
                 [myCard.statsArray addObject:[statsHolder                           
                                      objectAtIndex:x]];    
             }

        [deckArray addObject:myCard];       
        [myCard autorelease];
        [statsHolder removeAllObjects];


    }
    else 
    {
        rangeCount++;
    }
}
[statsHolder autorelease];
}


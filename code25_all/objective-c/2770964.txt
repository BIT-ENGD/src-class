@interface FirstViewController:UIViewController <UITableViewDataSource, UITableViewDelegate, UITabBarControllerDelegate> {
 NSDictionary *sectorDictionary;
 NSInteger sectorCount;
}

@property (nonatomic, retain)  NSDictionary *sectorDictionary;

- (id)initWithData:(NSMutableDictionary*)inData;

@synthesize sectorDictionary;

- (id) testFunction:(NSDictionary*)dictionary {
 NSLog(@"Count #1: %d", [dictionary count]);
 return nil;
}

- (id)initWithData:(NSMutableDictionary *)inData {
 self = [self init];
 if (self) {
    [self testFunction:inData];
    // set the retained property
    self.sectorDictionary = inData;
  }

 return self;
}


- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
 NSLog(@"Count #2: %d", [self.sectorDictionaryCopy count]);
 return [self.sectorDictionaryCopy count];
}

2010-05-05 20:11:13.126 JSONApp[17378:207] Count #1: 9
2010-05-05 20:11:13.130 JSONApp[17378:207] Count #2: 0

@interface FirstViewController:UIViewController <UITableViewDataSource, UITableViewDelegate, UITabBarControllerDelegate> {
    NSMutableDictionary *sectorDictionary;
    NSInteger sectorCount;
}

@property (nonatomic, retain)  NSMutableDictionary *sectorDictionary;

- (id)initWithData:(NSMutableDictionary*)data;

@end

@synthesize sectorDictionary;

- (id) testFunction:(NSMutableDictionary*)dictionary {
    NSLog(@"Count #1: %d", [dictionary count]);    
    return nil;
}

- (id)initWithData:(NSMutableDictionary *)data {
    if (!(self=[super init])) {
        return nil;
    }
    [self testFunction:data];

    // this is where I'd like to set a retained property
    self.sectorDictionary = data;

    return nil;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    NSLog(@"Count #2: %d", [self.sectorDictionary count]);
    return [self.sectorDictionary count];
}

2010-05-04 23:00:06.255 JSONApp[15890:207] Count #1: 9
2010-05-04 23:00:06.259 JSONApp[15890:207] Count #2: 0


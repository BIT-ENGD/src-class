-(IBAction) launchComic2{

  AppDelegate *mainDelegate = [(AppDelegate *) [UIApplication sharedApplication] delegate];
  mainDelegate.myViewController.comicPageCount = 3;
   mainDelegate.myViewController.comicTitle.text = @"\"Death by ETOH\"";
   mainDelegate.myViewController.comicImagePrefix = @"etoh";

   [mainDelegate.myViewController viewWillAppear:YES];
   [mainDelegate.window addSubview: mainDelegate.myViewController.view];

   -(void) viewWillAppear:(BOOL)animated {


   self.view.backgroundColor = [UIColor viewFlipsideBackgroundColor];

   // 1. setup the scrollview for multiple images and add it to the view controller
   //
   // note: the following can be done in Interface Builder, but we show this in code for       clarity
   [scrollView1 setBackgroundColor:[UIColor whiteColor]];
   [scrollView1 setCanCancelContentTouches:NO];
   scrollView1.indicatorStyle = UIScrollViewIndicatorStyleWhite;
   scrollView1.clipsToBounds = YES;  // default is NO, we want to restrict drawing       within our scrollview
   scrollView1.scrollEnabled = YES;

   // pagingEnabled property default is NO, if set the scroller will stop or snap at       each photo
   // if you want free-flowing scroll, don't set this property.
   scrollView1.pagingEnabled = YES;

   // load all the images from our bundle and add them to the scroll view
   NSUInteger i;
   for (i = 1; i <= self.comicPageCount; i++)
   {

    NSString *imageName = [NSString stringWithFormat:@"%@%d.jpg", self.comicImagePrefix, i];
    NSLog(@"%@%d.jpg", self.comicImagePrefix, i);
    UIImage *image = [UIImage imageNamed:imageName];
    UIImageView *imageView = [[UIImageView alloc] initWithImage:image];

    // setup each frame to a default height and width, it will be properly placed when we call "updateScrollList"
    CGRect rect = imageView.frame;
    rect.size.height = kScrollObjHeight;
    rect.size.width = kScrollObjWidth;
    imageView.frame = rect;
    imageView.tag = i; // tag our images for later use when we place them in serial fashion
    [scrollView1 addSubview:imageView];
    [imageView release];
   }

   [self layoutScrollImages]; // now place the photos in serial layout within the scrollview




       }


  - (void)layoutScrollImages
       {
   UIImageView *view = nil;
   NSArray *subviews = [scrollView1 subviews];

   // reposition all image subviews in a horizontal serial fashion
   CGFloat curXLoc = 0;
   for (view in subviews)
   {
    if ([view isKindOfClass:[UIImageView class]] && view.tag > 0)
    {
     CGRect frame = view.frame;
     frame.origin = CGPointMake(curXLoc, 0);
     view.frame = frame;

     curXLoc += (kScrollObjWidth);
    }
   }

   // set the content size so it can be scrollable
   [scrollView1 setContentSize:CGSizeMake((self.comicPageCount * kScrollObjWidth),           [scrollView1 bounds].size.height)];
       }


- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {    
    databaseName = @"DubbleDatabase.sql";

    NSArray *documentPaths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *documentsDir = [documentPaths objectAtIndex:0];
    databasePath = [documentsDir stringByAppendingPathComponent:databaseName];

    [self checkAndCreateDatabase];

    [self readSafeItemsFromDatabase ];

    // Add the tab bar controller's current view as a subview of the window
    [window addSubview:tabBarController.view];
    [window makeKeyAndVisible];

    return YES;
}
- (void) readSafeItemsFromDatabase {
    // some code skipped here, but basically: open sqlite3 database, iterate through rows

            while(sqlite3_step(compiledStatement) == SQLITE_ROW) {
                // read database, get data fields out

                SafeItem *safeItem = [[SafeItem alloc] initWithName:aName price:aPrice category:aCategory];

                [safeTableViewController addItemToSafe: safeItem]; // PROBLEM HERE

                [safeItem release];
            }
    }
    sqlite3_close(database);
}

- (void) addItemToSafe : (SafeItem*) newSafeItem {
    [self.safeItems addObject: newSafeItem]; 
}

// I put a breakpoint on this, but it does not hit.  i.e. safeItems is not initialized when addObject is called on it.
-(id) init {
    if(self = [super initWithNibName:@"SafeTableViewController" bundle:nil]){
        self.safeItems = [[NSMutableArray alloc] init];
    }
    return self;
}

- (void) addItemToSafe : (SafeItem*) newSafeItem {
    if(self.safeItems == nil){
        self.safeItems = [[NSMutableArray alloc] init];
    }
    [self.safeItems addObject: newSafeItem]; 
}


NSString* mapPath = [[NSBundle mainBundle] pathForResource:mapFileName ofType:mapFileType];
NSURL* mapURL = [NSURL fileURLWithPath: mapPath];
currentMap_ = [[Map alloc] initWithContentsOfURL: mapURL];
worldArray = [[NSMutableArray alloc] init];
itemArray = [[NSMutableArray alloc] init]; 
[self populateMap];
return;

- (void)populateMap
{
NSPoint location;

for ( location.y = 0; location.y < [currentMap_ height]; location.y++ )
{
    for ( location.x = 0; location.x < [currentMap_ width]; location.x++ )
    {
        char mapData = [currentMap_ dataAtLocation: location];
        for ( GameObject *thisObject in worldDictionary )
        {
            //NSLog(@"char: <%c>", [thisObject single]);
            if ( mapData == [thisObject single])
            {
                NSString* world = [thisObject className];
                //NSLog(@"(%@) object created",thisObject);
                [self spawnObject:world atLocation:location];
            }
        }
        for ( Item *thisObject in itemDictionary )
        {
            //NSLog(@"char: <%c>", [thisObject single]);
            if ( mapData == [thisObject single] )
            {
                NSString* item = [thisObject className];
                NSString* floor = [NormalFloor className];
                //NSLog(@"(%@) object created",thisObject);
                [self spawnItem:item atLocation:location];
                [self spawnObject:floor atLocation:location];
            }
        }
        if ( mapData == '1' 
            && [player_ stepsTaken] <= 0)
        {
            //NSLog(@"player spawned at (%f, %f)",location.x,location.y);
            player_ = [[Player alloc] initAtLocation: location];
        }
        if ( mapData == '1' )
        {
            //NSLog(@"floor created at (%f, %f)",location.x,location.y);
            [worldArray addObject:[[NormalFloor alloc] initAtLocation: location]];
        }
    }
}   
[self setNeedsDisplay:YES];
}

- (void)spawnObject: (NSString*) object atLocation: (NSPoint) location
{ 
    //NSLog(@"(%@) object created",thisObject);
    [worldArray addObject:[[NSClassFromString(object) alloc] initAtLocation: location]];
}
- (void)spawnItem: (NSString*) item atLocation: (NSPoint) location
{
    //NSLog(@"(%@) object created",thisObject);
    [itemArray addObject:[[NSClassFromString(item) alloc] initAtLocation: location]];
}


- (void) setFilePath:(NSString *) p
{
  [self methodCall];
}

- (void) methodCall
{
  fileContent.text = @"Test"; //fileContent is a UITextView
}

- (IBAction) clickButton
{
  fileContent.text = @"Test";
}

- (IBAction) showFileContent {

FileContentsViewController *fileContentsViewController = [[FileContentsViewController alloc] init];
[self.navigationController pushViewController:fileContentsViewController animated:YES];
fileContentsViewController.filePath = self.filePath;
fileContentsViewController.title = [NSString stringWithFormat:@"Content from von %@", [filePath lastPathComponent]];
[fileContentsViewController release];

}

@interface FileContentsViewController : UIViewController {

NSString *filePath;
UITextView *fileContent;

}

- (void) methodCall;

@property (nonatomic, retain) NSString *filePath;
@property (nonatomic, retain) IBOutlet UITextView *fileContent;

@end

#import "FileContentsViewController.h"


@implementation FileContentsViewController

@synthesize filePath;
@synthesize fileContent;

- (void) setFilePath:(NSString *) p
{
    NSLog(@"setFilePath executed!");
    [self methodCall];
} 

- (void) methodCall
{
    fileContent.text = @"Test"; // UITextView
}

// some standard methods

@end

- (IBAction) showFileContent {

FileContentsViewController *fileContentsViewController = [[FileContentsViewController alloc] init];
fileContentsViewController.filePath = self.filePath;
fileContentsViewController.title = [NSString stringWithFormat:@"Content from von %@", [filePath lastPathComponent]];
[self.navigationController pushViewController:fileContentsViewController animated:YES];
[fileContentsViewController release];

}


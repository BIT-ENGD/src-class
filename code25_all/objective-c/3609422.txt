NSObject
NSString
- (void) getDataToDisplay:(NSString *)dbPath {

    if (sqlite3_open([dbPath UTF8String], &database) == SQLITE_OK) {

        NSString *queryOnStyle = [NSString stringWithFormat:
        @"SELECT WineId, Name FROM wine WHERE StyleId = %d", dataManager.styleId];

        const char *sql = [queryOnStyle UTF8String];
        sqlite3_stmt *selectstmt;
        if(sqlite3_prepare_v2(database, sql, -1, &selectstmt, NULL) == SQLITE_OK) {

           while(sqlite3_step(selectstmt) == SQLITE_ROW) {

              Wine *w = [[Wine alloc] init]; 

              w.wineId = sqlite3_column_int(selectstmt, 0);
              w.wineName = [NSString stringWithUTF8String:
                                (char *)sqlite3_column_text(selectstmt, 1)];

             [dataManager.wines addObject:w];
             [w release];
          }      
       }
    }
    else
       sqlite3_close(database); //Even though the open call failed, close the database connection to release all the memory.
    }

w.wineName
dataManager.wines
wineName
UIImageView
NSString
UIImageView
#pragma mark -
#pragma mark HorizontalTableViewDelegate methods

- (NSInteger)numberOfColumnsForTableView:(HorizontalTableView *)tableView {
    return [dataManager.wines count];
}

- (UIView *)tableView:(HorizontalTableView *)aTableView viewForIndex:(NSInteger)index {

    UIView *vw = [aTableView dequeueColumnView];
    if (!vw) {
        [[NSBundle mainBundle] loadNibNamed:@"ColumnView" owner:self options:nil];
        vw = self.columnView;
        self.columnView = nil;

    }

 // Get the wineId from the array of wineId integers

 Wine *w = [dataManager.wines objectAtIndex:index];

 int tempWineId = w.wineId;
 NSString *tempWineName = [NSString stringWithFormat:@"%@", w.wineName];

 NSLog(@"%@", tempWineName); \\RETURNS TEMPWINENAME AS A UIIMAGEVIEW
 [w release];
 return vw;
}

- (CGFloat)columnWidthForTableView:(HorizontalTableView *)tableView {
 //TODO: This value needs to change if changed in IB
    return 209.0f;
}


[UIView beginAnimations:nil context:nil];
[UIView setAnimationDuration: 0.5]; 

[button setHighlighted: YES];

[UIView commitAnimations];

[UIView beginAnimations:nil context:nil];
[UIView setAnimationDuration: 0.5]; 

[button setSelected: YES];

[UIView commitAnimations];

// ------------------------
// --- animation ----------
// ------------------------

- (void)animateIn
{
[UIView beginAnimations: @"animateIn" context:nil]; 
[UIView setAnimationDuration: 0.2];

[UIView setAnimationDelegate:self];
[UIView setAnimationDidStopSelector:@selector(animationDidStop:finished:context:)]; 

[control setBackgroundColor:[UIColor blackColor]];

[UIView commitAnimations];
}

- (void)animateOut
{
[UIView beginAnimations: @"animateOut" context:nil];    
[UIView setAnimationDuration: 0.2];

[UIView setAnimationDelegate:self];
[UIView setAnimationDidStopSelector:@selector(animationDidStop:finished:context:)]; 

[control setBackgroundColor:[UIColor whiteColor]];

[UIView commitAnimations];
}


- (void)animationDidStop:(NSString *)animationID finished:(NSNumber *)finished context:(void *)context
{
if([animationID isEqualToString: @"animateIn"])
{
    [self animateOut];
    return;
}
else if ([animationID isEqualToString: @"animateOut"])
{
    cycleCount++;

    if(cycleCount < 3)
        [self animateIn];
    else
        cycleCount = 0;

    return;
}
}

@end


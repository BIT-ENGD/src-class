- (NSString *)stringByTrimmingString:(NSString *)stringToTrim toChar:(NSUInteger)toCharacterIndex {

   if (toCharacterIndex > [stringToTrim length]) return @"";

   NSString *devString = [[[NSString alloc] init] autorelease];

   for (int i = 0; i <= toCharacterIndex; i++) {

   devString = [NSString stringWithFormat:@"%@%@", devString, [NSString stringWithFormat:@"%c", [stringToTrim characterAtIndex:(i-1)]]]; 

   }

   return devString;

   [devString release];
   }

- (NSString *)stringByTrimmingString:(NSString *)stringToTrim fromChar:(NSUInteger)fromCharacterIndex {
   if (fromCharacterIndex > [stringToTrim length]) return @"";
   NSString *devString = [[[NSString alloc] init] autorelease];
   for (int i = (fromCharacterIndex+1); i <= [stringToTrim length]; i++) {
       devString = [NSString stringWithFormat:@"%@%@", devString, [NSString stringWithFormat:@"%c", [stringToTrim characterAtIndex:(i-1)]]]; 
   }
   return devString;
   [devString release];
}



- (NSRange)rangeOfString:(NSString *)substring inString:(NSString *)string atOccurence:(int)occurence {

   NSString *trimmedString = [inString copy]; //We start with the whole string.
   NSUInteger len, loc, oldLength;
   len = 0;
   loc = 0;


   NSRange tempRange = [string rangeOfString:substring];
   len = tempRange.length;
   loc = tempRange.location;

   for (int i = 0; i != occurence; i++) {

      NSUInteger endOfWord = len+loc;

      trimmedString = [self stringByTrimmingString:trimmedString fromChar:endOfWord];

      oldLength += [[self stringByTrimmingString:trimmedString toChar:endOfWord] length];

      NSRange tmp = [trimmedString rangeOfString:substring];
      len = tmp.length;
      loc = tmp.location + oldLength;

   }

   NSRange returnRange = NSMakeRange(loc, len);

   return returnRange;

}


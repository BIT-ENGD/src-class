@interface Vampire_Quiz_FinalViewController : UIViewController <ADBannerViewDelegate>

{

 ADBannerView *adView;

 BOOL bannerIsVisible;

}

@property (nonatomic,assign) BOOL bannerIsVisible;

-(IBAction)V;
-(IBAction)A;
-(IBAction)I;

@end

@implementation Vampire_Quiz_FinalViewController

- (IBAction)V;

{

 Vork *V = [[Vork alloc] initWithNibName:nil bundle:nil];

 [self presentModalViewController:V animated:NO];

}
- (IBAction)A;

{

 About *A = [[About alloc] initWithNibName:nil bundle:nil];

 [self presentModalViewController:A animated:NO];

}
- (IBAction)I;

{

 Instructions *I = [[Instructions alloc] initWithNibName:nil bundle:nil];

 [self presentModalViewController:I animated:NO];

}

- (void)dealloc {
    [super dealloc];
}

- (void)viewDidLoad {

 adView = [[ADBannerView alloc] initWithFrame:CGRectZero];

 adView.frame = CGRectOffset(adView.frame, 0, -50);

 adView.requiredContentSizeIdentifiers = [NSSet setWithObject:ADBannerContentSizeIdentifier320x50];

 adView.currentContentSizeIdentifier = ADBannerContentSizeIdentifier320x50;

 [self.view addSubview:adView];

 adView.delegate=self;

 self.bannerIsVisible=NO;

 [super viewDidLoad];

}

@synthesize bannerIsVisible;

- (void)bannerViewDidLoadAd:(ADBannerView *)banner

{

 if (!self.bannerIsVisible)

 {

  [UIView beginAnimations:@"animateAdBannerOn" context:NULL];

  // banner is invisible now and moved out of the screen on 50 px

  banner.frame = CGRectOffset(banner.frame, 0, 50);

  [UIView commitAnimations];

  self.bannerIsVisible = YES;

 }

}



- (void)bannerView:(ADBannerView *)banner didFailToReceiveAdWithError:(NSError *)error

{

 if (self.bannerIsVisible)

 {

  [UIView beginAnimations:@"animateAdBannerOff" context:NULL];

  // banner is visible and we move it out of the screen, due to connection issue

  banner.frame = CGRectOffset(banner.frame, 0, -50);

  [UIView commitAnimations];

  self.bannerIsVisible = NO;

 }

}



@end


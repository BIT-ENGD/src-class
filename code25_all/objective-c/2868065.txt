@synthesize clicked, delegate, data, image, blurImage, normalImage, arrayOfRects, delegateEntries;
- (id)initWithTexture:(CCTexture2D *)aTexture {

    if( (self=[super initWithTexture:aTexture] )) {
        arrayOfRects = [[NSMutableArray alloc] init];
        delegateEntries = [[NSMutableArray alloc] init];
        delegate = (InteractivePIAppDelegate *)[[UIApplication sharedApplication] delegate];
        delegateEntries = [delegate entries];
        data = [delegateEntries objectAtIndex:0];
        NSLog(@"Assigning %@", [[delegateEntries objectAtIndex:0] backgroundImage]);
        NSLog(@"%@ is the string", [[data sections] objectAtIndex:0]);
        //CGRect rect;
        NSLog(@"Count of array is %i", [delegateEntries count]);

        //collect as many items as there are XML entries
        for(int i=0; i<[delegateEntries count]; i++) {
            if([[delegateEntries objectAtIndex:i] xPos]) {
                NSLog(@"Found %i items", i+1);
                [arrayOfRects addObject:[NSValue valueWithCGRect:CGRectMake([[[delegateEntries objectAtIndex:i] xPos] floatValue], [[[delegateEntries objectAtIndex:i] yPos] floatValue], [[[delegateEntries objectAtIndex:i] xBounds] floatValue], [[[delegateEntries objectAtIndex:i] yBounds] floatValue])]];
            } else {
                NSLog(@"Nothing");
            }
        }
        blurImage = [[NSString alloc] initWithString:[data backgroundBlur]];
        NSLog(@"5");
        normalImage = [[NSString alloc] initWithString:[data backgroundImage]];
        clicked = NO;
    }
    return self;    
}

- (void)populateFieldsForTouchedItem:(TouchedRect)touchInfo
{
    Data *touchDatum = [[Data alloc] init];
    touchDatum = [[self delegateEntries] objectAtIndex:touchInfo.recordNumber];
    NSLog(@"Assigning %@", [[[self delegateEntries] objectAtIndex:touchInfo.recordNumber] backgroundImage]);
    rect = [[arrayOfRects objectAtIndex:touchInfo.recordNumber] CGRectValue];
    image = [[NSString alloc] initWithString:[[touchDatum sections] objectAtIndex:0]];
    [touchDatum release];
}

- (BOOL)ccTouchBegan:(UITouch *)touch withEvent:(UIEvent *)event {
    TouchedRect touchInfo = [self containsTouchLocation:touch];
    NSLog(@"Information pertains to %i", touchInfo.recordNumber);
    if ( !touchInfo.touched && !clicked ) {  //needed since the touch location changes when zoomed
        NSLog(@"NOPE");
        return NO;
    }
    [self populateFieldsForTouchedItem:touchInfo];
    NSLog(@"YEP");
    return YES;
}


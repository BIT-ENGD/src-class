MyDocument:NSDocument
DrawnObject:NSObject
Canvas:NSView
NSMutableArray
DrawnObject
DrawnObject.h



#import <Foundation/Foundation.h>
//The drawn object must know what tool it was created with etc as this needs to be used for generating the drawing

@interface DrawnObject : NSObject {
    NSBezierPath * aPath;
    NSNumber * toolType;//0 for oval, 1 for rectangular etc....
    float toolSize;
    struct myCol{
        float rd;
        float grn;
        float blu;
        float alp;
    } toolColor;
}

-(void)setAPath:(NSBezierPath *) path;
-(NSBezierPath *)aPath;
@property (readwrite,assign) NSNumber * toolType;
-(float)toolSize;
-(void)setToolSize:(float) size;
-(struct myCol *)toolColor;
-(void)setCurrentColor:(float)ref:(float)green:(float)blue:(float)alpha;

@end




Canvas.h
Canvas.m
-(id)initWithFrame:(NSRect)frame
-(void)drawRect:(NSRect)rect
mouseUp
DrawnObject
BOOL
drawRect

-(NSBezierPath *)createPath:(NSRect) aRect
{

    NSBezierPath * tempPath;
    //I need to know what tool

    switch(0){  //temporary - this would use the toolType as a selector
        case 0:
            tempPath = [NSBezierPath bezierPathWithOvalInRect:aRect];
            break;
        case 1:
            tempPath = [NSBezierPath bezierPathWithRect:aRect];
            break;
        default:
            tempPath = [NSBezierPath bezierPathWithOvalInRect:aRect];
            break;
    }
    return tempPath;
}


MPMoviePlayerViewController
moviePlayerViewControllers
UIView
MoviePlayer
MPMoviePlayerViewController
MPMoviePlayerViewController
MPMoviePlayerViewController
    // From AppController.h
    UIWindow *window; // Parent application window
    UIView *viewCocos2D;    // Cocos View
    UIView *viewMovie;      // Default MoviePlayer View
    UIView *viewMovieAlternate;  // Alternate MoviePlayer View

// From AppController.m
// From DidAppFinishLoading
{
... 
 // Init the window
 window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]]; 

        // Init the views (Cocos2d, MOviePlayer and AlternateMOviePlayer)
 viewCocos2D = [[UIView alloc] initWithFrame:[[UIScreen mainScreen] bounds]];
 viewMovie = [[UIView alloc] initWithFrame:[[UIScreen mainScreen] bounds]];
 viewMovieAlternate = [[UIView alloc] initWithFrame:[[UIScreen mainScreen] bounds]]; 

 // cocos2d will inherit these values
 [viewCocos2D setUserInteractionEnabled:YES]; 
 [viewCocos2D setMultipleTouchEnabled:YES];


 // create OpenGL view and attach it to a window
 //[[[UIApplication sharedApplication] keyWindow] addSubview:window];
 [[CCDirector sharedDirector] attachInView:viewCocos2D];

 // Default texture format for PNG/BMP/TIFF/JPEG/GIF images
 [CCTexture2D setDefaultAlphaPixelFormat:kCCTexture2DPixelFormat_RGBA8888]; 


 // Create a 
 customMoviePlayerWithUI = [[CustomMoviePlayerWithUI alloc] initWithSuperView:window andMovieView:viewMovie andAlternateView:viewMovieAlternate andSelf:self];
 CCScene *scene = [CCScene node];
 CocosCustomLayer *cocosLayer = [customMoviePlayerWithUI cocosLayer]; 


 [window addSubview:viewMovieAlternate];
 [window addSubview:viewMovie];
 // somehow this order lets cocos2D receive the touch events
 [window addSubview:viewCocos2D]; 


 [scene addChild: cocosLayer];
 [window makeKeyAndVisible];

 [[CCDirector sharedDirector] runWithScene: scene];
 [UIAccelerometer sharedAccelerometer].delegate = self;


 [customMoviePlayerWithUI start];
 [self didRotate:nil];

 ...
}

    // From CustomMoviePlayerWithUI.h
 MPMoviePlayerViewController *moviePlayerView;
 MPMoviePlayerViewController *moviePlayerViewAlternate; 

// These delegates are used frequently to invoke some functions
 AppController* delegateApplication;
 UIView  *delegateSuperWindow;  // Window which contains everything - 
 UIView *delegateView;         // View containing default MoviePlayer
 UIView *delegateViewAlternate;// View containing alternate MoviePlayer

// From customMoviePlayer.m
// initAndPlayMovie is called from the init of CustomMoviePlayer
- (void)initAndPlayMovie:(UIView *)view andAlternateView:(UIView*) viewMovieAlternate
{
 // Initialize a movie player object with the specified URL
 moviePlayerView = [[MPMoviePlayerViewController alloc] init];
 moviePlayerViewAlternate = [[MPMoviePlayerViewController alloc] init];


 [moviePlayerView shouldAutorotateToInterfaceOrientation:UIInterfaceOrientationLandscapeLeft];
 [moviePlayerViewAlternate shouldAutorotateToInterfaceOrientation:UIInterfaceOrientationLandscapeLeft];

 //if (moviePlayer)
 if (moviePlayerView && moviePlayerViewAlternate)
 {
  [[[moviePlayerView moviePlayer] backgroundView] setBackgroundColor:[UIColor blueColor]];
  [[[moviePlayerViewAlternate moviePlayer] backgroundView] setBackgroundColor:[UIColor redColor]];





  //[moviePlayerView setWantsFullScreenLayout:YES];

  // private API call.. don't use it..
  //[mp setOrientation:UIDeviceOrientationPortrait animated:NO];


  [view addSubview:[moviePlayerView view]];
  [viewMovieAlternate addSubview:[moviePlayerViewAlternate view]];
  //[view bringSubviewToFront:[moviePlayerView view]];

  //[[moviePlayerView moviePlayer] play]; 
 }
}


protected void LoadQA(int intQuestionId)
{
    string strSelectQuery = "SELECT TITLE, DESCRIPTION, ANSWER, FK_OWNER_ID, CREATED_ON FROM M_QA WHERE PK_ID = "
                          + intQuestionId + " AND IS_ACTIVE = 1";

    OleDbConnection connectionSelectQuestion = new OleDbConnection(ConfigurationSettings.AppSettings["SQLConnectionString"]);
    OleDbCommand commandSelectQuestion = new OleDbCommand(strSelectQuery, connectionSelectQuestion);
    OleDbDataReader readerSelectQuestion;
    try
    {
        connectionSelectQuestion.Open();
        readerSelectQuestion = commandSelectQuestion.ExecuteReader();
        if (readerSelectQuestion.Read())
        {
            lblHeader.Text = "View Q&A";
            txtTitle.Text = readerSelectQuestion["TITLE"].ToString();

            if (readerSelectQuestion["TITLE"].ToString().Length > 50)
            {
                ViewState["QA_Title"] = readerSelectQuestion["TITLE"].ToString().Substring(0, 50) + "...";
            }
            else
            {
                ViewState["QA_Title"] = readerSelectQuestion["TITLE"].ToString();
            }

            txtDescription.Text = readerSelectQuestion["DESCRIPTION"].ToString();
            hlnkQuestionBy.Text = clsCommons.SayUserName(readerSelectQuestion["FK_OWNER_ID"].ToString());
            hlnkQuestionBy.NavigateUrl = "AddMember.aspx?id=" + readerSelectQuestion["FK_OWNER_ID"].ToString();
            lblAskedOn.Text = readerSelectQuestion["CREATED_ON"].ToString();

            if (this.Session["UserId"].ToString() != "1")
            {
                btnUpdate.Visible = false;
                txtEditorAnswer.Visible = false;
                divQaDescription.Visible = true;
                divQaDescription.InnerHtml = Server.HtmlDecode(readerSelectQuestion["ANSWER"].ToString());
            }
            else
            {
                txtEditorAnswer.Text = readerSelectQuestion["ANSWER"].ToString();
            }
        }
        else
        {
            lblError.Text = "ERROR WHILE READING QA DATA!";
        }
    }
    catch (Exception ex)
    {
        ExceptionLogger.LogException(ex);
        lblError.Text = ex.Message;
    }
    finally
    {
        if (connectionSelectQuestion != null)
        {
            connectionSelectQuestion.Close();
        }
    }
}


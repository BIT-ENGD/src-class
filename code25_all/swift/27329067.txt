println("Failed to save font: \(fontFile)")

fontPath = "/Users/James/Library/Developer/CoreSimulator/Devices/E153E1F4-E3FD-4BCE-A40F-433EADF14591/data/Containers/Data/Application/969A248C-A7B3-4768-86E4-68A6C4E20ECF/Documents/Fonts/american_typewriter_medium_bt.ttf"

// Download and save font file
        let nsDocumentDirectory = NSSearchPathDirectory.DocumentDirectory
        let nsUserDomainMask = NSSearchPathDomainMask.UserDomainMask
        if let paths = NSSearchPathForDirectoriesInDomains(nsDocumentDirectory, nsUserDomainMask, true) {
            if paths.count > 0 {
                if let documentsDirectory = paths[0] as? String {
                    let fontPath = documentsDirectory.stringByAppendingPathComponent("Fonts/"+fontFile) as String
                    let fontUrl = NSURL(string: ApiUrlString + "fonts/" + fontFile)
                    if let fontData = NSData(contentsOfURL: fontUrl!)
                    {
                        if(!fontData.writeToFile(fontPath, atomically: true))
                        {
                            println("Failed to save font: \(fontFile)")
                            return
                        }
                    }
                    else
                    {
                        println("Failed to download font from URL: \(fontUrl)")
                        return
                    }

                    // Load Font
                    let data: NSData? = NSFileManager.defaultManager().contentsAtPath(fontPath)
                    if (data == nil)
                    {
                        println("Failed to load saved font: \(fontFile)")
                        return
                    }

                    var error: Unmanaged<CFError>?
                    let provider: CGDataProviderRef = CGDataProviderCreateWithCFData(data)
                    let font: CGFontRef = CGFontCreateWithDataProvider(provider)
                    if (!CTFontManagerRegisterGraphicsFont(font, &error))
                    {
                        println("Failed to register font, error: \(error)")
                        return
                    }

                    println("Successfully saved and registered font: \(fontFile)")
                }
            }
        }
        else
        {
            println("Failed to load documents directory: \(fontFile)")
        }


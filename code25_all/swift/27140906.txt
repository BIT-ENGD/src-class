GPUImageAlphaBlendFilter
UI
applyAndGetCIImage
public class StylePhotoFilter: PhotoFilter {
  var blendFilter: GPUImageAlphaBlendFilter!
  var originalImage: UIImage!
  var styledImage: UIImage!
  var styledImageSource: GPUImagePicture!

  override func setupFilter() {

    // setup the filters
    blendFilter = GPUImageAlphaBlendFilter()

    // setting up the image to edit
    if(uiImage == nil) {
      let context = CIContextManager.sharedInstance
      let cgiImgRef = context.createCGImage(inputImage, fromRect: inputImage.extent())
      originalImage = UIImage(CGImage: cgiImgRef)
    } else {
      originalImage = uiImage!
    }

    // apply the style fully
    // styledImage = // I created this image earlier, we can assume it works

    // add target photo
    styledImageSource = GPUImagePicture(image: styledImage)
    styledImageSource.addTarget(blendFilter, atTextureLocation: 0)

  }

  public override func applyAndGetCIImage(sliderVal: Float) -> CIImage! {
    // set the mix
    blendFilter.mix = sliderVal

    // blend it
    // blendFilter.useNextFrameForImageCapture() // According to Brad Larson, this is no longer needed, as imageByFilteringImage does this for you
    styledImageSource.processImage()
    let blendedImage = blendFilter.imageByFilteringImage(originalImage)

    return CIImage(image: blendedImage)

  }
}


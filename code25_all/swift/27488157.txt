@objc class MYChatBarButton: UIBarButtonItem {

    let badgeLabel: UILabel


    init(target: AnyObject, selector: Selector) {

        let button = UIButton.buttonWithType(.Custom) as UIButton
        button.frame = CGRectMake(0, 0, 35, 44)
        button.addTarget(target, action: selector, forControlEvents: .TouchUpInside)
        button.tintColor = UIColor.whiteColor()
        button.setImage(UIImage(named: "chat_icon")?.imageWithRenderingMode(.AlwaysTemplate), forState: .Normal)
        button.imageEdgeInsets = UIEdgeInsets(top: 0, left: 7, bottom: 5, right: 0)

        badgeLabel = UILabel(frame: CGRectMake(0, 0, 15, 15))
        badgeLabel.backgroundColor = UIColor.clearColor()
        badgeLabel.textColor = UIColor.whiteColor()
        badgeLabel.textAlignment = .Center
        badgeLabel.text = "0"
        badgeLabel.userInteractionEnabled = false

        button.addSubview(badgeLabel)


        super.init(customView: button)


    }


}

@objc class MYChatBarButton: UIBarButtonItem {

    let badgeLabel: UILabel


    init(target: AnyObject, selector: Selector) {

        let button = createButton(target, selector: selector)
        createBadgeLabel()
        button.addSubview(badgeLabel)

        super.init(customView: button)


    }

    func createButton(target: AnyObject, selector: Selector) -> UIButton {
        let button = UIButton.buttonWithType(.Custom) as UIButton
        button.frame = CGRectMake(0, 0, 35, 44)
        button.addTarget(target, action: selector, forControlEvents: .TouchUpInside)
        button.tintColor = UIColor.whiteColor()
        button.setImage(UIImage(named: "chat_icon")?.imageWithRenderingMode(.AlwaysTemplate), forState: .Normal)
        button.imageEdgeInsets = UIEdgeInsets(top: 0, left: 7, bottom: 5, right: 0)
        return button
    }

    func createBadgeLabel() {
        badgeLabel = UILabel(frame: CGRectMake(0, 0, 15, 15))
        badgeLabel.backgroundColor = UIColor.clearColor()
        badgeLabel.textColor = UIColor.whiteColor()
        badgeLabel.textAlignment = .Center
        badgeLabel.text = "0"
        badgeLabel.userInteractionEnabled = false
    }

}

@objc class MYChatBarButton: UIBarButtonItem {

    let badgeLabel: UILabel


    init(target: AnyObject, selector: Selector) {

        let button = MYChatBarButton.createButton(target, selector: selector)
        badgeLabel = MYChatBarButton.createBadgeLabel()
        button.addSubview(badgeLabel)

        super.init(customView: button)


    }

    class func createButton(target: AnyObject, selector: Selector) -> UIButton {
        let button = UIButton.buttonWithType(.Custom) as UIButton
        button.frame = CGRectMake(0, 0, 35, 44)
        button.addTarget(target, action: selector, forControlEvents: .TouchUpInside)
        button.tintColor = UIColor.whiteColor()
        button.setImage(UIImage(named: "chat_icon")?.imageWithRenderingMode(.AlwaysTemplate), forState: .Normal)
        button.imageEdgeInsets = UIEdgeInsets(top: 0, left: 7, bottom: 5, right: 0)
        return button
    }

    class func createBadgeLabel() -> UILabel {
        let bl = UILabel(frame: CGRectMake(0, 0, 15, 15))
        bl.backgroundColor = UIColor.clearColor()
        bl.textColor = UIColor.whiteColor()
        bl.textAlignment = .Center
        bl.text = "0"
        bl.userInteractionEnabled = false
    }

}


func getFocusedApp() -> AXUIElementRef? {
    let systemWideElement : AXUIElement = AXUIElementCreateSystemWide().takeRetainedValue()
    let kAXFocusedApplication : CFString! = "AXFocusedApplication"
    var focusedElementPtr : Unmanaged<AnyObject>?
    var error : AXError = AXUIElementCopyAttributeValue(systemWideElement, kAXFocusedApplication, &focusedElementPtr)
    if let ue = focusedElementPtr {
        return ue.takeUnretainedValue() as AXUIElementRef
    }
    else {
        printError(error)
    }
    return nil
}

func getFocusedApp() -> AXUIElementRef? {
    var output: AXUIElementRef? = nil
    let systemWideElement : AXUIElement = AXUIElementCreateSystemWide().takeRetainedValue()
    let kAXFocusedApplication : CFString! = "AXFocusedApplication"
    var focusedElementPtr : UnsafeMutablePointer<Unmanaged<AnyObject>?> = UnsafeMutablePointer<Unmanaged<AnyObject>?>.alloc(1)
    var error : AXError = AXUIElementCopyAttributeValue(systemWideElement, kAXFocusedApplication, focusedElementPtr)
    if let ue = focusedElementPtr.memory {
        output = ue.takeUnretainedValue() as AXUIElementRef
    }
    else {
        printError(error)
    }
    focusedElementPtr.dealloc(1)
    return output
}


var file = NSFileHandle()

override func viewDidLoad() {
    super.viewDidLoad()

}

@IBAction func touchBut(sender: UIButton) {
    var items = NSMutableArray()
    var path: String = NSSearchPathForDirectoriesInDomains(.DocumentDirectory, .UserDomainMask, true)[0].stringByAppendingPathComponent("mus4.mp3")
    var err: NSError?
    if NSFileManager.defaultManager().fileExistsAtPath(path) {
        dump(path)
        println("already be")
    } else {
        var url = NSURL(string: "http://data.iplayer.fm/file/ia76k50/104678741/177398297/Sayyod_-_Kerakmas_(iPlayer.fm).mp3")!
        var request = NSURLRequest(URL: url)
        var connection = NSURLConnection(request: request, delegate: self)
        if (connection != nil) {
            NSFileManager.defaultManager().createFileAtPath(path, contents: nil, attributes: nil)
            self.file = NSFileHandle(forUpdatingAtPath: path)!
        }
        println("ok")
    }
}

func connection(connection: NSURLConnection, didReceiveData data: NSData) {
    UIApplication.sharedApplication().networkActivityIndicatorVisible = true
    file.seekToEndOfFile()
    var receivedData: NSMutableData = NSMutableData(data: data)
    receivedData.appendData(data)
    file.writeData(receivedData)
}

func connectionDidFinishLoading(connection: NSURLConnection) {
    file.closeFile()
    UIApplication.sharedApplication().networkActivityIndicatorVisible = false
}

func connection(connection: NSURLConnection, didFailWithError error: NSError) {
    println(error)
    file.closeFile()
    UIApplication.sharedApplication().networkActivityIndicatorVisible = false
}


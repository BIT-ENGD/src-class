UIGraphicsBeginPDFContextToData(pdfData, self.view.bounds, nil)   
UIGraphicsBeginPDFPage()     
self.view.layer.renderInContext(pdfContext)
UIGraphicsEndPDFContext()

pdfData.writeToFile(documentDirectoryFilename, atomically: true)
 func numberOfSectionsInTableView(tableView: UITableView) -> Int {
        return 2
    }


    func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 10
    }

    func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {

        let cell = tableView.dequeueReusableCellWithIdentifier("Cell") as OrderFormCell

         var data = Orders[indexPath.row]


        let netFloat = data.valueForKey("net") as Float
        cell.netPriceLabel.text = NSString(format: "£%.2f", netFloat)

        cell.bookOrderLabel.text = data.valueForKey("book") as String?
        cell.bookOrderLabel.sizeToFit()
        cell.isbnLabel.text = data.valueForKey("isbn") as String?

        // ----- Int to String -------------------
        let quantityAsInt : Int = data.valueForKey("quantity") as Int!
        cell.quantityLabel.text = "\(quantityAsInt)"


        // -------- NString to Float -------------
        let bb : NSString = cell.quantityLabel.text!

        bookValue  = data.valueForKey("booktotal") as Float
        cell.bookNetValueOutlet.text = NSString(format: "£%.2f", bookValue)

        totalValueOutlet.text = NSString(format: "£%.2f", totalValue)

        return cell

    }


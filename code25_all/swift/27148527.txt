var situation = ["11", "12", "13", "14"]
var situation1 = ["21", "22", "23", "24"]
var situation2 = ["31", "32", "33", "34", "35", "36"]

var situationD1 = ["11", "12", "13", "14" ]
var situationD2 = ["21", "22", "23", "24"]
var situationD3 = ["31", "32", "33", "34", "35", "36"]

override func tableView(tableView: UITableView, titleForHeaderInSection section: Int) -> String?
{
    switch section {
    case 0:
        return "One"
    case 1:
        return "Two"
    case 2:
        return "Three"

    default:
        return nil
    }
}


override func numberOfSectionsInTableView(tableView: UITableView) -> Int
{
    return 3
}

 override func tableView(tableView: UITableView, cellForRowAtIndexPath 
 indexPath: NSIndexPath) ->       UITableViewCell {
    let identifier = "cell"
    var cell = tableView.dequeueReusableCellWithIdentifier("cell") as? UITableViewCell

    if (indexPath.section == 0) {
        cell!.textLabel.text = situation[indexPath.row]


    }
    if (indexPath.section == 1) {
        cell!.textLabel.text = situation1[indexPath.row]

    }

    if (indexPath.section == 2) {
        cell!.textLabel.text = situation2[indexPath.row]


    }

    return cell!
}

override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {

    switch section {
    case 0:
        if tableView == self.searchDisplayController!.searchResultsTableView {
            return searchResults.count
        }
        else {

            return situation.count }


    case 1:
        if tableView == self.searchDisplayController!.searchResultsTableView {
            return searchResults.count
        }
        else {
            return situation1.count }
  //  default:
   //   return 0

    case 2:
        if tableView == self.searchDisplayController!.searchResultsTableView {
            return searchResults.count
        }
        else {
            return situation2.count}
    default:
        return 0


    }

}


func filterContentForSearchText (searcText: String) {
    searchResults = situation.filter{($0 as NSString).localizedCaseInsensitiveContainsString("\
(searcText)")}
}
   func searchDisplayController(controller:UISearchDisplayController, shouldReloadTableForSearchString searchString: String!) -> Bool {
    self.filterContentForSearchText(searchString)
    return true
}

 override func tableView(tableView:UITableView, didSelectRowAtIndexPath indexPath:NSIndexPath){
    if tableView == self.searchDisplayController!.searchResultsTableView {
        self.performSegueWithIdentifier("showDetail", sender: self)
    }

}


override func prepareForSegue(segue: UIStoryboardSegue, sender:AnyObject!) {
    if segue.identifier == "showDetail" {
        let indexPath = tableView.indexPathForSelectedRow()

        let destViewController:DetailViewController! = segue.destinationViewController as DetailViewController
            destViewController.situation = situationD1[indexPath!.row]

    }
}


self.physicsWorld.gravity = CGVectorMake(0.0, -4.0);
override func touchesBegan(touches: NSSet, withEvent event: UIEvent) {
        /* Called when a touch begins */

        for touch: AnyObject in touches {

            let location = touch.locationInNode(self)

            flyingObject.physicsBody.velocity = CGVectorMake(0, 100)
        }        
    }

override func didMoveToView(view: SKView) {
        /* Setup your scene here */

        // Physics
        self.physicsWorld.gravity = CGVectorMake(0.0, -4.0);

        // flyingObject
        var flyingObjectTexture = SKTexture(imageNamed:"flyingObject")
        flyingObject.filteringMode = SKTextureFilteringMode.Nearest

        flyingObject = SKSpriteNode(texture: flyingObjectTexture)
        flyingObject.setScale(1)
        flyingObject.position = CGPoint(x: self.frame.size.width * 0.35, y: self.frame.size.height * 0.6)

        flyingObject.physicsBody = SKPhysicsBody(circleOfRadius:flyingObject.size.height/2.0)
        flyingObject.physicsBody.dynamic = true
        flyingObject.physicsBody.allowsRotation = false

        self.addChild(flyingObject)

        // Ground
        var groundTexture = SKTexture(imageNamed:"Ground")

        var sprite = SKSpriteNode(texture:groundTexture)
        sprite.setScale(0.5)
        sprite.position = CGPointMake(self.size.width/2 - 100, sprite.size.height)

        self.addChild(sprite)

        var ground = SKNode()

        ground.position = CGPointMake(0, groundTexture.size().height / 2)
        ground.physicsBody = SKPhysicsBody(rectangleOfSize: CGSizeMake(self.frame.width, groundTexture.size().height * 0.5))

        ground.physicsBody.dynamic = false
        self.addChild(ground)

    }


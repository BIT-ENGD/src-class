    // Get CoreData
    let appDelegate = UIApplication.sharedApplication().delegate as AppDelegate
    let managedContext : NSManagedObjectContext = appDelegate.managedObjectContext!
    var fetchRequest = NSFetchRequest(entityName: "Log")
    fetchRequest.returnsObjectsAsFaults = false;
    var results: NSArray = managedContext.executeFetchRequest(fetchRequest, error: nil)!

    //attempt to type cast a logs array
    var logs = managedContext.executeFetchRequest(fetchRequest, error: nil)!
    var logsArray = logs as NSArray as [Double]
    var totalHoursWorkedSum = logsArray.reduce(0, combine: +)
    //this builds, but crashes the app with 'EXC_BAD_INSTRUCTION' when I try to set a label.text with 'totalHoursWorkedSum'

//Time logging
            var punchInTime : NSDate = punchTimes.objectForKey("punchInTime") as NSDate
            var punchOutTime = NSDate()
            var totalWorkTime  = NSDate().timeIntervalSinceDate(punchInTime)
            //"punchInTime" is stored in NSUserDefaults
            var totalWorkTimeInHoursNotRounded = (totalWorkTime/60/60)

            var totalWorkTimeInHours = Double(round(1000*totalWorkTimeInHoursNotRounded)/1000)
            //the rounded form of the above


            //format a date
            var dateFormatter = NSDateFormatter()
            dateFormatter.dateStyle = .FullStyle

            //Save to CoreData
            let appDelegate = UIApplication.sharedApplication().delegate as AppDelegate
            let managedContext : NSManagedObjectContext = appDelegate.managedObjectContext!
            let entity =  NSEntityDescription.entityForName("Log", inManagedObjectContext: managedContext)

            var newLog = DataModel(entity: entity!, insertIntoManagedObjectContext: managedContext)
            newLog.totalWorkTimeInHours = totalWorkTimeInHours
            newLog.dateString = dateFormatter.stringFromDate(NSDate())

            managedContext.save(nil)

            punchTimes.objectForKey("punchInTime") == nil


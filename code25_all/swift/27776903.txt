403 forbidden
didReceiveAuthenticationChallenge
willSendRequestForAuthenticationChallenge
var message:String = "<?xml version='1.0' encoding='utf-8'?><soap12:Envelope xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:soap12='http://www.w3.org/2003/05/soap-envelope'><soap12:Body><GetList xmlns='http://schemas.microsoft.com/sharepoint/soap/'><listName>ThemeGallery</listName></GetList></soap12:Body></soap12:Envelope>"

var urlString = "https://domainname/_vti_bin/Lists.asmx"

var url = NSURL(string: urlString)
var req = NSMutableURLRequest(URL: url!)
var msglength = String(countElements(message))

req.addValue("text/xml; charset=utf-8", forHTTPHeaderField: "Content-Type")
req.addValue(msglength, forHTTPHeaderField: "Content-Length")
req.addValue("http://schemas.microsoft.com/sharepoint/soap/GetList", forHTTPHeaderField: "SOAPAction")
req.HTTPMethod = "POST"
req.HTTPBody = message.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: false)

var connection = NSURLConnection(request: req, delegate: self, startImmediately: true)
    connection?.start()

func connection(connection: NSURLConnection, willSendRequestForAuthenticationChallenge challenge: NSURLAuthenticationChallenge) {

    if challenge.previousFailureCount == 0
    {
        var newCredential = NSURLCredential(user: self.username, password: self.password, persistence: NSURLCredentialPersistence.ForSession)
        challenge.sender.useCredential(newCredential, forAuthenticationChallenge: challenge)

    }
    else
    {
        challenge.sender.cancelAuthenticationChallenge(challenge)

    }
}

func connectionDidFinishLoading(connection: NSURLConnection!) {

    var xmlParser = NSXMLParser(data: self.mutableData)

    xmlParser.delegate = self
    xmlParser.parse()
    xmlParser.shouldResolveExternalEntities = true 
}


import UIKit
import Photos //Photos.h del framework Photos
import MediaPlayer
import AssetsLibrary

let reuseIdentifier = "PhotoCell"
let albumName = "My App"

class PhotosViewController: UIViewController, UICollectionViewDataSource,    UICollectionViewDelegate, UICollectionViewDelegateFlowLayout,        UIImagePickerControllerDelegate, UINavigationControllerDelegate {

var assetCollection:PHAssetCollection!
var photoAsset:PHFetchResult!
var imageManager = PHImageManager.defaultManager()
var albumFound:Bool = false

@IBOutlet weak var collectionView: UICollectionView!

@IBAction func creaFilmato(sender: AnyObject) {

    println("Crea il tuo filmato")

    /* With a static array works perfectly
    let img1:UIImage = UIImage(named: "image1.jpg")!
    let img2:UIImage = UIImage(named: "image2.jpg")!
    let img3:UIImage = UIImage(named: "image3.jpg")!

    var array:Array<UIImage> = [img1,img2,img3]*/

    let img1:UIImage = UIImage(named: "image1.jpg")!

    let settings:NSDictionary = CEMovieMaker.videoSettingsWithCodec(AVVideoCodecH264, withWidth: img1.size.width, andHeight: img1.size.height)
    let prova = CEMovieMaker(settings: settings)

    prova.createMovieFromImages([self.photoAsset.copy()], withCompletion: {(success:Bool, fileURL:NSURL!) in

        if(success){

            self.viewMovieAtURL(fileURL)

            /*// Salvo il filmato in cameraRoll

            let library:ALAssetsLibrary = ALAssetsLibrary()

            library.writeVideoAtPathToSavedPhotosAlbum(fileURL, completionBlock: {(assetURL:NSURL!, error) in

            if((error) != nil) {

            println("Errore nel salvataggio del filmato %@",error)
            }

            })*/
        }

    })

    println("Esportato!")

}

func viewMovieAtURL(fileURL:NSURL!)->Void {

    let playerController:MPMoviePlayerViewController = MPMoviePlayerViewController(contentURL: fileURL!)

    playerController.view.frame = self.view.bounds
    self.presentMoviePlayerViewControllerAnimated(playerController)
    playerController.moviePlayer.prepareToPlay()
    playerController.moviePlayer.play()

    self.view.addSubview(playerController.view)

}


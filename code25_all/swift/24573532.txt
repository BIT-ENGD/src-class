@objc protocol MyDataProvider : UICollectionViewDataSource, UICollectionViewDelegate, NSObjectProtocol {
    var myData : AnyObject { get }
}

class MyData : NSObject, MyDataProvider {
    var myData:AnyObject

    init() {
        self.myData = Int()
    }

    func collectionView(collectionView: UICollectionView!, numberOfItemsInSection section: Int) -> Int {
        return 1
    }

    func collectionView(collectionView: UICollectionView!, cellForItemAtIndexPath indexPath: NSIndexPath!) -> UICollectionViewCell! {
        return nil
    }
}

let dataProvider : MyDataProvider = MyData()

class MyController : UIViewController {
    let dataProvider : MyDataProvider = MyData()

    @IBOutlet var collectionView : UICollectionView

    override func viewDidLoad() {
        super.viewDidLoad()

        self.collectionView.dataSource = dataProvider
        self.collectionView.delegate = dataProvider
    }
}

Type 'MyDataProvider' does not conform to protocol 'NSObjectProtocol'

let dataProvider = MyDate()

MyDataProvider
viewDidLoad()
NSObjectProtocol
protocol MyDataProvider : UICollectionViewDelegate {
    var myData : AnyObject { get }
}

UICollectionViewDelegate
NSObjectProtocol
NSObjectProtocol
protocol MyDataProvider : UICollectionViewDataSource, UICollectionViewDelegate {
    var myData : AnyObject { get }
}

NSObjectProtocol

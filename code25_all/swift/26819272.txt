import UIKit
import SpriteKit

extension SKNode {
    class func unarchiveFromFile(file : NSString) -> SKNode? {
        if let path = NSBundle.mainBundle().pathForResource(file, ofType: "sks") {
            var sceneData = NSData(contentsOfFile: path, options: .DataReadingMappedIfSafe, error: nil)!
            var archiver = NSKeyedUnarchiver(forReadingWithData: sceneData)

            archiver.setClass(self.classForKeyedUnarchiver(), forClassName: "SKScene")
            let scene = archiver.decodeObjectForKey(NSKeyedArchiveRootObjectKey) as GameScene
            archiver.finishDecoding()
            return scene
        } else {
            return nil
        }
    }
}
class GameViewController: UIViewController {

    let scene: GameScene!

    @IBAction func swipeUp(sender: UISwipeGestureRecognizer){
        scene.movePlaneUp()
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        if let scene = GameScene.unarchiveFromFile("GameScene") as? GameScene {
            let skView = self.view as SKView
            skView.ignoresSiblingOrder = true
            scene.scaleMode = .AspectFill

            skView.presentScene(scene)
        }
    }

    override func shouldAutorotate() -> Bool {
        return false
    }

    override func supportedInterfaceOrientations() -> Int {
        if UIDevice.currentDevice().userInterfaceIdiom == .Phone {
            return Int(UIInterfaceOrientationMask.AllButUpsideDown.rawValue)
        } else {
            return Int(UIInterfaceOrientationMask.All.rawValue)
        }
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
    }

    override func prefersStatusBarHidden() -> Bool {
        return true
    }
}

scene.movePlaneUp()

import SpriteKit

class GameScene: SKScene {
    override func didMoveToView(view: SKView) {
        let bg = SKSpriteNode(imageNamed: "Background")
        bg.size = self.frame.size
        bg.position = CGPoint(x: CGRectGetMidX(self.frame), y: CGRectGetMidY(self.frame))
        self.addChild(bg)
        let sprite = SKSpriteNode(imageNamed: "Spaceship")
        sprite.xScale = 0.6
        sprite.yScale = 0.5
        sprite.position = CGPoint(x: CGRectGetMidX(self.frame), y: CGRectGetMinY(self.frame)+CGRectGetMaxY(sprite.frame))
        sprite.name = "spaceship"
        self.addChild(sprite)
    }
    override func touchesBegan(touches: NSSet, withEvent event: UIEvent) {
        var t = touches.allObjects[0]
        let location = t.locationInNode(self)
        let action = SKAction.moveToX(location.x, duration:0.1)
        let n = self.childNodeWithName("spaceship")
        n?.runAction(action)
        let bullet = SKSpriteNode(imageNamed: "Spaceship")
        bullet.xScale = 0.05
        bullet.yScale = 0.05
        bullet.position = CGPoint(x: location.x, y: 200+bullet.position.y)
        bullet.runAction(SKAction.moveToY(1000, duration: 0.75))
        self.addChild(bullet)
    }
    func movePlaneUp(){
        let n = childNodeWithName("spaceship")
        n?.removeAllActions()
        let action = SKAction.moveBy(CGVector(dx: 0, dy: 100), duration: 1)
        n?.runAction(action)
    }
}


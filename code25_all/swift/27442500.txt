Optional<T>
map
/// If `self == nil`, returns `nil`.  Otherwise, returns `f(self!)`.
func map<U>(f: (T) -> U) -> U?

Int?
UInt64?
let iVal:Int? = 42
let i64Val = iVal.map { UInt64($0) }

var i64Val:UInt64?
if let iVal = iVal {
    i64Val = UInt64(iVal)
}

ImplicitlyUnwrappedOptional<T>
/// If `self == nil`, returns `nil`.  Otherwise, returns `f(self!)`.
func map<U>(f: (T) -> U) -> U!

let iVal:Int! = 42
let i64Val = iVal.map { UInt64($0) } 
//           ^    ~~~  [!] error: 'Int' does not have a member named 'map'


 func paymentQueue(queue: SKPaymentQueue!, updatedTransactions transactions: AnyObject[]!)    {
    for transaction:AnyObject in transactions {
        if let trans:SKPaymentTransaction = transaction as? SKPaymentTransaction{
        switch trans.transactionState {
                case SKPaymentTransactionStatePurchased:
                    self.openLevel2();
                    SKPaymentQueue.defaultQueue().finishTransaction(transaction)
                    break;
                case SKPaymentTransactionStateFailed:
                    SKPaymentQueue.defaultQueue().finishTransaction(transaction)
                    break;
                case SKPaymentTransactionStateRestored:
                    //[self restoreTransaction:transaction];
                default:
                    break;
            }
    }
  }
}


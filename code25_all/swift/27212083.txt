SystemStatusBar
StatusBarItem
NSPopover
@NSApplicationMain
class AppDelegate: NSObject, NSApplicationDelegate {

    @IBOutlet weak var window: NSWindow!

    var statusView : StatusView!
    var popController: PopViewController!


    @IBAction func showPop(sender: NSButton)
    {
        statusView.showPopup()
    }

    @IBAction func hidePop(sender: NSButton)
    {
        statusView.hidePopup()
    }

    func applicationDidFinishLaunching(aNotification: NSNotification)
    {
        var height = NSStatusBar.systemStatusBar().thickness
        statusView = StatusView(frame: NSMakeRect(0, 0, CGFloat(height), CGFloat(height)))
    }
}

class StatusView : NSView, NSMenuDelegate
{
    var imageView: NSImageView!
    var statusItem: NSStatusItem!

    var popover: NSPopover!
    var popController: PopViewController!

    required init? (coder: NSCoder)
    {
        super.init(coder: coder)
    }
    override init(frame frameRect: NSRect)
    {
        var height = NSStatusBar.systemStatusBar().thickness
        imageView = NSImageView(frame: NSMakeRect(0, 0, CGFloat(height), CGFloat(height)))
        statusItem = NSStatusBar.systemStatusBar().statusItemWithLength(CGFloat(height))

        super.init(frame: frameRect)

        imageView.image = NSImage(named: "mf-image-black.png")
        self.addSubview(imageView)
        statusItem.view = self

        popover = NSPopover()
        popController = PopViewController(nibName: "PopViewController", bundle: nil)
        popController.view = self
        popover.contentViewController = popController

    }

    func showPopup()
    {
        if(!popover.shown)
        {
            popover.showRelativeToRect(self.frame, ofView: self, preferredEdge: NSMinYEdge)
        }
    }

    func hidePopup()
    {
        if(popover.shown)
        {
            popover.close()
        }
    }
}

class PopViewController: NSViewController
{
    @IBOutlet var statusView: StatusView!

    override init?(nibName: String?, bundle: NSBundle?) {
        super.init(nibName: nibName, bundle: bundle)
    }

    required init?(coder: NSCoder)
    {
        super.init(coder: coder)
    }
}

PopViewController

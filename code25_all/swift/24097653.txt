class GravidMenu: UIViewController, UITableViewDelegate, UITableViewDataSource {

@IBOutlet
var tableView: UITableView
var dict = NSMutableArray(contentsOfFile: NSBundle.mainBundle().pathForResource("links", ofType: "plist"))
var txt : NSString = dict.valueForKey("menuPunkt") as NSString //this throws a error : GravidMenu.Type does not have a member named dict


func tableView(tableView: UITableView!, numberOfRowsInSection section: Int) -> Int {
    return self.dict.count;
}

func tableView(tableView: UITableView!, cellForRowAtIndexPath indexPath: NSIndexPath!) -> UITableViewCell! {
    var cell:UITableViewCell = self.tableView.dequeueReusableCellWithIdentifier("cell") as UITableViewCell
    if let row = indexPath?.row {

        cell.textLabel.text = self.txt[row] // throws a error Nsstring does not have a a member named subscript
        println("Text \(txt)")
    }

    return cell
}

import UIKit
import Foundation


class GravidMenu: UIViewController, UITableViewDelegate, UITableViewDataSource {

@IBOutlet
var tableView: UITableView

override func viewDidLoad() {
    super.viewDidLoad()
    var dict = NSMutableArray(contentsOfFile: NSBundle.mainBundle().pathForResource("links", ofType: "plist"))
    var txt : NSArray = dict.valueForKey("menuPunkt") as NSArray

    self.tableView.registerClass(UITableViewCell.self, forCellReuseIdentifier: "cell")

}


func tableView(tableView: UITableView!, numberOfRowsInSection section: Int) -> Int {
    return self.dict.count; // Throws Error GravidMenu does not have a member named dict
}

func tableView(tableView: UITableView!, cellForRowAtIndexPath indexPath: NSIndexPath!) -> UITableViewCell! {
    var cell:UITableViewCell = self.tableView.dequeueReusableCellWithIdentifier("cell") as UITableViewCell
    if let row = indexPath?.row {

        cell.textLabel.text = "\(txt.objectAtIndex(indexPath.row))"
        println("Text \(txt)")
    }

    return cell
}

func tableView(tableView: UITableView!, didSelectRowAtIndexPath indexPath: NSIndexPath!) {
    println("You selected cell #\(indexPath.row)!")
}

override func didReceiveMemoryWarning() {
    super.didReceiveMemoryWarning()
    // Dispose of any resources that can be recreated.
}


}

let dict : NSMutableArray! = NSMutableArray(contentsOfFile: NSBundle.mainBundle().pathForResource("links", ofType: "plist"))
var txt : NSArray! = dict?.valueForKey("menuPunkt") as? NSArray!


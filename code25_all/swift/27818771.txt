dispatch_async(dispatch_get_main_queue(), { () -> Void in
    self.tableView.reloadData()
})

func setupArrays (){

    if NSUserDefaults.standardUserDefaults().boolForKey("stepsSwitch") == true {
        titleArray.append(stepsCell.title())
        imageNameArray.append(stepsCell.imageName)
        xAxisDatesArray.append(cdFetchSteps.queryCoreDataDate())
        yAxisValuesArray.append(cdFetchSteps.queryCoreDataData())

    }

    if NSUserDefaults.standardUserDefaults().boolForKey("hrSwitch") == true {
        titleArray.append(heartRateCell.title())
        imageNameArray.append(heartRateCell.imageName)
        xAxisDatesArray.append(cdFetchHeartRate.queryCoreDataDate())
        yAxisValuesArray.append(cdFetchHeartRate.queryCoreDataData())

    }

    if NSUserDefaults.standardUserDefaults().boolForKey("weightSwitch") == true {

        titleArray.append(weightCell.title())
        imageNameArray.append(weightCell.imageName)
        xAxisDatesArray.append(cdFetchWeight.queryCoreDataDate())
        yAxisValuesArray.append(cdFetchWeight.queryCoreDataData())

    }

    dispatch_async(dispatch_get_main_queue(), { () -> Void in
        self.tableView.reloadData()
    })

    println(yAxisValuesArray)
}

override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {

    return titleArray.count
    }


override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
    var myCell:TableViewCell = tableView.dequeueReusableCellWithIdentifier("myCell") as TableViewCell

    myCell.title.text = titleArray[indexPath.row]
    myCell.imageName =  imageNameArray[indexPath.row]
    myCell.xAxisDates = xAxisDatesArray[indexPath.row] 
    myCell.yAxisValues = yAxisValuesArray[indexPath.row] 

    return myCell    }


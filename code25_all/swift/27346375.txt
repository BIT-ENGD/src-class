cellForRowAtIndexPath
func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
        mainTableView.estimatedRowHeight = 50.0
        mainTableView.rowHeight = UITableViewAutomaticDimension
        var cell : postWithTitleAndImageTableViewCell = mainTableView.dequeueReusableCellWithIdentifier("postWithTitleAndImage") as postWithTitleAndImageTableViewCell
        var imageID = json[indexPath.row]["imageName"] as String
        var id = json[indexPath.row]["id"] as String
        var isImage = json[indexPath.row]["isImage"] as String
        var title = json[indexPath.row]["name"] as String
        var text = json[indexPath.row]["post"] as String
        var time = json[indexPath.row]["time"] as String
        var popularity = json[indexPath.row]["popularity"] as String
        //add clientid
        //time handle in the cell class
        lastID = id
        cell.setCell(id, title: title, imageID: imageID, text: text, time: time, popularity: popularity)
        return cell as postWithTitleAndImageTableViewCell
    }

    public func setCell(id: String, title: String, imageID: String, text: String, time: String, popularity: String){
        println("setCell called")
        readIDs.append(id)
        postID = id
        let colors = ["person-blue.png", "person-green.png", "person-orange.png", "person-pink.png", "person-purple.png", "person-red.png", "person-yellow.png"]
        let randomIndex = Int(arc4random_uniform(UInt32(colors.count)))
        var imageName = (colors[randomIndex])
        var cellHeight = TableViewCell.frame.height
        let font = UIFont(name: "Arial Rounded MT Bold", size: 14.0)
        labelHeightConstraint.constant = heightForView(text, font: font!, width: postText.frame.width)
        postImage.clipsToBounds = true
        var timeDouble = time as NSString
        var phpTime = timeDouble.doubleValue
        var currentDate = NSDate()
        var postDate = NSDate(timeIntervalSince1970: phpTime as NSTimeInterval)
        var postTimeOffset = currentDate.offsetFrom(postDate) as String
        /*let url = NSURL(string: "http://bangedabigailtwice.tk/kno/getImage.php?id=\(imageID)")
        var err: NSError?
        var imageData :NSData = NSData(contentsOfURL: url!,options: NSDataReadingOptions.DataReadingMappedIfSafe, error: &err)!
        var imageFromURL = UIImage(data:imageData)
        */
        self.personImage?.image = UIImage(named: imageName)
        self.postTitle?.text = title
        self.postText?.text = text
        //self.postImage?.image = imageFromURL
        self.postImage.userInteractionEnabled = true
        self.postTime?.text = postTimeOffset 
        self.popularityOutlet?.text = popularity
        let recognizer = UITapGestureRecognizer(target: self, action:Selector("tapImageView:"))
        recognizer.numberOfTapsRequired = 2
        postImage.addGestureRecognizer(recognizer);
    }


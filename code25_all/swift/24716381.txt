import UIKit
import CoreData

var taskMgr: TaskManager = TaskManager()

struct task {
    var name = "Un-Named"
    var desc = "Un-Described"
}

class TaskManager: NSObject {

    var tasks = task[]()

    init() {
        super.init()
        self.getTasks()
    }

    func addTask(name: String, desc: String) {

        tasks.append(task(name: name, desc: desc))

        let appDel:AppDelegate = UIApplication.sharedApplication().delegate as AppDelegate
        let context:NSManagedObjectContext = appDel.managedObjectContext

        let ent = NSEntityDescription.entityForName("Tasks", inManagedObjectContext: context)

        var newTask = Tasks(entity: ent, insertIntoManagedObjectContext: context)
        newTask.name = name
        newTask.desc = desc

        println("Object saved")

        context.save(nil)
    }

    func getTasks() {
        let appDel:AppDelegate = UIApplication.sharedApplication().delegate as AppDelegate
        let context:NSManagedObjectContext = appDel.managedObjectContext

        var request = NSFetchRequest(entityName: "Tasks")
        request.returnsObjectsAsFaults = false;

        var results:NSArray = context.executeFetchRequest(request, error: nil)

        if (results.count > 0) {
            self.tasks = task[]()
            var i = 0
            for element in results {
                tasks[i].name = element.name  // fatal error: Array index out of range
                tasks[i].desc = element.desc
                i++
            }
        }
    }

}

class  Tasks: NSManagedObject {
    @NSManaged var name: String
    @NSManaged var desc: String
}


let buttonLabels = ["Alabel", "Blabel", "Clabel", "Dlabel", "Elabel", "Flabel", "Glabel", "Hlabel", "Ilabel", "Jlabel", "Klabel", "Llabel", "Mlabel"]

@IBOutlet weak var btnCollVw: UICollectionView!

//loadColFlowLayout() is called from ViewDidLoad()
func loadColFlowLayout() { 
        let btnLayout: UICollectionViewFlowLayout = UICollectionViewFlowLayout()
        btnLayout.scrollDirection = UICollectionViewScrollDirection.Horizontal
        btnLayout.sectionInset = UIEdgeInsets(top: 0, left: 1, bottom: 0, right: 1)
        btnLayout.itemSize = CGSize(width: 63, height: 30)
        btnCollVw.collectionViewLayout = btnLayout
        btnCollVw!.backgroundColor = UIColor.whiteColor()
    }

func numberOfSections() -> Int {
       return 1
       }

func collectionView(collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
      return buttonLabels.count
       }

func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -> UICollectionViewCell {
        var cell: UICollectionViewCell = self.iconCollVw.dequeueReusableCellWithReuseIdentifier("swIconsCell", forIndexPath: indexPath) as UICollectionViewCell

        var makeButton = UIButton(frame: CGRectMake(0, 0, 63, 29))
        makeButton.setTitle(buttonLabels[indexPath.item], forState: .Normal)
        makeButton.setTitleColor(UIColor.blackColor(), forState: .Normal)
        cell.addSubview(makeButton)
        // or using cell.contentView.addSubview(makeButton)

    return cell

    }
}


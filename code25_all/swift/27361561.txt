startUpdatingLocation
    var locationController: LocationController = LocationController() as LocationController;

func application(application: UIApplication!, didFinishLaunchingWithOptions launchOptions: NSDictionary!) -> Bool {

    UIApplication.sharedApplication().setMinimumBackgroundFetchInterval(UIApplicationBackgroundFetchIntervalMinimum);

    var bgTask = UIBackgroundTaskIdentifier()
    bgTask = UIApplication.sharedApplication().beginBackgroundTaskWithExpirationHandler { () -> Void in
        UIApplication.sharedApplication().endBackgroundTask(bgTask)
    }

    if(self.locationController.profileForTracking != nil && self.locationController.profileForTracking != "Disabled" && self.locationController.intervalForTracking != nil && self.locationController.trackingAllowed == true){
        self.locationController.initLocationManager();

        if(self.locationController.timer != nil){
            self.locationController.timer = self.locationController.timer;
        } else {
            self.locationController.startTimerForLocationUpdate();
        }

        println("Location can now start ....");

    }


    return true
}

func application(application: UIApplication!, performFetchWithCompletionHandler completionHandler: ((UIBackgroundFetchResult) -> Void)!) {

    var bgTask = UIBackgroundTaskIdentifier()
    bgTask = UIApplication.sharedApplication().beginBackgroundTaskWithExpirationHandler { () -> Void in
        UIApplication.sharedApplication().endBackgroundTask(bgTask)
    }

    if(self.locationController.profileForTracking != nil && self.locationController.profileForTracking != "Disabled" && self.locationController.intervalForTracking != nil && self.locationController.trackingAllowed == true){
        self.locationController.initLocationManager();

        if(self.locationController.timer != nil){
            self.locationController.timer = self.locationController.timer;
        } else {
            self.locationController.startTimerForLocationUpdate();
        }

        println("Location can now start ....");

    }
}


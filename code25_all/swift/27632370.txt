    import Foundation
    import Swift


    struct HasType<Type: AnyObject> {
        static func inObject<T>(object: T) -> Bool {
            return object is Type
        }
    }


    @objc protocol MyBaseProtocol : class {}
    @objc protocol MyDerivedProtocol : MyBaseProtocol {}
    @objc class MyBaseClass : MyDerivedProtocol {}
    @objc class MyDerivedClass : MyBaseClass {}

    let mbc = MyBaseClass()
    let mdc = MyDerivedClass()

    HasType<MyBaseProtocol>.inObject(mbc) // True
    HasType<MyDerivedProtocol>.inObject(mbc) // True
    HasType<MyBaseProtocol>.inObject(mdc) // False
    HasType<MyDerivedProtocol>.inObject(mdc) // False
    HasType<MyBaseClass>.inObject(mdc) // True
    HasType<MyDerivedClass>.inObject(mdc) // True


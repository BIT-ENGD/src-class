func doStuff(input : String, progressQeue : dispatch_queue_t, completionQueue :dispatch_queue_t, progress : ()->(), completion : ()->())

func doStuff(input : String, dispatch : Dispatch?)

struct Dispatch<ProgressionType,CompletionType>
{
    var progressQueue       : dispatch_queue_t
    var completionQueue     : dispatch_queue_t
    var progression : ProgressionType //a closure
    var completion  : CompletionType //a closure


    //dispatch with gcd
    func complete_sync(input : ()->())
    {
        dispatch_sync(completionQueue) {
            input()
        }
    }

    func complete_async(input : ()->())
    {
        dispatch_async(completionQueue) {
            input()
        }
    }

    ...
}

func doStuff(input : String, dispatch : Dispatch<()->(),()->(String,Int)>?)
{
  //do work
  ...
  //callback
  dispatch?.complete_async{dispatch!.completion("a", 3) }
}

  dispatch?.complete_async("a", 3)

func complete_async(parameters : AnyObject...)
{
    dispatch_async(completionQueue) {
        completion( ??? )
    }
}

(...) -> ()

struct Dispatch< CompletionType > {
   var function : (CompletionType -> ())?

   init()
   {
   }

   func complete_async(parameters : T)
   {
      dispatch_async(completionQueue) {
        completion(parameters)
      }
   }
}

 dispatch?.complete_async( ("pi", 3.14) )


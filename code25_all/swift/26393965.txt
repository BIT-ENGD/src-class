func zoomFractalClick(imagePoint: NSPoint?) {
    //NSLog("Point zoomed \(imagePoint)")
    if imagePoint == nil { return }
    let tag = zoomPopUp.selectedItem!.tag

    // Try setting undo/redo
    undoManager.registerUndoWithTarget(self, selector: Selector("resetFractalDef"), 
      object: StructWrapper<MJFractalDefinition>(object: fractalDef))
    //(undoManager.prepareWithInvocationTarget(self) as AppDelegate).
    //  resetFractalDef(StructWrapper<MJFractalDefinition>(object: fractalDef))

    fractalDef.zoomBounds(centerPoint: imagePoint!, zoomPower: Double(tag))      
    drawFractal()
}

func resetFractalDef( fractalDef: StructWrapper<MJFractalDefinition>) {
    self.fractalDef = fractalDef.object
    drawFractal()
}  

class StructWrapper<T> {
    let object: T  
    init( object: T) {
        self.object = object
    }
}


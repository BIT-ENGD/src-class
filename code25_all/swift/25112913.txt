override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view, typically from a nib.
        childAge.becomeFirstResponder()

        //Register for keyboard notifications in order to reposition bottom menu
        NSNotificationCenter.defaultCenter().addObserver(self, selector: "kbShown:", name: UIKeyboardDidShowNotification, object: nil)
        NSNotificationCenter.defaultCenter().addObserver(self, selector: "kbHidden:", name: UIKeyboardDidHideNotification, object: nil)

    }

override func viewWillDisappear(animated: Bool) {
    super.viewWillDisappear(animated)
    NSNotificationCenter.defaultCenter().removeObserver(self, name:UIKeyboardDidShowNotification, object: nil)
    NSNotificationCenter.defaultCenter().removeObserver(self, name:UIKeyboardDidHideNotification, object: nil)

}

func kbShown(notification: NSNotification) {
    let info = notification.userInfo as NSDictionary

    let s:NSValue = info.valueForKey(UIKeyboardFrameEndUserInfoKey) as NSValue;
    let rect :CGRect = s.CGRectValue(); //this is the KB rect

    //Get Screen Size
    var screenRect = UIScreen.mainScreen().bounds // [[UIScreen mainScreen] bounds];
    var screenWidth = screenRect.size.width
    var screenHeight = screenRect.size.height

    var frame = self.menuBar.frame;
    frame.origin.y = screenHeight - rect.height - frame.height //menuY! - rect.height;
    self.menuBar.frame = frame;

}  

func kbHidden(notification: NSNotification) {

    var screenRect = UIScreen.mainScreen().bounds // [[UIScreen mainScreen] bounds];
    var screenWidth = screenRect.size.width
    var screenHeight = screenRect.size.height

    var frame = self.menuBar.frame;
    if (frame.origin.y != screenHeight - frame.height){
        frame.origin.y = screenHeight - frame.height //frame.origin.y + rect.height;
        self.menuBar.frame = frame;
    }   
}


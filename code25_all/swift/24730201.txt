@implementation arrayTest
{
    NSMutableArray *mutableArray;
}
- (id) init {
    self = [super init];
    if(self) {
        mutableArray = [[NSMutableArray alloc] init];
    }
    return self;
}
- (NSMutableArray *) getArray {
    for(...; ...; ...) {
          ...
        NSString *cutFinal = xxx;
        [mutableArray addObject: cutFinal];
    }
    return mutableArray; // mutableArray = {2, 5, 10}
}

var target = arrayTest.getArray() // target = {2, 5, 10} 

for index in 1...10 {
    for targetIndex in 0..target.count {
        if index == target.objectAtIndex(targetIndex) as Int { 
            println("GET")
        } else {
            println(index)
        }
    }
}

1 GET 3 4 GET 6 7 8 9 GET

libswift_stdlib_core.dylib`swift_dynamicCastObjCClassUnconditional:
0x107e385b0:  pushq  %rbp
...(skip)
0x107e385e4:  leaq   0xa167(%rip), %rax        ; "Swift dynamic cast failed"
0x107e385eb:  movq   %rax, 0x6e9de(%rip)       ; gCRAnnotations + 8
0x107e385f2:  int3   
0x107e385f3:  nopw   %cs:(%rax,%rax)

if index == target.objectAtIndex(targetIndex-1) as Int { 
// target.objectAtIndex(0) = 2 -> but type is not integer

NSString *cutFinal = xxx;
[mutableArray addObject: cutFinal];

NSString *cutFinal = xxx;
NSNumber *add = [NSNumber numberWithInteger:[cutFinal intValue]];
[mutableArray addObject: add];

 var target = arrayTest.getArray() as [Int]


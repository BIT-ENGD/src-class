DBEmployess
name
fatal error: Can't unwrap Optional.None

#import <Foundation/Foundation.h>
#import <CoreData/CoreData.h>

@class DBProjects;

@interface DBEmployess : NSManagedObject

@property (nonatomic, retain) NSString * name;
@property (nonatomic, retain) NSString * designation;
@property (nonatomic, retain) NSNumber * age;
@property (nonatomic, retain) DBProjects *projects;

@end

#import "DBEmployess.h"
#import "DBProjects.h"


@implementation DBEmployess

@dynamic name;
@dynamic designation;
@dynamic age;
@dynamic projects;

@end

#import "MBProgressHUD.h"
#import "DBEmployess.h"

func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
    var cell : UITableViewCell? = tableView.dequeueReusableCellWithIdentifier("Cell") as? UITableViewCell
    if(cell == nil) {
        cell = UITableViewCell(style: UITableViewCellStyle.Default, reuseIdentifier: "Cell")
    }

    let employee : DBEmployess? = self.employessArray.objectAtIndex(indexPath.row) as? DBEmployess

    if(employee != nil) {
        cell!.textLabel.text = employee!.valueForKey("name").description
    }

    return cell!
}

employee
(DBEmployess?) employee = Some {
  Some = 0x0000000111702670 {
    CoreData.NSManagedObject = {
      ObjectiveC.NSObject = {}
    }
  }

NSManagedObject
UITextField
func addNewEmployee() {
    let delegate = UIApplication.sharedApplication().delegate as AppDelegate
    let context = delegate.managedObjectContext
    let newManagedObject = NSEntityDescription.insertNewObjectForEntityForName("DBEmployess", inManagedObjectContext: context) as NSManagedObject
    newManagedObject.setValue(self.txtName.text, forKey: "name")
    newManagedObject.setValue(self.txtDesignation.text, forKey: "designation")
    newManagedObject.setValue(self.txtAge.text, forKey: "age")

    // Save the context.
    var error: NSError? = nil
    if !context.save(&error) {
        var alert = UIAlertController(title: "Error", message: "Could not save employee \(error!.localizedDescription)", preferredStyle: UIAlertControllerStyle.Alert)
        alert.addAction(UIAlertAction(title: "Ok", style: UIAlertActionStyle.Default, handler: nil))
        self.presentViewController(alert, animated: true, completion: nil)

    } else {
        var alert = UIAlertController(title: "Saved", message: "Employee saved successfully", preferredStyle: UIAlertControllerStyle.Alert)
        alert.addAction(UIAlertAction(title: "Ok", style: UIAlertActionStyle.Default, handler: nil))
        self.presentViewController(alert, animated: true, completion: nil)
    }
}


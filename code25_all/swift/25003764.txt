override func viewDidLoad() {
    super.viewDidLoad()
    // Do any additional setup after loading the view, typically from a nib.

    resetButtonNav.enabled = false

    self.navigationController.navigationBar.barTintColor = UIColor.newBlueColor()
    self.tabBarController.tabBar.selectedImageTintColor = UIColor.newBlueColor()
    UINavigationBar.appearance().barTintColor = UIColor.newBlueColor()
    UINavigationBar.appearance().tintColor = UIColor.whiteColor()

    textField.addTarget(self, action: "textFieldDidChange:", forControlEvents: UIControlEvents.EditingChanged)
    self.view.addSubview(textField)

    currencyFormatter.numberStyle = NSNumberFormatterStyle.CurrencyStyle
    currencyFormatter.currencyCode = NSLocale.currentLocale().displayNameForKey(NSLocaleCurrencySymbol, value: NSLocaleCurrencyCode)
}

func textFieldDidChange(textField: UITextField) {
    var text = textField.text.stringByReplacingOccurrencesOfString(currencyFormatter.currencySymbol, withString: "").stringByReplacingOccurrencesOfString(currencyFormatter.groupingSeparator, withString: "").stringByReplacingOccurrencesOfString(currencyFormatter.decimalSeparator, withString: "")
    textField.text = currencyFormatter.stringFromNumber((text as NSString).doubleValue / 100.0)
}

@IBAction func enterBudgetButton(sender : AnyObject) {
    finalUserBudget = textField.text
    budgetName = budgetNameText.text

    var currencyFormatterTest:NSNumberFormatter
    currencyFormatterTest.formatterBehavior = NSNumberFormatterBehavior.Behavior10_4
    currencyFormatterTest.generatesDecimalNumbers = true
    currencyFormatterTest.numberStyle = NSNumberFormatterStyle.CurrencyStyle

    var finalUserBudgetFormatted: NSDecimalNumber = currencyFormatter.numberFromString(finalUserBudget)
    }


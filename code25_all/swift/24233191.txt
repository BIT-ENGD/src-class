 [self.motionManager
     startAccelerometerUpdatesToQueue:[[NSOperationQueue alloc] init]
     withHandler:^(CMAccelerometerData *data, NSError *error)
     {

         dispatch_async(dispatch_get_main_queue(),
                        ^{

                            float xx = data.acceleration.x;
                            float yy = -data.acceleration.y;
                            float angle = atan2(yy, xx);

                            self.dropitBehavior.gravity.angle = angle;
                         });
     }
 ];

self.motionManager.startAccelerometerUpdatesToQueue(NSOperationQueue(), withHandler: {
            (data: CMAccelerometerData(), error: NSError()) -> Void = {
                dispatch_async(dispatch_get_main_queue()) {
                    var xx = data.acceleration.x
                    var yy = -data.acceleration.y
                    var angle = atan2(yy, xx)

                    self.dropitBehavior.gravity.angle = angle
                }
            }
  })

self.motionManager.startAccelerometerUpdatesToQueue(NSOperationQueue(), withHandler: {
            (data: CMAccelerometerData(), error: NSError()) {
                dispatch_async(dispatch_get_main_queue()) {
                    var xx = data.acceleration.x
                    var yy = -data.acceleration.y
                    var angle = atan2(yy, xx)

                    self.dropitBehavior.gravity.angle = angle
                }
            }
 })


MsgPackMarshable
 //Protocol
 protocol MsgPackMarshable{

    func msgpack_marshal() -> Array<Byte>
}

//Implementation for some types
extension UInt8 : MsgPackMarshable{
    func msgpack_marshal() -> Array<Byte>{

        return [0xcc, self]
    }
}

extension UInt16 : MsgPackMarshable{
    func msgpack_marshal() -> Array<Byte>{

        let bigEndian: UInt16 = self.bigEndian
        return [0xcd, Byte((bigEndian & 0xFF00) >> 8), Byte(bigEndian & 0x00FF)]
    }
}

extension UInt32 : MsgPackMarshable{
    func msgpack_marshal() -> Array<Byte>{

        let bigEndian: UInt32 = self.bigEndian
        return [0xce, Byte((bigEndian & 0xFF000000) >> 24), Byte((bigEndian & 0xFF0000) >> 16), Byte((bigEndian & 0xFF00) >> 8), Byte(bigEndian & 0x00FF)]
    }
}

Array
MsgPackMarshable
extension Array: MsgPackMarshable{
    func msgpack_marshal() -> Array<Byte>{

        for item in self{

           //How to check type here?
        }
                    return []
    }
}

Array
Array<MsgPackMarshable>

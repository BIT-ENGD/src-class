import Foundation

class Connection: NSObject {
    var data: NSMutableData = NSMutableData()

    func login(username: String, password: String) {
        var url: NSURL = NSURL(string: "localhost/getusers.php?username=" + username + "&password=" + password)!
        var request: NSURLRequest = NSURLRequest(URL: url)
        var conn: NSURLConnection = NSURLConnection(request: request, delegate: self, startImmediately: true)!
    }

    func connection(didReceiveResponse: NSURLConnection!, didReceiveResponse response: NSURLResponse!) {
        println("didReceiveResponse")
    }

    func connection(connection: NSURLConnection!, didReceiveData conData: NSData!) {
        self.data.appendData(conData)
    }

    func connectionDidFinishLoading(connection: NSURLConnection!) {
        println(self.data)
    }

    deinit {
        println("deiniting")
    }
}

@IBAction func attemptLogin(sender: UIButton) {
        if(usernameTextField.text == "" || passwordTextField.text == "") {
            var alert = UIAlertController(title: "Error", message: "Invalid Credentials", preferredStyle: UIAlertControllerStyle.Alert)
            alert.addAction(UIAlertAction(title: "Close", style: UIAlertActionStyle.Default, handler: nil))
            self.presentViewController(alert, animated: true, completion: nil)

            var connection: Connection = Connection()
            connection.login(usernameTextField.text, password: passwordTextField.text)
        }
    }

error_reporting(E_ALL);
ini_set('display errors', 1);

$username = 'root';
$password = 'root';

try {
    $DBH = new PDO('mysql:host=localhost; dbname=login_test', $username, $password);
    $DBH->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

    $recievedUsername = $_GET['username'];
    $recievedPassword = $_GET['password'];

    $data = array($recievedUsername, $recievedPassword);

    $STH = $DBH->prepare("SELECT id, first_name, last_name FROM `users` WHERE `username` = ? AND `password` = ?");
    $STH->execute($data);

    $row = $STH->fetch(PDO::FETCH_ASSOC);
    echo json_encode($row);
} catch(PDOException $e) {
    echo $e->getMessage();
}


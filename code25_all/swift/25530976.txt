@IBOutlet weak var linesLeftCountLabel: UILabel!

override func viewDidLoad() {

      super.viewDidLoad()

      skView = SKView(frame: sceneView.frame)
      skView.multipleTouchEnabled = false

      //Create and configure the scene.
      scene = LogoRefactoryScene(size: skView.bounds.size)
      scene.scaleMode = .AspectFill
      skView.presentScene(scene)

      tapGesture = UITapGestureRecognizer(target: self, action: "eraseLine:")
      tapGesture.delegate = self
      view.addGestureRecognizer(tapGesture)

      view.addSubview(skView)
    }

  @IBAction func colorPickerOfColor(sender: UIButton) {

    var pickerName = ""

    switch sender.tag {

    case 0:
      pickerName = "green"

    case 1:
      pickerName = "red"

    case 2:
      pickerName = "blue"

    default:
      pickerName = "orange"
    }

    pickerName += "ColorPicker"
    colorPickerView.image = UIImage(named: pickerName)

    currentColorName = ColorSelection.fromRaw(sender.tag + 1)!.colorName

    let color = ColorSelection.fromRaw(sender.tag + 1)!.getSKColor()
    scene.lineColor = color
    linesLeftCountLabel.textColor = color
  }

  func lineHasBeenDrawn() {

    linesLeftCountLabel.text = "Any String"
  }


@IBAction func searchMap(sender: AnyObject) {

    self.navigationItem.rightBarButtonItem = nil
    var searchDispCont = UISearchDisplayController(searchBar: searchBar, contentsController: nil)
    self.navigationController?.navigationBar.addSubview(searchDispCont.searchBar)

    searchDispCont.searchBar.showsCancelButton = true
    searchDispCont.searchBar.tintColor = UIColor.lightGrayColor()
    searchDispCont.displaysSearchBarInNavigationBar = true
    searchDispCont.searchBar.becomeFirstResponder()
    searchDispCont.setActive(true, animated: true)
}

func searchBarCancelButtonClicked(searchBar: UISearchBar) {
    // Need to go back to original state
    searchBar.hidden = true

    var listBtn = UIBarButtonItem(title: "List", style: UIBarButtonItemStyle.Plain, target: self, action: "goToList:")
    self.navigationItem.setRightBarButtonItem(listBtn, animated: false)

    var searchBtn = UIBarButtonItem(barButtonSystemItem: .Search, target: self, action: "searchMap:")
    self.navigationItem.setLeftBarButtonItem(searchBtn, animated: false)
}

func searchBarSearchButtonClicked( searchBar: UISearchBar!)
{
    var listBtn = UIBarButtonItem(title: "List", style: UIBarButtonItemStyle.Plain, target: self, action: "goToList:")
    self.navigationItem.setRightBarButtonItem(listBtn, animated: false)

    var searchBtn = UIBarButtonItem(barButtonSystemItem: .Search, target: self, action: "searchMap:")
    self.navigationItem.setLeftBarButtonItem(searchBtn, animated: false)

    searchBar.resignFirstResponder()
    var found = false
    for bar in bars {
        var barName = bar.name.stringByReplacingOccurrencesOfString("\'", withString: "", options: NSStringCompareOptions.LiteralSearch, range: nil)
        var searchString = searchBar.text.stringByReplacingOccurrencesOfString("\'", withString: "", options: NSStringCompareOptions.LiteralSearch, range: nil)

        var test = bar as BarAnnotation
        if barName.rangeOfString(searchString) != nil || barName.lowercaseString.rangeOfString(searchString.lowercaseString) != nil {
            found = true
            var span = MKCoordinateSpanMake(0.005, 0.005)
            var region = MKCoordinateRegion(center: test.location, span: span)
            mapView.setRegion(region, animated: true)
            mapView.selectAnnotation(bar.annotation, animated: true)
        }
    }

    if found {
        // Need to go back to original state

        searchBar.hidden = true
        searchBar.text = ""
    }
    else{
        let alert = UIAlertView()
        alert.title = "Not Found"
        alert.message = "Not found. Please try your search again."
        alert.addButtonWithTitle("OK")
        alert.show()

        searchBar.text = ""
    }
}

var searchBar = UISearchBar(frame: CGRectMake(0, 0, 300, 20)) as UISearchBar


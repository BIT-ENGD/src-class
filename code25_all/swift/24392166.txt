import UIKit
import CoreData

@objc(AddrBook)
class AddrBook: NSManagedObject {

@NSManaged var lastname:String
@NSManaged var firstname:String
}

import UIKit
import CoreData

class DetailViewController: UIViewController {

@IBOutlet var lastNameField : UITextField = nil
@IBOutlet var firstNameField : UITextField = nil

init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: NSBundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
}

init(coder aDecoder: NSCoder!) {
    super.init(coder: aDecoder)
}

override func viewDidLoad() {
    super.viewDidLoad()
}

override func didReceiveMemoryWarning() {
    super.didReceiveMemoryWarning()
}

@IBAction func saveButtonPressed(sender : AnyObject) {

    let appDelegate:AppDelegate = (UIApplication.sharedApplication().delegate as AppDelegate)
    let context:NSManagedObjectContext = appDelegate.managedObjectContext
    let projectEntity = NSEntityDescription.entityForName("Person", inManagedObjectContext: context)
    var newPerson = AddrBook(entity: projectEntity, insertIntoManagedObjectContext: context)
    newPerson.lastname = lastNameField.text
    newPerson.firstname = firstNameField.text
    context.save(nil)
    self.dismissViewControllerAnimated(true, completion: nil)
}
}

import UIKit
import CoreData

class MainTableViewController: UITableViewController {

init(style: UITableViewStyle) {
    super.init(style: style)
}

init(coder aDecoder: NSCoder!) {
    super.init(coder: aDecoder)
}

override func viewDidLoad() {
    super.viewDidLoad()

    let request = NSFetchRequest(entityName: "Person")
    request.returnsObjectsAsFaults = false
    let appDelegate:AppDelegate = (UIApplication.sharedApplication().delegate as AppDelegate)
    let context:NSManagedObjectContext = appDelegate.managedObjectContext
    var results:NSArray = context.executeFetchRequest(request, error: nil)
    for currentPerson in results as AddrBook[] {
        NSLog("\(currentPerson.lastname)")
        NSLog("\(currentPerson.firstname)")
    }
}

override func didReceiveMemoryWarning() {
    super.didReceiveMemoryWarning()
}

override func numberOfSectionsInTableView(tableView: UITableView?) -> Int {
    return 1
}

override func tableView(tableView: UITableView?, numberOfRowsInSection section: Int) -> Int {
    return 0
}
}

for currentPerson in results as AddrBook[] {

override func viewDidLoad() {
    super.viewDidLoad()

    let request = NSFetchRequest(entityName: "Person")
    request.returnsObjectsAsFaults = false
    let appDelegate:AppDelegate = (UIApplication.sharedApplication().delegate as AppDelegate)
    let context:NSManagedObjectContext = appDelegate.managedObjectContext
    var results : AddrBook[]? = context.executeFetchRequest(request, error: nil) as? AddrBook[]
    NSLog("\(results)")
    if let array = results   // check for nil and unwrap
    {
        for currentPerson in array as AddrBook[] {
            NSLog("\(currentPerson.lastname)")
            NSLog("\(currentPerson.firstname)")
        }
    }

    // var results:NSArray = context.executeFetchRequest(request, error: nil)
    /*for currentPerson in results as AddrBook[] {
        NSLog("\(currentPerson.lastname)")
        NSLog("\(currentPerson.firstname)")
    }*/

}


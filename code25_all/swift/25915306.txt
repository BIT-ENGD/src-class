protocol Fetcher {

    func fetchWithSuccess<T>(success doSuccess : (T) -> (), failure doFailure : ((NSError?) -> ()))

}

class SimpleFetcher<T> : Fetcher {

    let thing : T

    init(thing : T) {
        self.thing = thing
    }

    func fetchWithSuccess<T>(success doSuccess : (T) -> (), failure doFailure : ((NSError?) -> ())) {
        doSuccess(self.thing) // Fails
    }
}

'T' is not convertible with 'T'
doSuccess(self.thing)
class Fetcher<T> {

    func fetchWithSuccess(success doSuccess : (T) -> (), failure doFailure : ((NSError?) -> ())) {}

}

class SimpleFetcher<T> : Fetcher<T> {

    let thing : T

    init(thing : T) {
        self.thing = thing
    }

    override func fetchWithSuccess(success doSuccess : (T) -> (), failure doFailure : ((NSError?) -> ())) {
        doSuccess(self.thing)
    }
}


class ViewControllerUpdate: UIViewController, NSURLSessionDelegate, NSURLSessionDownloadDelegate, saveUpdate {

[....]

func updateStatus(status: String, progress: Float?) {
    if let percentProgress = progress? {
        self.progressView.progress = 0.5
    }
    //println(progress) - NOTE THIS IS CORRECTLY POPULATED WITH THE APPROPRIATE VALUE
}

protocol saveUpdate {
    func updateStatus(status:String, progress:Float?)
}

let classtoUpdate: saveUpdate = ViewControllerUpdate()

func saveTSVtoSQL(fromFile: NSURL) -> Int {

    //Load up the information into a Dictionary (tsv)
    //let tsvURL = NSURL(fileURLWithPath: NSBundle.mainBundle().pathForResource(fromFileName, ofType: fromFileExtension)!)
    let tsvURL: NSURL = fromFile
    let tab = NSCharacterSet(charactersInString: "\t")
    let tsv = CSV(contentsOfURL: tsvURL, separator: tab)
    //let defResult: AnyObject = tsv.rows[0]["Name"]!

    //let tryagain:String = AnyObjecttoString(tsv.rows[1]["Name"]!)
    //load the data into the SQLite database...
    dispatch_async(dispatch_get_main_queue()) {
    for a in 0..<tsv.rows.count {
        self.SQLsaveLine(self.AnyObjecttoString(tsv.rows[a]["Name"]!),
            name_l: "",
            desc: self.AnyObjecttoString(tsv.rows[a]["1"]!),
            jobTitle: self.AnyObjecttoString(tsv.rows[a]["2"]!),
            extn: self.AnyObjecttoString(tsv.rows[a]["3"]!)
        // update status
        var percentComplete: Float = (Float(a) / Float(tsv.rows.count))
        self.classtoUpdate.self.updateStatus("SQLload", progress: percentComplete)
        }
    }
    return 0
}


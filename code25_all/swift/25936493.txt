  x = Float(indexPath.row) * 375.0 // 375 is the width of 1 cell
  var point = CGPointMake(CGFloat(x), 0)
  println ("***x=")
  println (x)
  detailController.collectionView?.setContentOffset(point , animated: false)
where detailController is UICollectionViewController.

override func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCellWithReuseIdentifier(reuseIdentifier, forIndexPath: indexPath) as DetailViewCell

        // Configure the cell
        println("DetailViewController in cellForItemAtIndexPath()")
        println(indexPath.row)
     cell.myitem = allItems[indexPath.row]
return cell }

class MyViewCollectionViewController: UICollectionViewController {

    override func viewDidAppear(animated: Bool) {
            println("MyViewCollectionViewController viewDidAppear")

            println("items.count")
            println(items?.count)  // print out 26

            println(index) // print out 4

            var newIndex = NSIndexPath(index: self.index)
            self.collectionView?.scrollToItemAtIndexPath(newIndex, atScrollPosition: UICollectionViewScrollPosition.Left, animated: false)
        }
}


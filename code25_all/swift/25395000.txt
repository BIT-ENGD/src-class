Sender
Receiver
Sender
Receiver
Receiver
Sender
ShareMessage(message: NSString)
var recieveMessage
Sender
import UIKit

// Protocol to send message between classes.
protocol SendersMessageDelegate{

    func shareMessage(message: NSString)
}

// Class that sends the message
class Sender{

    // Create variable to hold message
    var sendersMessage: NSString = NSString()

    var delegate: SendersMessageDelegate? = Receiver()

    // Grab the message when initialized and send to delegate
    init(sendersMessage: NSString){

        self.sendersMessage = sendersMessage
        delegate?.shareMessage(sendersMessage)
    }          

}

//Class receiving the message
class Receiver: SendersMessageDelegate{

    func shareMessage(message: NSString) {

        println(message)

    }
}

//Create variable instance of sender and send message in initializer.
var sendMessage: Sender = Sender(sendersMessage: "Hello Receiver.")

var receiveMessage: Receiver = Receiver()
receiveMessage.shareMessage(message: NSString) <---- //Can't retrieve message as need new argument for function call.

message
receiveMessage.shareMessage(message: NSString)


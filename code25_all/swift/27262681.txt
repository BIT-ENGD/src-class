protocol MyProtocol {
    func genericMethod<T:MyProtocol>(param:T) -> ()
}

class MyBaseClass : MyProtocol {
    func genericMethod<T where T:MyProtocol>(param:T) -> () {
        println("Performing generic method for type \(T.self)")
    }
}

class MySubClass : MyBaseClass {
    ...
}

Comparable
class MyBaseClass : MyProtocol {
    func genericMethod<T where T:MyProtocol, T:Comparable>(param:T) -> () {
        println("Performing generic method for type \(T.self)")
    }
}

T
MyClass
genericMethod
MyProtocol
MyBaseClass
MyProtocol
Comparable
MyProtocol

import Foundation

class C: NSObject, NSCoding {
    var n: String = ""

    override init() {
        super.init()
        n = "instance of class C"
    }

    convenience init(_ name: String) {
        self.init()
        n = name
    }

    required init(coder: NSCoder) {
        // self.init()
        // super.init()
        // super.init(coder)
        n = coder.decodeObjectForKey("name") as String
    }

    func encodeWithCoder(coder: NSCoder) {
        coder.encodeObject(n, forKey:"name")
    }

    override var description: String {
        get { return "C instance: \(n)" }
    }
}

let c = C("Tom")
println(c)
if NSKeyedArchiver.archiveRootObject(c, toFile: "demo") {
    println("OK")
}
let c2: C = NSKeyedUnarchiver.unarchiveObjectWithFile("demo") as C

xcrun swift coder.swift

NSKeyedUnarchiver.unarchiveObjectWithFile
> xcrun swift coder.swift
C instance: Tom
OK
2014-09-06 10:45:11.925 swift[483:100b] *** Terminating app due to uncaught exception
'NSInvalidUnarchiveOperationException', reason: '*** -[NSKeyedUnarchiver decodeObjectForKey:]: cannot decode object of class (coder.C)'


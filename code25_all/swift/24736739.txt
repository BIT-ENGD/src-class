var currentUser: User? {
    if !_currentUser {
        var error: NSError? = nil
        let request = NSFetchRequest(entityName: "User")
        let recordCount = self.managedObjectContext.countForFetchRequest(request, error:&error)
        NSLog("user records found: \(recordCount)")
        var result = self.managedObjectContext.executeFetchRequest(request, error:&error)
        for resultItem : AnyObject in result {
            _currentUser = resultItem as? User
            if _currentUser {
                NSLog("Fetched User for \(_currentUser!.firstname) \(_currentUser!.lastname)")
            }
        }
    }
    return _currentUser;
}

var managedObjectContext: NSManagedObjectContext {
    return RKObjectManager.sharedManager().managedObjectStore.mainQueueManagedObjectContext
}

        for resultItem : AnyObject in result {
            _currentUser = resultItem as User
            NSLog("Fetched User for \(_currentUser.firstname) \(_currentUser.lastname)")
        }

import Foundation
import CoreData

class User: NSManagedObject {
    @NSManaged
    var id: Int32
    @NSManaged
    var createdAt: NSDate
    @NSManaged
    var udpatedAt: NSDate
    @NSManaged
    var username: String
    @NSManaged
    var email: String
    @NSManaged
    var firstname: String
    @NSManaged
    var lastname: String
    @NSManaged
    var organization: String
    @NSManaged
    var tokens: NSArray
}


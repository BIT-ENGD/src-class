class ViewController: UITableViewController, UITableViewDataSource, UITableViewDelegate {

var continentData = NSDictionary()

override func viewDidLoad() {
    let path = NSBundle.mainBundle().pathForResource("continents", ofType: "plist")
    continentData = NSDictionary(contentsOfFile: path!)
    super.viewDidLoad()
}

override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
    return continentData.count
}

override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
    let cell = tableView.dequeueReusableCellWithIdentifier("CellIdentifier", forIndexPath: indexPath) as UITableViewCell
    let continents = continentData.allKeys as [String]
    cell.textLabel?.text=continents[indexPath.row]
    return cell
}

override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
    if segue.identifier=="countrysegue"{
        var countryVC:DetailViewController=segue.destinationViewController as DetailViewController
        let indexPath:NSIndexPath=tableView.indexPathForSelectedRow()!
        var continents = continentData.allKeys as [String]
        countryVC.title=continents[indexPath.row]
        countryVC.countryList=continentData.objectForKey(countryVC.title!) as [String]
    }
}

class DetailViewController: UITableViewController, UITableViewDataSource, UITableViewDelegate  {

var countryList = [String]()

override func viewWillAppear(animated: Bool) {
    //tableView.reloadData()
}

override func viewDidLoad() {
    super.viewDidLoad()
    self.navigationItem.rightBarButtonItem = self.editButtonItem()
}

override func numberOfSectionsInTableView(tableView: UITableView) -> Int {
    return 1
}

override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
    return countryList.count
}


override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
    let cell = tableView.dequeueReusableCellWithIdentifier("CellIdentifier", forIndexPath: indexPath) as UITableViewCell
    cell.textLabel?.text=countryList[indexPath.row]
    return cell
}


override func tableView(tableView: UITableView, canEditRowAtIndexPath indexPath: NSIndexPath) -> Bool {
    return true
}

override func tableView(tableView: UITableView, commitEditingStyle editingStyle: UITableViewCellEditingStyle, forRowAtIndexPath indexPath: NSIndexPath) {
    if editingStyle == .Delete {
        countryList.removeAtIndex(indexPath.row)
        tableView.deleteRowsAtIndexPaths([indexPath], withRowAnimation: .Fade)
    } else if editingStyle == .Insert {
//not implemented
}
}

override func tableView(tableView: UITableView, moveRowAtIndexPath fromIndexPath: NSIndexPath, toIndexPath: NSIndexPath) {
    let fromRow=fromIndexPath.row
    let toRow=toIndexPath.row
    let moveCountry=countryList[fromRow]
    countryList.removeAtIndex(fromRow)
    countryList.insert(moveCountry, atIndex: toRow)
}

override func tableView(tableView: UITableView, canMoveRowAtIndexPath indexPath: NSIndexPath) -> Bool {
    return true
}

class Continents {
    var continentData = NSMutableDictionary()
    var continents = [String]()
    var countries = [String]()
}

var continentList=Continents()

var continentCountries = Continents()

override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
        if segue.identifier=="countrysegue"{
            var countryVC:DetailViewController=segue.destinationViewController as DetailViewController
            let indexPath:NSIndexPath=tableView.indexPathForSelectedRow()!
            countryVC.title=continentList.continents[indexPath.row]
            countryVC.continentCountries.countries=continentList.continentData.objectForKey(countryVC.title!) as [String]
        }
    }

override func tableView(tableView: UITableView, commitEditingStyle editingStyle: UITableViewCellEditingStyle, forRowAtIndexPath indexPath: NSIndexPath) {
        NSLog("\(continentCountries.countries)")
        if editingStyle == .Delete {
            continentCountries.countries.removeAtIndex(indexPath.row)
            tableView.deleteRowsAtIndexPaths([indexPath], withRowAnimation: .Fade)
        }} 

    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
    if segue.identifier=="countrysegue"{
        var countryVC=segue.destinationViewController as DetailViewController
        let indexPath:NSIndexPath=tableView.indexPathForSelectedRow()!
        countryVC.title=continentList.continents[indexPath.row]
        countryVC.continentCountries=continentList
        countryVC.selectedContinent=indexPath.row
    }

    override func viewWillAppear(animated: Bool) {
    continentCountries.continents = continentCountries.continentData.allKeys as [String]
    let chosenContinent = continentCountries.continents[selectedContinent]
    continentCountries.countries = continentCountries.continentData.objectForKey(chosenContinent) as [String]
    tableView.reloadData()
}

    override func tableView(tableView: UITableView, commitEditingStyle editingStyle: UITableViewCellEditingStyle, forRowAtIndexPath indexPath: NSIndexPath) {
    if editingStyle == .Delete {
        continentCountries.countries.removeAtIndex(indexPath.row)
        tableView.deleteRowsAtIndexPaths([indexPath], withRowAnimation: .Fade)
    } 
}


UIScrollView
UIPageControl
UIView
Slide
UIImageViews
UILabel
UIScrollView
viewDidLayoutSubviews()
override func viewDidLayoutSubviews() {
    super.viewDidLayoutSubviews()

    scrollView.setTranslatesAutoresizingMaskIntoConstraints(false)
    var pSlide: Slide?
    for var i = 0; i < 7; i++ {
        var slide = Slide(frame: self.view.bounds, imageName: "slide-\(i+1)-bg", text: NSLocalizedString("slides_\(i+1)", comment: ""))
        slide.setTranslatesAutoresizingMaskIntoConstraints(false)
        scrollView.addSubview(slide)


        var dict: [NSObject : AnyObject] = ["currentSlide" : slide]
        if let previousSlide = pSlide {
            dict["previousSlide"] = previousSlide
            let constraintsHorizontal = NSLayoutConstraint.constraintsWithVisualFormat("H:[previousSlide][currentSlide]", options: nil, metrics: nil, views: dict)
            scrollView.addConstraints(constraintsHorizontal)

            let constraintsVertical = NSLayoutConstraint.constraintsWithVisualFormat("V:|[currentSlide]|", options: nil, metrics: nil, views: dict)
            scrollView.addConstraints(constraintsVertical)
        } else {
            let constraintsVertical = NSLayoutConstraint.constraintsWithVisualFormat("V:|[currentSlide]|", options: nil, metrics: nil, views: dict)
            scrollView.addConstraints(constraintsVertical)

            let constraintsLeft = NSLayoutConstraint.constraintsWithVisualFormat("H:|[currentSlide]", options: nil, metrics: nil, views: dict)
            scrollView.addConstraints(constraintsLeft)
        }

        if i == 6 {
            let constraintsRight = NSLayoutConstraint.constraintsWithVisualFormat("H:[currentSlide]|", options: nil, metrics: nil, views: dict)
            scrollView.addConstraints(constraintsRight)
        }

        pSlide = slide
    }

    pageControl.numberOfPages = numberOfSlides
    view.layoutSubviews()
}

Slide
init()
Slide
init(frame: CGRect, imageName: String, text: String) {
    super.init(frame: frame)
    NSBundle.mainBundle().loadNibNamed("Slide", owner: self, options: nil)
    self.addSubview(self.view)

    self.view.frame = frame
    self.layoutIfNeeded()

    println("Frame is \(frame); view.frame is \(self.view.frame)")

    backgroundImage.image = UIImage(named: imageName)
    textLabel.text = text

}

self.view.frame = frame
self.layoutIfNeeded()

viewDidAppear(animated:)
init()
Slide

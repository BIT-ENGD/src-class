NSURLSession
func URLSession(session: NSURLSession, downloadTask: NSURLSessionDownloadTask, didWriteData bytesWritten: Int64, totalBytesWritten: Int64!, totalBytesExpectedToWrite: Int64){

    println("delegate called")
    if (totalBytesExpectedToWrite == NSURLSessionTransferSizeUnknown) {
        println("Unknown transfer size")
    } else {
        let index: Int = self.getFileDownloadInfoIndexWithTaskIdentifier(downloadTask.taskIdentifier)
        let fdi: FileDownloadInfo = self.arrFileDownloadData.objectAtIndex(index) as FileDownloadInfo
        NSOperationQueue().addOperationWithBlock({

            //Calculate the progress
            fdi.downloadProgress = Double(totalBytesWritten) / Double(totalBytesExpectedToWrite)

            // Update the progressview bar
            self.progressView.progress = Float(fdi.downloadProgress)

        })

    }
}

-(void)URLSession:(NSURLSession *)session downloadTask:(NSURLSessionDownloadTask *)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite{

    NSLog(@"Delegate called");
    if (totalBytesExpectedToWrite == NSURLSessionTransferSizeUnknown) {
        NSLog(@"Unknown transfer size");
    }
    else{
        // Locate the FileDownloadInfo object among all based on the taskIdentifier property of the task.
        int index = [self getFileDownloadInfoIndexWithTaskIdentifier:downloadTask.taskIdentifier];
        FileDownloadInfo *fdi = [self.arrFileDownloadData objectAtIndex:index];

    [.............]
        }];
    }
}

didWriteData
bytesWritten
-(void)URLSession:(NSURLSession *)session
downloadTask
didWriteData

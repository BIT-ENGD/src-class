struct
struct Version {
    var major: Int = 0
    var minor: Int = 0
    var revision: Int = 0

    init(string: String) {
        let components = string.componentsSeparatedByString(".")
        if 1...3 ~= components.count {
            var targets = [&major, &minor, &revision]
            for index in 0...2 {
                var scanner = NSScanner(string: components[index])
                if (!scanner.scanInteger(target[index])) {
                    major = 0
                    minor = 0
                    revision = 0
                    return                    
                }
            }
        }
    }    
}

Type '[inout Int]' of variable is not materializable

init(string: String) {
    let components = string.componentsSeparatedByString(".")
    if 1...3 ~= components.count {
        var values = [0, 0, 0]
        for index in 0..<components.count {
            var scanner = NSScanner(string: components[index])
            if (!scanner.scanInteger(&values[index])) {
                return
            }
        }
        major = values[0]
        minor = values[1]
        revision = values[2]
    }
}


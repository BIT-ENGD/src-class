FormDataSource
class FormDataSource{

var Sections: Array<SectionDataProvider>?;
var Rows:Array<Array<RowDataProvider>>!;
var formData: Dictionary<String, Any?>!;

init(sections:Array<SectionDataProvider>?, withRows:Array<Array<RowDataProvider>>){
    self.Sections = sections;
    self.formData = [String:Any?]();
    self.Rows = withRows;

    for rowArray in self.Rows
    {
        for row in rowArray
        {
            self.formData.updateValue(row.actualData, forKey: row.keyForRowData);
        }
    }
}
}

UITableViewController
FormViewController
class FormViewController:UITableViewController{

var formDataSource:FormDataSource!;

init(with  DataSource :FormDataSource) {

    self.formDataSource = DataSource;

    println("count: \(self.formDataSource.Rows.count)"); //prints 3 correctly
    super.init(style: UITableViewStyle.Plain);
}

override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: NSBundle?) {

    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil);
}

required init(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder);
}

override func viewDidLoad() {
    super.viewDidLoad();

    println("count: \(self.formDataSource.Rows.count)"); //crash at this line

}
}

FormViewController
viewDidLoad
"fatal error: unexpectedly found nil while unwrapping an Optional value"
var dataSource = FormDataSource(sections: nil, withRows:rows);

    let joinView:FormViewController = FormViewController(with: dataSource);
    self.navigationController?.pushViewController(joinView, animated: true);


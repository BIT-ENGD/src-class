class RegistrationViewController: UIViewController, UIPickerViewDelegate, UITextFieldDelegate {

    @IBOutlet var getGender: UIPickerView! = UIPickerView()

    @IBOutlet var genderTextField: UITextField! = nil

    @IBOutlet var passTextField: UITextField!

    @IBOutlet var repassTextField: UITextField!



    let gender = ["Male", "Female", "Other"]

    override func viewDidLoad() {
        super.viewDidLoad()

        genderTextField.delegate = self

        passTextField.secureTextEntry = true
        repassTextField.secureTextEntry = true

        getGender.hidden = true


        if(genderTextField.becomeFirstResponder()){

        }

        // Do any additional setup after loading the view.
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    // returns the number of 'columns' to display.
    func numberOfComponentsInPickerView(pickerView: UIPickerView!) -> Int{
        return 1
    }

    // returns the # of rows in each component..
    func pickerView(pickerView: UIPickerView!, numberOfRowsInComponent component: Int) -> Int{
        return gender.count
    }

    func pickerView(pickerView: UIPickerView!, titleForRow row: Int, forComponent component: Int) -> String! {
        return gender[row]
    }

    func pickerView(pickerView: UIPickerView!, didSelectRow row: Int, inComponent component: Int)
    {
        genderTextField.text = "\(gender[row])"

    }


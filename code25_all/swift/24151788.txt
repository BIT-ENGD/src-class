modalTransitionStyle = UIModalTransitionStyleFlipHorizontal
import UIKit

@UIApplicationMain
class AppDelegate: UIResponder, UIApplicationDelegate {
    var window: UIWindow?

    func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: NSDictionary?) -> Bool {
        self.window = UIWindow(frame: UIScreen.mainScreen().bounds)
        self.window!.backgroundColor = UIColor.whiteColor()
        self.window!.makeKeyAndVisible()

        let vc = TestVC()

        self.window!.rootViewController = UINavigationController(rootViewController: vc)

        return true
    }
}

class PresentedVC: UIViewController {
    init() {
        super.init(nibName: nil, bundle: nil)
        toolbarItems = [UIBarButtonItem(title: "Foo", style: .Plain, target: nil, action: nil)]
        modalTransitionStyle = .FlipHorizontal
    }

    override func viewWillAppear(animated: Bool) {
        super.viewWillAppear(animated)

        self.navigationController!.setToolbarHidden(false, animated: false)
    }
}

class TestVC: UITableViewController {
    override func tableView(tableView: UITableView!, numberOfRowsInSection section: Int) -> Int {
        return 1
    }

    override func tableView(tableView: UITableView!, cellForRowAtIndexPath indexPath: NSIndexPath!) -> UITableViewCell! {
        let cell = UITableViewCell(style: .Default, reuseIdentifier: "noId")
        cell.textLabel.text = "Foo"
        return cell
    }

    override func tableView(tableView: UITableView!, didSelectRowAtIndexPath indexPath: NSIndexPath!) {
        let vc = PresentedVC()
        let nvc = UINavigationController(rootViewController: vc)

        self.presentViewController(nvc, animated: true, completion: nil)
    }
}


Bottle
class Bottle: NSObject, NSCoding {

    let id: String!
    let title: String!
    let year: Int!
    let icon: UIImage!


    init(id: String, title: String, year: Int, icon: UIImage) {
        self.id = id
        self.title = title
        self.year = year
        self.icon = icon
    }

    override init(){}

    var bottlesArray = NSMutableArray()

    // code inspired from http://stackoverflow.com/questions/24238868/swift-nscoding-not-working

    required init(coder aDecoder: NSCoder) {
        self.bottlesArray = aDecoder.decodeObjectForKey("bottleArray") as NSMutableArray
    }

    func encodeWithCoder(aCoder: NSCoder) {
        aCoder.encodeObject(bottlesArray, forKey: "bottleArray")
    }

    func add(bottle: Bottle) {
        self.bottlesArray.addObject(bottle)
    }

    func save() {
        let data = NSKeyedArchiver.archivedDataWithRootObject(self)
        NSUserDefaults.standardUserDefaults().setObject(data, forKey: "bottleList")
    }

    class func loadSaved() -> Bottle? {
        if let data = NSUserDefaults.standardUserDefaults().objectForKey("bottleList") as? NSData {
            return NSKeyedUnarchiver.unarchiveObjectWithData(data) as? Bottle
        }
        return nil
    }

    func saveBottle(bottle: Bottle) {
        let bottleList = Bottle.loadSaved()
        bottleList?.add(bottle)
        bottleList?.save()
        let bottleList2 = Bottle.loadSaved()
        println(bottleList2?.bottlesArray.count)
        println(bottleList2?.bottlesArray[0].title)
    }
}

println
3
nil
String
Bottle
init
init(id: String, title: String, year: Int, icon: UIImage)
var bottleLoaded = Bottle.loadSaved()!
var bottleToSave = Bottle(id: bottleID, title: bottleName, year: bottleYear, icon: UIImage(data:bottleIconData)!)
bottleLoaded.saveBottle(bottleToSave)    

let bottleList = Bottle()
bottleList.save()    

NSUserDefaults.standardUserDefaults().synchronize()

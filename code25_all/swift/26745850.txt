var alertMgr: alertManager = alertManager()
class alertManager: NSObject {

func showAlert(titleText:String?, confirmText:String, cancelText:String, msgText:String, showCancel:Bool, showConfirm:Bool, style:UIAlertControllerStyle, viewController:UIViewController) -> Int? {


    let alertController = UIAlertController(title: titleText, message: msgText, preferredStyle: style)
    var myInt:Int!

    let actionLeft = UIAlertAction(title:cancelText, style: .Cancel) { action in

        println("0") //works when user presses cancel button
        myInt = 0
    }

    let actionRight = UIAlertAction(title:confirmText, style: .Default) { action in

        println("1") //works when user presses confirm button
        myInt = 1
    }

    alertController.addAction(actionLeft)
    alertController.addAction(actionRight)

    viewController.presentViewController(alertController, animated: true, completion: nil)

    return myInt //does not return when button is pressed???
}  
}

        let titleTxt:String = "title txt goes here."
        let confirmTxt:String = "confirm"
        let cancelTxt:String = "cancel"
        let msgTxt:String = "some msg goes here."
        let showCancel:Bool = true
        let showConfirm:Bool = true
        let style:UIAlertControllerStyle = .ActionSheet

        let alert = alertMgr.showAlert(titleTxt, confirmText: confirmTxt, cancelText: cancelTxt, msgText: msgTxt, showCancel: showCancel, showConfirm: showConfirm, style:style, viewController: self)

        switch alert as Int! {
            case nil:
                println("nil value")
            case 0:
                println("cancel pressed")  //never gets fired. when button is pressed
            case 1:
                println("confirm pressed") //never gets fired. when button is pressed
            default:
                break
        }


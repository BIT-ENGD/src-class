override func didMoveToView(view: SKView) {

    bounds = UIScreen.mainScreen().bounds
    height = bounds.size.height

    initFruit()
    fallTimer = NSTimer.scheduledTimerWithTimeInterval(0.2, target: self, selector: "fall_timer", userInfo: nil, repeats: true)
}

func initFruit(){

    fruit1 = SKSpriteNode(imageNamed: "Fruit_Apple")
    fruit2 = SKSpriteNode(imageNamed: "Fruit_Banana")

    fruit1.xScale = 2.5
    fruit1.yScale = 2.5
    fruit2.xScale = 2.5
    fruit2.yScale = 2.5

    //position fruit off the top of the screen, at separate x coordinates
    fruit1.position = CGPoint(x: (size.width / 3), y: height + fruit1.frame.height)
    fruit2.position = CGPoint(x: (size.width / 3) * 2, y: height + fruit1.frame.height)

    addChild(fruit1)
    addChild(fruit2)
}

func fall_timer() {
    var fallDuration: NSTimeInterval
    var moveActionDown: SKAction

    //If fruit are at the bottom, move them back up to the top
    if fruit1.position.y == -100 {
        fruit1.position.y = CGFloat(height + fruit1.frame.height)
        fruit2.position.y = CGFloat(height + fruit1.frame.height)
    }
    if fruit3.position.y == -100 {
        fruit3.position.y = CGFloat(height + fruit1.frame.height)
        fruit4.position.y = CGFloat(height + fruit1.frame.height)
    }

    //Check if fruit are at top, ready to fall again
    if fruit1.position.y == height + fruit1.frame.height {
        fallDuration = NSTimeInterval(arc4random_uniform(6) + 2)
        moveActionDown = SKAction.moveToY(-100.0, duration: fallDuration)
        fruit1.runAction(moveActionDown)
    }
    if fruit2.position.y == height + fruit1.frame.height {
        fallDuration = NSTimeInterval(arc4random_uniform(6) + 2)
        moveActionDown = SKAction.moveToY(-100.0, duration: fallDuration)
        fruit2.runAction(moveActionDown)
    }

}


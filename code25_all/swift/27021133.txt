override func scrollViewDidScroll(scrollView: UIScrollView) {
    let sectionRect = tableView.rectForSection(activeHeaderSection)
    let topY = sectionRect.origin.y
    let bottomY = topY + sectionRect.height
    let frameSize = self.tableView.frame.size.height - self.navigationController!.navigationBar.frame.size.height
    let translation = scrollView.panGestureRecognizer.translationInView(scrollView)

    if (scrollView.contentOffset.y + frameSize > bottomY) && (frameSize < sectionRect.size.height) && (translation.y < 0) {
        UIView.animateLinear(0.7, initialSpringVelocity: 0, animations: { self.tableView.scrollToRowAtIndexPath(NSIndexPath(forRow: self.checkTuple[self.activeHeaderSection].pickChecks.count-1, inSection: self.activeHeaderSection), atScrollPosition: .Bottom, animated: false) }, completion: nil)
    } else if (frameSize > sectionRect.size.height) || (scrollView.contentOffset.y < topY) {
        UIView.animateLinear(0.7, initialSpringVelocity: 0, animations: { self.tableView.scrollToRowAtIndexPath(NSIndexPath(forRow: 0, inSection: self.activeHeaderSection), atScrollPosition: .Top, animated: false) }, completion: nil)
    }
}

override func scrollViewDidScroll(scrollView: UIScrollView) {
    var activeHeaderSection = 4
    let sectionRect = tableView.rectForSection(activeHeaderSection)

    tableView.contentOffset.y = sectionRect.origin.y // Set once when locked
    tableView.contentSize.height = sectionRect.size.height
    tableView.clipsToBounds = false
}


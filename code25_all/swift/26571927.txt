Media
for song in songs {
    var media = Media(artist: song.valueForProperty(MPMediaItemPropertyArtist) as String,
                      album: song.valueForProperty(MPMediaItemPropertyAlbumTitle) as String,
                      song: song.valueForProperty(MPMediaItemPropertyTitle) as String,
                      genre: song.valueForProperty(MPMediaItemPropertyGenre) as String,
                      duration: song.valueForProperty(MPMediaItemPropertyPlaybackDuration) as Int,
                      releaseDate: song.valueForProperty(MPMediaItemPropertyReleaseDate) as NSDate,
                      artwork: song.valueForProperty(MPMediaItemPropertyArtwork) as UIImageView,
                      url: song.valueForProperty(MPMediaItemPropertyAssetURL) as NSURL)

    mediaList.append(media)
}

init
Media
    init(artist: String, album: String, song: String, genre: String, duration: Int, releaseDate: NSDate, artwork: UIImageView, url: NSURL) {
............
}

mediaList
libswiftCore.dylib`swift_dynamicCastObjCClassUnconditional:
0x328df4:  push   {r4, r7, lr}
0x328df6:  mov    r4, r0
0x328df8:  mov    r2, r1
0x328dfa:  add    r7, sp, #0x4
0x328dfc:  cmp    r4, #0x0
0x328dfe:  beq    0x328e1a                  ; swift_dynamicCastObjCClassUnconditional + 38
0x328e00:  movw   r0, #0x95dc
0x328e04:  movt   r0, #0x1
0x328e08:  add    r0, pc
0x328e0a:  ldr    r1, [r0]
0x328e0c:  mov    r0, r4
0x328e0e:  blx    0x335d94                  ; symbol stub for: objc_msgSend
0x328e12:  tst.w  r0, #0xff
0x328e16:  bne    0x328e1c                  ; swift_dynamicCastObjCClassUnconditional + 40
0x328e18:  trap   
0x328e1a:  movs   r4, #0x0
0x328e1c:  mov    r0, r4
0x328e1e:  pop    {r4, r7, pc}


     import UIKit

class ViewController: UIViewController, UITextFieldDelegate {

    @IBOutlet weak var textFieldInput: UITextField!
    @IBOutlet weak var iphoneSaveCharName: UIButton!
    @IBOutlet weak var charOne: UIButton!
    @IBOutlet weak var charTwo: UIButton!
    @IBOutlet weak var charThree: UIButton!
    @IBOutlet weak var charFour: UIButton!


    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view, typically from a nib.
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }


    var savedText: String!
    var tempbutton: UIButton!

//    func textFieldShouldReturn(textFieldInput: UITextField) -> Bool {
//        savedText = textFieldInput.text
//        textFieldInput.resignFirstResponder()
//        return false
//    }



    @IBAction func editText(sender: AnyObject) {
        if sender is UILongPressGestureRecognizer &&
            sender.state == UIGestureRecognizerState.Began {

                textFieldInput.hidden = false


                var tempbutton = sender.view as UIButton

                textFieldEditCompleted(textFieldInput)


                if tempbutton.tag == 1 {
                    charOne.setTitle(savedText, forState: .Normal)
                } else if tempbutton.tag == 2{
                    charTwo.setTitle(savedText, forState: .Normal)
                } else if tempbutton.tag == 3{
                    charThree.setTitle(savedText, forState: .Normal)
                } else if tempbutton.tag == 4{
                    charFour.setTitle(savedText, forState: .Normal)
                }
        }
    }

    func textFieldEditCompleted(textFieldInput: UITextField) -> Bool
    {
        savedText = textFieldInput.text
        textFieldInput.resignFirstResponder()
        tempbutton.setTitle(savedText, forState: .Normal)
        return false
    }

    func textFieldShouldReturn(textFieldInput: UITextField) -> Bool
    {
        return textFieldEditCompleted(textFieldInput);
    }

}


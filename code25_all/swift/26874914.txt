class SearchesMainViewController: UIViewController, UITableViewDataSource, UITableViewDelegate {

@IBOutlet var contentTableView: UITableView?
var tableViewData = SearchesMainTableViewData()

 required init(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
}

internal override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: NSBundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
}

override func viewDidLoad(){
    super.viewDidLoad()
    self.navigationItem.title = "Search"

    var nib = UINib(nibName: "SingleSearchTableViewCell", bundle: nil)
    contentTableView?.registerNib(nib, forCellReuseIdentifier: SingleSearchTableViewCellController.reuseID())

}

func numberOfSectionsInTableView(tableView: UITableView) -> Int {
    return tableViewData.numberOfSectionsInTableView()
}

func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
    return tableViewData.numberOfRowsInTableSection(section)
}

func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell{
    var cell:SingleSearchTableViewCellController = tableView.dequeueReusableCellWithIdentifier(SingleSearchTableViewCellController.reuseID()) as SingleSearchTableViewCellController
    cell.formatCell()
    return cell
}

func tableView(tableView: UITableView, heightForRowAtIndexPath indexPath: NSIndexPath) -> CGFloat {
    return 54.0
}

func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {
    tableView.deselectRowAtIndexPath(indexPath, animated: false)
}

func tableView(tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
    return tableViewData.headerViewForSection(section)
}

func tableView(tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
    return tableViewData.heightForTableViewSectionHeaders()
}

func tableView(tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
    return tableViewData.heightForTableViewSectionFooters()
}
}

class SingleSearchTableViewCellController : UITableViewCell {

@IBOutlet var dateMonthLable : UILabel?
@IBOutlet var dateDayLable : UILabel?
@IBOutlet var yearLable : UILabel?
@IBOutlet var makeModelLable : UILabel?

var search : Search = Search()

class func reuseID() -> String{
    return "SingleSearchTableViewCell"
}

required init(coder aDecoder: NSCoder) {
    super.init()
}

override init(frame: CGRect) {
    super.init(frame: frame)
}

override init(style: UITableViewCellStyle, reuseIdentifier: String?) {
    super.init(style: style, reuseIdentifier: reuseIdentifier)
}

override func awakeFromNib() {
    super.awakeFromNib()
    // Initialization code
}

init(previousSearch s : Search){
    search = s
    super.init()
}

func formatCell(){
    formatDateMonthLable()
    formatDateDayLable()
    formatYearRangeLable()
    formatMakeModelLable()
}

private func formatDateMonthLable(){

}

private func formatDateDayLable(){

}

private func formatYearRangeLable(){

}

private func formatMakeModelLable(){

}
}


func getListOfProperties() -> Array<Any>
    {
        var count : UInt32 = 0
        let classToInspect = NSURL.self
        let properties : UnsafePointer <objc_property_t> = class_copyPropertyList(classToInspect, &count)
        var propertyNames : Array<String> = []
        let intCount = Int(count)
        for var i = 0; i < intCount; i++ {
            let property : objc_property_t = properties[i]
            let properyName = NSString(UTF8String: property_getName(property))
            propertyNames += properyName
        }
        free(properties)
        return propertyNames
    }

func doSomethingWithPropertyName()
    {
        var someProperty = self.valueForKey("someProperty") // this is fine for compiler :-)

        var properties = self.getListOfProperties()
        for (index, propertyName) in enumerate(properties)
        {
            var currentProperty = self.valueForKey(propertyName) // compiler complains : 'protocol <>' is not convertible to 'String':-(

        }
    }


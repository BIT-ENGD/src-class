class FirstViewController: UIViewController {

    var characters:[String] = []
    var adjacency = [String : [String]?]()

    override func viewDidLoad() {
        super.viewDidLoad()

        characters = loadCharacters()
        adjacency = loadAdjacency()

        var character:String = characters[0]
        var adj:[String] = adjacency[character] // This line gives the first compiler error
        adj = adjacency["a"] // This line gives the second compiler error

        println(adj)
    }

    func loadCharacters() -> [String] {
        return ["a", "b", "c"]
    }

    func loadAdjacency() -> [String : [String]?] {
        return ["a": ["a", "b", "c"], "b": ["b", "c", "d"], "c": ["c", "d", "e"]]
    }
}

'String' is not convertible to 'DictionaryIndex<String, [(String)]?>'
'(String, [(String)]?)' is not convertible to '[String]'
class SecondViewController: UIViewController {

    var keyArray:[String] = []
    var dict = [String : [String]?]()

    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view, typically from a nib.

        keyArray = ["a", "b", "c"]
        dict = ["a": ["a", "b", "c"], "b": ["b", "c", "d"], "c": ["c", "d", "e"]]

        println(dict[keyArray[1]])

    }

}


UIViewController
import UIKit

protocol ArrangeClassProtocol
{
    func recieveThearray(language : NSMutableArray)
}

class ArrangeViewController: UIViewController, UITableViewDataSource, UITableViewDelegate { // class "ArrangeViewController" has no initializer

    var ArrangeClassDelegateObject : ArrangeClassProtocol?

    // Global Variables Goes Here
    var languageNamesArray: NSMutableArray = ["Tamil","English"]
    var userDefaults : NSUserDefaults = NSUserDefaults.standardUserDefaults()
    var tempArray : NSMutableArray = NSMutableArray()

    // Outlets Goes Here
    @IBOutlet weak var tableView: UITableView!

    override func viewDidLoad() {
        super.viewDidLoad()

        // Saving the Array in a UserDefaultObject
            if userDefaults.boolForKey("languageNamesArrayuserDefaults")
            {
                tempArray = userDefaults.objectForKey("languageNamesArrayuserDefaults") as NSMutableArray
            }
            else
            {
                tempArray = languageNamesArray
            }

        self.tableView.separatorInset = UIEdgeInsetsZero

         // TableView Reordering
        self.tableView.setEditing(true, animated: true)
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }

    override func prefersStatusBarHidden() -> Bool
    {
        return true
    }


    // Delegate Methods of the UITableView
     func numberOfSectionsInTableView(tableView: UITableView!) -> Int {

        return 1
    }

     func tableView(tableView: UITableView!, numberOfRowsInSection section: Int) -> Int {

            return tempArray.count
    }

     func tableView(tableView: UITableView!, cellForRowAtIndexPath indexPath: NSIndexPath!) -> UITableViewCell! {

        let cell = tableView.dequeueReusableCellWithIdentifier("Arrange", forIndexPath: indexPath) as ArrangeTableViewCell
        cell.languageName.font = UIFont(name: "Proxima Nova", size: 18)
        cell.languageName.text = tempArray.objectAtIndex(indexPath.row) as NSString
        cell.showsReorderControl = true
        return cell
    }

    // Delegate Methods for dragging the cell
     func tableView(tableView: UITableView!, editingStyleForRowAtIndexPath indexPath: NSIndexPath!) -> UITableViewCellEditingStyle
    {

        return UITableViewCellEditingStyle.None
    }

     func tableView(tableView: UITableView!, canMoveRowAtIndexPath indexPath: NSIndexPath!) -> Bool
    {
        return true
    }

     func tableView(tableView: UITableView!, moveRowAtIndexPath sourceIndexPath: NSIndexPath!, toIndexPath destinationIndexPath: NSIndexPath!)
    {
        var stringToMove = tempArray.objectAtIndex(sourceIndexPath.row) as NSString
        tempArray .removeObjectAtIndex(sourceIndexPath.row)
        tempArray .insertObject(stringToMove, atIndex: destinationIndexPath.row)
    }

     func tableView(tableView: UITableView!, targetIndexPathForMoveFromRowAtIndexPath sourceIndexPath: NSIndexPath!, toProposedIndexPath proposedDestinationIndexPath: NSIndexPath!) -> NSIndexPath!
    {
        let section:AnyObject = tempArray .objectAtIndex(sourceIndexPath.section)
        var sectionCount = tempArray.count as NSInteger
        if sourceIndexPath.section != proposedDestinationIndexPath.section
        {
            var rowinSourceSection:NSInteger =  (sourceIndexPath.section > proposedDestinationIndexPath.section) ? 0 : (sectionCount-1)

            return NSIndexPath(forRow: rowinSourceSection, inSection: sourceIndexPath.row)


        }
        else if proposedDestinationIndexPath.row >= sectionCount
        {

            return NSIndexPath(forRow: (sectionCount-1), inSection: sourceIndexPath.row)
        }


        return proposedDestinationIndexPath
    }

    // Creating the HomeViewController Object and presenting the ViewController
    @IBAction func closeButtonClicked(sender: UIButton)
    {
        userDefaults.setObject(tempArray, forKey: "languageNamesArrayuserDefaults")
        userDefaults.synchronize()
        ArrangeClassDelegateObject?.recieveThearray(languageNamesArray)
        self.dismissViewControllerAnimated(true, completion: nil)
    }
}

class HomeViewController: UIViewController, ArrangeClassProtocol {

   var ArrangeClassObject : ArrangeViewController = ArrangeViewController() // ArrangeViewController is Constructible with ()
  override func viewDidLoad() {
        super.viewDidLoad()

        self.ArrangeClassObject.ArrangeClassDelegateObject = self
}

func recieveThearray(language: NSMutableArray)
    {
        println(language)
    }
}

UIViewController
UIViewController

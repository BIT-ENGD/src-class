import UIKit


var toDoList: [String] = []

class FirstViewController: UIViewController, UITableViewDelegate, UITableViewDataSource {
//var cell = UITableViewCell()

@IBOutlet weak var itemList: UITableView!

override func viewDidLoad() {
    super.viewDidLoad()
    // Do any additional setup after loading the view, typically from a nib.
}

override func didReceiveMemoryWarning() {
    super.didReceiveMemoryWarning()
    // Dispose of any resources that can be recreated.
}

func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int{

   return toDoList.count
}

func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell{

   var cell = UITableViewCell(style: UITableViewCellStyle.Default, reuseIdentifier: "Cell")

  cell.textLabel.text = toDoList[indexPath.row]

    return cell
}

override func viewWillAppear(animated: Bool) {


    if var storedItems: AnyObject = NSUserDefaults.standardUserDefaults().objectForKey("items"){

        toDoList = []

        for var i = 0; i < storedItems.count; ++i{

        toDoList.append(storedItems[i] as NSString)
        }
    }

    itemList.reloadData()

}
func tableView(tableView: UITableView, commitEditingStyle editingStyle: UITableViewCellEditingStyle, forRowAtIndexPath indexPath: NSIndexPath){

    if editingStyle == UITableViewCellEditingStyle.Delete{


    toDoList.removeAtIndex(indexPath.row)

        let saveData = toDoList

        NSUserDefaults.standardUserDefaults().setObject(saveData, forKey: "items")

        NSUserDefaults.standardUserDefaults().synchronize()

        itemList.reloadData()
    }

}


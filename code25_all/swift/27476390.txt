static func debris(size: Int) -> Array<SKEmitterNode> {
    if size > 5 {
        fatalError("we don't have that much debris")
    }

    var debrisArr: [SKEmitterNode] = []

    for i in 1...size {
        let debris: SKEmitterNode = SKEmitterNode(fileNamed: "debris")
        debris.particleTexture = SKTexture(imageNamed: "debris\(i)")
        convertNumRef(&debris.particleScale)
        convertNumRef(&debris.particleScaleRange)
        debris.particleRotationSpeed = debris.particleRotationSpeed * CGFloat.randomSign()
        // THE PART WE CARE ABOUT
        debris.particleAlphaSequence = SKKeyframeSequence(keyframeValues: [0.5, 1.0, 0.0], times: [0.0, 3.0, 4.0])

        debrisArr.append(debris)
    }

func makeDebris(){
    for debrisEmitter in self.debris {
        debrisEmitter.resetSimulation()
        debrisEmitter.position = self.position
        self.gameScene.gameLayer.addChild(debrisEmitter)
        debrisEmitter.runAction(SKAction.removeFromParentAfterDelay(10))
    }
}

let fire = SKEmitterNode(fileNamed: "MyParticle")
fire.particleColorSequence = SKKeyframeSequence(keyframeValues: [SKColor.blueColor(), SKColor.blueColor(), SKColor.yellowColor()], times: [0.0, 1.0, 2.0])
fire.position = CGPoint(x: self.size.width/2, y: self.size.height/2)
self.addChild(fire)


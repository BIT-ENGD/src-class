// DRAWING CODE
    // Set constants for piePieces
    let radius: CGFloat = CGFloat(screen.width * 0.43)
    let pi: CGFloat = 3.1415926535
    let sliceRad: CGFloat = 2.0 * pi / CGFloat(categoryArray.count)
    var currentAngle: CGFloat = -0.5 * sliceRad - 0.5 * pi
    let center: CGPoint = CGPoint(x: screen.width / 2.0, y: radius)
    println("Center point: \(center)")

    //container!.layer.anchorPoint = CGPoint(x: screen.width, y: radius)

    // Draw all pie charts, add them to container (chartView)
    for category in categoryArray {

        let slice = UIView()
        slice.frame = self.frame
        let shapeLayer = CAShapeLayer()
        let scoreIndex = CGFloat(category.calculateScoreIndex())
        let sliceRadius: CGFloat = scoreIndex * radius

        // Draw the path
        var path:UIBezierPath = UIBezierPath()

        path.moveToPoint(center)
        path.addLineToPoint(CGPoint(x: center.x + sliceRadius * cos(currentAngle), y: center.y + sliceRadius * sin(currentAngle)))
        path.addArcWithCenter(center, radius: sliceRadius, startAngle: currentAngle, endAngle: currentAngle + sliceRad, clockwise: true)
        path.addLineToPoint(center)
        path.closePath()

        // For next slice, add 2*pi Rad / n categories
        currentAngle += sliceRad

        // Add path to shapeLayer
        shapeLayer.path = path.CGPath
        //shapeLayer.frame = self.frame
        shapeLayer.fillColor = SurveyColors().getColor(category.categoryIndex).CGColor
        shapeLayer.anchorPoint = center

        // Add shapeLayer to sliceView
        slice.layer.addSublayer(shapeLayer)

        // Add slice to chartView
        container!.addSubview(slice)
    }

    self.addSubview(container!)
    //container!.center = center
    container!.layer.anchorPoint = center

}

func rotate() {
    let t: CGAffineTransform = CGAffineTransformRotate(container!.transform, -0.78)
    container!.transform = t;
}


curl https://api.spark.io/v1/devices/<myDeviceId>/led -d access_token=<myAccessToken> -d params=l1,LOW

func toggleLight (on: Bool){
    var urlToUse = sparkAPIBaseURL+coreId+lightsMethodName
    var url = NSURL.URLWithString(urlToUse)
    var request = NSMutableURLRequest(URL: url)
    var session = NSURLSession.sharedSession()

    request.HTTPMethod = "POST"

    if (on==true) {
        request.setValue(paramsForOn, forHTTPHeaderField: "params")
    } else {
        request.setValue(paramsForOff, forHTTPHeaderField: "params")
    }//if

    request.setValue(accessToken, forHTTPHeaderField: "access_token")

    println("request: \(request)")

    var task = session.dataTaskWithRequest(request, completionHandler: {data, response, error -> Void in println("response: \(response)")

        var strData = NSString(data: data, encoding: NSUTF8StringEncoding)
        println(strData)
        self.responseDataLabel.text = strData
    })//task

    task.resume()  //no idea what this does
}//toggleLight

request: <NSMutableURLRequest: 0x7a62a450> { URL: https://api.spark.io/v1/devices/<myDeviceId>/led, headers: {
"access_token" = <myAccessToken>;
params = "l1,LOW"; } }

response: <NSHTTPURLResponse: 0x7b654c60> { URL: https://api.spark.io/v1/devices/<myDeviceId>/led } { status code: 400, headers {
"Access-Control-Allow-Origin" = "*";
Connection = "keep-alive";
"Content-Length" = 104;
"Content-Type" = "application/json; charset=utf-8";
Date = "Sun, 27 Jul 2014 18:21:45 GMT";
Server = "nginx/1.6.0";
"X-Powered-By" = Express;} }{
"code": 400,
"error": "invalid_request",
"error_description": "The access token was not found"}

    func toggleLight (on: Bool){
    var urlToUse = sparkAPIBaseURL+coreId+lightsMethodName
    var url = NSURL.URLWithString(urlToUse)
    var request = NSMutableURLRequest(URL: url)
    var session = NSURLSession.sharedSession()

    request.HTTPMethod = "POST"

    var params: String
    if (on==true) {
        params = paramsForOn
    } else {
        params = paramsForOff
    }//if

    **var message = "access_token=\(accessToken)&params=\(params)"
    request.HTTPBody = (message as NSString).dataUsingEncoding(NSUTF8StringEncoding)**

    println("request: \(request)")

    var task = session.dataTaskWithRequest(request, completionHandler: {data, response, error -> Void in println("response: \(response)")

        var strData = NSString(data: data, encoding: NSUTF8StringEncoding)
        println(strData)
        self.responseDataLabel.text = strData
    })//task

    task.resume()  //no idea what this does
}//toggleLight


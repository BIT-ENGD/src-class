var exchangeArray : ExchangeValues[] = [];

func fetchResult(){
    var currenciesOrder = ["EUR", "USD", "GBP", "CHF", "NOK", "SEK", "DKK", "CZK","TRY", "BGN", "MDL", "PLN", "XDR", "XAU", "UAH", "RUB", "RSD","CAD", "AUD", "JPY", "EGP", "BRL","HUF", "MXN","KRW", "CNY","NZD","INR","AED", "ZAR"];
    let dateFormat = NSDateFormatter();
    dateFormat.dateFormat = "yyyy-MM-dd";

    for days in 0..2 {

        let daysToSubstract = Double(60*60*24*days);
        let date : String = dateFormat.stringFromDate(NSDate().dateByAddingTimeInterval(-daysToSubstract));

        var url: NSURL = NSURL(string: "http://openapi.ro/api/exchange/all.json?date=" + date);
        var session = NSURLSession.sharedSession();
        var task = session.dataTaskWithURL(url, completionHandler: {
            (data, response, error) -> Void in
            if (response != nil){
                var err: NSError?;
                if(err?) {
                    println("request Error \(err!.localizedDescription)");
                }
                //send the result to protocol
                let results = NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions.MutableContainers, error: &err) as NSDictionary;

                let temp : NSDictionary = results["rate"] as NSDictionary;

                for key in 0..currenciesOrder.count{

                    for (currencyKey : AnyObject, currencyValue : AnyObject) in temp {
                        if currenciesOrder[key] as String == currencyKey as String {
                            let tempExchange = ExchangeValues(currency: currencyKey as? String, value: currencyValue.doubleValue, date:date );
                            self.exchangeArray.append(tempExchange);
                        }

                    }

                }
                self.delegate?.didReceiveResults(self.exchangeArray);
            } else {
                println("error: \(error.localizedDescription)");
            }

        })
        task.resume();
    }

    println("\(exchangeArray.count)");
}


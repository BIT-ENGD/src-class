Array
comparest
minimum
nil
minimum
extension Array {

  func comparest<C: Comparable>(comparator: T -> C, _ op: (C, C) -> Bool) -> T? {
     var min = self.first
     for elem in self {
         if op(comparator(elem), comparator(min!)) {
            min = elem
         }
     }
     return min
  }                     

  func minimum<C: Comparable>(var _ comparator: (T -> C)? = nil) -> T? {
     if comparator == nil {
         comparator = { elem -> C in elem as C }
     }
     return self.comparest(comparator!, { $0 < $1 }) 
  }

}

comparest(comparator!, { $0 < $1 })
comparest(comparator!, <)
var array = [3, 4, 1, 9]
var min = array.minimum({ $0 })

var array = [3, 4, 1, 9]
var min = array.minimum()

routes.map( { $0 as MKRoute }).minimum({ $0.distance })

import UIKit

class HighScore: ViewController {
@IBOutlet weak var HighscoreLabel: UILabel!
@IBOutlet weak var Scorelabel: UILabel!
@IBOutlet weak var NewHighscoreLabel: UILabel!

override func viewDidLoad() {

    let defaults: NSUserDefaults = NSUserDefaults.standardUserDefaults()
    var score = defaults.valueForKey("Score") as? String
    Score = score?.stringByTrimmingCharactersInSet(NSCharacterSet.decimalDigitCharacterSet().invertedSet).toInt() ?? 0
    Scorelabel.text = score

    let SecondDefaults: NSUserDefaults = NSUserDefaults.standardUserDefaults()
    var highscore = SecondDefaults.valueForKey("Highscore") as? String
    Highscore = highscore?.stringByTrimmingCharactersInSet(NSCharacterSet.decimalDigitCharacterSet().invertedSet).toInt() ?? 0
    HighscoreLabel.text = highscore

    if Score < 0 {
        NewHighscoreLabel.text = ""
    }
    else if Score > Highscore {
        Highscore = 0
        Highscore += Score
        var HighscoreString:String = String(format: "Highscore:%i", Highscore)

        let SecondDefaults: NSUserDefaults = NSUserDefaults.standardUserDefaults()
        SecondDefaults.setObject(HighscoreString, forKey: "Highscore")
        SecondDefaults.synchronize()
        HighscoreLabel.text = highscore
        NewHighscoreLabel.text = "New Highscore!"
    }
}

}

var ScoreString:String = String(format: "Score:%i", Score)
        ScoreLabel.text = (string: ScoreString)
        let defaults: NSUserDefaults = NSUserDefaults.standardUserDefaults()
        defaults.setObject(ScoreString, forKey: "Score")
        defaults.synchronize()


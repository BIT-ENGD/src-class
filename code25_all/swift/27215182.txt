    protocol InstructionViewDelegate
    {
    func didTapLabel(myString: NSString)  
    }  

    class InstructionView: UIViewController
    {
    var delegate : InstructionViewDelegate!
    var pageIndex : Int = 0
    var titleText : String = ""
    var otherImageFile : String = ""

    var tapLabel = UITapGestureRecognizer()

    override func viewDidLoad()
    {
    ....

    var label = UILabel(frame: CGRectMake(16, 825, 736, 104))
    ....
    view.addSubview(label)

    var imageViewObject : UIImageView
    ....
    view.addSubview(imageViewObject)

    tapLabel = UITapGestureRecognizer(target: self, action: "imageLabelAction:")
    tapLabel.numberOfTapsRequired = 1
    label.addGestureRecognizer(tapLabel)
    label.userInteractionEnabled = true
    imageViewObject.addGestureRecognizer(tapLabel)
    imageViewObject.userInteractionEnabled = true

    }

    func imageLabelAction(sender: AnyObject)
    {
    delegate.didTapLabel("The image was tapped")
    }

class PageViewController: UIViewController, UIPageViewControllerDataSource, InstructionViewDelegate
{
var pageViewController : UIPageViewController?
var pageTitles : Array<String> = ["", "", ""]
var otherImages : Array<String> = ["", "", ""]
var currentIndex : Int = 0

override func viewDidLoad()
{
    super.viewDidLoad()

    pageViewController = UIPageViewController(transitionStyle: .Scroll, navigationOrientation: .Horizontal, options: nil)
    pageViewController!.dataSource = self

    let startingViewController: InstructionView = viewControllerAtIndex(0)!
    let viewControllers: NSArray = [startingViewController]
    pageViewController!.setViewControllers(viewControllers, direction: .Forward, animated: false, completion: nil)
    pageViewController!.view.frame = CGRectMake(0, 0, view.frame.size.width, view.frame.size.height);

    addChildViewController(pageViewController!)
    view.addSubview(pageViewController!.view)
    pageViewController!.didMoveToParentViewController(self)
}
    func didTapLabel(myString: NSString) {
    println(myString)
    self.performSegueWithIdentifier("testSegue", sender: self)
    }


.....

func viewControllerAtIndex(index: Int) -> InstructionView?
{
    if self.pageTitles.count == 0 || index >= self.pageTitles.count{
        return nil
    }

    let pageContentViewController = InstructionView()
    pageContentViewController.otherImageFile = otherImages[index]
    pageContentViewController.titleText = pageTitles[index]
    pageContentViewController.pageIndex = index
    pageContentViewController.delegate = self
    currentIndex = index

    return pageContentViewController
}
}


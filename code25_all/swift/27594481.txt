import UIKit

struct BoardLoc {
    var x: Int
    var y: Int
}

class ViewController: UIViewController, TileDelegate {

    var tile: Tile!

    override func viewDidLoad() {
        super.viewDidLoad()

        let scene = Board()
        tile.tileDelegate = self
        tile.board = scene
    }

    func getTileAtLoc(tile: Tile, _ boardLoc: BoardLoc) {
        tile.boardLoc = boardLoc
    }  
}

import Foundation

class Board {
    var board: Array<Array<String>> = Array(count:3, repeatedValue:Array(count:5, repeatedValue:"foo"))

    func putTileAt(boardLoc: BoardLoc) -> String {
        return board[boardLoc.x][boardLoc.y]
    }  
}

import UIKit

protocol TileDelegate {
    func getTileAtLoc(tile: Tile, _ boardLoc: BoardLoc)
}

class Tile: UIView {
    var boardLoc: BoardLoc?
    var board: Board?
    var tileDelegate: TileDelegate?

    required init(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        addGestureRecognizer(UITapGestureRecognizer(target: self, action:"handleTap:"))
    }

    override func drawRect(rect: CGRect) {
        for x in 0...2 {
            for y in 0...4 {

                let context = UIGraphicsGetCurrentContext()
                let red = UIColor.redColor().CGColor
                let orange = UIColor.orangeColor().CGColor
                let bigCircle = CGRectMake(CGFloat(106 * x),CGFloat(106 * y), 106, 106)
                let smallCircle = CGRectMake(CGFloat(106 * x) + 3, CGFloat(106 * y) + 3, 100, 100)

                if (boardLoc != nil && boardLoc!.x == x && boardLoc!.y == y) {
                    CGContextSetFillColorWithColor(context, red)
                    CGContextFillEllipseInRect(context, bigCircle)
                }

                if board!.putTileAt(BoardLoc(x: x, y: y)) == "foo" {
                    CGContextSetFillColorWithColor(context, orange)
                    CGContextFillEllipseInRect(context, smallCircle)
                }
            }
        }
    }

    func handleTap(gestureRecognizer: UIGestureRecognizer) {
        let point = gestureRecognizer.locationInView(self)
        let boardLoc = BoardLoc(x: Int(point.x) / 106, y: Int(point.y) / 106)
        tileDelegate!.getTileAtLoc(self, boardLoc)
        setNeedsDisplay()
    }
}


var cell:UITableViewCell {

    var c:UITableViewCell? = tableView.dequeueReusableCellWithIdentifier("reuseIdentifier") as? UITableViewCell

    if c == nil {
        c = UITableViewCell(style: .Value1, reuseIdentifier: "reuseIdentifier")
    }

    return c!
}

var cell:UITableViewCell? = tableView.dequeueReusableCellWithIdentifier("reuseIdentifier") as? UITableViewCell

if cell == nil {
    cell = UITableViewCell(style: .Value1, reuseIdentifier: "reuseIdentifier")

}

var cell:UITableViewCell {

    var c:UITableViewCell? = tableView.dequeueReusableCellWithIdentifier("reuseIdentifier") as? UITableViewCell

    if c == nil {
        c = UITableViewCell(style: .Value1, reuseIdentifier: "reuseIdentifier")
        c!.selectionStyle = .None
        c!.backgroundColor = Theme.Colors.viewBackgroundColor
        c!.textLabel?.textColor = Theme.Colors.fadedTextColor
        c!.textLabel?.font = UIFont(name: kFontDINCondRegular, size: 21.0)
        c!.detailTextLabel?.textColor = Theme.Colors.fadedTextColor
        c!.detailTextLabel?.font = UIFont(name: kFontDINCondRegular, size: 21.0)
    }

    return c!
}

switch indexPath.row {
case 0:
    cell.textLabel?.text = self.lastMonthDescription
    cell.detailTextLabel?.text = self.model.foldersContactedLastMonth.stringValue
case 1:
    cell.textLabel?.text = self.currentMonthDescription
    cell.detailTextLabel?.text = self.model.foldersContactedCurrentMonth.stringValue
case 2:
    cell.textLabel?.text = FSLocalizedString(Localizable.THIS_WEEK).uppercaseString
    cell.detailTextLabel?.text = self.model.foldersContactedCurrentWeek.stringValue
case 3:
    cell.textLabel?.text = FSLocalizedString(Localizable.TODAY).uppercaseString
    cell.detailTextLabel?.text = self.model.foldersContactedToday.stringValue
default: break

}

return cell


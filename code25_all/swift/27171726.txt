override func collectionView(collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int
override func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -> UICollectionViewCell
dequeueReusableCellWithReuseIdentifier
collectionView.reloadData()
func collectionView(collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAtIndexPath indexPath: NSIndexPath) -> CGSize{
    var size = CGSize(width: 0,height: 0)

    if TimerManager.sharedInstance.timers.count < 2 {
        size = collectionView.frame.size
    } else if TimerManager.sharedInstance.timers.count == 2 {
        size = CGSize(width: collectionView.frame.size.width,height: collectionView.frame.size.height/2)
    } else if  TimerManager.sharedInstance.timers.count == 3 {
        if indexPath.row < 2 {
            size = CGSize(width: collectionView.frame.size.width/2,height: collectionView.frame.size.height/2)

        } else {
            size = CGSize(width: collectionView.frame.size.width,height: collectionView.frame.size.height/2)
        }

    } else {
        size = CGSize(width: collectionView.frame.size.width/2,height: collectionView.frame.size.height/2)
    }

    return size
}

setNeedDisplay
viewWillAppear
setNeedsUpdateConstraints
setNeedsLayout

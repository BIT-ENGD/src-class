var group:dispatch_group_t = dispatch_group_create()
var queue:dispatch_queue_t = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_HIGH, 0)
let lockQueue:dispatch_queue_t = dispatch_queue_create("lockQueue", nil)
var semaphore:dispatch_semaphore_t = dispatch_semaphore_create(8)

for every_pixel {
    dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);
    dispatch_group_enter(group)
    dispatch_group_async(group, queue) { () -> Void in

    let pixelColor = castRayAndIntersectObjects()

    dispatch_sync(lockQueue, { () -> Void in
        PutPixelOnBitmap(pixelColor);
    })                

    dispatch_group_leave(group)
    dispatch_semaphore_signal(semaphore);
}

dispatch_group_wait(group, DISPATCH_TIME_FOREVER)


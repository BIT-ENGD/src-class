 Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'NSFetchRequest could not locate an NSEntityDescription for entity name 'emailStatus''

import UIKit
import CoreData

class RegisterEmail: UIViewController {

var test1: Bool?

override func viewDidLoad() {
    super.viewDidLoad()

}

override func didReceiveMemoryWarning() {
    super.didReceiveMemoryWarning()
    // Dispose of any resources that can be recreated.
}

override func shouldPerformSegueWithIdentifier(identifier: String!, sender: AnyObject!) -> Bool {
    if identifier == "passEmail" {

        var query = PFUser.query()
        query.getObjectInBackgroundWithId("vFu93HatwL") {
            (User: PFObject!, error: NSError!) -> Void in
            if error == nil {
                NSLog("%@", User)

                var checkEmail = User["emailVerified"] as Bool

                println(checkEmail)

                var appDel:AppDelegate = (UIApplication.sharedApplication().delegate as AppDelegate)

                var context:NSManagedObjectContext = appDel.managedObjectContext!

                var newEmail = NSEntityDescription.insertNewObjectForEntityForName("Email", inManagedObjectContext: context) as NSManagedObject

                newEmail.setValue(checkEmail, forKey: "emailStatus")

                context.save(nil)

                println (newEmail)

                println("Object Saved")

            } else {
                NSLog("%@", error)
            }


        }


        var appDel:AppDelegate = (UIApplication.sharedApplication().delegate as AppDelegate)

        var context:NSManagedObjectContext = appDel.managedObjectContext!

        var request = NSFetchRequest(entityName: "emailStatus")

        request.returnsObjectsAsFaults = false

        var results: NSArray = context.executeFetchRequest(request, error: nil)!

        if(results.count > 0)
        {
            var res = results [0] as NSManagedObject

            test1 = res.valueForKey("emailStatus") as Bool

        }


        if (test1 == false) {

            let alert = UIAlertView()
            alert.title = "Error"
            alert.message = "The email you have provided has not been verified."
            alert.addButtonWithTitle("Dismiss")
            alert.show()

            return false
        }

        else {

            return true
        }
    }

    // by default, transition
    return false
}
}


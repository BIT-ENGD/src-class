import UIKit

protocol Hello {
    class func hello() -> String
}

class HelloEnglish: Hello {
    class func hello() -> String {
        return "hello"
    }
}

class HelloSpanish<E>: HelloEnglish {
    override class func hello() -> String {
        return "hola"
    }
}

typealias HelloSpanishClass = HelloSpanish<AnyObject>

println("expect: hello")
HelloEnglish.hello()
println("expect: hola")
HelloSpanishClass.hello()

func sayHello<T: Hello>(type: T.Type) -> String {
    return type.hello()
}

println("expect: hello")
sayHello(HelloEnglish.self)
println("expect: hola")
sayHello(HelloSpanishClass.self)


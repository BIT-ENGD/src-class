struct S<T> {
    private var array: [T] = []
    private var first = 0
    private var len = 0

    init(_ array: [T], _ range: Range<Int>? = nil) {
        self.array = array
        if let range = range {
            self.first = range.startIndex
            self.len = range.endIndex
        } else {
            self.first = 0
            self.len = array.count
        }
    }
}

extension Array {
    subscript(subRange: Range<Int>) -> S<T> {
        return S<T>(self, subRange)
    }
}

let a = [4, 3, 2, 1, 0, -1][2..<4 as Range<Int>]


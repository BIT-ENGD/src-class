func calcHistogram(image: UIImage) {
    let bins: Int = 20;
    let width = Int(image.size.width);
    let height = Int(image.size.height);
    let binStep: Double = Double(bins-1)/255.0
    var hist = Array(count:bins, repeatedValue:Array(count:bins, repeatedValue:Array(count:bins, repeatedValue:Int())))

    for i in 0..<bins {
        for j in 0..<bins {
            for k in 0..<bins {
                hist[i][j][k] = 0;
            }
        }
    }

    var pixelData = CGDataProviderCopyData(CGImageGetDataProvider(image.CGImage))
    var data: UnsafePointer<UInt8> = CFDataGetBytePtr(pixelData)
    for x in 0..<width {
        for y in 0..<height {
            var pixelInfo: Int = ((width * y) + x) * 4
            var r = Double(data[pixelInfo])
            var g = Double(data[pixelInfo+1])
            var b = Double(data[pixelInfo+2])

            let r_bin: Int = Int(floor(r*binStep));
            let g_bin: Int = Int(floor(g*binStep));
            let b_bin: Int = Int(floor(b*binStep));
            hist[r_bin][g_bin][b_bin] += 1;
        }
    }

}


class User
{
    class var BoolProperty: Bool
    {
        get {
            var anyObject: AnyObject? = getValue("BoolProperty")

            if let value = anyObject as? Bool {
                return value
            }
            else {
                return false
            }
        }
        set(value) {
            setValue("BoolProperty", value: value)
        }
    }

    private class func getValue(key: String) -> AnyObject?
    {
        var store = NSUserDefaults.standardUserDefaults();
        return store.objectForKey(key) as AnyObject?
    }
}

class UserTests: XCTestCase
{
    func testFields()
    {
        User.BoolProperty = true
        var result = User.BoolProperty
        XCTAssertEqual(true, result)
    }
}

class User
{
    class var BoolProperty: Bool
    {
        get {
            return get("BoolProperty", defaultValue: false)
        }
        set(value) {
            setValue("BoolProperty", value: value)
        }
    }

    private class func getValue(key: String) -> AnyObject?
    {
        var store = NSUserDefaults.standardUserDefaults();
        return store.objectForKey(key) as AnyObject?
    }

    private class func get<T>(key: String, defaultValue: T) -> T
    {
        var anyObject: AnyObject? = getValue(key)

        if let value = anyObject as? T {
            return value
        }
        else {
            return defaultValue
        }
    }
}

if let value = anyObject as? T

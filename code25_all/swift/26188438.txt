import SpriteKit

class MyScene: SKScene {

  let intervalShapeCreation:NSTimeInterval = 2.0  // Interval for creating the next Shape
  let gravitationalAcceleration:CGFloat = -0.5    // The gravitational Y acceleration

  let shapeSequenceAction = SKAction.sequence([
    SKAction.scaleTo(1.0, duration: 0.5),
    SKAction.waitForDuration(2.0),
    SKAction.scaleTo(0, duration: 0.5),
    SKAction.removeFromParent()
    ])

  override init(size: CGSize) {
    super.init(size: size)
  }

  required init(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
  }

  override func didMoveToView(view: SKView) {
    super.didMoveToView(view)
    addBackground()
    initializeScene()
  }

  // MARK: Level Building
  func initializeScene() {
    self.physicsWorld.gravity = CGVectorMake(0.0, gravitationalAcceleration)
    runAction(SKAction.repeatActionForever(
      SKAction.sequence([SKAction.runBlock(self.createShape),
      SKAction.waitForDuration(intervalShapeCreation)])))
  }

  func addBackground() {
    let backgroundAtlas = SKTextureAtlas(named: "background")
    let background = SKSpriteNode(texture: backgroundAtlas.textureNamed("background"))
    background.position = CGPoint(x: size.width/2, y: size.height/2)
    background.anchorPoint = CGPointMake(0.5, 0.5)
    background.zPosition = -1
    background.name = "background"
    self.addChild(background)
  }

  func createShape() {
    let newShape = sSharedAllPossibleShapes[0]
    print("\n shape creada: \(newShape.name)")
    newShape.position = CGPointMake(size.width / 2, CGFloat( Int.random(fromZeroToMax: 500)))
    self.addChild(newShape)
    newShape.runAction(shapeSequenceAction)
  }

}


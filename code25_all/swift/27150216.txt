func numberOfSectionsInTableView(tableView: UITableView!) -> Int {
    return 1
}

func tableView(tableView: UITableView, numberOfRowsInSection section: Int)  -> Int {
    return self.categroyArray.count
}


func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
    var cell  = tableView.dequeueReusableCellWithIdentifier("FilterCell") as? FilterCell

    var bottomLine:UIView = UIView(frame: CGRectMake(0, cell!.bounds.height, self.view.frame.width, 1))
    bottomLine.backgroundColor = UIColor(rgba: "#cecece")
    cell?.addSubview(bottomLine)


    if indexPath.row == 0 {
        var categoryScroll:HMSegmentedControl = HMSegmentedControl(frame: CGRectMake(0, 0, cell!.bounds.width, cell!.bounds.height))
        categoryScroll.sectionTitles = self.categroyArray
        categoryScroll.autoresizingMask = UIViewAutoresizing.FlexibleRightMargin | UIViewAutoresizing.FlexibleWidth
        categoryScroll.font = UIFont(name: "HelveticaNeue", size: 12)
        categoryScroll.selectionStyle = HMSegmentedControlSelectionStyleFullWidthStripe
        categoryScroll.selectionIndicatorColor = UIColor(rgba: "#b44a44")
        categoryScroll.selectedTextColor = UIColor(rgba: "#b44a44")
        categoryScroll.textColor = UIColor(rgba: "#666666")
        categoryScroll.selectionIndicatorLocation = HMSegmentedControlSelectionIndicatorLocationDown
        categoryScroll.segmentEdgeInset = UIEdgeInsetsMake(0, 10, 0, 10)
        categoryScroll.selectionIndicatorHeight = 4
        cell?.addSubview(categoryScroll)

    }

    return cell!
}


func tableView(tableView: UITableView, heightForRowAtIndexPath indexPath: NSIndexPath) -> CGFloat {


    if indexPath.row == 0 {
        return 100
    } else {
        return 44
    }

}


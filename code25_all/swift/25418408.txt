class NameShape{
    var numberOfSide: Int = 0
    var name:String
    func simpleDescription() -> String {
        return "A square with \(numberOfSide) sides."
    }
    init (name: String){
        self.name = name
        }
}

class Square:NameShape{
    var sideLength: Double
    init(name: String, sideLength: Double){
        self.sideLength = sideLength
        super.init(name: name)


        numberOfSide = 4
    }

    func area() ->Double {
        return sideLength * sideLength
    }

    override func simpleDescription() -> String {
        return "A square with sides of length \(sideLength)."
    }

}

class EquilateralTriangle:NameShape{
    var sideLength: Double = 0.0

    init(sideLength: Double, name: String){
        self.sideLength = sideLength
        super.init(name: name)
        numberOfSide = 3
    }

    var perimeter: Double{
    get{
        return 3.0 * sideLength
    }
    set{
        sideLength = newValue / 3.0
    }
    }

    override func simpleDescription() -> String {
        return "An equilateral triangle with sides of length \(sideLength)."
    }
}

class TriangleAndSquare{
    var triangle:EquilateralTriangle{
    willSet {
    square.sideLength = newValue.sideLength
    }
    }
    var square: Square{
    willSet {
        triangle.sideLength = newValue.sideLength
    }
    }
    init(size: Double, name: String){
        square = Square(name: name, sideLength: size)
        triangle = EquilateralTriangle(sideLength: size, name: name)
    }
}

var triangleAndSquare = TriangleAndSquare(size: 10, name: "another test shape")
triangleAndSquare.square.sideLength //10.0
triangleAndSquare.triangle.sideLength //10.0
triangleAndSquare.square = Square(name: "larger square", sideLength: 50)
triangleAndSquare.triangle.sideLength //500.0

triangle.sideLength
triangleAndSquare.triangle.sideLength = 25
triangleAndSquare.triangle.sideLength //25.0

square.sideLength
willSet
triangleAndSquare.square.sideLength //50.0 

willSet
triangle
square
square.sideLength = newValue.sideLength
triangle
square
Square

let filteredShowtimes = movieShowtimes.filter{$0.dateTime.laterDate(newStartTime!).isEqualToDate($0.dateTime)}
var furtherFilteredShowtimes = filteredShowtimes.filter{$0.endTime.earlierDate(endTime!).isEqualToDate($0.endTime)}

furtherFilteredShowtimes.removeAtIndex(0)

while(furtherFilteredShowtimes.count > 0) {
   println("showtime \(furtherFilteredShowtimes.first!.dateTime)")
      //if the start time of the movie is after the start of the time period, and its end before
      //the requested end time
      if (newStartTime!.compare(furtherFilteredShowtimes.first!.dateTime) == NSComparisonResult.OrderedAscending) && (endTime!.compare(furtherFilteredShowtimes.first!.endTime) == NSComparisonResult.OrderedDescending) {
          let interval = 1200 as NSTimeInterval
          //if the matching screenings dict already contains one movie,
          //make sure the next one starts within 20 min of the previous
          //one
          if(theaterMovies.count > 1 && endTime!.timeIntervalSinceDate(newStartTime!) < interval {
              //add movie to the matching screenings dictionary
              println("we have a match with \(movies[currentMovie.row].title)")
              theaterMovies[furtherFilteredShowtimes.first!.dateTime] = movies[currentMovie.row].title
              //set the new start time for after the added movie ends
              newStartTime = movieShowtimes.first!.endTime
              //stop looking for screenings for this movie
              break
          }
          else if(theaterMovies.count == 0) {
             //add movie to the matching screenings dictionary
             theaterMovies[furtherFilteredShowtimes.first!.dateTime] = movies[currentMovie.row].title
             println("we have a new itinerary with \(movies[currentMovie.row].title)")
             //set the new start time for after the added movie ends
             newStartTime = furtherFilteredShowtimes.first!.endTime
             //stop looking for screenings for this movie
             break
         }
     }
     else { //if the showtime doesn't fit, remove it from the list
         println("removing showtime \(furtherFilteredShowtimes.first!.dateTime)")
         furtherFilteredShowtimes.removeAtIndex(0)
     }


import Foundation
import CoreData

class Patient: NSManagedObject {

    @NSManaged var id: NSNumber
    @NSManaged var firstName: String
    @NSManaged var lastName: String
    @NSManaged var personalNumber: String
    @NSManaged var handovers: NSSet
}

import Foundation
import CoreData

class Handover: NSManagedObject {

    @NSManaged var date: NSDate
    @NSManaged var status: String
    @NSManaged var time: NSNumber
    @NSManaged var patient: Patient
}

time
handovers = db.loadHandovers(NSDate.date())
for handover in handovers {
    let handover = handover as Handover
    println("\(handover.time) - \(handover.patient.firstName) \(handover.patient.lastName)")
}

+------+-------------------+-------------------+
| TIME |      PATIENT      |  NO. OF HANDOVERS |
+------+-------------------+-------------------+
|      |                   |                   |
| 08   |  Anna Andersson   |  3                |
|      |                   |                   |
| 08   |  Göte 2 Andersson |  4                |
|      |                   |                   |
| 10   |  Göte 2 Andersson |  1                |
|      |                   |                   |
| 11   |  Göte 2 Andersson |  1                |
|      |                   |                   |
| 14   |  Anna Andersson   |  1                |
+------+-------------------+-------------------+

CompositeItem
import Foundation

public class CompositeItem {

    var patient: Patient!
    var handovers: [Handover] = []

    init() {

    }
}

handovers
private var compositeItems: [CompositeItem] = []

handovers = db.loadHandovers(NSDate.date())

for handover in handovers {
    let handover = handover as Handover

    if compositeItems.isEmpty {
        let item = CompositeItem()
        item.patient = handover.patient
        item.handovers.append(handover)
    } else {
        // How can I check if the current Handover object has the same Patient and the time as the last added Handover.
        // And add it to the last `item`'s handovers array if they do match.
    }
}

item

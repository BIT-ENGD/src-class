class Profile {
  var state:State
  var member:Member?
}

class Member: NSManagedObject {
   @NSManaged var nickName: String?
   @NSManaged var mId: String?
}

class RegisterMultiTableVContr: UITableViewController {

     var profile:Profile?

     override func viewDidLoad() {
         self.profileService.createEmptyProfile(
                 { (profile:Profile) in
                     self.profile = profile
                     println("\(self.profile!.member!.description)")
                     /*
                     Correct:
                     Output:
                     <meetpoll.Member: 0x7fd654175c10> (entity: Member; id: 0xd000000000c80000<x-coredata://21228B23-63B3-4708-8EAC-3302072BA074/Member/p5> ; data: {
                         mId = nil;
                         nickName = nil;
                     })
                     */
                 }, failure: { (error:String) in
                     // Exception Handling
             })
     }

     override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
         println("\(self.profile!.member!.description)")
         /*
         Set to fault automatically
         Output:
         <meetpoll.Member: 0x7fd654175c10> (entity: Member; id: 0xd000000000c80000<x-coredata://21228B23-63B3-4708-8EAC-3302072BA074/Member/p50> ; 
         data: <fault>)
         */
     }
}

var member = NSEntityDescription.insertNewObjectForEntityForName("Member", inManagedObjectContext: context) as Member
var profile = Profile(member:member)
var error: NSError? = nil
if context.save(&error) {
   return profile
}


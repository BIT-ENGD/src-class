Entity
Attribute
UITableView
Entity
7-Dec-14 09:30
7-Dec-14 11:00
7-Dec-14 13:30
7-Dec-14 16:00

UITableView
var dateGroup: NSNumber {
    get {
        if date.compare(NSDate()) == NSComparisonResult.OrderedAscending {
            return 0
        } else {
            return 1
        }
    }
}

UITableView
Group 0
7-Dec-14 09:30
7-Dec-14 11:00
Group 1
7-Dec-14 13:30
7-Dec-14 16:00

UITableView
Group 1
7-Dec-14 13:30
7-Dec-14 16:00
Group 0
7-Dec-14 09:30
7-Dec-14 11:00

NSSortDescriptor
NSSortDescriptor
FetchRequestControllers
FetchResultsControllers
func controller(controller: NSFetchedResultsController, didChangeObject anObject: AnyObject, atIndexPath indexPath: NSIndexPath?, forChangeType type: NSFetchedResultsChangeType, newIndexPath: NSIndexPath?) {
    switch type {
        case .Insert:
            println("insert")
            if var indexPathNew = newIndexPath {
                if controller == self.elapsedFRC {  indexPathNew = NSIndexPath(forRow: newIndexPath!.row, inSection: 1)  }
                println("N indexPath : \(indexPathNew)")
                self.tableViewEvent.insertRowsAtIndexPaths([indexPathNew], withRowAnimation: .Fade)
            }
        case .Delete:
            println("delete")
            if var indexPathOld = indexPath {
                if controller == self.elapsedFRC {  indexPathOld = NSIndexPath(forRow: indexPath!.row, inSection: 1)  }
                println("O indexPath : \(indexPathOld)")
                self.tableViewEvent.deleteRowsAtIndexPaths([indexPathOld], withRowAnimation: .Fade)
            }
        case .Update:
            println("update")
            if self.showLarge {
                if var indexPathOld = indexPath {
                    if controller == self.elapsedFRC {  indexPathOld = NSIndexPath(forRow: indexPath!.row, inSection: 1)  }
                    println("O indexPath : \(indexPathOld)")
                    if let largeCell = self.tableViewEvent.cellForRowAtIndexPath(indexPathOld) as? LargeTableViewCell {
                        if      indexPathOld.section == 0 {  self.configureLargeCell(largeCell, frc:self.upcomingFRC, row:indexPathOld.row)  }
                        else if indexPathOld.section == 1 {  self.configureLargeCell(largeCell, frc:self.elapsedFRC, row:indexPathOld.row)  }
                    } else {
                        println("******************************************")
                        println("found nil largeCell - configure Large Cell")
                        println("******************************************")
                    }
                } else {
                    println("******************************************")
                    println("found nil indexPath - configure Large Cell")
                    println("******************************************")
                }
            } else {
                if let indexPathOld = indexPath {
                    if let smallCell = self.tableViewEvent.cellForRowAtIndexPath(indexPathOld) as? SmallTableViewCell {
                        if      indexPathOld.section == 0 {  self.configureSmallCell(smallCell, frc:self.upcomingFRC, row:indexPathOld.row)  }
                        else if indexPathOld.section == 1 {  self.configureSmallCell(smallCell, frc:self.elapsedFRC, row:indexPathOld.row)  }
                    } else {
                        println("******************************************")
                        println("found nil smallCell - configure Small Cell")
                        println("******************************************")
                    }
                } else {
                    println("******************************************")
                    println("found nil indexPath - configure Small Cell")
                    println("******************************************")
                }
            }
        case .Move:
            println("move")
            if var indexPathOld = indexPath {
                if controller == self.elapsedFRC {  indexPathOld = NSIndexPath(forRow: indexPath!.row, inSection: 1)  }
                println("O indexPath : \(indexPathOld)")
                self.tableViewEvent.deleteRowsAtIndexPaths([indexPathOld], withRowAnimation: .Fade)
            }
            if var indexPathNew = newIndexPath {
                if controller == self.elapsedFRC {  indexPathNew = NSIndexPath(forRow: newIndexPath!.row, inSection: 1)  }
                println("N indexPath : \(indexPathNew)")
                self.tableViewEvent.insertRowsAtIndexPaths([indexPathNew], withRowAnimation: .Fade)
            }
        default:
            return
    }
}


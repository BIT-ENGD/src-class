    class Circles {

        //Defining the rounded rect (Circle)
        func roundRect(radius: CGFloat, angle: CGFloat) -> UIBezierPath {

            //Creating the rounded the rectangle (Circle)
            var roundedRect = UIBezierPath()
            roundedRect.addArcWithCenter(CGPointZero, radius: radius,
                startAngle: 0, endAngle: angle ,
                clockwise: true)

            return roundedRect
        }


        //Drawing the Bezier Path (Circle)
        func drawRect(rect: UIBezierPath){

            rect.moveToPoint(self.point)
            UIColor.blackColor().setStroke()
            rect.stroke()
        }

        //Giving the rounded rect (Circle) it's position
        var point = CGPointMake(500, 500)
    }
    //Giving the rounded rect (Circle) it's size
    var newRect = Circles().roundRect(200.0, angle: 7)

    //Drawing the rounded rect (Circle)
    Circles().drawRect(newRect)

class CircleView: UIView {
override func drawRect(rect: CGRect) {

    // Creating the rectangle's size
    var newRect = Circles().roundRect(200.0, angle: 7)

    //Drawing the rectangle
    Circles().drawRect(newRect)
}


//Holding all to do with the circle
class Circles {

    //Defining the rounded rect (Circle)
    func roundRect(radius: CGFloat, angle: CGFloat) -> UIBezierPath {

        //Creating the rounded rect (Circle)
        var roundedRect = UIBezierPath()
        roundedRect.addArcWithCenter(CGPointZero, radius: radius,
            startAngle: 0, endAngle: angle ,
            clockwise: true)

        return roundedRect
    }


    //Drawing the Bezier Path (Circle)
    func drawRect(rect: UIBezierPath){

        rect.moveToPoint(self.point)
        UIColor.blackColor().setStroke()
        UIColor.blackColor().setFill()
        rect.stroke()
        rect.fill()
    }

    //Giving the rounded rect (Circle) it's position
    var point = CGPointMake(500, 500)
    }

}



class ViewController: UIViewController {



override func viewDidLoad() {
super.viewDidLoad()
    // Do any additional setup after loading the view, typically from a nib.

    //Generating the background
    self.view.backgroundColor = UIColor(patternImage: UIImage(named: "normalpaper.jpg"))

    let circleView = CircleView(frame: self.view.bounds)
    self.view.addSubview(circleView)

}


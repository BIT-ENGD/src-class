import UIKit

class AddPostItemTableViewController: UITableViewController, UIImagePickerControllerDelegate, UINavigationControllerDelegate, UITableViewDelegate {

@IBOutlet var titleName: UILabel!
@IBOutlet var tapCamera: UIImageView!
@IBOutlet var tapLibrary: UIImageView!
@IBOutlet weak var itemNameField:UITextField!

@IBOutlet weak var AddPostTableView:UITableView!

var selectedImageArray:[UIImageView!] = []
var selectedItemNameArray:[String!] = []

let tapCameraRec = UITapGestureRecognizer()
let tapLibraryRec = UITapGestureRecognizer()

override func viewDidLoad() {
    super.viewDidLoad()
    tapCameraRec.addTarget(self, action: "tappedCamera")
    tapLibraryRec.addTarget(self, action: "tappedLibrary")
    tapCamera.addGestureRecognizer(tapCameraRec)
    tapLibrary.addGestureRecognizer(tapLibraryRec)
    tapLibrary.userInteractionEnabled = true
    tapCamera.userInteractionEnabled = true

    // Do any additional setup after loading the view.
}


override func didReceiveMemoryWarning() {
    super.didReceiveMemoryWarning()
    // Dispose of any resources that can be recreated.
}

override func touchesBegan(touches: NSSet, withEvent event: UIEvent) {
    self.view.endEditing(true)
    // Dismiss keyboard on touch
}

func tappedLibrary(){

    if itemNameField.text == "" {
        let alertController = UIAlertController(title: "Oops", message: "Please key in the name of item first", preferredStyle: .Alert)
        let doneAction = UIAlertAction(title: "OK", style: .Default, handler: nil)
        alertController.addAction(doneAction)

        self.presentViewController(alertController, animated: true, completion: nil)

        return
    }

    else if UIImagePickerController.isSourceTypeAvailable(.PhotoLibrary) {
        let imagePicker = UIImagePickerController()
        imagePicker.allowsEditing = true
        imagePicker.delegate = self
        imagePicker.sourceType = .PhotoLibrary

        self.presentViewController(imagePicker, animated: true, completion: nil)
    }
}

func tappedCamera(){

    if itemNameField.text == "" {
        let alertController = UIAlertController(title: "Oops", message: "Please key in the name of item first", preferredStyle: .Alert)
        let doneAction = UIAlertAction(title: "OK", style: .Default, handler: nil)
        alertController.addAction(doneAction)

        self.presentViewController(alertController, animated: true, completion: nil)

        return
    }

    else if UIImagePickerController.isSourceTypeAvailable(.PhotoLibrary) {
        let imagePicker = UIImagePickerController()
        imagePicker.allowsEditing = true
        imagePicker.delegate = self
        imagePicker.sourceType = .Camera

        self.presentViewController(imagePicker, animated: true, completion: nil)
    }
}

func imagePickerController(picker: UIImagePickerController!, didFinishPickingImage image:UIImageView!, editingInfo: [NSObject : AnyObject]!) {
    selectedImageArray.append(image)
    selectedImageArray.contentMode = UIViewContentMode.ScaleAspectFill
    selectedImageArray.clipsToBounds = true

    selectedItemNameArray.append(itemNameField!.text)

    dismissViewControllerAnimated(true, completion: nil)
}

// MARK: - Table view data source

override func numberOfSectionsInTableView(tableView: UITableView) -> Int {
    // #warning Potentially incomplete method implementation.
    // Return the number of sections.
    return 1
}

override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int
{
    // Return the number of rows in the section.
        return self.selectedItemNameArray.count
}

override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath:
    NSIndexPath) -> UITableViewCell {

        let cellIdentifier = "ItemCell"
        let cell = tableView.dequeueReusableCellWithIdentifier(cellIdentifier, forIndexPath:
            indexPath) as AddPostTableViewCell

        // Configure the cell...
        cell.itemName.text = selectedItemNameArray[indexPath.row]
        cell.itemImage.image = UIImage(named: selectedImageArray[indexPath.row])

        return cell
}

import UIKit

class AddPostTableViewCell: UITableViewCell {

@IBOutlet weak var itemName:UILabel!
@IBOutlet weak var itemImage:UIImageView!

override func awakeFromNib() {
    super.awakeFromNib()
    // Initialization code
}

override func setSelected(selected: Bool, animated: Bool) {
    super.setSelected(selected, animated: animated)

    // Configure the view for the selected state
}

}


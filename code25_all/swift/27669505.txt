import UIKit
import HealthKit

class QueryHK: NSObject {

var steps = Double()
var date = NSDate()

func performHKQuery (completion: (steps: Double, date: NSDate) -> Void){

    let healthKitManager = HealthKitManager.sharedInstance
    let stepsSample = HKQuantityType.quantityTypeForIdentifier(HKQuantityTypeIdentifierStepCount)
    let stepsUnit = HKUnit.countUnit()
    let sampleQuery = HKSampleQuery(
        sampleType: stepsSample,
        predicate: nil,
        limit: 0,
        sortDescriptors: nil)
        {
            (sampleQuery, samples, error) in

            for sample in samples as [HKQuantitySample]
            {

                self.steps  = sample.quantity.doubleValueForUnit(stepsUnit)
                self.date  = sample.startDate

            }
            // Calling the completion handler with the results here
            completion(steps: self.steps, date: self.date)
    }
    healthKitManager.healthStore.executeQuery(sampleQuery)
}
}

import UIKit

class ViewController: UIViewController {
        var dt = NSDate()
        var stp = Double()

    var query = QueryHK()

    override func viewDidLoad() {
        super.viewDidLoad()

        printStepsAndDate()
    }

    func printStepsAndDate() {
        query.performHKQuery() {
            (steps, date) in
            self.stp = steps
            self.dt = date
            println(self.stp)
            println(self.dt)
        }
    }
}


    func readData()->NSArray{
    let entityName:String = "Properties"
    let appDel:AppDelegate = UIApplication.sharedApplication().delegate as AppDelegate
    let context:NSManagedObjectContext = appDel.managedObjectContext

    // Specify what this will be working with
    let request = NSFetchRequest(entityName: entityName)

    // This will return instance of the object needed. Without which this would be
    // a pain to work with. This bit saves a few steps.
    request.returnsObjectsAsFaults = false;

    // Get the data and put it into a variable
    var results = context.executeFetchRequest(request, error: nil)

    return results!
}

var properties = Properties()
    var getInfo = properties.readData()
    println(getInfo)

    for eachInfo:AnyObject in getInfo{
        println(eachInfo)
    }

<NSManagedObject: 0x7f87fa711d60> (entity: Properties; id: 0xd000000000040000 <x-coredata://F627AD12-3CEC-4117-8294-616ADEE068DC/Properties/p1> ; data: {
acreage = 0;
conditionId = 0;
contactBusinessName = nil;
contactEmail = nil;
contactName = Bob;
contactPhoneNumber = 456456456;
isFav = nil;
latitude = 0;
longitude = 0;
price = 0;
propertyCity = nil;
propertyId = nil;
propertyState = nil;
propertyStreetAddress = nil;
propertyType = 0;
propertyZip = nil;
squareFeet = 0;
year = 0;

for eachInfo:AnyObject in getInfo{
        println(eachInfo.contactName)
    }

    func readData()->Array<Properties>{


    let appDel:AppDelegate = UIApplication.sharedApplication().delegate as AppDelegate
    let context:NSManagedObjectContext = appDel.managedObjectContext

    // Specify what this will be working with
    let request = NSFetchRequest(entityName: entityName)

    // This will return instance of the object needed. Without which this would be
    // a pain to work with. This bit saves a few steps.
    request.returnsObjectsAsFaults = false;

    // Get the data and put it into a variable
    var results = context.executeFetchRequest(request, error: nil)

    return results! as Array<Properties>


}

       var properties = Properties()
    var getInfo = properties.readData()

    for eachInfo in getInfo{

        println(eachInfo.contactName)

    }


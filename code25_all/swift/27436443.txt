Derived
Base<T>
class Base<T> {
  func method(Int) -> T {
    fatalError("Subclasses must override method.")
  }
}

class Derived<T> : Base<Int> {
  override func method(input:Int) -> Int {
    return input
  }
}

Derived
class Container {
  let item: Base<Int>
  init(item:Base<Int>) {
    self.item = item
  }
  func method(input:Int) -> Int {
    return item.method(input)
  }    
}
let a = Derived<Int>()
let b = Container(item:a)
let test = b.method(42)

Derived<Int>.method
self
Container.method
Derived<Int>.method

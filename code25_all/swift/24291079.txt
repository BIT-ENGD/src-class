class HTMLElement {

    let name: String
    let text: String?

    @lazy var asHTML: () -> String = {
        [unowned self] in
        if let text = self.text {
            return "<\(self.name)>\(text)</\(self.name)>"
        } else {
            return "<\(self.name) />"
        }
    }

    init(name: String, text: String? = nil) {
        self.name = name
        self.text = text
    }

    deinit {
        println("\(name) is being deinitialized.")
    }
}

unowned
var paragraph: HTMLElement? = HTMLElement(name: "p", text: "Hello, world!")
println(paragraph!.asHTML())        
paragraph = nil

<p>Hello, world!</p>
p is being deinitialized.

paragraph
<p>Hello, world!</p>

unowned
weak
unowned
...
    @lazy var asHTML: () -> String = {
        [weak self] in
        if let text = self?.text {
            return "<\(self?.name)>\(text)</\(self?.name)>"
        } else {
            return "<\(self?.name) />"
        }
    }
...

p is being deinitialized.

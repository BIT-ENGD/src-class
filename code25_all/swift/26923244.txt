TableViewController
IBAction
fatal error: unexpectedly found nil while unwrapping an Optional value

@IBAction func saveButtonTapped(sender: UIBarButtonItem) {
    println("saveButtonTapped")
    delegate!.filterViewController(self,
        didSelectPredicate: selectedPredicate,
        sortDescriptor: selectedSortDescriptor)

    dismissViewControllerAnimated(true, completion:nil)
}

import UIKit
import CoreData

protocol FilterViewControllerDelegate: class {
    func filterViewController(filter: RollerFilterViewController,
        didSelectPredicate predicate:NSPredicate?,
        sortDescriptor:NSSortDescriptor?)
}

class RollerFilterViewController: UITableViewController {

// outlet connected to cell on storyboard
    @IBOutlet weak var shoulderCell: UITableViewCell!
// Variables for filter
weak var delegate: FilterViewControllerDelegate?
var selectedSortDescriptor: NSSortDescriptor?
var selectedPredicate: NSPredicate?
var coreDataStack: CoreDataStack!

lazy var shoulderPredicate: NSPredicate = {
    var predicate = NSPredicate(format: "stretch.muscleGroup contains[cd] %@", "shoulder")
    return predicate!
    }()

// MARK - UITableViewDelegateMethods
override func tableView(tableView: UITableView,
    didSelectRowAtIndexPath indexPath: NSIndexPath) {

        let cell = tableView.cellForRowAtIndexPath(indexPath)!

        switch cell {
            // cases for muscle groups
        case shoulderPredicate:
            selectedPredicate = shoulderPredicate
        default:
            println("default case")
        }
        if cell.accessoryType == .Checkmark {
            cell.accessoryType = .None
            println("removed checkmark")
        } else {
            cell.accessoryType = .Checkmark
            println("set to checkmark")
        }
}
// MARK - UIButton target action

@IBAction func saveButtonTapped(sender: UIBarButtonItem) {
    println("saveButtonTapped")
    delegate!.filterViewController(self,
        didSelectPredicate: selectedPredicate,
        sortDescriptor: selectedSortDescriptor)

    dismissViewControllerAnimated(true, completion:nil)
}
}


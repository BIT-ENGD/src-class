func doFancyDiceRoll() {      
    for x in 1...100 {
        Die1.image = PipsImg[RollOne()]
        Die2.image = PipsImg[RollOne()]
        Die3.image = PipsImg[RollOne()]
    }          
}

import UIKit

class ViewController: UIViewController {


//( stripping out stuff unneeded for discussion )

// refers to same label below - works but kosher??    
@IBOutlet var btnRoll_x: UIView  

@IBAction func btnRoll(sender: AnyObject) {
    triggerRoll()
}

var timer : NSTimer? = nil
var rolls : Int = 0

func triggerRoll() {

    //hiding is bad UI, but until i know how to "disable & dim"
    btnRoll_x.hidden = true

    timer = NSTimer.scheduledTimerWithTimeInterval(0.10, target: self, selector: "doFancyDiceRoll", userInfo: nil, repeats: true);

}

func doFancyDiceRoll() {

    Die1.image = PipsImg[randomInt(6)]
    Die2.image = PipsImg[randomInt(6)]
    Die3.image = PipsImg[randomInt(6)]

    if (++rolls > 10)
    {
        timer?.invalidate()
        timer = nil
        rolls = 0   // DCB added this presumed missing line
        btnRoll_x.hidden = false //again, need to do this better
    }
}

}

func doFancyDiceRoll() {      
    for x in 1...100 {
        Die1.image = PipsImg[RollOne()] // and 2 and 3 of course.....
        VIewController.forceRedraw <<=== something like this, or maybe
        ViewController.wait(.05)   <<==  this??  I dunno ;-)
    }          
}


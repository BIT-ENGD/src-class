UICollectionView
UICollectionViewFlowLayout
UITableView
class ListLayout: UICollectionViewFlowLayout {
    override func layoutAttributesForElementsInRect(rect: CGRect) -> [AnyObject]? {
        if var answer = super.layoutAttributesForElementsInRect(rect) {
            for attr in (answer as [UICollectionViewLayoutAttributes]) {
                let ip = attr.indexPath
                attr.frame = self.layoutAttributesForItemAtIndexPath(ip).frame
            }
            return answer;
        }
        return nil
    }

    override func layoutAttributesForItemAtIndexPath(indexPath: NSIndexPath) -> UICollectionViewLayoutAttributes! {
        let currentItemAtts = super.layoutAttributesForItemAtIndexPath(indexPath) as UICollectionViewLayoutAttributes
        if indexPath.item == 0 {
            var frame = currentItemAtts.frame
            frame.origin.y = 0
            currentItemAtts.frame = frame
            return currentItemAtts
        }
        let prevIP = NSIndexPath(forItem: indexPath.item - 1, inSection: indexPath.section)
        let prevFrame = self.layoutAttributesForItemAtIndexPath(prevIP).frame
        let prevFrameTopPoint = prevFrame.origin.y + prevFrame.size.height
        var frame = currentItemAtts.frame
        frame.origin.y = prevFrameTopPoint
        currentItemAtts.frame = frame
        return currentItemAtts
    }
}

preferredLayoutAttributesFittingAttributes
override func preferredLayoutAttributesFittingAttributes(layoutAttributes: UICollectionViewLayoutAttributes) -> UICollectionViewLayoutAttributes! {
    let attr: UICollectionViewLayoutAttributes = layoutAttributes.copy() as UICollectionViewLayoutAttributes
    attr.frame.size = CGSizeMake(self.frame.size.width, myHeight)
    return attr
}

flowLayout.estimatedItemSize = CGSize(width: UIScreen.mainScreen().bounds.size.width, height: 60)


(relationship:arrRecord, Destination:record, Inverse:recordGroup)
(relationship:recordGroup, Destination:group, Inverse:arrRecord)
let fetch: NSFetchRequest  = NSFetchRequest(entityName: "group")
if let fetchGroups = APP_DELEGATE.managedObjectContext!.executeFetchRequest(fetch, error: nil) as? [group]
{
 for group in fetchGroups
  {

    let sortDesc = NSSortDescriptor(key: "name", ascending: true)
    let arrSorted = group.arrRecord.sortedArrayUsingDescriptors([sortDesc])
    print("arrSorted === \(arrSorted)") // sorted by name

    group.arrRecord = NSSet(array: arrSorted)
    print("NSSet(array: group.arrRecord) === \(group.arrRecord)") //not sorted by name

 } 
}


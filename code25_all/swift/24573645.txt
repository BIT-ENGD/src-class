Either
b4
struct Either <T1, T2> {
    let first: T1?
    let second: T2?

    init(first: T1?, second: T2?) {
        self.first = first
        self.second = second
    }

    func either() -> Bool {
        return (self.first != nil) || (self.second != nil)
    }

    func which() -> Any? {
        if self.first != nil {
            return self.first
        } else if self.second != nil {
            return self.second
        }
        return nil
    }
}

var s1: String? = nil
var s2: Int? = nil

let b1 = Either(first: s1, second: s2)
b1.either() // false
b1.which() // {nil}

s1 = "Hello"
let b2 = Either(first: s1, second: s2)
b2.either() // true
b2.which()  // {Some Hello}

s1 = nil
s2 = 7
let b3 = Either(first: s1, second: s2)
b3.either() // true
b3.which()  // {Some 7}

// all as expected, however
let b4 = Either(first: nil, second: nil)
b4.either() // true !!! <<<<<<<<<<<<<<<<<<
b4.which()  // {nil}


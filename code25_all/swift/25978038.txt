import UIKit

override func viewDidLoad() {
    super.viewDidLoad()
    // Do any additional setup after loading the view, typically from a nib.
}
override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
    let vc = segue.destinationViewController as TableViewController
    vc.prepare(/*initializing things..*/)

}

import UIKit

@IBOutlet var tableView: UITableView!


//this array contains the date to display in cells and in viewDidLoad is correctly  initialized with all the right data..
private var toVisualize:[Visualizable] = []

 override func viewDidLoad() {
    super.viewDidLoad()
    /*I need to initialize the tableview even if it's an outlet rightly connected to the storyboard because it's always nil when viewDidLoad is called*/
    self.loadArticles()
    self.tableView = UITableView(frame: self.tableView.frame, style: UITableViewStyle.Plain)
    //navigationController?.hidesBarsOnSwipe = true
    self.tableView.delegate = self
    self.tableView.dataSource = self
    self.tableView.allowsSelection = true
    var cell = UINib(nibName: "MyCell", bundle: nil)
    /*first I've used a prototype cell defined in the storyboard and a class with the related outlets and all connected in the right way but the result was a blank screen so I've tried to use a xib file to define the layout of my custom cell and the tableview started showing my cells.. but still I can't figure out why the tableview is nil*/
    self.tableView.registerNib(cell, forCellReuseIdentifier: "Cell")
    //self.tableView.registerClass(CellaTableViewCell.classForCoder(), forCellReuseIdentifier: "Cell")
    self.view.addSubview(self.tableView)
    self.tableView.reloadData()
    // Do any additional setup after loading the view.
}


func prepare(/*preparing function used from first view controller..*/)->()
{
    //this func is not changing anything because I've added it later..
}

override func didReceiveMemoryWarning() {
    super.didReceiveMemoryWarning()
    // Dispose of any resources that can be recreated.
}

//this function is correctly working and showing the cells when the tableview is initialized
func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
    var cell = self.tableView?.dequeueReusableCellWithIdentifier("Cell", forIndexPath: indexPath) as MyCell

    var toLoad = self.toVisualize[indexPath.row].getVisualizableProperties()



    cell.loadItem(toLoad.title, descr: toLoad.descr, date: toLoad.date)


    if let URL = toLoad.thumbUrl
    {
        var image = self.imageCache[URL]

        if( image == nil ) {
            // If the image does not exist, we need to download it
            var imgURL: NSURL = NSURL(string: URL)

            // Download an NSData representation of the image at the URL
            let request: NSURLRequest = NSURLRequest(URL: imgURL)
            NSURLConnection.sendAsynchronousRequest(request, queue: NSOperationQueue.mainQueue(), completionHandler: {(response: NSURLResponse!,data: NSData!,error: NSError!) -> Void in
                if error == nil {
                    image = UIImage(data: data)

                    // Store the image in to our cache
                    self.imageCache[URL] = image
                    dispatch_async(dispatch_get_main_queue(), {
                        if let cellToUpdate = tableView.cellForRowAtIndexPath(indexPath) as? MyCell {
                            cellToUpdate.thumbnail?.image = image
                        }
                    })
                }
                else {
                    println("Error: \(error.localizedDescription)")
                }
            })

        }
        else {
            dispatch_async(dispatch_get_main_queue(), {
                if let cellToUpdate = tableView.cellForRowAtIndexPath(indexPath) as? MyCell {
                    cellToUpdate.thumbnail?.image = image
                }
            })
        }

    }

    return cell
}

func numberOfSectionsInTableView(tableView: UITableView) -> Int {
    return 1
}

func tableView(tableView: UITableView!,heightForRowAtIndexPath indexPath: NSIndexPath!) -> CGFloat
{
    return 120.0
}

func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
    return self.toVisualize.count
}


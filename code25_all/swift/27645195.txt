override func viewDidLoad() {
    /*This is where I would put the code to load the data. See the first 
    part of viewWillAppear too see what the code is.*/
    super.viewDidLoad()
    NSNotificationCenter.defaultCenter().addObserver(self, selector:"viewWillAppear:", name:
        UIApplicationWillEnterForegroundNotification, object: nil)
}

override func viewWillAppear(animated: Bool) {
    if(!defaults.boolForKey("objectivesDownloaded")) {
        downloadObjectives()
        defaults.setBool(true, forKey: "objectivesDownloaded")
    }
    defaults.synchronize()
    fetchObjectives()
    super.viewWillAppear(animated)
}

func fetchObjectives() {
    let fetchRequest = NSFetchRequest(entityName: "Objective")
    let sortDescriptor = NSSortDescriptor(key: "logIndex", ascending: true)
    fetchRequest.sortDescriptors = [sortDescriptor]
    var error: NSError?
    let fetchedResults = managedContext.executeFetchRequest(fetchRequest, error: &error) as [NSManagedObject]?
    if var results = fetchedResults {
        objectives = results
    } else {
        println("Could not fetch \(error), \(error?.userInfo)")
    }
    tableView.reloadData()
}


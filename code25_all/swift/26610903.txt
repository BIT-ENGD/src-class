Trying to start MapKit location updates without prompting for location authorization. Must call -[CLLocationManager requestWhenInUseAuthorization] or -[CLLocationManager requestAlwaysAuthorization] first.

NSLocationAlwaysUsageDescription
import UIKit
import MapKit

class AwesomeMap : UIViewController, MKMapViewDelegate, CLLocationManagerDelegate {
    var map: MKMapView?
    var manager: CLLocationManager?

    func setup() {

        manager = CLLocationManager()
        manager!.delegate = self

        map!.delegate = self // map is being set from another controller

        manager!.requestAlwaysAuthorization()
        manager!.startUpdatingLocation()
    }

    func locationManager(manager: CLLocationManager!, didChangeAuthorizationStatus status: CLAuthorizationStatus) {
        println("permisison did change")
        if(status == CLAuthorizationStatus.AuthorizedWhenInUse || status == CLAuthorizationStatus.Authorized) {
          map!.showsUserLocation = true
        }
    }

    func locationManager(manager: CLLocationManager!, didUpdateLocations locations: [AnyObject]!) {
        for location in (locations as Array) {
            var loc = (location as CLLocation)
            println(loc.coordinate.latitude)

            let region = MKCoordinateRegion(center: loc.coordinate, span: MKCoordinateSpanMake(0.05, 0.05))
            map!.setRegion(region, animated: true)
        }
    }

    func locationManager(manager: CLLocationManager!, didFailWithError error: NSError!) {
        println("fail")
    }

}

import UIKit
import MapKit

class AwesomeMap : UIViewController, MKMapViewDelegate, CLLocationManagerDelegate {
var manager = CLLocationManager()
var map: MKMapView?

func setup(mapView: MKMapView) { // passing the IBOutlet from another controller

    // the change I made was around the following six lines I think...

    map = mapView
    map!.delegate = self

    manager.delegate = self
    manager.requestAlwaysAuthorization()

    map!.showsUserLocation = true
    manager.startUpdatingLocation()
}

func locationManager(manager: CLLocationManager!, didUpdateLocations locations: [AnyObject]!) {
    for location in (locations as Array) {
        var loc = (location as CLLocation)
        println(loc.coordinate.latitude)

        let region = MKCoordinateRegion(center: loc.coordinate, span: MKCoordinateSpanMake(0.05, 0.05))
        map!.setRegion(region, animated: true)
    }
}

func locationManager(manager: CLLocationManager!, didFailWithError error: NSError!) {
    println("fail") // nothing happens here
}


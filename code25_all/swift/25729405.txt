class LayerScrollView: NSScrollView {

    var containerLayer: ContainerLayer!

    override func awakeFromNib() {
        documentView = ContainerLayer(frame: frame)
    }
}

class ContainerLayer: NSView {

    let documentLayer: DocumentLayer = DocumentLayer()

    override init(frame frameRect: NSRect) {
        super.init(frame: frameRect)
        autoresizesSubviews = true
        wantsLayer = true
        layer = CATiledLayer()
        layer?.delegate = self
        layer?.backgroundColor = NSColor.blueColor().CGColor
        layer?.masksToBounds = true
        documentLayer.frame = CGRect(x: frame.width / 4.0, y: frame.height / 4.0, width: frame.width / 2.0, height: frame.height / 2.0)
        documentLayer.delegate = documentLayer
        layer?.addSublayer(documentLayer)
        documentLayer.autoresizingMask = CAAutoresizingMask.LayerWidthSizable | CAAutoresizingMask.LayerHeightSizable
        documentLayer.setNeedsDisplay()
    }

    required init(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    override func drawLayer(layer: CALayer!, inContext ctx: CGContext!) {
        CGContextSetFillColorWithColor(ctx, NSColor.redColor().CGColor)
        CGContextFillRect(ctx, layer.bounds)
    }
}

class DocumentLayer: CALayer {

    override func drawLayer(layer: CALayer!, inContext ctx: CGContext!) {
        CGContextSetFillColorWithColor(ctx, NSColor.redColor().CGColor)
        CGContextFillRect(ctx, layer.bounds)
    }
}


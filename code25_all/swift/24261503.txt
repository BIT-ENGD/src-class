let borderCategory: UInt32 = 1

let ball = SKShapeNode(circleOfRadius: 30)
let bCategoryName = "Ball"
let bCategory: UInt32 = 2

let paddle = SKShapeNode(rectOfSize: CGSize(width: 90, height: 35))
let pCategoryName = "Paddle"
let pCategory: UInt32 = 3

override func didMoveToView(view: SKView) {
    /* Setup your scene here */
    self.backgroundColor = SKColor.whiteColor()
    self.physicsWorld.gravity = CGVectorMake(0, 0)

    let borderBody = SKPhysicsBody(edgeLoopFromRect: self.frame)
    NSLog(String(self.frame.width) + ":" + String(self.frame.height), nil)
    self.physicsBody = borderBody
    self.physicsBody.friction = 0.0
    self.physicsBody.categoryBitMask = borderCategory
    self.physicsBody.restitution = 1.0

    setupPaddle()
    setupBall()
}

func setupPaddle() {
    paddle.name = pCategoryName
    paddle.position = CGPointMake(CGRectGetMidX(self.frame), paddle.frame.size.height * 0.6)
    paddle.fillColor = SKColor.blackColor()
    self.addChild(paddle)

    paddle.physicsBody = SKPhysicsBody(rectangleOfSize: CGSize(width: 90, height: 35))
    paddle.physicsBody.restitution = 0.1
    paddle.physicsBody.friction = 0.4
    paddle.physicsBody.dynamic = false
    paddle.physicsBody.categoryBitMask = pCategory
    paddle.physicsBody.collisionBitMask = bCategory
}

func setupBall() {
    ball.name = bCategoryName
    ball.position = CGPointMake(self.frame.size.width/2, paddle.position.y+paddle.frame.height+10)
    ball.fillColor = SKColor.blackColor()
    self.addChild(ball)

    ball.physicsBody = SKPhysicsBody(circleOfRadius: 30)
    ball.physicsBody.friction = 0.0
    ball.physicsBody.restitution = 1.0
    ball.physicsBody.linearDamping = 0.0
    ball.physicsBody.angularDamping = 0.0
    ball.physicsBody.allowsRotation = false
    ball.physicsBody.dynamic = true
    ball.physicsBody.categoryBitMask = bCategory
    ball.physicsBody.collisionBitMask = borderCategory
}

NSLog(String(self.frame.width) + ":" + String(self.frame.height), nil)
1024.0:768.0
viewDidLoad
viewWillLayoutSubview
UIDevice.currentDevice().orientation.isPortrait

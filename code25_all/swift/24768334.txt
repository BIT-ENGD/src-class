class LoginViewController: UIViewController {

var statusCode = Int()
var returnedName = String()

@IBOutlet var usernameField: UITextField
@IBOutlet var passwordField: UITextField

override func viewDidLoad() {
    super.viewDidLoad()
    // Do any additional setup after loading the view, typically from a nib.
}

    @IBAction func loginAction(sender: AnyObject) {

    var invalidLoginAlert = UIAlertView(title: "Invalid Username/Password", message: "Please input a correct Username or Password", delegate: nil, cancelButtonTitle: "Dismiss")

    var noInfoLoginAlert = UIAlertView(title: "Invalid Username/Password", message: "Please input a Username and Password to Proceed", delegate: nil, cancelButtonTitle: "Dismiss")

    usernameField.resignFirstResponder()
    passwordField.resignFirstResponder()

    if usernameField.text != "" && passwordField.text != "" {
        login(usernameField.text.lowercaseString, password: passwordField.text.lowercaseString)
        sleep(2)
        if statusCode == 300 {
            println("Login Success")
            let MainView = self.storyboard.instantiateViewControllerWithIdentifier("MainView") as MainViewController
            self.presentViewController(MainView, animated: true, completion: nil)
        }
        else {
            invalidLoginAlert.show()
            println("Login Failed")
        }
    }
    else {
        noInfoLoginAlert.show()
        println("Cannot Login, Invalid Information")
    }
}

func login(username: String, password: String){

    // Now escape anything else that isn't URL-friendly
    var usernameID = username.stringByAddingPercentEscapesUsingEncoding(NSUTF8StringEncoding)
    var passwordID = password.stringByAddingPercentEscapesUsingEncoding(NSUTF8StringEncoding)

    var urlPath = "http://www.example.com"
    var url: NSURL = NSURL(string: urlPath)
    var session = NSURLSession.sharedSession()
    var task = session.dataTaskWithURL(url, completionHandler: {data, response, error -> Void in
        var err: NSError?
        var jsonResult = NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions.MutableContainers, error: &err) as NSDictionary

        var name: String? = jsonResult["data"] as String?;
        var code: Int = jsonResult["status"] as Int;

        self.statusCode = code
        println(self.statusCode)
        })
    task.resume()
}


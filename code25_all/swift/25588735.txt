let enemy = SKShapeNode(circleOfRadius: 5)

func enemyGenerator() {

//takes an x value and calculates the corresponding y coordinate on the circle.
    func enemyYSpawnPosition(x: CGFloat) -> CGFloat {
        return sqrt(104006.25 - (x * x))
    }

//randomly selects an x value from a range of acceptable values.
    func enemyXSpawnPosition() -> CGFloat {
        func randRange (lower: Int , upper: Int) -> Int {
            return lower + Int(arc4random_uniform(UInt32(upper - lower + 1)))
        }
        var xValue = randRange(-2.5, 322.5)
        return CGFloat (xValue)
    }

//used to randomly decide whether the y value will be subtracted or added.
    func coinFlip (lower: Int, upper: Int) -> Int {
        return lower + Int(arc4random_uniform(UInt32(upper - lower + 1)))
    }
    var randResult = coinFlip(1, 2)

//positions the enemy using the functions above.
    if randResult == 1 {
        self.enemy.position = CGPointMake(enemyXSpawnPosition(), CGRectGetMidY(self.frame) + enemyYSpawnPosition(enemyXSpawnPosition()))
    }
    else {
        self.enemy.position = CGPointMake(enemyXSpawnPosition(), CGRectGetMidY(self.frame) - enemyYSpawnPosition(enemyXSpawnPosition()))
    }
}


import UIKit

class ViewController: UIViewController {

@IBOutlet var topSpace: NSLayoutConstraint!
@IBOutlet var bottomSpace: NSLayoutConstraint!
@IBOutlet var slidingView: UIView!
var fr: UIView?

override func viewDidLoad() {
    NSNotificationCenter.defaultCenter().addObserver(
        self, selector: "keyboardShow:",
        name: UIKeyboardWillShowNotification, object: nil)
    NSNotificationCenter.defaultCenter().addObserver(
        self, selector: "keyboardHide:",
        name: UIKeyboardWillHideNotification, object: nil)




    super.viewDidLoad()   

}


func textFieldDidBeginEditing(tf: UITextField) {
    self.fr = tf // keep track of the first responder
}

func textFieldShouldReturn(tf: UITextField) -> Bool {

    tf.resignFirstResponder()
    self.fr = nil
    return true

}

func keyboardShow(n:NSNotification) {
    let d = n.userInfo!
    var r = (d[UIKeyboardFrameEndUserInfoKey] as NSValue).CGRectValue()
    r = self.slidingView.convertRect(r, fromView:nil)
    let f = self.fr!.frame
    let y : CGFloat =
    f.maxY + r.size.height - self.slidingView.bounds.height + 5
    if r.origin.y < f.maxY {
        self.topSpace.constant = -y
        self.bottomSpace.constant = y
        self.view.layoutIfNeeded()
    }
}

func keyboardHide(n:NSNotification){
    self.topSpace.constant = 0
    self.bottomSpace.constant = 0
    self.view.layoutIfNeeded()
}



override func didReceiveMemoryWarning() {
    super.didReceiveMemoryWarning()
    // Dispose of any resources that can be recreated.
}


}


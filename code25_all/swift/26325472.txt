dispatch_group_create()
dispatch_group_enter()
dispatch_group_leave()
dispatch_group_wait()
dispatch_release()
    // Just send a request and call the when finished closure
    func sendRequest(url: String, whenFinished: () -> Void) {
        let request = NSMutableURLRequest(URL: NSURL(string: url))
        let task  = NSURLSession.sharedSession().dataTaskWithRequest(request, completionHandler: {
            (data, response, error) -> Void in
            whenFinished()
        })
        task.resume()
    }

    let urls = ["http://example.com?a",
        "http://example.com?b",
        "http://example.com?c",
        "http://example.com?d",
        "http://invalid.example.com"]

    var fulfilledUrls: Array<String> = []

    let group = dispatch_group_create();

    for url in urls {
        dispatch_group_enter(group)

        sendRequest(url, {
            () in
            fulfilledUrls.append(url)
            dispatch_group_leave(group)
        })

    }

    dispatch_group_wait(group, DISPATCH_TIME_FOREVER);

    for url in fulfilledUrls { println(url) }


class PatternsParser: NSObject, NSXMLParserDelegate
{
var myParser: NSXMLParser!
var arrayOfPatterns = [Element]()
var currentId = 0

init(url: NSURL)
{
    myParser = NSXMLParser(contentsOfURL: url)
    println(myParser.parserError?)
    super.init()
    myParser.delegate = self
    if myParser.parse()
    {
        println("Was able to parse")
    }
}

func parser(parser: NSXMLParser!, parseErrorOccurred parseError: NSError!) {
    println("error = \(parseError)")
}

// this is just a function to return the document path I use to create the NSURL
func getXMLPath(pathName path:String) -> String? 
{
    let paths = NSSearchPathForDirectoriesInDomains(.DocumentDirectory, .UserDomainMask, true)
    let documentsDirectory = paths[0] as String
    let filePath: String? = documentsDirectory?.stringByAppendingPathComponent(path)
    return filePath
}

    let buffer: NSURL! = NSURL(fileURLWithPath: getXMLPath(pathName:"patterns.xml"))
    var patternParser = PatternsParser(url:buffer)

myParser.parse()
parseErrorOcurred
validationErrorOcurred
<?xml version="1.0"?>
<game>  
    <pattern id="0" difficulty="0" width="800">
        <coinArea>
            <rect x="100" y="470,5" width="12" height="5"/>
        </coinArea>
    </pattern>

    <pattern id="1" difficulty="1" width="600">
        <coinArea>
            <rect x="100" edge="up" width="8"/>
        </coinArea>
        <wall orientation="vertical" texture="wallText">
            <rect x="300" edge="down"/>
        </wall>
    </pattern>

    <pattern id="2" difficulty="1" width="750">
        <wall orientation="vertical" texture="wallText">
            <rect edge="down" x="25"/>
        </wall>
        <wall orientation="vertical" texture="wallText">
            <rect edge="up" x="60"/>
        </wall>
        <electricLine orientation="horizontal">
            <rect edge="up" x="0"/>
        </electricLine>
    </pattern>
</game>


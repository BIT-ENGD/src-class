Data.List.concat
protocol Concatenable: SequenceType {
    func +(lhs: Self, rhs: Self) -> Self
    init()
}

extension Array: Concatenable {}

func concatenate<S: SequenceType, C: Concatenable where S.Generator.Element == C>(seq: S) -> C {
    var result = C()
    for elem in seq {
        result = result + elem
    }
    return result
}

result = result + elem
result += elem
+=
result = result + elem
result += elem
UInt8

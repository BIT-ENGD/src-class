var dates = [String]() 
var locations = [String]() 

@IBOutlet weak var myPicker: UIPickerView!

override func viewDidLoad() {
    super.viewDidLoad()

    // Do any additional setup after loading the view.
    var query = PFUser.query()
    query.getObjectInBackgroundWithId(PFUser.currentUser().objectId) { (object: PFObject!, error: NSError!) -> Void in
        self.dates = object["userLocationsDate"] as [String]
        self.locations = object["userLocationsCity"] as [String]
    }

   myPicker.reloadAllComponents()

}
func numberOfComponentsInPickerView(pickerView: UIPickerView) -> Int {
    return 1
}

func pickerView(pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {

    return dates.count

}

func pickerView(pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String! {

    return dates[row]    
}


protocol GreetingDelegate {
  func sayHi(name: String) -> String
}

class Class {
  var delegate: GreetingDelegate?

  func sayHi(name: String) -> String {
    return "Hello, \(name)"
  }

  func target() -> Any {
    if let delegate = delegate {
      return delegate
    }
    return self
  }
}

class Data: GreetingDelegate {

  func sayHi(name: String) -> String {
    return "Hi, \(name)"
  }
}

let classInstance = Class()
classInstance.sayHi("Matt")

classInstance.target()

let dataInstance = Data()
dataInstance.sayHi("Matt")

classInstance.delegate = dataInstance
classInstance.sayHi("Matt")

classInstance.target()


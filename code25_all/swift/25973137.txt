import UIKit

var myTimer:NSTimer!

class TimerManager: NSObject {

}

public class Timer {
// each instance has it's own handler
private var handler: (timer: NSTimer) -> () = { (timer: NSTimer) in }

public class func start(duration: NSTimeInterval, repeats: Bool, handler:(timer: NSTimer)->()) {
    var t = Timer()
    t.handler = handler
    myTimer = NSTimer.scheduledTimerWithTimeInterval(duration, target: t, selector: "processHandler:", userInfo: nil, repeats: repeats)
}

@objc private func processHandler(timer: NSTimer) {
    self.handler(timer: timer)
}
}

class countdown{
//handles the countdown for the timer and invalidates when it reaches 0
var y = 0

func begin(length:Int) {

    y = length

    let delta = 1
    let delay = 1.0
    Timer.start(delay, repeats: true) {
        (t: NSTimer) in

        self.y -= delta
        println(self.y)

        if (self.y <= 0) {
            t.invalidate()
        }
    }
}

func end () {
    println("timer stopped")
    myTimer.invalidate()
}
}

 countdownTimer.begin(120) //time length in seconds ... 120 = 2 mins

 countdownTimer.end() 


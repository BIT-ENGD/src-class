direction
MoveDirection
let coordinateGenerator: (Int) -> [(Int, Int)] = { (iteration: Int) -> [(Int, Int)] in
  let buffer = Array<(Int, Int)>(count:self.dimension, repeatedValue: (0, 0))
  for i in 0..<self.dimension {
    switch direction {
    case .Up: buffer[i] = (i, iteration)
    case .Down: buffer[i] = (self.dimension - i - 1, iteration)
    case .Left: buffer[i] = (iteration, i)
    case .Right: buffer[i] = (iteration, self.dimension - i - 1)
    }
  }
  return buffer
}

MoveDirection
enum MoveDirection {
    case Up
    case Down
    case Left
    case Right
}


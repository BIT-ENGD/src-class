override func viewDidLoad() {

    self.initNetworkCommunication() 
    self.button.sendActionsForControlEvents(UIControlEvents.TouchUpInside)
    var indexSet = NSIndexSet(index: 0)
    self.table.reloadSections(indexSet, withRowAnimation: UITableViewRowAnimation.Automatic)

    self.table.reloadData()
     super.viewDidLoad()

}
func initNetworkCommunication() {
    var readStream:Unmanaged<CFReadStream>?;
    var writeStream:Unmanaged<CFWriteStream>?     ;

    CFStreamCreatePairWithSocketToHost(kCFAllocatorDefault,"localhost",8023,&readStream,&writeStream)

    inputStream = readStream!.takeUnretainedValue()
    outputStream = writeStream!.takeUnretainedValue()

    self.inputStream!.delegate=self
    self.outputStream!.delegate = self

    self.inputStream!.scheduleInRunLoop(NSRunLoop.currentRunLoop(), forMode: NSDefaultRunLoopMode)
    self.outputStream!.scheduleInRunLoop(NSRunLoop.currentRunLoop(), forMode: NSDefaultRunLoopMode)

    self.inputStream.open()
    self.outputStream.open()


    var msg = "iam:\(self.name).groupView\r\n" //i connect to the server in this view
    var ptr = msg.nulTerminatedUTF8
    var res = outputStream.write(msg, maxLength:msg.lengthOfBytesUsingEncoding(NSASCIIStringEncoding))

}
 @IBAction func getGroups(sender : UIButton) {
    println("it is pressed")

    var msg = "mygroups:\(self.name):sdadsa"
    var res = outputStream.write(msg, maxLength: msg.lengthOfBytesUsingEncoding(NSASCIIStringEncoding))

}


import Foundation
import CoreData

@objc(Boss)
class Boss: NSManagedObject {    
    @NSManaged var name: String
}

func testCheckIfFetchGetTheCorrectClass() {
   // setup item
   let entity = NSEntityDescription.entityForName("Boss", inManagedObjectContext: moc)
   let boss = Boss(entity: entity!, insertIntoManagedObjectContext: moc)

  boss.name = "Chef"

  var bosses = [Boss]()

  var request = NSFetchRequest(entityName: "Boss")
  var e: NSError?
  if let results = moc.executeFetchRequest(request, error: &e) {
    println("results: \n\(results.description)\nCount:\(results.count)")
    if let downcastedSwiftArray = results as? [Boss] {
      // downcastedSwiftArray contains only UIView objects
      bosses = downcastedSwiftArray
    } else  {
      XCTAssert(false, "Down Cast Error")
    }
    println("Bosses : \n\(bosses.description)")
  } else {
    println("fetch error: \(e!.localizedDescription)")
    abort();
  }

    // This is an example of a functional test case.
    XCTAssert(true, "Pass")
}

bosses  [NameSpaceTestTests.Boss]   0 values        
results [AnyObject] 1 value 
  [0]   Boss_Boss_ *    

result
Boss
bosses

background
UIView
UIViews
UIPanGestureRecognizer
UIView
func labelPanned(sender:UIPanGestureRecognizer!){
    self.labelBeingMoved = sender.view.tag
    if(sender.state == UIGestureRecognizerState.Began || sender.state == UIGestureRecognizerState.Changed){
        var translation:CGPoint = sender.translationInView(self.background)
        self.labelCurrWidth += translation.x
        NSLog("self.labelCurrWidth is now %f", self.labelCurrWidth)
        if(self.labelCurrWidth <= self.labelOriginalWidth || self.labelCurrWidth >= self.labelMaxWidth){self.labelCurrWidth -= translation.x}
        sender.setTranslation(CGPointZero, inView: self.background)
        dispatch_async(dispatch_get_main_queue(), {
            self.background.setNeedsLayout()
            })
    }
}

layoutSubviews()
func layoutSubviews(){
    NSLog("layoutSubviews called")
    switch self.labelBeingMoved{
    case 1:
        NSLog("CASE 1")
        self.labelbg.frame = CGRectMake(self.labelbg.frame.origin.x, self.labelbg.frame.origin.y, self.labelCurrWidth, self.labelbg.frame.height)
    case 2:
        NSLog("CASE 2")
        self.label1bg.frame = CGRectMake(self.label1bg.frame.origin.x, self.label1bg.frame.origin.y, self.labelCurrWidth, self.label1bg.frame.height)
    case 3:
        NSLog("CASE 3")
        self.label2bg.frame = CGRectMake(self.label2bg.frame.origin.x, self.label2bg.frame.origin.y, self.labelCurrWidth, self.label2bg.frame.height)
    default:
        NSLog("An unknown error occurred")
    }
}

self.view.setNeedsLayout()
labelbg
UIView
UILabel

override func viewDidLoad() {
    super.viewDidLoad()

  var assetLib = ALAssetsLibrary()

  var url: NSURL = NSURL()

  var imageView = UIImageView(frame: self.view.bounds)

  assetLib.enumerateGroupsWithTypes(ALAssetsGroupType(ALAssetsGroupSavedPhotos), usingBlock: {
    (group: ALAssetsGroup!, stop: CMutablePointer<ObjCBool>) in

    group.setAssetsFilter(ALAssetsFilter.allPhotos())

    group.enumerateAssetsAtIndexes(NSIndexSet(index: group.numberOfAssets()-1), options: nil, usingBlock: {
      (result: ALAsset!, index: Int, stop: CMutablePointer<ObjCBool>) in
      if result {
        var alAssetRapresentation: ALAssetRepresentation = result.defaultRepresentation()
        url = alAssetRapresentation.url()

        if group == nil {

          assetLib.assetForURL(url, resultBlock: {
            (asset: ALAsset!) in

            var assetRep: ALAssetRepresentation = asset.defaultRepresentation()
            var iref = assetRep.fullResolutionImage().takeUnretainedValue()
            var image = UIImage(CGImage: iref)

            imageView.image = image

            self.view.addSubview(imageView)

            }, failureBlock: {
              (error: NSError!) in

              NSLog("Error!", nil)
            })
        }
      }
      })
    }, failureBlock: {
      (error: NSError!) in

      NSLog("Error!", nil)

    })
}

IdealityS`Swift._getOptionalValue <A>(Swift.Optional<A>) -> A:
0x6540:  pushl  %ebp
0x6541:  movl   %esp, %ebp
0x6543:  pushl  %ebx
0x6544:  pushl  %edi
0x6545:  pushl  %esi
0x6546:  subl   $0x8c, %esp
0x654c:  calll  0x6551                    ; Swift._getOptionalValue <A>  (Swift.Optional<A>) -> A + 17
...
...

{(result: ALAsset!, index: Int!, stop: CMutablePointer<ObjCBool>!) in 
...
}

group.enumerateAssetsAtIndexes(NSIndexSet(index: group.numberOfAssets()-1), options: nil, usingBlock: {

override func viewDidLoad() {
    super.viewDidLoad()

  var assetLib = ALAssetsLibrary()
  var url: NSURL = NSURL()

  var imageView = UIImageView(frame: self.view.bounds)

  assetLib.enumerateGroupsWithTypes(ALAssetsGroupType(ALAssetsGroupSavedPhotos), usingBlock: {
    (group: ALAssetsGroup?, stop: CMutablePointer<ObjCBool>) in
    if group != nil {
    group!.setAssetsFilter(ALAssetsFilter.allPhotos())
    group!.enumerateAssetsAtIndexes(NSIndexSet(index: group!.numberOfAssets()-1), options: nil, usingBlock: {
      (result: ALAsset!, index: Int, stop: CMutablePointer<ObjCBool>) in
      if result {
        var alAssetRapresentation: ALAssetRepresentation = result.defaultRepresentation()
        url = alAssetRapresentation.url()
      }
      })
    }
    else if group == nil {

      assetLib.assetForURL(url, resultBlock: {
        (asset: ALAsset!) in
        if asset != nil {
        var assetRep: ALAssetRepresentation = asset.defaultRepresentation()
        var iref = assetRep.fullResolutionImage().takeUnretainedValue()
        var image = UIImage(CGImage: iref)

        imageView.image = image


        self.view.addSubview(imageView)

        }
        }, failureBlock: {
          (error: NSError!) in

          NSLog("Error!", nil)
        })
    }

    }, failureBlock: {
      (error: NSError!) in

      NSLog("Error!", nil)

    })
}

assetLib.assetForURL(url, resultBlock: {
(asset: ALAsset!) in
if asset != nil {
 ...
}
}


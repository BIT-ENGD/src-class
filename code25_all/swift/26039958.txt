self.pageControl = UIPageControl()
self.pageControl?.frame = CGRectZero
self.pageControl?.currentPage = 0
self.pageControl?.numberOfPages = self.imageArray!.count
self.pageControl?.tintColor = UIColor.whiteColor()
self.pageControl?.userInteractionEnabled = false
self.navigationItem.titleView = self.pageControl?

for var i = 0; i<self.imageArray?.count; i++ {
    self.pageViews.append(nil)
}

let pagesScrollViewSize = self.scrollView.frame.size
self.scrollView.contentSize = CGSizeMake(pagesScrollViewSize.width * CGFloat(self.imageArray!.count), pagesScrollViewSize.height)


self.loadVisiblePages()

func loadPage(page: Int) {

    if page < 0 || page >= self.imageArray!.count {
        // If it's outside the range of what you have to display, then do nothing
        return
    }

    // 1
    if let pageView = pageViews[page] {
        // Do nothing. The view is already loaded.
    } else {
        // 2
        let newPageView = UIImageView(image: self.imageArray![page] as UIImage)
        var frame = scrollView.bounds
        frame.origin.x = (frame.size.width * CGFloat(page))
        frame.origin.y = 0.0

        // 3

        newPageView.contentMode = .ScaleAspectFit
        newPageView.frame = frame
        scrollView.addSubview(newPageView)
        newPageView.backgroundColor = UIColor.blackColor()

        // 4
        pageViews[page] = newPageView
    }
}

func purgePage(page: Int) {

    if page < 0 || page >= self.imageArray!.count {
        // If it's outside the range of what you have to display, then do nothing
        return
    }

    // Remove a page from the scroll view and reset the container array
    if let pageView = pageViews[page] {
        pageView.removeFromSuperview()
        pageViews[page] = nil
    }

}

func loadVisiblePages() {

    // First, determine which page is currently visible
    let pageWidth = scrollView.frame.size.width
    let page = Int(floor((scrollView.contentOffset.x * 2.0 + pageWidth) / (pageWidth * 2.0)))

    // Update the page control
    pageControl?.currentPage = page

    // Work out which pages you want to load
    let firstPage = page - 1
    let lastPage = page + 1


    // Purge anything before the first page
    for var index = 0; index < firstPage; ++index {
        purgePage(index)
    }

    // Load pages in our range
    for var index = firstPage; index <= lastPage; ++index {
        loadPage(index)
    }

    // Purge anything after the last page
    for var index = lastPage+1; index < self.imageArray!.count; ++index {
        purgePage(index)
    }
}


func scrollViewDidScroll(scrollView: UIScrollView!) {
    // Load the pages that are now on screen
    loadVisiblePages()
}


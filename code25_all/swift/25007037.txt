class GameScene: SKScene, SKPhysicsContactDelegate {

var controlCircle = SKSpriteNode()
var mainCategory : UInt32 = 1 << 0
var dropCategory: UInt32 = 1 << 1



override func didMoveToView(view: SKView) {

    self.physicsWorld.contactDelegate = self
    self.physicsWorld.gravity = CGVectorMake(0,0)

    //CREATING FIRST OBJECT AND ADDING PHYSICS BODY
    var mainRadius = 20.0;
    var controlCircle = SKSpriteNode(color: UIColor.clearColor(), size:CGSizeMake(mainRadius    * 2, mainRadius * 2))

    var circleBody = SKPhysicsBody(circleOfRadius: mainRadius)
    circleBody.dynamic = false
    circleBody.usesPreciseCollisionDetection = true

    controlCircle.physicsBody = circleBody

    var bodyPath = CGPathCreateWithEllipseInRect(CGRectMake((controlCircle.size.width/2),   controlCircle.size.height/2, controlCircle.size.width, controlCircle.size.width),
        nil)

    var circleShape = SKShapeNode()
    circleShape.fillColor = UIColor.brownColor()
    circleShape.lineWidth = 0
    circleShape.path = bodyPath
    controlCircle.addChild(circleShape)
    controlCircle.position = CGPointMake(self.frame.width/2, self.frame.height/2)

    self.addChild(controlCircle)
    controlCircle.physicsBody.categoryBitMask = mainCategory
    controlCircle.physicsBody.contactTestBitMask = dropCategory


    //CREATING SECOND OBJECT AND ADDING PHYSICS BODY 
    var radius = 10.0;
    var drop = SKSpriteNode(color: UIColor.clearColor(), size:CGSizeMake(radius * 2, radius * 2))

    var dropBody = SKPhysicsBody(circleOfRadius: radius)
    dropBody.dynamic = false
    dropBody.usesPreciseCollisionDetection = true

    drop.physicsBody = dropBody

    var dropPath = CGPathCreateWithEllipseInRect(CGRectMake((drop.size.width/2), drop.size.height/2, drop.size.width, drop.size.width),
        nil)

    var dropShape = SKShapeNode()
    dropShape.fillColor = UIColor.blackColor()
    dropShape.lineWidth = 0

    drop.name = "dropMask"
    dropShape.path = dropPath


    drop.addChild(dropShape)
    drop.position = CGPointMake(CGFloat(xValue), self.frame.height-5)

    self.addChild(drop)
    drop.physicsBody.categoryBitMask = dropCategory
    drop.physicsBody.contactTestBitMask = mainCategory
}

    func didBeginContact(contact: SKPhysicsContact) -> Void{
    NSLog("Hello")

    }
}


var signIn : GPPSignIn = GPPSignIn.sharedInstance()
signIn.shouldFetchGooglePlusUser = true;
signIn.shouldFetchGoogleUserEmail = true;  // Uncomment to get the user's email

// You previously set kClientId in the "Initialize the Google+ client" step
signIn.clientID = appDelegate.gpClientId;

// Uncomment one of these two statements for the scope you chose in the previous step
signIn.scopes.append(kGTLAuthScopePlusLogin);  // "https://www.googleapis.com/auth/plus.login" scope
//signIn.scopes = @[ @"profile" ];             // "profile" scope

// Optional: declare signIn.actions, see "app activities"
signIn.delegate = self;

if(signIn.authentication == nil)
{
  var signInButton : GPPSignInButton = GPPSignInButton()
  signInButton.center = self.view.center;
  signInButton.center.y += 60
  self.view.addSubview(signInButton)
}

  func finishedWithAuth(auth: GTMOAuth2Authentication!, error: NSError!)
  {
      var now : NSDate = NSDate(timeIntervalSinceNow: 0)
      if(error == nil && auth.expirationDate.compare(now) == NSComparisonResult.OrderedDescending)
      {
          self.dismissViewControllerAnimated(true, completion: { () -> Void in
            NSLog("LoginViewController dismissed")
          })
      }
  }

func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool
{
  var signIn : GPPSignIn = GPPSignIn.sharedInstance()

  if(signIn.authentication == nil)
  {
    signIn.shouldFetchGooglePlusUser = true;
    signIn.shouldFetchGoogleUserEmail = true;  // Uncomment to get the user's email

    // You previously set kClientId in the "Initialize the Google+ client" step
    signIn.clientID = gpClientId;

    // Uncomment one of these two statements for the scope you chose in the previous step
    signIn.scopes.append(kGTLAuthScopePlusLogin);  // "https://www.googleapis.com/auth/plus.login" scope
    //signIn.scopes = @[ @"profile" ];             // "profile" scope

    // Optional: declare signIn.actions, see "app activities"
    signIn.delegate = self;

    if(signIn.trySilentAuthentication())
    {
      self.userLoggedIn = true;
      NSLog("Silent G+ login successful (initially)")
    }
    else
    {
      NSLog("G+ silent authentication failed.")
    }
  }

  // Override point for customization after application launch.
  return true
}

finishedWithAuth

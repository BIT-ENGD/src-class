class ViewModel: RVMViewModel {
    var name: String = "" {
        willSet {
            println("New Value: \(newValue)")
        }
    }

   required init(){
       super.init()
       let signal = self.rac_valuesForKeyPath("name", observer: self)
       signal.subscribeNext {
           println("Subscribe block: \($0)")
       }
   }
}

//observe ui and programatic changes
RACSignal.merge([self.nameField.racTextSignal(), self.nameField.rac_valuesForKeyPath("text", observer:self)]).subscribeNext({
     (next) -> Void in
     if let text = next as? String {
         self.viewModel.name = text
     }
})
RAC(self.nameField, "text") = self.viewModel.rac_valuesForKeyPath("name", observer: self)


class Object {
  public $first_name;
}

$object = new Object();
$object->first_name = 'John Doe';

$variable = 'first_name';
$first_name = $object->{$variable}; // Here we can encapsulate the variable in {} to get the value first_name
print($first_name);
// Outputs "John Doe"

class Punchlist {
    var nid: String?
    var title: String?

    init(nid: String) {

        let (result, err) = SD.executeQuery("SELECT * FROM punchlists WHERE nid = \(nid)")
        if err != nil {
            println("Error")
        }
        else {
            let keys = self.getKeys()  // Get a list of all the class properties (in this case only returns array containing "nid" and "title")
            for row in result {  // Loop through each row of the query
                for field in keys {  // Loop through each property ("nid" and "title")
                    // field = "nid" or "title"
                    if let value: String = row[field]?.asString() {
                        // value = value pulled from column "nid" or "title" for this row
                        self.field = value  //<---!! Error: 'Punchlist' does not have a member named 'field'
                    }
                }
            }
        }
    }

    //  Returns array of all class properties
    func getKeys() -> Array<String> {
        let mirror = reflect(self)
        var keys = [String]()
        for i in 0..<mirror.count {
            let (name,_) = mirror[i]
            keys.append(name)
        }

        return keys
    }
}


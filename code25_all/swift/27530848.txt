import Foundation

// set a file called test.txt on Desktop to be used by this program
let dir = "~/Desktop"
let file = "primesList.txt"
let path = dir.stringByExpandingTildeInPath
let filePath: NSString = path.stringByAppendingPathComponent(file)

// set some needed variables and constants
var highestNumberEvaluated = 100
var primesList = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]

let readFromFile = String(contentsOfFile: filePath, encoding: NSUTF8StringEncoding, error: nil)
println(readFromFile)

let inputNumber = 100
let range2Evaluate = 100
let last2Evaluate = inputNumber + range2Evaluate

println("Find primes between \(inputNumber) and \(last2Evaluate):\n")

// create a dictionary of numbers to be evaluated true or false
var numbersList = [Int: Bool]()
for i in inputNumber...last2Evaluate {
  numbersList[i] = true
}

// mark as not prime (false) all not primes in numbersList
for i in primesList {
  if i < Int(sqrt(Double(last2Evaluate))) {
    let myMultiplier = inputNumber / i
    var bottomValue = i * myMultiplier
    for var j = bottomValue; j < (bottomValue + range2Evaluate + 2); j += i {
      numbersList[j] = false
    }
  } else {break}
}

// create an array made by all primes found true, then sort
var primesFoundList = [Int]()
for (myKey, myValue) in numbersList {
  if myValue == true {
    primesFoundList.append(myKey)
  }
}
primesFoundList.sort { $0 < $1 }

// add the primes found to the original primes list and write on the file test.txt
primesList += primesFoundList
let toBeWritten = toString(primesList)
toBeWritten.writeToFile(filePath, atomically: true, encoding: NSUTF8StringEncoding, error: nil)


SKSpriteNode
SKAction
SKSpriteNode
SKSpriteNode
SKSpriteNode
SKAction
SKSpriteNode
    var squareBox = SKSpriteNode()

    func addSquares(size:CGSize){

    for var i = 0; i < 4; i++ {

        // Create a new sprite node from an image
        squareBox = SKSpriteNode(imageNamed: "noBox")

        // Square pysics settings
        squareBox.physicsBody = SKPhysicsBody(rectangleOfSize: self.squareBox.frame.size)
        squareBox.physicsBody!.dynamic = false
        squareBox.physicsBody!.categoryBitMask = squareBoxCategory
        squareBox.physicsBody!.contactTestBitMask = leftEdgeCategory | edgeCategory

        // SquareBox positioning on X
        var xPos = size.width/5 + squareBox.size.height/2
        var xPosInt = Int(xPos) * (i + 1)
        xPos = CGFloat(xPosInt)
        var yPos = size.height/2 + (squareBox.size.height/2)

        squareBox.position = CGPointMake(xPos - squareBox.size.height/2, yPos)

        self.addChild(squareBox)
        squareArray.append(squareBox)

    }

}

SKSpriteNode
    override func touchesBegan(touches: NSSet, withEvent event: UIEvent) {
    for touch: AnyObject in touches {
        let location = touch.locationInNode(self)
        self.nodeAtPoint(location)
        if self.nodeAtPoint(location) == self.button {

            let move = SKAction.moveByX(-size.width/5 - squareBox.size.height/2, y: 0, duration: 1)

            print("button clicked!")

            for box in squareArray {
                box.runAction(move)
            }
        }
    }
}

SKSpriteNode
    func addLeftEdge(size:CGSize){

    let leftEdge = SKNode()
    leftEdge.physicsBody = SKPhysicsBody(edgeFromPoint: CGPointMake(1, 1), toPoint: CGPointMake(1, size.height))
    leftEdge.physicsBody!.categoryBitMask = leftEdgeCategory

    self.addChild(leftEdge)
}

SKSpriteNode
didBeginContact
    func didBeginContact(contact: SKPhysicsContact) {

    println("contact!")

}

Force
SKSpriteNode
var squareArray = [SKSpriteNode]()
SKSpriteNode
SKSpriteNode

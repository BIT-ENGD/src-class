NSNotificationCenter
tableView.reloadData()
tableView
import UIKit
class MainVC: UIViewController, UITableViewDelegate, UITableViewDataSource {

let needMetNotificationKey = "kNeedMetKey"
@IBOutlet var tableView: UITableView!

override func viewDidLoad() {
    super.viewDidLoad()

    NSNotificationCenter.defaultCenter().addObserver(self, selector: "needMet", name: needMetNotificationKey, object: nil)
}

func needMet() {
    startConnectionAt(url)
    tableView.reloadData()
    println("executed")
}
func startConnectionAt(urlPath: String){
    var url: NSURL = NSURL(string: urlPath)
    var request: NSURLRequest = NSURLRequest(URL: url)
    var connection: NSURLConnection = NSURLConnection(request: request, delegate: self, startImmediately: false)
    connection.start()
}

import UIKit
class AcceptVC: UIViewController, UITextFieldDelegate {

@IBOutlet var receiveName: UITextField!
@IBOutlet var receiveEmail: UITextField!
@IBOutlet var receivePhone: UITextField!

override func viewDidLoad() {
    super.viewDidLoad()
@IBAction func signupForNeed() {

    var URL: NSURL = NSURL(string: "http://www.domain.com/json.php")
    var request: NSMutableURLRequest = NSMutableURLRequest(URL:URL)
    request.HTTPMethod = "POST"
    var needName = receiveName
    var needEmail = receiveEmail
    var needPhone = receivePhone

    var signup: String = "id=\(passedID)&name=\(needName.text)&email=\(needEmail.text)&phone=\(needPhone.text)"
    request.HTTPBody = signup.dataUsingEncoding(NSUTF8StringEncoding)

    NSURLConnection.sendAsynchronousRequest(request, queue: NSOperationQueue.mainQueue()) {
        (response, data, error) in println(NSString(data: data, encoding: NSUTF8StringEncoding))
    }

    NSNotificationCenter.defaultCenter().postNotificationName(needMetNotificationKey, object: nil, userInfo: nil)

    navigationController?.presentingViewController?.dismissViewControllerAnimated(true, completion: {})
    }

println("executed")
needMet()

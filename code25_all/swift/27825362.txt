struct Box<T> {

    let value: T

}

struct MyStruct {

    let myProperty: String

    init(boxedProperty: Box<String>) {
        self.myProperty = boxedProperty.value
    }

}

MyStruct
value
Box
MyStruct
.value
Box
infix operator <|= {
    associativity right
    precedence 90
    assignment
}

func <|= <T>(inout lhs: T, rhs: Box<T>) {
    lhs = rhs.value
}

<|=
init(boxedProperty: Box<String>) {
    self.myProperty <|= boxedProperty
}

myProperty
error: variable 'self.myProperty' passed by reference before being initialized
    self.myProperty <|= boxedProperty
                    ^

assignment
lhs
value
Box

import UIKit
import CoreData

class RegisterElgin: UIViewController, UIPickerViewDelegate {

var navBar:UINavigationBar=UINavigationBar()

var nameID: String!

@IBOutlet var elginPositionLabel: UILabel!
@IBOutlet var saveButton: UIButton!

var position: String!
var positionNumber: NSNumber!

let elginPosition = ["N/A", "Lifeguard", "Instructor", "Supervisor", "Lifeguard & Instructor", "Lifeguard, Instructor, & Supervisor"]

override func viewDidLoad() {
    super.viewDidLoad()
    setNavBarToTheView()
    addText()
    println(nameID)

}

override func didReceiveMemoryWarning() {
    super.didReceiveMemoryWarning()
    // Dispose of any resources that can be recreated.
}

    func setNavBarToTheView()
    {
        navBar.frame=CGRectMake(0, 0, 375, 64)
        self.view .addSubview(navBar)
    }

    func addText ()
    {

        var label = UILabel(frame:CGRectMake(2, 10, 375, 64))
        //label.center = CGPointMake(160, 284)
        label.textAlignment = NSTextAlignment.Center
        label.text = "Elgin West"
        label.font = UIFont(name:"HelveticaNeue-Bold", size: 16.0)

        self.view.addSubview(label)

    }

func numberOfComponentsInPickerView(PickerView: UIPickerView!) -> Int
{
    return 1
}

func pickerView(pickerView: UIPickerView!, numberOfRowsInComponent component: Int) -> Int
{
    return elginPosition.count
}

func pickerView(pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String!
{
    return elginPosition[row]
}

func pickerView(pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {

    //elginPositionLabel.text = elginPosition[row]
    position = elginPosition[row]
}


@IBAction func buttonTapped(sender: AnyObject) {

    if (position == "Instructor")
    {
        positionNumber = 2
    }

    else
    {
        positionNumber = 4
    }

    var appDel:AppDelegate = (UIApplication.sharedApplication().delegate as AppDelegate)

    var context:NSManagedObjectContext = appDel.managedObjectContext!

    var savePosition = NSEntityDescription.insertNewObjectForEntityForName("Users", inManagedObjectContext: context) as NSManagedObject

    savePosition.setValue(positionNumber, forKey: "elginPosition")

    println (positionNumber)

    context.save(nil)

}

var appDel:AppDelegate = (UIApplication.sharedApplication().delegate as AppDelegate)

    var context:NSManagedObjectContext = appDel.managedObjectContext!

    var request = NSFetchRequest(entityName: "Users")

    request.returnsObjectsAsFaults = false

    var results: NSArray = context.executeFetchRequest(request, error: nil)!

    if(results.count > 0)
    {
        var res = results [0] as NSManagedObject

        userID = res.valueForKey("userID") as String
        position = res.valueForKey("elginPosition") as NSNumber

        println (position)

    }


elem
func elem<T: Equatable>(item: T) -> [T] -> Bool {
    return { arr in find(arr, item) != nil }
}

elem(2)([1,2,3])

func elem<T: Equatable>(item: ()->T) -> (()->[T]) -> Bool {
    return { (arr: ()->[T]) in find(arr(), item()) != nil }
}

elem{2}{[1,2,3]}

Consecutive statements on a line must be separated by ':'

{}
@autoclosure
func elem<T: Equatable>(item: @autoclosure ()->T) -> (@autoclosure ()->[T]) -> Bool {
    return { (arr: @autoclosure ()->[T]) in find(arr(), item()) != nil }
}

elem 2 [1,2,3]


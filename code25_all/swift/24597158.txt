func drawHypnoticMessage(message: NSString) {
    for i in 0..20 {
        let messageLabel = UILabel()
        messageLabel.backgroundColor = UIColor.clearColor()
        messageLabel.textColor = UIColor.whiteColor()
        messageLabel.text = message // Thread 1: EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP,subcode0x0)

        messageLabel.sizeToFit()

        let width = self.view.bounds.size.width - messageLabel.bounds.size.width

        let x = Int(arc4random()) % Int(width)

        let height = (self.view.bounds.size.height - messageLabel.bounds.size.height)
        let y = Int(arc4random()) % Int(height)

        var frame = messageLabel.frame
        frame.origin = CGPointMake(CGFloat(x), CGFloat(y))
        messageLabel.frame = frame

        self.view.addSubview(messageLabel)
    }
}

messageLabel.text = message

messageLabel.text = "text"

func drawHypnoticMessage(message: NSString) {
    for i in 0..<20 {
        let messageLabel = UILabel()
        messageLabel.backgroundColor = UIColor.clearColor()
        messageLabel.textColor = UIColor.whiteColor()
        messageLabel.text = message

        messageLabel.sizeToFit()

        let width = self.view.bounds.size.width - messageLabel.bounds.size.width

        let x = Int(arc4random() % UInt32(width))

        let height = (self.view.bounds.size.height - messageLabel.bounds.size.height)
        let y = Int(arc4random() % UInt32(height))

        var frame = messageLabel.frame
        frame.origin = CGPointMake(CGFloat(x), CGFloat(y))
        messageLabel.frame = frame

        self.view.addSubview(messageLabel)
    }
}

let x = Int(arc4random()) % Int(width)
let x = Int(arc4random() % UInt32(width))
arc4random_uniform
func drawHypnoticMessage(message: NSString) {
    for i in 0..<20 {
        let messageLabel = UILabel()
        messageLabel.backgroundColor = UIColor.clearColor()
        messageLabel.textColor = UIColor.whiteColor()
        messageLabel.text = message

        messageLabel.sizeToFit()

        let width = self.view.bounds.size.width - messageLabel.bounds.size.width

        let x = CGFloat(arc4random_uniform(UInt32(width)))

        let height = (self.view.bounds.size.height - messageLabel.bounds.size.height)
        let y = CGFloat(arc4random_uniform(UInt32(height)))

        var frame = messageLabel.frame
        frame.origin = CGPointMake(x, y)
        messageLabel.frame = frame

        self.view.addSubview(messageLabel)
    }
}


func getShift () -> Shift{
    let formatter = NSDateFormatter()
    formatter.dateFormat = "yyyy-MM-dd w W HH:mm"
    formatter.timeZone = NSTimeZone.localTimeZone()
    let from:NSDate = formatter.dateFromString(self.fromDate)!
    let to:NSDate = formatter.dateFromString(self.toDate)!
    let length:Double = to.timeIntervalSinceDate(from) as Double / 60

    let newShift = Shift(from:from,to:to,length:length)
    return newShift
}

func calcSalary(ub: Bool){
    if (ub){

    } else {
        let hours = length/60
        let minutes = (length%60) * (5/3)
        let billable = hours + minutes/10
        self.salary = billable*hour
        println("Got paid \(self.salary) for \(billable) hours times \(hour) from \(fromDate) to \(toDate)")
        //Got paid 792.05 for 7.0 hours times 113.15 from 2014-08-21 13:00:00 +0000 to 2014-08-21 20:00:00 +0000
        //Got paid 1018.35 for 9.0 hours times 113.15 from 2014-08-23 08:00:00 +0000 to 2014-08-23 17:00:00 +0000
        //Got paid 961.775 for 8.5 hours times 113.15 from 2014-08-24 11:15:00 +0000 to 2014-08-24 14:45:00 +0000
        //Got paid 1527.525 for 13.5 hours times 113.15 from 2014-09-04 13:00:00 +0000 to 2014-09-04 21:30:00 +0000
        //Got paid 1074.925 for 9.5 hours times 113.15 from 2014-09-05 12:00:00 +0000 to 2014-09-05 16:30:00 +0000

    }
}

class Shift {
var fromDate : NSDate
var toDate : NSDate
var length : Double //In Minutes
var salary : Double = Double()

let hour = 113.15
let etter18hverdag = 22
let etter21hverdag = 45
let helligdag = 90
let helgEtter13 = 45
let helgEtter16 = 90 //HUSK AT PAUSE FINNES

init (from : NSDate, to : NSDate, length:Double){
    self.fromDate = from
    self.toDate = to
    self.length = length

}
func calcSalary(ub: Bool){
    if (ub){

    } else {
        let hours = length/60
        let minutes = (length%60) * (5/3)
        let billable = hours + minutes/10
        self.salary = billable*hour
        println("Got paid \(self.salary) for \(billable) hours times \(hour) from \(fromDate) to \(toDate)")
        //Got paid 792.05 for 7.0 hours times 113.15 from 2014-08-21 13:00:00 +0000 to 2014-08-21 20:00:00 +0000
        //Got paid 1018.35 for 9.0 hours times 113.15 from 2014-08-23 08:00:00 +0000 to 2014-08-23 17:00:00 +0000
        //Got paid 961.775 for 8.5 hours times 113.15 from 2014-08-24 11:15:00 +0000 to 2014-08-24 14:45:00 +0000
        //Got paid 1527.525 for 13.5 hours times 113.15 from 2014-09-04 13:00:00 +0000 to 2014-09-04 21:30:00 +0000
        //Got paid 1074.925 for 9.5 hours times 113.15 from 2014-09-05 12:00:00 +0000 to 2014-09-05 16:30:00 +0000

    }
}
}

@IBAction func donePressed(sender: AnyObject) {

    let dateStringFormatter = NSDateFormatter()

    //ÅR-MÅNED-DAG (2011-12-29) UKE I ÅR  UKE I MND (27 3)
    dateStringFormatter.dateFormat = "yyyy-MM-dd w W HH:mm"
    dateStringFormatter.locale = NSLocale.currentLocale()
    dateStringFormatter.timeZone = NSTimeZone.localTimeZone()
    var appDel : AppDelegate = (UIApplication.sharedApplication().delegate as AppDelegate)
    var  context:NSManagedObjectContext = appDel.managedObjectContext!

    let newShift = NSEntityDescription.insertNewObjectForEntityForName("Shifts", inManagedObjectContext: context) as NSManagedObject
    newShift.setValue("\(dateStringFormatter.stringFromDate(fromDate))", forKey: "fromDate")
    newShift.setValue("\(dateStringFormatter.stringFromDate(toDate))", forKey: "toDate")

    context.save(nil)


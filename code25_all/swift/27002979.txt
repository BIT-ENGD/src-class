func refreshAfterURB () {}
println(self.collectionView?)
nil
func refreshAfterURB () {
        self.view.setNeedsDisplay()
        self.view.setNeedsLayout()
        self.view.setNeedsUpdateConstraints()
        self.collectionView?.reloadData()
    }

self.collectionView.addPullToRefreshWithActionHandler({
            println(self.collectionView?)
            self.refresh()
        }, position: SVPullToRefreshPosition.Bottom)

    var instanceOfCustomObject: UIScrollView = UIScrollView()
    self.collectionView?.triggerPullToRefresh()

var collectionView: UICollectionView!

func setUpCollection () {

    layout.sectionInset = UIEdgeInsetsMake(2, 2, 2, 2);
    layout.headerHeight = 0;
    layout.footerHeight = 0;
    layout.columnCount = numOfColums
    layout.minimumColumnSpacing = 2;
    layout.minimumInteritemSpacing = 2;
    self.collectionView = UICollectionView(frame: self.view.frame, collectionViewLayout: layout)
    self.collectionView.dataSource = self
    self.collectionView.delegate = self
    self.collectionView.registerClass(UICollectionViewCell.self, forCellWithReuseIdentifier: "Cell")
    self.collectionView.backgroundColor = offWhite
    self.collectionView.frame = CGRectMake(0, 64, screenSize.width, screenSize.height - 64)
    self.view.addSubview(self.collectionView)


    self.collectionView.addPullToRefreshWithActionHandler({
            println(self.collectionView?)
            self.refresh()
        }, position: SVPullToRefreshPosition.Bottom)

}


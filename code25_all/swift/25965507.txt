    presetNames = NSUserDefaults.standardUserDefaults().objectForKey("presets") as NSArray
    presetNamesMutable = presetNames.mutableCopy() as NSMutableArray

    if presetNamesMutable.containsObject(budgetName) == false && budgetName != "Budget" {
        presetNamesMutable.insertObject(budgetName, atIndex: 0)
        NSUserDefaults.standardUserDefaults().setObject(presetNamesMutable, forKey: "presets")
    }

override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
    // #warning Incomplete method implementation.
    // Return the number of rows in the section.
    return presetNamesMutable.count
}

override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
    var cell:PresetTableViewCell = self.tableView.dequeueReusableCellWithIdentifier("cell", forIndexPath: indexPath) as PresetTableViewCell
    // Configure the cell...

    cell.presetNameLabel.text = presetNamesMutable.objectAtIndex(indexPath.row) as? String
    return cell
}

override func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {
    var cell: UITableViewCell = tableView.cellForRowAtIndexPath(indexPath)!

    tempBudgetName = presetNamesMutable.objectAtIndex(indexPath.row) as String
    presetTapped = true
    NSUserDefaults.standardUserDefaults().setBool(presetTapped, forKey: "presetUsed")
    self.navigationController?.popToRootViewControllerAnimated(true)
    println(tempBudgetName)
}


// Override to support conditional editing of the table view.
override func tableView(tableView: UITableView, canEditRowAtIndexPath indexPath: NSIndexPath) -> Bool {
    return true
}

// Override to support editing the table view.
override func tableView(tableView: UITableView, commitEditingStyle editingStyle: UITableViewCellEditingStyle, forRowAtIndexPath indexPath: NSIndexPath) {

    presetNamesMutable.removeObjectAtIndex(indexPath.row)
    tableView.deleteRowsAtIndexPaths([indexPath], withRowAnimation: .Fade)
    NSUserDefaults.standardUserDefaults().setObject(presetNamesMutable, forKey: "presets")
}

override func viewWillAppear(animated: Bool) {
    presetNames = NSUserDefaults.standardUserDefaults().objectForKey("presets") as NSArray
    presetNamesMutable = presetNames.mutableCopy() as NSMutableArray
}


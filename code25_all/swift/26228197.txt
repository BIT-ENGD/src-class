extension Array {

  func comparest<C: Comparable>(comparator: T -> C, _ op: (C, C) -> Bool) -> T? {
    var min = self.first
      for elem in self {
          if op(comparator(elem), comparator(min!)) {
            min = elem
          }
      }
      return min
  }                     

  func minimum<C: Comparable>(var _ comparator: (T -> C)? = nil) -> T? {
    if comparator == nil {
          comparator = { elem -> C in elem as C }
      }
      return self.comparest(comparator!, <) 
  }

}

comparest
comparest
var array = [4, 2, 3]
var min = array.comparest({ $0 }, <)!

minimum
self.comparest(comparator!, <)

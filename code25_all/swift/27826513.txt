import UIKit
import CoreLocation

@UIApplicationMain
class AppDelegate: UIResponder, UIApplicationDelegate, CLLocationManagerDelegate {

var window: UIWindow?
var locationManager: CLLocationManager?
var lastProximity: CLProximity?

let beaconRegion = CLBeaconRegion(
    proximityUUID: NSUUID(UUIDString:"d2c36ec5-dfsb-46d2-b069-d2f3r51996e0"),
    identifier: "My region"
)    

func application(application: UIApplication,
    didFinishLaunchingWithOptions launchOptions: NSDictionary?) -> Bool {
        self.beaconRegion.notifyOnEntry = true
        self.beaconRegion.notifyOnExit = true
        self.beaconRegion.notifyEntryStateOnDisplay = false

        locationManager = CLLocationManager()

        if(locationManager!.respondsToSelector("requestAlwaysAuthorization")) {
            locationManager!.requestAlwaysAuthorization()
        }

        locationManager!.delegate = self
        locationManager!.pausesLocationUpdatesAutomatically = false

        locationManager!.startMonitoringForRegion(beaconRegion)
        locationManager!.startRangingBeaconsInRegion(beaconRegion)
        locationManager!.startUpdatingLocation()

        return true
}

func locationManager(manager: CLLocationManager!,
    didDetermineState state: CLRegionState,
    forRegion region: CLRegion!) {
        NSLog("State determined")
}              

func locationManager(manager: CLLocationManager!,
    didRangeBeacons beacons: [AnyObject]!,
    inRegion region: CLBeaconRegion!) {
        NSLog("didRangeBeacons")
}

func locationManager(manager: CLLocationManager!,
    didEnterRegion region: CLRegion!) {
    NSLog("didEnterRegion")

    manager.startRangingBeaconsInRegion(region as CLBeaconRegion)
    manager.startUpdatingLocation()
}

func locationManager(manager: CLLocationManager!,
    didExitRegion region: CLRegion!) {
    NSLog("didExitRegion")            
    manager.stopRangingBeaconsInRegion(region as CLBeaconRegion)
    manager.stopUpdatingLocation()
}

func locationManager(manager: CLLocationManager!,
    monitoringDidFailForRegion region: CLRegion!,
    withError error: NSError!) {
    NSLog("monitoringDidFailForRegion - error: %@", [error.localizedDescription]);
}    



}


import Foundation

typealias GeneratorCallback = () -> AnyObject?
typealias NamedGenerators = [String: GeneratorCallback]

var generators = NamedGenerators()

class ValueResetter {
  let name: String
  let originalValue: AnyObject?

  init(name: String, value: AnyObject?) {
      self.name = name
      originalValue = generators[self.name]?()
      println("The original value is \(originalValue)")
      generators[self.name] = { value }
  }

  deinit {
      println("Resetting \(self.name) to \(self.originalValue)")
      generators[self.name] = { self.originalValue }
  }
}

func applyAndResetValue(name: String, value: AnyObject?) {
  let resetter = ValueResetter(name: name, value: value)
  println("The value is \(generators[name]?())")
}

let valueName = "Value"
applyAndResetValue(valueName, 1)
println("The value is \(generators[valueName]?())")

applyAndResetValue(valueName, 2)
println("The value is \(generators[valueName]?())")

The original value is nil
The value is Optional(1)
Resetting Value to nil
The value is nil
The original value is nil
The value is Optional(2)
Resetting Value to nil


      override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {

    let cell:WallTableViewCell = tableView.dequeueReusableCellWithIdentifier("cell", forIndexPath: indexPath) as WallTableViewCell

    if indexPath.section == timeLineData.count - 1 {
        println("load more pics")
        loadPost()
    }

    cell.tag = indexPath.row


    // timeLineData is my data array

    if timeLineData.count != 0 {

        let userPost  = timeLineData.objectAtIndex(indexPath.section) as PFObject

        cell.commentButton.tag = indexPath.section

    // check if image is in the cache

     if let imagePostedCache: AnyObject = self.imageCache.objectForKey(userPost.objectId){

        dispatch_async(dispatch_get_main_queue(), {
            if let cellToUpdate = tableView.cellForRowAtIndexPath(indexPath) as? WallTableViewCell {
                cell.imagePosted.image = imagePostedCache as? UIImage
                cell.downloadProgressLabel.hidden = true
            }
        })

    }

        // if it is not in the cache get the image from Parse

    else if  let imagesPost:PFFile = userPost["imageFile"] as? PFFile  {
        cell.imagePosted.image = nil
        cell.downloadProgressLabel.hidden = false



        imagesPost.getDataInBackgroundWithBlock({ (imageData:NSData!, error :NSError!) -> Void in

            if !(error != nil) {

                let image:UIImage = UIImage(data: imageData)!

                // add image to the cache

                self.imageCache.setObject( image , forKey: userPost.objectId)

                // display image in the cell

                dispatch_async(dispatch_get_main_queue(), {
                 if let cellToUpdate = tableView.cellForRowAtIndexPath(indexPath) as? WallTableViewCell {
                        cell.imagePosted.image = image as UIImage
                    }
                })


            }

            else {
                println("error")
            }

            }, progressBlock: { (progressStatus :Int32) -> Void in

               cell.downloadProgressLabel.text = "\(progressStatus) %"

                if progressStatus == 100 {

                    cell.downloadProgressLabel.text = ""
                }
        })

        }

    // Define description

        if cell.tag == indexPath.row {

    cell.brandLabel.text = userPost["photoText"] as? String
        }
    }


    return cell
}

    import UIKit
  import QuartzCore

 class WallTableViewCell: UITableViewCell {



@IBOutlet var downloadProgressLabel: UILabel!

@IBOutlet var commentButton: UIButton!

@IBOutlet var imagePosted: UIImageView!


@IBOutlet var brandLabel: UILabel!


}


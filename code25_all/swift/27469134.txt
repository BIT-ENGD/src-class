typealias Word = [Character]

func insert(letter: Character, into word: Word) -> [Word] {
}

insert("c", into: ["a", "b"])

[["c", "a", "b"], ["a", "c", "b"], ["a", "b", "c"]] 

func insert(letter: Character, into word: Word) -> [Word] {

    return Array<Int>(0...word.count).map() {
        var newWord = word
        newWord.insert(letter, atIndex: $0)
        return newWord
    }
}

extension Array
{
    func insert(element: T) -> [[T]] {

        return (0...self.count).map() {
            var newArray = self
            newArray.insert(element, atIndex: $0)
            return newArray
        }
    }
}


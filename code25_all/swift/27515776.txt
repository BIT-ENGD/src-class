import Foundation
import BigInteger
import CryptoSwift

class NonceController: NSObject {

    func generateNonce(secret: NSString!, timeoutSeconds: Int) -> NSString {

        var nonce: NSString = ""

        println(secret.length < 10)

        var test: NSString = "testsasa"



        if test.length < 10 { // EXC_BAD_INSTRUCTION (code=EXC_i386_INVOP, subcode=0x0) thrown here

        }


        if secret.length < 10 {
            //INVALID, throw exception

        } else {
            //valid params
            var salt: BigInteger = generateSalt()


            var dateDouble = Int(NSDate().timeIntervalSince1970) * 1000

            var currentMillies: BigInteger = BigInteger(dateDouble)

            var maxTime = currentMillies + timeoutSeconds * 1000

            var maxTime: Int = Int(currentMillies + (Int(timeoutSeconds) * 1000))

            var toHash = "\(salt)\(secret)\(maxTime)"

            var hash: String = toHash.sha1()!.lowercaseString
            nonce = "\(salt),\(maxTime),\(hash)"
        }
        return nonce // If I remove the test length check it is thrown here instead
    }

    func generateSalt() -> BigInteger {
        ...

    }
}


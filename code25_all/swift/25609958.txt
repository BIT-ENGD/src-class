import Cocoa

class CustomVC: NSViewController {

    override func viewDidLoad() {
        super.viewDidLoad()
        // Do view setup here.
    }

}

import Cocoa

class ViewController: NSViewController, NSTableViewDataSource, NSTableViewDelegate  {

@IBOutlet weak var tableView: NSTableView!

var currentSegment = 0
var tableViewDataSite = ["Site 1", "Site 2", "Site 3", "Site 4", "Site 5"]
var tableViewDataSection = ["Section 1", "Section 2", "Section 3", "Section 4", "Section 5", "Section 6"]
var tableViewDataArea = ["Area 1", "Area 2", "Area 3", "Area 4"]

override func viewDidLoad() {
    super.viewDidLoad()
    NSNotificationCenter.defaultCenter().addObserver(self, selector: "tableViewCellDidFinishEditingText:", name: NSControlTextDidEndEditingNotification, object: nil)
    // Do any additional setup after loading the view.

}

override var representedObject: AnyObject? {
    didSet {
    // Update the view, if already loaded.
    }
}

//MARK: - TableView Datasource & Delegate

func numberOfRowsInTableView(tableView: NSTableView!) -> Int {
    switch currentSegment {
    case 0:
        return tableViewDataSite.count
    case 1:
        return tableViewDataSection.count
    case 2:
        return tableViewDataArea.count
    default:
        return 0
    }
}

func tableView(tableView: NSTableView!, objectValueForTableColumn tableColumn: NSTableColumn!, row: Int) -> AnyObject! {

    switch currentSegment {
    case 0:
        return tableViewDataSite[row]
    case 1:
        return tableViewDataSection[row]
    case 2:
        return tableViewDataArea[row]
    default:
        return 0
    }
}

func tableViewCellDidFinishEditingText(notification:NSNotification) {
    let fieldEditor: NSTextView? = notification.userInfo!["NSFieldEditor"] as? NSTextView

    switch currentSegment {
    case 0:
        tableViewDataSite.removeAtIndex(tableView.selectedRow)
        tableViewDataSite.insert(fieldEditor!.textStorage.string, atIndex: tableView.selectedRow)

        //Fetch the Site object from parse and change the name to fieldEditor!.textStorage.string
        tableView.reloadData()
        break
    case 1:
        tableViewDataSection.removeAtIndex(tableView.selectedRow)
        tableViewDataSection.insert(fieldEditor!.textStorage.string, atIndex: tableView.selectedRow)

        //Fetch the Site object from parse and change the name to fieldEditor!.textStorage.string
        tableView.reloadData()
        break
    case 2:
        tableViewDataArea.removeAtIndex(tableView.selectedRow)
        tableViewDataArea.insert(fieldEditor!.textStorage.string, atIndex: tableView.selectedRow)

        //Fetch the Site object from parse and change the name to fieldEditor!.textStorage.string
        tableView.reloadData()
        break
    default:
        break
    }
}

//MARK: - IBActions

@IBAction func segemtnedControlDidChange(sender: AnyObject) {
    let segmentedControl = sender as NSSegmentedControl
    currentSegment = segmentedControl.selectedSegment
    tableView.reloadData()

}


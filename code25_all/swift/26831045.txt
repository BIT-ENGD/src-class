UIDatePicker
if theDatePicker == strDate {
    playTheSound()
} else {
    println("HELLO")
}

UIDatePicker
func playTheSound() {
    var alertSound = NSURL(fileURLWithPath: NSBundle.mainBundle().pathForResource("Annoying_Alarm_Clock-UncleKornicob-420925725", ofType: "mp3")!)
    playSound.text = "\(alertSound)"

    var error:NSError?
    audioPlayer = AVAudioPlayer(contentsOfURL: alertSound, error: &error)
    audioPlayer.prepareToPlay()
    audioPlayer.play()

    let alert = UIAlertController(title: "WAKE UP", message:nil, preferredStyle: UIAlertControllerStyle.Alert);

    alert.message = "ITS TIME TO WAKE UP"

    let dismissHandler = {
        (action: UIAlertAction!) in
        self.dismissViewControllerAnimated(true, completion: { () -> Void in
        })
    }

    alert.addAction(UIAlertAction(title: "I'm Up!", style: .Default, handler: dismissHandler))
    presentViewController(alert, animated: true) { () -> Void in

    }
}

func getTime() {
    var date = NSDate()
    var outputFormat = NSDateFormatter()
    outputFormat.locale = NSLocale(localeIdentifier:"en_US")
    outputFormat.dateFormat = "HH:mm:ss"
    timeLabel.text = (outputFormat.stringFromDate(date))  // This line here will update your timeLabel with the current time every second
}
var timer = NSTimer.scheduledTimerWithTimeInterval(1.0, target: self, selector: Selector("getTime"), userInfo: nil, repeats: true)

func handler(sender: UIDatePicker) {
    var timeFormatter = NSDateFormatter()
    timeFormatter.timeStyle = NSDateFormatterStyle.ShortStyle

    var strDate = timeFormatter.stringFromDate(theDatePicker.date)
}


    import UIKit


var messMgr : messageObjet = messageObjet()
var date : NSDate = NSDate()

 struct message  {
      var commentText = ""

      var commentDate = ""


  }

 class messageObjet: NSObject {

  var messageData  = [message]()


func addMessage(comment : String, date : String) {
    //messageData.append(message(commentText: comment, commentDate: date))

    var mess = message(commentText: comment, commentDate: date)

    messageData.insert(mess, atIndex: 0)
   }


 }

 override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {

    let cell:CommentTableViewCell = tableView.dequeueReusableCellWithIdentifier("cell", forIndexPath: indexPath) as CommentTableViewCell


    cell.tag = indexPath.row

    // Configure the cell...


    // check if it is in the cache


     println("the messageCache in cellForRow in commentTableViewController is \(self.commentCache.objectForKey(indexPath.row))")




    if let messageCached: AnyObject = self.commentCache.objectForKey(indexPath.row){

        cell.messageLabel.text = messageCached as? String

    }

    if let dateCached: AnyObject = self.dateCache.objectForKey(indexPath.row){

        cell.dateLabel.text = dateCached as? String

    }


    else if messMgr.messageData.count != 0  {

        if cell.tag == indexPath.row {

        cell.messageLabel.text = messMgr.messageData[indexPath.row].commentText
        self.commentCache.setObject(cell.messageLabel.text!, forKey: indexPath.row)


        cell.dateLabel.text = messMgr.messageData[indexPath.row].commentDate
        self.dateCache.setObject(cell.dateLabel.text!, forKey: indexPath.row)
        }


    }


    return cell
}

  @IBAction func sendComment(sender: AnyObject) {

    let uuid  = userDefaults.stringForKey("ApplicationUniqueIdentifier")

    var comment  = PFObject(className:"Comment")

    comment.setObject(textToSend.text, forKey: "CommentText")
    comment.setObject(post, forKey: "Post")
    comment.setObject(uuid, forKey: "from")

    comment.saveEventually()

   let date = NSDate()



    newMessage.commentText = textToSend.text as String
    newMessage.commentDate = date.relativeTimeToString() as String

    messMgr.messageData.insert(newMessage, atIndex: 0)

   // messMgr.addMessage(textToSend.text as String, date: date.relativeTimeToString() as String)

     NSNotificationCenter.defaultCenter().postNotificationName("reloadMessageTableView", object: nil)

    println(messMgr.messageData)




    self.dismissViewControllerAnimated(true, completion: nil)

}


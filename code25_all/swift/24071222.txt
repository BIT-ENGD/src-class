func select<T,U>(x:T, f:(T) -> U) -> U {
    return f(x)
}

var b1:Bool = select("ABC") { $0.hasPrefix("A") }
var b2:Bool = select(10) { $0 > 0 }

Equatable
func selectEquatable<T : Equatable, U : Equatable>(x:T, f:(T) -> U) -> U {
    return f(x)
}

var b3:Bool = selectEquatable("ABC") { $0.hasPrefix("A") }

Comparable
func selectComparable<T : Comparable, U : Comparable>(x:T, f:(T) -> U) -> U {
    return f(x)
}

var b4:Bool = selectComparable("ABC") { $0.hasPrefix("A") }

String
var b5:String = selectComparable("ABC") { $0 }

Comparable
extension String : Comparable {
}

Comparable
var str:Comparable = ""

var b4:Bool = selectComparable("ABC") { $0.hasPrefix("A") } //build error


NSMutableArray
dispatch_async(dispatch_get_main_queue(), { () -> Void in
    ("reloading data")
    self.tableView.reloadData()
})

reloading data
func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
    println("running")
    let cell: UITableViewCell = UITableViewCell(style: UITableViewCellStyle.Subtitle, reuseIdentifier: "MyTestCell")
    println(listDataArray[indexPath.row])
    cell.textLabel?.text = (listDataArray[indexPath.row] as NSString)
    return cell
}

UITableViewDataSource
(NOTE: it is not printing "running" either)
tableview
func tableView(tableView: UITableView!, numberOfRowsInSection section: Int) -> Int {
    if(listDataArray.count > 0) {
        return listDataArray.count
    } else {
        return 0
    }
}

func tableView(tableView: UITableView!, cellForRowAtIndexPath indexPath: NSIndexPath!) -> UITableViewCell!  {
    var cell = tableView.dequeueReusableCellWithIdentifier("CELL") as? UITableViewCell

    if !(cell != nil) {
        cell = UITableViewCell(style: UITableViewCellStyle.Value1, reuseIdentifier: "CELL")
    }
    cell?.textLabel?.text = listDataArray[indexPath.row] as? String

    return cell
}


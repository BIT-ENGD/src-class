var jsonResult = NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions.MutableContainers, error: &err) as NSDictionary

class NearbyVC: UIViewController,UITableViewDelegate,UITableViewDataSource,NSURLSessionDelegate,NSURLSessionTaskDelegate{
@IBOutlet var listview: UITableView?
var tableData = []

override func viewDidLoad() {
    super.viewDidLoad()
    ///self.listview?.delegate = self
    ///self.listview?.dataSource = self
    httpGet()
}

override func didReceiveMemoryWarning() {
    super.didReceiveMemoryWarning()
}

func tableView(tableView: UITableView,numberOfRowsInSection section: Int) -> Int{
    return tableData.count
}

func tableView(tableView: UITableView,cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell{
    let cell:UITableViewCell = UITableViewCell(style: UITableViewCellStyle.Subtitle, reuseIdentifier: "MyTestCell")
    let rowData:NSDictionary = self.tableData[indexPath.row] as NSDictionary

    cell.textLabel.text = "Row#\(indexPath.row)"
    cell.detailTextLabel?.text = "Subtitle #\(indexPath.row)"

    return cell
}
func httpGet() {

    let urlPath = "myURL"
    let url = NSURL(string: urlPath)
    let session = NSURLSession.sharedSession()
    let task = session.dataTaskWithURL(url!, completionHandler: {data, response, error -> Void in
        println("Task completed")
        if(error != nil) {
            // If there is an error in the web request, print it to the console
            println(error.localizedDescription)
        }
        var err: NSError?
        ///Here    
        var jsonResult = NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions.MutableContainers, error: &err) as NSDictionary
        ///Here
if(err != nil) {
            // If there is an error parsing JSON, print it to the console
            println("JSON Error \(err!.localizedDescription)")
        }
        let results: NSArray = jsonResult["results"] as NSArray
        println(results)
        dispatch_async(dispatch_get_main_queue(), {
            self.tableData = results
            self.listview!.reloadData()
    })
    })

    task.resume()
}


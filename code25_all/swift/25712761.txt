    let transition = SKTransition.revealWithDirection(SKTransitionDirection.Down, duration: 1.0)     
    let scene = GameScene(size: self.scene.size)
    scene.scaleMode = SKSceneScaleMode.AspectFill
    self.scene.view.presentScene(scene, transition: transition)

    let playView = PlayScene(size: self.scene?.size) 

var playButton = SKSpriteNode(imageNamed: "Play")
var levelsButton = SKSpriteNode(imageNamed: "Levels")
var optionsButton = SKSpriteNode(imageNamed: "Options")

override func didMoveToView(view: SKView) {
    /* Setup your scene here */
    let myLabel = SKLabelNode(fontNamed:"Helvetica-Light")
    myLabel.text = "Mini Golf";
    myLabel.fontSize = 30;
    myLabel.position = CGPoint(x:CGRectGetMidX(self.frame), y:525);
    println(size.height)
    println(size.width)
    let backgroundNode = SKSpriteNode(imageNamed: "Background")

    backgroundNode.position = CGPoint(x: CGRectGetMidX(self.frame), y: CGRectGetMidY(self.frame));
    playButton.position = CGPoint(x: CGRectGetMidX(self.frame), y: 360)
    levelsButton.position = CGPoint(x: CGRectGetMidX(self.frame), y: 295)
    optionsButton.position = CGPoint(x: CGRectGetMidX(self.frame), y: 230)

    self.addChild(backgroundNode)
    self.addChild(playButton)
    self.addChild(levelsButton)
    self.addChild(optionsButton)
    self.addChild(myLabel)
}

override func touchesBegan(touches: NSSet, withEvent event: UIEvent) {
    /* Called when a touch begins */
    super.touchesBegan(touches, withEvent: event)

    for touch: AnyObject in touches {
        let location = touch.locationInNode(self)
        //let touchedNode = nodeAtPoint(Location)
        //touchedNode.postiion =location
        let transitionToPlayScene = SKTransition.revealWithDirection(SKTransitionDirection.Down, duration: 1.0)
        if CGRectContainsPoint(playButton.frame, location) {
            let playView = PlayScene(size: self.scene?.size)




        }
    }
}

import Foundation
import UIKit
import SpriteKit

private let WALL_CATEGORY: UInt32 = 0x1 << 0
private let HOLE_CATEGORY: UInt32 = 0x1 << 1
private let GOLF_CLUB_CATEGORY: UInt32 = 0x1 << 2
private let BALL_CATEGORY: UInt32 = 0x1 << 4
private let DECORATION_BORDER_CATEGORY: UInt32 = 0x1 << 5


class PlayScene: SKScene, SKPhysicsContactDelegate  {

var ballNode = SKSpriteNode(imageNamed: "Ball")
var flag = SKSpriteNode(imageNamed: "Flag")
var club = SKSpriteNode(imageNamed: "Golf Club")
var tee = SKSpriteNode(imageNamed: "Tee")
var hole = SKSpriteNode(imageNamed: "Hole")
var decoBorder1 = SKSpriteNode(imageNamed: "Border 1")
var decoBorder2 = SKSpriteNode(imageNamed: "Border 2")

override func didMoveToView(view: SKView) {
    //Setting up the view's physics
    let borderBody = SKPhysicsBody(edgeLoopFromRect: self.frame);
    self.physicsBody = borderBody
    self.physicsBody?.friction = 0.0
    self.physicsBody?.categoryBitMask  = WALL_CATEGORY
    self.physicsWorld.gravity = CGVectorMake(0.0 ,0.0);
    self.physicsWorld.contactDelegate = self

    //Setting the ball's properties
    ballNode.position = CGPoint(x: CGRectGetMidX(self.frame), y: 100);
    ballNode.physicsBody = SKPhysicsBody(rectangleOfSize: ballNode.frame.size);
    ballNode.physicsBody?.categoryBitMask = BALL_CATEGORY
    ballNode.physicsBody?.mass = 50.0
    ballNode.physicsBody?.dynamic = true
    ballNode.physicsBody?.allowsRotation = true
    self.addChild(ballNode)

    //Setting the club's properties
    club.position = CGPoint(x: CGRectGetMidX(self.frame)-20, y: 75);
    club.physicsBody = SKPhysicsBody(rectangleOfSize: self.frame.size);
    club.physicsBody?.categoryBitMask = GOLF_CLUB_CATEGORY
    club.physicsBody?.mass = 150.0
    club.physicsBody?.dynamic = true
    club.physicsBody?.allowsRotation = false
    self.addChild(club)

    //Setting the Tee's properties
    tee.position = CGPoint(x: CGRectGetMidX(self.frame), y: 70);
    //self.addChild(tee)

    //Setting the decoration border nodes
    decoBorder1.position = CGPoint(x: CGRectGetMinX(self.frame), y: 500);
    decoBorder2.position = CGPoint(x: CGRectGetMaxX(self.frame), y:500);
    decoBorder1.physicsBody = SKPhysicsBody(rectangleOfSize: self.frame.size);
    decoBorder2.physicsBody = SKPhysicsBody(rectangleOfSize: self.frame.size);
    decoBorder1.physicsBody?.categoryBitMask = DECORATION_BORDER_CATEGORY
    decoBorder1.physicsBody?.dynamic = false;
    decoBorder1.physicsBody?.allowsRotation = false
    decoBorder2.physicsBody?.categoryBitMask = DECORATION_BORDER_CATEGORY
    decoBorder2.physicsBody?.dynamic = false;
    decoBorder2.physicsBody?.allowsRotation = false
    //self.addChild(decoBorder1)
    //self.addChild(decoBorder2))

    //Setting the Hole properties
    hole.position = CGPoint(x: CGRectGetMidX(self.frame), y: 550);
    hole.physicsBody = SKPhysicsBody(rectangleOfSize: self.frame.size);
    hole.physicsBody?.categoryBitMask = HOLE_CATEGORY
    hole.physicsBody?.dynamic = false
    hole.physicsBody?.allowsRotation = false
    //self.addChild(hole)
}


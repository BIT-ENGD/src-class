protocol TypedHashable {

    typealias Type

}

class UsingTypedHashable<K: TypedHashable, V: TypedHashable where K.Type == V.Type> {
    ...
}

func toArray<S : Sequence,
         T where T == S.GeneratorType.Element>
    (seq : S) -> T[] {
    var arr = T[]()
    for x in seq {
        arr.append(x)
    }
    return arr
}


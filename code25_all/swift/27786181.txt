/* Services & Characteristics UUIDs */
let BLEServiceUUID = CBUUID(string: "025A7775-49AA-42BD-BBDB-E2AE77782966")
let PositionCharUUID = CBUUID(string: "F38A2C23-BC54-40FC-BED0-60EDDA139F47")
let BLEServiceChangedStatusNotification = "kBLEServiceChangedStatusNotification"
.
.
.
.
.
func peripheral(peripheral: CBPeripheral!, didDiscoverServices error: NSError!) {
  let uuidsForBTService: [CBUUID] = [PositionCharUUID]

  if (peripheral != self.peripheral) {
    // Wrong Peripheral
    return
  }

  if (error != nil) {
    return
  }

  if ((peripheral.services == nil) || (peripheral.services.count == 0)) {
    // No Services
    return
  }

  for service in peripheral.services {
    if service.UUID == BLEServiceUUID {
      peripheral.discoverCharacteristics(uuidsForBTService, forService: service as CBService)
    }
  }
}

func peripheral(peripheral: CBPeripheral!, didDiscoverCharacteristicsForService service: CBService!, error: NSError!) {
  if (peripheral != self.peripheral) {
    // Wrong Peripheral
    return
  }

  if (error != nil) {
    return
  }

  for characteristic in service.characteristics {
    if characteristic.UUID == PositionCharUUID {
      self.positionCharacteristic = (characteristic as CBCharacteristic)
      peripheral.setNotifyValue(true, forCharacteristic: characteristic as CBCharacteristic)

      // Send notification that Bluetooth is connected and all required characteristics are discovered
      self.sendBTServiceNotificationWithIsBluetoothConnected(true)
    }
  }


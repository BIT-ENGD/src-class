@class RWTRateView;

@protocol RWTRateViewDelegate
- (void)rateView:(RWTRateView *)rateView ratingDidChange:(float)rating;
@end
@interface RWTRateView : UIView
...
@property (assign) id <RWTRateViewDelegate> delegate;

@end

class DetailViewController: UIViewController, UITextFieldDelegate, RWTRateViewDelegate, UIImagePickerControllerDelegate, UINavigationControllerDelegate {

@IBOutlet var rateView : RWTRateView
...
    func configureView() {
            // Update the user interface for the detail item.
            if let detail:RWTScaryBugDoc = self.detailItem as? RWTScaryBugDoc {
                if let rv = self.rateView {
                    rv.notSelectedImage = UIImage(named: "shockedface2_empty.png")
                    rv.halfSelectedImage = UIImage(named: "shockedface2_half.png")
                    rv.fullSelectedImage = UIImage(named: "shockedface2_full.png")
                    rv.editable = true
                    rv.maxRating = 5
                    rv.delegate = self as RWTRateViewDelegate
                    rv.rating = detail.data.rating!
                    self.titleField.text = detail.data.title
                    self.imageView.image = detail.fullImage
                }
            }
        }
    ...

    func rateView(rateView:RWTRateView!, ratingDidChange rating:Float!) ->Void {

        if let detail = self.detailItem as? RWTScaryBugDoc {
            detail.data.rating = rating
        }
    }

...
}


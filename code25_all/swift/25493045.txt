    let myMatrix: Array<GLfloat> = [1, 0, 0 , 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1]

    var material = SCNMaterial()
    var program = SCNProgram()

    // setup of vertex/fragment shader goes here
    program.vertexShader = ...
    program.fragmentShader = ...

    material.program = program

    // I want to initialize the variable declared as "uniform mat4 u_matrix" in the vertex shader with "myMatrix"
    material.handleBindingOfSymbol("u_matrix"){
        programID, location, renderedNode, renderer in

        let numberOfMatrices = 1
        let needToBeTransposed = false
        glUniformMatrix4fv(GLint(location), GLsizei(numberOfMatrices), GLboolean(needToBeTransposed), myMatrix)
    }

Cannot invoke 'init' with an argument list of type (GLint, GLsizei, GLboolean, Array<GLfloat>)
        let testPtr: UnsafePointer<GLfloat> = nil
        glUniformMatrix4fv(GLint(location), GLsizei(numberOfMatrices), GLboolean(needToBeTransposed), testPtr)

Cannot invoke 'init' with an argument list of type '(GLint, GLsizei, GLboolean, UnsafePointer<GLfloat>)'
func glUniformMatrix4fv(location: GLint, count: GLsizei, transpose: GLboolean, value: UnsafePointer<GLfloat>)

class CustomCell: PFTableViewCell {

    @IBOutlet weak var EventTitle: UILabel!
}

class TableViewController: PFQueryTableViewController {




    override init!(style: UITableViewStyle, className: String!) {
        super.init(style: style, className: className)
    }


    required init(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)

        self.parseClassName = "Events_"
        self.pullToRefreshEnabled = true
        self.paginationEnabled = true
    }



    override func queryForTable() -> PFQuery! {

        var query = PFQuery(className: self.parseClassName)
        if (objects.count == 0)
        {
            query.cachePolicy = kPFCachePolicyNetworkOnly
        }
        return query

    }

    override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath, object: PFObject!) -> PFTableViewCell {



        var cell: CustomCell = tableView.dequeueReusableCellWithIdentifier("CustomCell", forIndexPath: indexPath) as CustomCell

        cell.EventTitle.text = object["Title"] as NSString
        return cell


    }


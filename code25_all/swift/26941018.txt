[PFQuery findObjects:]
[BFTask(Private) waitForResult:]
objc_exception_throw
PFQuery.findObjects
STKStake
PFObject
intrinsicID
PFObject
import ParseOSX
Parse.setApplicationId("<appid>", clientKey: "<key>")
let q = PFQuery(className:"STKStake")
println("launching a stake query")
let results  = q.findObjects()
println("results=\(results)")

func refreshFromServer(block:(success:Bool, error:NSError!)->Void)
{
  NSLog("ENTRY: refreshFromServer")

  dispatch_async_to_global { () -> Void in
    let query = PFQuery(className: "STKStake")
    NSLog("launching query for STKStake")
    let results1 = query.findObjects()
    NSLog("this line never executes")
    NSLog("results1=%@",results1)
  }
}

class STKSTake:PFObject, PFSubclassing, NSCopying, Trackable {

   class func parseClassName() -> String? { return "STKSTake" }
   override class func load() -> Void {
       superclass()?.load()
       self.registerSubclass()
   }
   @NSManaged var intrinsicID:NSString
   // etc. etc.
}

STKStake

import UIKit


class ViewController: UIViewController {

    var allImageViews : [UIImageView] = []
    var allCenters : NSMutableArray = NSMutableArray()
    var emptySpot : CGPoint = CGPoint()
    var originalCenters : NSMutableArray = NSMutableArray()

    override func viewDidLoad() {
        super.viewDidLoad()

        // Center point for piece of image for iPhone 5S simulator
        var xCen : CGFloat = 53
        var yCen : CGFloat = 53

        // arrangement of 3*3 piece of images
        for v in 0...2{

            for h in 0...2{
                var pieces = [[0, 1, 2], [3, 4, 5], [6, 7, 8]]
                let filename = String(format: "Smile_%02i.gif", h+v*3)
                let Image = UIImage(named: filename)
                let myImageView = UIImageView(image: Image)
                var curCenter : CGPoint = CGPointMake(xCen, yCen)

                //adding centerpoint to allCenter array
                allCenters.addObject(NSValue(CGPoint : curCenter))
                myImageView.frame = CGRectMake(0, 0, 106, 106)
                myImageView.center = curCenter
                myImageView.userInteractionEnabled = true

                //adding all Images in array allImageviews
                allImageViews.append(myImageView)
                self.view.addSubview(myImageView)

                //Increment on X-Axis
                xCen += 106
            }
            //again sex X centerpoint to 53
            xCen = 53
            //Increment on Y-Axis
            yCen += 106
        }
        // romove one piece at index 0
        allImageViews.removeAtIndex(0).removeFromSuperview()
        // we have all 8 imageview and all 9 centerpoints
        self.randomizeBlocks()

    }
    // placing the piece of images randomly
    func randomizeBlocks(){

        // new array that copy centerpoint from allCenters
        var centersCopy: NSMutableArray = allCenters.mutableCopy() as NSMutableArray

        var randLocInt : Int
        var randLoc : CGPoint

        // loop for all peice of images saved in allImageViews
        for i in allImageViews {
            //Place Images randomly
            randLocInt = Int(arc4random()) % centersCopy.count
            randLoc  = centersCopy.objectAtIndex(randLocInt).CGPointValue()
            i.center = randLoc
            centersCopy.removeObjectAtIndex(randLocInt)

        }

        // for finding empyblock which is at index 0
        emptySpot = centersCopy.objectAtIndex(0).CGPointValue()

    }
    var leftisEmpty : Bool = Bool()
    var rightisEmpty : Bool = Bool()
    var topisEmpty : Bool = Bool()
    var bottomisEmpty : Bool = Bool()


    // touch event
    override func touchesEnded(touches: NSSet, withEvent event: UIEvent) {
        var topCen : CGPoint
        var left : CGPoint
        var right : CGPoint
        var top : CGPoint
        var bottom : CGPoint

        let touches = touches.allObjects as [UITouch]
        var myTouch = touches.first

        if let myTouch = myTouch{

            topCen = myTouch.view.center

            // movement to empty block
            left = CGPointMake(topCen.x - 106, topCen.y)
            right = CGPointMake(topCen.x + 106, topCen.y)
            top = CGPointMake(topCen.x, topCen.y+106)
            bottom = CGPointMake(topCen.x, topCen.y-106)

            // Deciding which side is empty
            if emptySpot  == left{
                leftisEmpty = true
            }
            if emptySpot  == right{
                rightisEmpty = true
            }
            if emptySpot  == top{
                topisEmpty = true
            }
            if emptySpot  == bottom{
                bottomisEmpty = true
            }

            if leftisEmpty || rightisEmpty || topisEmpty || bottomisEmpty{


                UIView.beginAnimations(nil, context:nil)

                UIView.setAnimationDuration(0.5)
                myTouch.view.center = emptySpot
                UIView.commitAnimations()
                emptySpot = topCen

                leftisEmpty = false
                rightisEmpty = false
                topisEmpty = false
                bottomisEmpty = false
            }
        }
    }
}


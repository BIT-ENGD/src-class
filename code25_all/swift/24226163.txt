let list = [1,2,3,4]
list.drop(1)            // [2,3,4]
list.take(2)            // [1,2]
list.drop[1].take[2]    // [2,3]

extension Slice {
    func take(num: Int) -> Slice<T> {
        let n = (num < self.count) ? num : self.count
        return self[0..n]
    }

    func drop(num: Int) -> Slice<T> {
        let n = (num < self.count) ? num : self.count
        return self[n..self.count]
    }
}

// Extend array to use the Slice extension
extension Array {
    func take(num: Int) -> Slice<T> {
        let slice = Slice(self)
        return slice.take(num)
    }
    func drop(num: Int) -> Slice<T> {
        let slice = Slice(self)
        return slice.drop(num)
    }
}


override func touchesMoved(touches: NSSet, withEvent event: UIEvent) {

    for touch: AnyObject in touches {

        let angle_area_location = touch.locationInNode(self)

        if self.nodeAtPoint(angle_area_location) == self.angle_area {

            if (angle_area_location.x <= 21) {
                angle = 1.55681122463001
                distance12 = sqrt((angle_area_location.y - 30) * (angle_area_location.y - 30) + 1)

            }

            if (angle_area_location.y <= 31) {
                angle = 0.0102037274939542
                distance12 = sqrt((31 - 30) * (31 - 30) + (angle_area_location.x - 20) * (angle_area_location.x - 20))

            }

            if (angle_area_location.x > 21) && (angle_area_location.y > 31) {

                angle = atan((angle_area_location.y - 30) / (angle_area_location.x - 20))
                distance12 = sqrt((angle_area_location.y - 30) * (angle_area_location.y - 30) + (angle_area_location.x - 20) * (angle_area_location.x - 20))

            }

            if (distance12 <= maxFollow2) && (distance12 >= minFollow2) {

                self.cannon.zRotation = angle
                self.arc.zRotation = angle

                if (angle_area_location.x > 21) || (angle_area_location.y > 31) {
                follow2.position = CGPointMake(angle_area_location.x , angle_area_location.y)
                }

                if(angle_area_location.x <= 21) {

                    follow2.position = CGPointMake(21 , angle_area_location.y)

                }

                if (angle_area_location.y <= 31) {

                    follow2.position = CGPointMake(angle_area_location.x , 31)

                }



            }
            if(distance12 > maxFollow2) {

                self.cannon.zRotation = angle
                self.arc.zRotation = angle
                delta = 290/3
                arc.size = CGSizeMake(160 * (1 + delta/20) , 35)
                arc.position = CGPointMake(20 - 3 * (delta) * cos(angle) , 30 - 3 * (delta) * sin(angle))
                followdist = 360
                follow2.position = CGPointMake(angle_area_location.x , angle_area_location.y)
                velocity = vmin + (followdist - minFollow2) * (300/(maxFollow2 - minFollow2))

            }

            if (distance12 < minFollow2) {

                self.cannon.zRotation = angle
                self.arc.zRotation = angle
                arc.size = CGSizeMake(160 , 6.8)
                arc.position = CGPointMake(20 , 30)
                follow2.position = CGPointMake( minFollow2 * cos(angle) + 20 , minFollow2 * sin(angle) + 30)
                followdist = sqrt((follow2.position.y - 30) * (follow2.position.y - 30) + (follow2.position.x - 20) * (follow2.position.x - 20))
                velocity = vmin + (followdist - minFollow2) * (300/(maxFollow2 - minFollow2))


            }

        }

    }


}


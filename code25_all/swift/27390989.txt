MyEnum.swift
internal enum MyEnum: Int {
    case Zero = 0, One, Two
}

extension MyEnum {
    init?(string: String) {
        switch string.lowercaseString {
        case "zero": self = .Zero
        case "one": self = .One
        case "two": self = .Two
        default: return nil
        }
    }
}

MyClass.swift
internal class MyClass {
    let foo = MyEnum(rawValue: 0)  // Error
    let fooStr = MyEnum(string: "zero")

    func testFunc() {
        let bar = MyEnum(rawValue: 1)  // Error
        let barStr = MyEnum(string: "one")
    }
}

MyEnum
Cannot convert the expression's type '(rawValue: IntegerLiteralConvertible)' to type 'MyEnum?'

rawValue
nil
MyEnum
MyClass.swift
bar
foo
private
init?(raw: Int) {
    self.init(rawValue: raw)
}

RawRepresentable
MyClass.swift
bar
RawRepresentable
extension MyEnum: RawRepresentable {}


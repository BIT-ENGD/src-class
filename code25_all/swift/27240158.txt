// ※Error1※
class NearbyVC: UIViewController,UITableViewDelegate,UITableViewDataSource{

@IBOutlet var listview: UITableView?
var tableData = []

override func viewDidLoad() {
    super.viewDidLoad()

    // Do any additional setup after loading the view.
}

override func didReceiveMemoryWarning() {
    super.didReceiveMemoryWarning()
    // Dispose of any resources that can be recreated.
}

func tableView(tableView: UITableView,numberOfRowsInSection section: Int) -> Int{
    return 1
}

func tableView(tableView: UITableView,cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableView{
    let cell:UITableViewCell = UITableViewCell(style: UITableViewCellStyle.Subtitle, reuseIdentifier: "MyTestCell")
    let rowData:NSDictionary = self.tableData[indexPath.row] as NSDictionary

    cell.textLabel.text = "Row#\(indexPath.row)"
    cell.detailTextLabel?.text = "Subtitle #\(indexPath.row)"
}

let url = NSURL(string:"http:~~")
let session = NSURLSession.sharedSession()

// ※Error2※
let task:NSURLSessionTask = session.dataTaskWithURL(url,completionHandler:apiHandler)

//Use a separate handler function in lieu of doing it inline for clarity
func apiHandler(data:NSData!,response:NSURLResponse!,error:NSError!){
    if (error != nil) {
        println("API error:\(error),\(error.userInfo)")
    }
    var jsonError:NSError?
    var json:NSDictionary = NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions.MutableContainers, error: &jsonError) as NSDictionary
    if (jsonError != nil) {
        println("Error parsing json: \(jsonError)")
    }
    else{
        let status:String? = json["msg"] as? String
        println("servar status:\(status)")
    }
}
// ※Error3※
task.resume()
}


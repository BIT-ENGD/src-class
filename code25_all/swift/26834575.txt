var priorBounds:CGRect = self.tableView.bounds;

var fittedSize:CGSize = self.tableView.sizeThatFits(CGSizeMake(priorBounds.size.width, self.tableView.contentSize.height))
self.tableView.bounds = CGRectMake(0, 0, fittedSize.width, fittedSize.height);

var pdfPageBounds:CGRect = CGRectMake(0, 0, 792, 612); // Change this as your need
var pdfData = NSMutableData()

UIGraphicsBeginPDFContextToData(pdfData, pdfPageBounds, nil)

for var pageOriginY:CGFloat = 0; pageOriginY < fittedSize.height; pageOriginY += pdfPageBounds.size.height {

    UIGraphicsBeginPDFPageWithInfo(pdfPageBounds, nil);       
    CGContextSaveGState(UIGraphicsGetCurrentContext());      
    CGContextTranslateCTM(UIGraphicsGetCurrentContext(), 0, -pageOriginY)
    self.tableView.layer.renderInContext(UIGraphicsGetCurrentContext())
}

UIGraphicsEndPDFContext();

self.tableView.bounds = priorBounds; // Reset the tableView

let path = NSSearchPathForDirectoriesInDomains(.DocumentDirectory, .UserDomainMask, true)[0] as NSString
var pdfFileName = path.stringByAppendingPathComponent("testfilewnew.pdf")

pdfData.writeToFile(pdfFileName, atomically: true)


{
elements:[{
    name = "user1",
    details =     {
        phone = "0033612345678"
    }
},
{
    name = "user2",
    details =     {
        phone = "0033612346612"
    }
},
{
    name = "test3"
}]
}

import Foundation

struct ElementModel {
    var name:String
    var phone:String
}

func getRequestSucceed(results: NSDictionary) {
    println("getRequestSucceed")

    // Loop through list of elements
    let elementsArray = results["elements"] as NSArray
    var elementsTmpArray:[ElementModel] = []

    // Convert each result into Element object
    for var i=0;i<elementsArray.count;i++
    {
        // Get NSDictionary from each element
        let element = elementArray[i] as NSDictionary

        // Create Element object with parameters from dictionary
        var name = element["name"] as String
        var phone:String = ""

        // If details key exists, get phone attribute
        if let details = element["details"] as? NSDictionary {
            println(details["phone"])    // Phone number is correctly displayed
            phone = details["phone"] as String  // Simulator crash occurs the first time
        } else {
            println("Not defined")
        }

        // Create element model with name and phone
        var t = ElementModel(name: name, phone: phone)
        elementsTmpArray.append(t)
    }

    // Update table view
    dispatch_async(dispatch_get_main_queue(), {
        self.elements = elementsTmpArray
        self.elementsTableView!.reloadData()
    })
}


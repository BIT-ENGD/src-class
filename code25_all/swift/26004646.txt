class PurchaseController: UIViewController, SKPaymentTransactionObserver, SKProductsRequestDelegate {

var product: SKProduct = SKProduct()
var productID: NSString = NSString()
var homeViewController: GameScene!

override func viewDidLoad() {
    super.viewDidLoad()
}


func getProductInfo(viewController: GameScene) {
    homeViewController = viewController

    let object: NSSet! = NSSet(object: self.productID)

    if (SKPaymentQueue.canMakePayments()) {
        let request: SKProductsRequest = SKProductsRequest(productIdentifiers: object)
        request.delegate = self
        request.start()
    }
    else {
        println("please enbale in app purchase")
    }
}


func productsRequest(request: SKProductsRequest!, didReceiveResponse response: SKProductsResponse!) {
    var products: NSArray = response.products

    if (products.count != 0) {
        product = products[0] as SKProduct
        let payment: SKPayment = SKPayment(product: product)
        SKPaymentQueue.defaultQueue().addPayment(payment)
    }

    products = response.invalidProductIdentifiers
    for product in products {
        println("Product not found : \(product)")
    }
}


func paymentQueue(queue: SKPaymentQueue!, updatedTransactions transactions: [AnyObject]!) {
    let transaction: SKPaymentTransaction = SKPaymentTransaction()
    let transactionPurchased: SKPaymentTransactionState = SKPaymentTransactionState.Purchased
    let transactionFailed: SKPaymentTransactionState = SKPaymentTransactionState.Failed

    for transaction in transactions {
        switch transaction.transactionState  {

        case transactionPurchased:
            self.unlockFeature()
            println("transaction OK")
            queue.finishTransaction(transaction as SKPaymentTransaction)
        case transactionFailed:
            println("Transaction failed")
            queue.finishTransaction(transaction as SKPaymentTransaction)
        default:
            println("Transaction problem")
        }
    }
}

class GameScene: SKScene {

var purchaseController: PurchaseController!

//Other code...

override func didMoveToView(view: SKView) {
purchaseController = PurchaseController()
    let defaultQueue: SKPaymentQueue = SKPaymentQueue()
    defaultQueue.addTransactionObserver(purchaseController)
}

// On a button click
if (nodeAtPoint(location).name == "removeAdLabel") {
            purchaseController.productID = "com.appsforyou.rvads"
            purchaseController.getProductInfo(self)  
        }
}


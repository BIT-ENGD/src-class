class Tile {
    var sprite: SKSpriteNode
    var isBomb: Bool
    var isUnlocked: Bool
    var row: Int
    var col: Int

    init(sprite: SKSpriteNode, row: Int, col: Int){
        // Default assignations
        self.sprite.name = "\(row):\(col)"
    }

}

class GameScene: SKScene {


    var board: [[Tile]] = [[Tile]]()
    let ROWS: Int = 10
    let COLS: Int = 10

    override func didMoveToView(view: SKView){

        for row in 0..<ROWS {
            board.append([Tile]())
            for col in 0..<COLS{
                var tileSprite = SKSpriteNode(imageNamed: "tile")

                var x: CGFloat = (tileSprite.size.height * CGFloat(row))+(tileSprite.size.height/2)
                var y: CGFloat = (tileSprite.size.width * CGFloat(col))+(tileSprite.size.width/2)

                tileSprite.position = CGPoint(x: x, y: y)

                // I also add it here, just for ensuring that the name is set
                tileSprite.name = "\(row):\(col)"

                board[row].append(Tile(sprite: tileSprite, row: row, col: col))
                addChild(tileSprite)
            }
        }

    }

    func getRowColFromNode(node: SKSpriteNode) -> (row: Int, col: Int){

        var row: Int = 0
        var col: Int = 0

        /*var xPosition = node.position.x
        var yPosition = node.position.y

        row = Int(yPosition/node.size.height)
        col = Int(xPosition/node.size.width)*/

        if let name = node.name {

            println("NAME: \(name)")

            var rowString: String
            var colString: String

            var nameSplit = name.componentsSeparatedByString(":")

            rowString = nameSplit[0]
            colString = nameSplit[1]

            row = rowString.toInt()!
            col = colString.toInt()!


            println("DETECTEDROW: \(row)")
            println("DETECTEDCOL: \(col)")

        }


        return (row, col)
    }

    override func mouseDown(theEvent: NSEvent) {

        var touchedNode: SKSpriteNode = nodeAtPoint(theEvent.locationInWindow) as SKSpriteNode

        var row: Int
        var col: Int


        (row, col) = getRowColFromNode(touchedNode)

        println("ROW: \(row)")
        println("COL: \(col)") 

    }

}


 NSObject 
func captureOutput(captureOutput: AVCaptureOutput!, didOutputMetadataObjects metadataObjects: [AnyObject]!, fromConnection connection: AVCaptureConnection!)

class CKScanner: NSObject, AVCaptureMetadataOutputObjectsDelegate {

//test
var delegate: AVCaptureMetadataOutputObjectsDelegate?

var frame: CGRect
//UPC Scan properties
let avSession:AVCaptureSession = AVCaptureSession()
let avDevice:AVCaptureDevice = AVCaptureDevice.defaultDeviceWithMediaType(AVMediaTypeVideo)

var avInput:AVCaptureDeviceInput?
var avOutput:AVCaptureMetadataOutput?
var avPreviewLayer: AVCaptureVideoPreviewLayer?
var scannedUPC: NSString
{
    get {
        return self.scannedUPC
    }
}

required init(_frame: CGRect, _parentView: CALayer) {
    frame = _frame

    super.init()

    startScanning(_parentView)
}

func startScanning(_parentLayer: CALayer) {
    println("started scanning")
    var error: NSError?

    avInput = AVCaptureDeviceInput(device: avDevice, error: &error)
    if error != nil {
        println("Error: \(error!.localizedDescription)")
        return
    }

    if avSession.canAddInput(avInput!) {
        avSession.addInput(avInput!)
    }

    avPreviewLayer = AVCaptureVideoPreviewLayer(session: avSession)
    if avPreviewLayer != nil {
        avPreviewLayer!.frame = frame
        avPreviewLayer!.videoGravity = AVLayerVideoGravityResizeAspectFill
        _parentLayer.addSublayer(avPreviewLayer!)
    }
    avOutput = AVCaptureMetadataOutput()
    avOutput!.setMetadataObjectsDelegate(self, queue: dispatch_get_main_queue())
    if avSession.canAddOutput(avOutput!) {
        avSession.addOutput(avOutput!)
        avOutput!.metadataObjectTypes = avOutput!.availableMetadataObjectTypes
    }
    else {
        println("cant add output")
    }

    avSession.startRunning()

}

//scanner was able to scan a barcode
 func captureOutput(captureOutput: AVCaptureOutput!, didOutputMetadataObjects metadataObjects: [AnyObject]!, fromConnection connection: AVCaptureConnection!) {}

var scanner = Scanner(frame: frame, _parentLayer: layer) 

AVCaptureMetadataOutputObjectsDelegate
 scanner.delegate = self 

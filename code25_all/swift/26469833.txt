func getImageData(objects: [PFObject]) {

        let downloadGroup = dispatch_group_create()

        for object in objects {
            let thumbNail = object["StaffPic"] as PFFile
            dispatch_group_enter(downloadGroup)

            thumbNail.getDataInBackgroundWithBlock({
                (imageData: NSData!, error: NSError!) -> Void in
                if (error == nil) {
                    let image = UIImage(data:imageData)
                    self.logoImages.append(image)

                    dispatch_group_leave(downloadGroup)
                }


            }, progressBlock: {(percentDone: CInt) -> Void in


        })




        }

        dispatch_group_notify(downloadGroup, dispatch_get_main_queue()) {

            self.arrayimages.append(self.ImageView0)
            self.arrayimages.append(self.ImageView1)
            self.arrayimages.append(self.ImageView2)
            self.arrayimages.append(self.ImageView3)
            self.arrayimages.append(self.ImageView4)
            self.arrayimages.append(self.ImageView5)
            self.arrayimages.append(self.ImageView6)
            self.arrayimages.append(self.ImageView7)
            self.arrayimages.append(self.ImageView8)


            for var i = 0; i <= self.logoImages.count; i++
            {
                var division : CGFloat = (self.ImageViewMain.frame.size.width / 2.0)
                self.arrayimages[i].image = self.logoImages[i]
                self.arrayimages[i].layer.cornerRadius = division
                self.arrayimages[i].clipsToBounds = true
                self.arrayimages[i].layer.borderWidth = 2.0
                self.arrayimages[i].layer.borderColor = self.colour.CGColor
                self.view.addSubview(self.arrayimages[i])
            }


class MasterViewController: UICollectionViewController, UICollectionViewDataSource, UICollectionViewDelegate
class Cell: UICollectionViewCell
cellForItemAtIndexPath
let cell:Cell = collectionView.dequeueReusableCellWithReuseIdentifier("MyCell", forIndexPath: indexPath) as Cell

registerClass:forCellWithReuseIdentifier:
class MasterViewController: UICollectionViewController,UICollectionViewDataSource,UICollectionViewDelegate {


var objects = [ObjectsEntry]()

@IBOutlet var flowLayout: UICollectionViewFlowLayout!

override func awakeFromNib() {
    super.awakeFromNib()
}


override func viewDidLoad() {
    super.viewDidLoad()

    flowLayout.itemSize = CGSizeMake(collectionView!.bounds.width - 52, 151)

}



// MARK: - Collection View

override func numberOfSectionsInCollectionView(collectionView: UICollectionView) -> Int {
    return 1
}

override func collectionView(collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
    return objects.count
}

override func collectionView(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath) -> UICollectionViewCell {
    let cell:Cell = collectionView.dequeueReusableCellWithReuseIdentifier("MyCell", forIndexPath: indexPath) as Cell

    return cell

}


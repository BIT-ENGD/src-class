    // An HTTP GET call
func get(urlString:String, body:AnyObject?, completion:(data:AnyObject?, error:NSError?, operation: AFHTTPRequestOperation) -> ())
{
    var operation = self.GET(urlString,
        parameters: body,
        success: { (operation: AFHTTPRequestOperation!, responseObject: AnyObject!) in
            completion(data: (responseObject), error: nil, operation: operation)
        },
        failure: { (operation: AFHTTPRequestOperation!, error: NSError!) in
            completion(data: nil, error: error, operation: operation)
        }
    )
}

// An HTTP POST call
func post(urlString: String, body: AnyObject?, completion:(data:AnyObject?, error:NSError?, operation: AFHTTPRequestOperation) -> ())
{
    var operation = self.POST(urlString,
        parameters: body,
        success: { (operation: AFHTTPRequestOperation!, responseObject: AnyObject!) in
            completion(data: (responseObject), error: nil, operation: operation)
        },
        failure: { (operation: AFHTTPRequestOperation!, error: NSError!) in
            completion(data: nil, error: error, operation: operation)
        }
    )
}

class ShopViewController: UITableViewController, UITableViewDataSource, UITableViewDelegate {

var stores = [PartnerStore]()

override func viewDidLoad() {

    super.viewDidLoad()
    self.loadStores()
    // Do any additional setup after loading the view, typically from a nib.
}

override func numberOfSectionsInTableView(tableView: UITableView!) -> Int
{
    return 3;
}

override func tableView(tableView: UITableView!, numberOfRowsInSection section: Int) -> Int
{
// placeholder value
    return 1;
}

override func tableView(tableView: UITableView!, cellForRowAtIndexPath indexPath: NSIndexPath!) -> UITableViewCell!
{
    var cell = tableView.dequeueReusableCellWithIdentifier("PartnerShopCell") as PartnerStoreTableViewCell

    cell.storeLogoImageView.image = UIImage();
    cell.storeNameLabel.text = self.stores[indexPath.row].name;

    return cell;

}

func loadStores()
{
    var networkManager:APIClient = APIClient.sharedInstance
    networkManager.get("partner_stores/", body: nil, completion:  {
        (data:AnyObject?, error:NSError?, operation: AFHTTPRequestOperation)  in

        self.stores = data as [PartnerStore]
        println("Data \(self.stores)");
        self.tableView.reloadData()
        if (!error) {

        } else {
            println(error)
            println (operation.response.statusCode)
        }

        });
}
}


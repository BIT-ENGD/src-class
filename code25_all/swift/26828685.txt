[Orange, Orange Ekstraklasa, Orange (entreprise), Orange (Vaucluse), Orange mécanique, Orange-Nassau, Orange (fruit), Orange Cinémax, Orange TV, Orange Stinger]

    let myStringToBeMatched = "ThisIsMyString"
    let myRegex = "^This"

    if let match = myStringToBeMatched.rangeOfString(myRegex, options: .RegularExpressionSearch){
        println("\(myStringToBeMatched) is matching!")
    }

let list = ["Orange", "Orange Ekstraklasa", "Orange (entreprise)", "Orange (Vaucluse)", "Orange mécanique", "Orange-Nassau", "Orange (fruit)", "Orange Cinémax", "Orange TV", "Orange Stinger"]

let results = list.map { split($0, {$0 == " " || $0 == "(" || $0 == ")"}) }
              .filter { $0.count > 1 }
              .map { $0[1] }

Alamofire.request(.GET, "http://fr.wikipedia.org/w/api.php", parameters: parameters)
        .responseJSON { (_, _, data, _) in

            let json = JSON(object: data!)
            var list = json[1].arrayValue!

            let results = list.map { split($0, {$0 == " " || $0 == "(" || $0 == ")"}) }
                .filter { $0.count > 1 }
                .map { $0[1] }

    }

results
Expression was too complex to be solved in reasonable time; consider breaking up the expression into distinct sub-expressions

Array<T>
P
T
Q
P
Q
P
P
Arbitrary
protocol Arbitrary {
    class func arbitrary() -> Self
}
extension Array {
    static func arbitrary<T where T : Arbitrary>() -> [T] {
        // code to create a random-length list of T objects
        // using T.arbitrary() for each one 
    }
}
extension Array<T where T : Arbitrary> : Arbitrary {}

extension of generic type 'Array' cannot add requirements
extension Array<T where T : Arbitrary> : Arbitrary {}


@IBAction func postPhoto(sender: AnyObject)
{
    var fileData:NSData
    var fileName:NSString
    var fileType:NSString

    if image != nil
    {
        fileData = UIImageJPEGRepresentation((image), 0.7)
        fileName = "image.png"
        fileType = "image"
    }
    else
    {
        fileData = NSData.dataWithContentsOfMappedFile(videoFilePath) as NSData
        fileName = "video.mov"
        fileType = "video"
    }

    let file = PFFile(name: fileName, data: fileData)

    var content = PFObject(className: "Content")
    content["sender"] = self.currentUser
    content["senderObjectId"] = self.currentUser?.objectId
    content["senderUsername"] = self.currentUser?["displayUsername"]
    content["senderProfilePic"] = self.currentUser?["profilePic"]
    content["file"] = file
    content["recipients"] = self.photoRecipients
    content["caption"] = self.photoCaption.text
    content.saveInBackgroundWithBlock { (success:Bool!, error:NSError!) -> Void in
        if success != nil
        {
            self.dismissViewControllerAnimated(false, completion: nil)
            self.reset()
        }
        else
        {
            var alert:UIAlertController = UIAlertController(title: "Error", message: "There is a poor network connection, please try again", preferredStyle: UIAlertControllerStyle.Alert)
            alert.addAction(UIAlertAction(title: "Close", style: .Cancel, handler: nil))
        }
    }
}

override func viewDidLoad()
{
    super.viewDidLoad()

    currentUser = PFUser.currentUser()
    if currentUser != nil
    {   
        var query = PFUser.query()
        query.orderByAscending("username")
        query.findObjectsInBackgroundWithBlock({ (NSArray objects, NSError error) -> Void in
            if error == nil
            {
                for user in objects
                {
                    self.contentRecipients.append(user.objectId)
                }
            }
        })
        currentUserObjectId = currentUser?.objectId
        currentUserDisplayUsername = currentUser?["displayUsername"] as? NSString
    }
    else
    {
        self.performSegueWithIdentifier("showLogin", sender: self)
    }
}


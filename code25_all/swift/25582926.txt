let blueCategory:UInt32 = 0x1 << 1       //color category
let yellowCategory:UInt32 = 0x1 << 1

let balloonCategory:UInt32 = 0x1 << 1     // general balloons category

let flechetteCategory:UInt32 = 0x1 << 0   // dart category

func addBalloonbl(){


var balloonbl:SKSpriteNode = SKSpriteNode (imageNamed: "ballonbleu.png")


balloonbl.physicsBody = SKPhysicsBody (circleOfRadius: balloonbl.size.width/2)
balloonbl.physicsBody.dynamic = true
balloonbl.physicsBody.mass = 1
balloonbl.physicsBody.restitution = 1


balloonbl.physicsBody.categoryBitMask = balloonCategory | blueCategory
balloonbl.physicsBody.contactTestBitMask = flechetteCategory
balloonbl.physicsBody.collisionBitMask = balloonCategory





let minX = balloonbl.size.width/2
let maxX = self.frame.size.width - balloonbl.size.width/2
let rangeX = maxX - minX
let position:CGFloat = CGFloat(arc4random()) % CGFloat(rangeX) + CGFloat(minX)

balloonbl.position = CGPointMake(position, self.frame.size.height+balloonbl.size.height)

self.addChild(balloonbl)


}





func addBalloonj(){       



    var balloonj:SKSpriteNode = SKSpriteNode (imageNamed: "ballonjaune.png")

    balloonj.physicsBody = SKPhysicsBody (circleOfRadius: balloonj.size.width/2)
    balloonj.physicsBody.dynamic = true
    balloonj.physicsBody.mass = 1
    balloonj.physicsBody.restitution = 1

    balloonj.physicsBody.categoryBitMask = balloonCategory | yellowCategory
    balloonj.physicsBody.contactTestBitMask = flechetteCategory
    balloonj.physicsBody.collisionBitMask = balloonCategory


    let minX = balloonj.size.width/2
    let maxX = self.frame.size.width - balloonj.size.width/2
    let rangeX = maxX - minX
    let position:CGFloat = CGFloat(arc4random()) % CGFloat(rangeX) + CGFloat(minX)            
    balloonj.position = CGPointMake(position, self.frame.size.height+balloonj.size.height)

    self.addChild(balloonj)

}

func didBeginContact(contact: SKPhysicsContact!)
{

    var firstBody: SKPhysicsBody
    var secondBody: SKPhysicsBody

    if (contact.bodyA.categoryBitMask < contact.bodyB.categoryBitMask)
    {

        firstBody = contact.bodyA
        secondBody = contact.bodyB         

    }
    else
    {

        firstBody = contact.bodyB
        secondBody = contact.bodyA

    }

    if ((firstBody.categoryBitMask & flechetteCategory) != 0 && (secondBody.categoryBitMask & blueCategory) != 0)
    {
       flecheDidCollideWithBlueBalloon(firstBody.node as SKSpriteNode, balloon: secondBody.node as SKSpriteNode)

    }

    else if ((firstBody.categoryBitMask & flechetteCategory) != 0 && (secondBody.categoryBitMask & yellowCategory) !=0)
    {
        flecheDidCollideWithYellowBalloon(firstBody.node as SKSpriteNode, balloon: secondBody.node as SKSpriteNode)

    }
}


func flecheDidCollideWithBlueBalloon (fleche: SKSpriteNode, balloon: SKSpriteNode)
    {

    self.runAction(SKAction.playSoundFileNamed("eclate.mp3", waitForCompletion: false))


    println("blue")


    fleche.removeFromParent()

    balloon.removeFromParent()



    balloonDestroyed++


    }


func flecheDidCollideWithBYellowBalloon (fleche: SKSpriteNode, balloon: SKSpriteNode)

   {     

    self.runAction(SKAction.playSoundFileNamed("eclate.mp3", waitForCompletion: false))


    println("Yellow")


    fleche.removeFromParent()       

    balloon.removeFromParent()


    balloonDestroyed++


  }


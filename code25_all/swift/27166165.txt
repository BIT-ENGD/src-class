func loadImages() {

    var query = PFQuery(className: "TestClass")
    query.orderByDescending("objectId")


    query.findObjectsInBackgroundWithBlock ({(objects:[AnyObject]!, error: NSError!) in
        if(error == nil){

            self.getImageData(objects as [PFObject])

        }
        else{
            println("Error in retrieving \(error)")
        }

    })//findObjectsInBackgroundWithblock - end


}

func getImageData(objects: [PFObject]) {

    for object in objects {

        let thumbNail = object["image"] as PFFile

        println(thumbNail)

        thumbNail.getDataInBackgroundWithBlock({
            (imageData: NSData!, error: NSError!) -> Void in
            if (error == nil) {
              var imageDic = NSMutableArray()
                self.image1 = UIImage(data:imageData)
                //image object implementation
                self.imageResources.append(self.image1!)


                println(self.image1)

                println(self.imageResources.count)


            }
            }, progressBlock: {(percentDone: CInt )-> Void in

        })//getDataInBackgroundWithBlock - end



    }//for - end


   self.tableView.reloadData()

func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
    println("in table view")
     println(self.imageResources.count)
    return imageResources.count+1;
}

func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {
    var cell:CustomTableViewCell = tableView.dequeueReusableCellWithIdentifier("customCell") as CustomTableViewCell

    var (title, image) = items[indexPath.row]

   cell.loadItem(title: title, image: image)


    println("message : going upto this line")
    println(self.imageResources.count)


   var (image1) = imageResources[indexPath.row]

    cell.loadItem1(image1: image1)

return cell
}


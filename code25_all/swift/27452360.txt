    var searchIndex:Int!

    func CreateButtonWithIndex(index:Int) {

    let newButton = UIButton.buttonWithType(UIButtonType.System) as UIButton
    newButton.setTitle("Button \(index+1)", forState: UIControlState.Normal)
    newButton.tag = index+1;

//Mark: - UIPanGesture
    var pan = UIPanGestureRecognizer(target:self, action:"pan:")
    pan.maximumNumberOfTouches = 1
    pan.minimumNumberOfTouches = 1
    newButton.addGestureRecognizer(pan)
    self.searchIndex = pan.view?.tag
    self.view.addSubview(newButton)
}

//Mark: - pan

func pan(rec:UIPanGestureRecognizer) {

    var p:CGPoint = rec.locationInView(self.view)

    var center:CGPoint = CGPointZero

    switch rec.state {
    case .Began:
        println("began")
        selectedView = view.hitTest(p, withEvent: nil)
        if selectedView != nil {
           self.view.bringSubviewToFront(selectedView!)
        }

    case .Changed:
          let subviews = self.view.subviews as [UIView]
            for v in subviews {
                if let button = v as? UIButton {
                   if button.tag == self.searchIndex {
                                println("\(button.titleLabel!.text)")
                               }}} 


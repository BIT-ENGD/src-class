import UIKit
import Foundation

var items:[String] = []
class ViewController: UIViewController, UITableViewDelegate, UITableViewDataSource {


override func viewDidLoad() {
    super.viewDidLoad()
    // Do any additional setup after loading the view, typically from a nib.
    func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return items.count

    }

    func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell{

        var cell = UITableViewCell(style: UITableViewCellStyle.Default, reuseIdentifier: "cell")
        cell.backgroundColor = UIColor.orangeColor()
        cell.textLabel?.text = items[indexPath.row]
        return cell
    }

     func viewWillAppear(animated: Bool) {
        if var storeditems: AnyObject? = NSUserDefaults.standardUserDefaults().objectForKey("items") {
            items = []
            for var i = 0; i<storeditems?.count; ++i {
                items.append(storeditems?[i] as NSString)

            }
        }
    }
    func tableView(tableView: UITableView, commitEditingStyle editingStyle: UITableViewCellEditingStyle, forRowAtIndexPath indexPath: NSIndexPath!) {

        if editingStyle == UITableViewCellEditingStyle.Delete {
            items.removeAtIndex(indexPath.row)
            NSUserDefaults.standardUserDefaults().setObject(items, forKey: "items")
            NSUserDefaults.standardUserDefaults().synchronize()

            tableView.reloadData()

        }
    }
}


while timer1 != nil { }
while timer1?.valid { }
//  ViewController.swift
//  NSTimerTest


import UIKit

class ViewController: UIViewController {

    var z:Int = 0
    var timer1:NSTimer? = nil

    @IBOutlet var lblMessage: UILabel
    @IBOutlet var lbl2: UILabel
    @IBAction func btnPress(sender: AnyObject) {
        doBtnPress()
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        z = 0
        lblMessage.text = "Timer was called \(z) times."
        lbl2.text = "waiting for countdown"

    }


    func doBtnPress(){
        lblMessage.text = "doBtnPress!!"
        timer1 = NSTimer.scheduledTimerWithTimeInterval(1.0, target: self, selector: "doTimedAction", userInfo: nil, repeats: true)

        // All of the below infinitely loop 
        // while timer1?.valid { }  // <=== never escapes, also depreciated in IOS 8.0 ???
        // while timer1 { }       // <==== never escapes
        // while timer1 != nil { } // <==== never escapes 
        // while z >= 0 { }       //  <==== test counter instead, but no use 


        lbl2.text = "timer has been invalidated"
    }

    func doTimedAction(){
        lblMessage.text = "Timer was called \(++z) times."

        if z >= 10 {
            timer1?.invalidate()
            timer1 = nil
            z = -1      
        }

    }     
}

while z >= 0 { println("z is \(z)")}
z is 0

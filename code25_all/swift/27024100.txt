struct MutableAngle {
    var degrees : CGFloat
    var radians : CGFloat {
        return degrees * CGFloat(M_PI) / 180.0
    }

    init(inRadians : CGFloat) {
        degrees = inRadians * 180.0 / CGFloat(M_PI)
    }
    init(inDegrees : CGFloat) {
        degrees = inDegrees
    }
}

var angle : MutableAngle
angle.degrees = 45.0

var angle : MutableAngle
angle.radians = 0.75

struct Angle {
  let degrees : CGFloat
  let radians : CGFloat

  init(inRadians : CGFloat ) {
    radians = inRadians
    degrees = radians * CGFloat (180 / M_PI)
  }
  init(inDegrees : Float ) {
    degrees = inDegrees
    radians = degrees * CGFloat (M_PI / 180)
  }
}

var alpha = Angle(inDegrees: 45)
alpha.degrees // returns 45
alpha.radians // returns 0.7853982

// alpha.radians = 0.9  ... is now illegal with let constants
// must use constructor ... provided alpha was defined using 'var'
// i.e. the struct itself is mutable
alpha = Angle(inRadians: 0.9)
alpha.radians // returns 0.7853982
alpha.degrees // returns 45


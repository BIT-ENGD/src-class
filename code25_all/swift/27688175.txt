func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {

    let CellID:NSString = "cell"

    var cell: UITableViewCell = self.tv.dequeueReusableCellWithIdentifier(CellID) as UITableViewCell

    if let ip = indexPath as Optional {

        var data:NSManagedObject = myList[ip.row] as NSManagedObject

        cell.textLabel!.text = data.valueForKeyPath("username") as String!
    }

    return cell
}

   func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {

        let CellID:NSString = "cell"

        var cell: CustomCell = tv.dequeueReusableCellWithIdentifier(CellID) as CustomCell

        if let ip = indexPath as Optional {

            var data:NSManagedObject = myList[ip.row] as NSManagedObject

            cell.titleLabel.text = data.valueForKeyPath("username") as String!
            cell.dateLabel.text = data.valueForKeyPath("date") as String!
        }

        return cell
    }

var myList: Array<AnyObject> = []

@objc(Model)
class Model: NSManagedObject {

    @NSManaged var username: String
    @NSManaged var date: String
    @NSManaged var isAnonymousMessage: Bool

}

func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {

    let CellID:NSString = "cell"

    var cell: CustomCell = tv.dequeueReusableCellWithIdentifier(CellID) as CustomCell

    if let ip = indexPath as Optional {

        let data = myList[indexPath.row] as Model

        cell.titleLabel.text = data.username
        cell.dateLabel.text = data.date
    }


    return cell
}

override func viewDidAppear(animated: Bool) {

    let appDel:AppDelegate = UIApplication.sharedApplication().delegate as AppDelegate
    let context:NSManagedObjectContext = appDel.managedObjectContext!
    let freq = NSFetchRequest(entityName: "Message")
    let en = NSEntityDescription.entityForName("Message", inManagedObjectContext: context)

    let fetchRequest = NSFetchRequest(entityName: "Message")

    myList = context.executeFetchRequest(fetchRequest, error: nil) as [Model]


    tv.reloadData()

}

import UIKit

class CustomCell: UITableViewCell {

    @IBOutlet weak var titleLabel: UILabel!

    @IBOutlet weak var dateLabel: UILabel!



    override func awakeFromNib() {
        super.awakeFromNib()



        // Initialization code
    }

    override func setSelected(selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)

        // Configure the view for the selected state
    }

}


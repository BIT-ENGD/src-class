extension Array {
    func filter(includeElement: (T) -> Bool) -> T[] {
        var ret = T[]()
        for e in self {
            if includeElement(e) {
                ret += e
            }
        }
        return ret
    }
}

var a = [1,2]
var b = a.filter() {i in print(i); return true}

error: ambiguous use of 'filter'
var b = a.filter() {i in print(i); return true}
        ^
Swift.Array<T>:84:8: note: found this candidate
  func filter(includeElement: (T) -> Bool) -> Array<T>
       ^
<REPL>:30:10: note: found this candidate
    func filter(includeElement: (T) -> Bool) -> T[] {
         ^

Array.filter
xiliangchen-imac:~ xiliangchen$ xcrun swift
Welcome to Swift!  Type :help for assistance.
  1> let arr = [1,2,3,4,5]
arr: Int[] = size=5 {
  [0] = 1
  [1] = 2
  [2] = 3
  [3] = 4
  [4] = 5
}
  2> var i = 0
i: Int = 0
  3> let arr2 = arr.filter() {
  4.         println($0)
  5.         return i++ < 5
  6. }   
Segmentation fault: 11


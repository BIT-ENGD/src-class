CLLocation
NSValue
CLLocationCoordinate2D myLocation;
NSValue *locationValue = [NSValue valueWithBytes:&myLocation objCType:@encode(CLLocationCoordinate2D)]
// then put locationValue into storage - maybe an ObjC collection class or core data etc.

CLLocationCoordinate2D myLocation;
NSValue *locationValue = // restored from your database or retrieved from your collection class
[locationValue getValue:&myLocation];

CLLocation
NSValue
CoreData
CLLocation
CLLocation
CLLocation
//verified that I have a good CLLocation here
newManagedObject.setValue(location as CLLocation, forKey: "location")

CLLocation
let location = detail.valueForKey("location")! as CLLocation

(CLLocation) location = 0x00007fff59537c90 {
  ObjectiveC.NSObject = {}
}

CLLocation
CLLocation
//assuming location is a valid CLLocation and data model has a binary data field
let archivedLocation = NSKeyedArchiver.archivedDataWithRootObject(location)
newManagedObject.setValue(archivedLocation, forKey: "location")

let object = self.fetchedResultsController.objectAtIndexPath(indexPath) as NSManagedObject
let controller = (segue.destinationViewController as UINavigationController).topViewController as DetailViewController
                    controller.detailItem = object 

var lc = NSKeyedUnarchiver.unarchiveObjectWithData(detail.valueForKey!("location") as NSData) as CLLocation


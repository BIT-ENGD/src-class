import Foundation

class algorithm {

    var numbers = [Double]()
    let numberOfRandoms = 1000

    dynamic var a: String
    dynamic var b: String

    init () {
        // Load initial vector with some random numbers between 0 and 1
        for _ in 1...numberOfRandoms {
            numbers.append(Double(arc4random()) / Double(UINT32_MAX))
        }

        a = " "
        b = " "

    }

    func findTheTwoNumbersThatAddUpTheClosestToTarget(target: Double)  {

        //Initializing this to a very large value
        var currentBestSum = 1000.0

        //Begin brute force search for the optimal solution
        for i in 0...numbers.count-2 {
            for j in i+1...numbers.count-1 {
                //Check to see if the current candidate exceeds the best solution
                if abs(numbers[i] + numbers[j] - target) < currentBestSum {
                    //If it does, store the new champion
                    a = String(i)
                    b = String(j)
                    //And reset the current top score to match
                    currentBestSum = abs(numbers[i] + numbers[j]-target)
                }
            }
        }
    }
}

class ViewController: NSViewController {

    @IBOutlet weak var a: NSTextField!
    @IBOutlet weak var b: NSTextField!

    override func viewDidLoad() {
        super.viewDidLoad()

        // Do any additional setup after loading the view.
    }

    override var representedObject: AnyObject? {
        didSet {
        // Update the view, if already loaded.
        }
    }
}


func greatestCommonDenominator(first: Int, second: Int) -> Int {
    return second == 0 ? first : greatestCommonDenominator(second, first % second)
}

struct Fraction {
    var numerator: Int
    var denominator: Int

    func reduce() {
        let gcd = greatestCommonDenominator(numerator,denominator)
        self.numerator /= gcd
        self.denominator /= gcd
    }

    // stuff
}

error: 'Int' is not convertible to '@lvalue Float'
       self.numerator /= gcd
           ^

error: 'Int' is not convertible to '@lvalue Float'
       self.denominator /= gcd
           ^

'@lvalue Float'
/=
Int
Int
let a = 10
a /= 5

a
Int
let a: Int = 10
a /= 5

/=
a /= 5
var a: Int = 4
var b: Int = 3
a /= b

a
a
let
var

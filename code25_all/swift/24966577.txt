//Bunch of functions that check for exact spots:

func checktop(value:Int)->(location:String,pattern:String) {
    return ("top", checkFor(value, spots: [1,2,3])) //This line has error
}
func checkbottom(value:Int)->(location:String,pattern:String) {
    return ("bottom", checkFor(value, spots: [7,8,9]))
}
func checkmidAcross(value:Int)->(location:String,pattern:String) {
    return ("middle across", checkFor(value, spots: [4,5,6]))
}
func checkleft(value:Int)->(location:String,pattern:String) {
    return ("left down", checkFor(value, spots: [1,4,7]))
}
func checkmidDown(value:Int)->(location:String,pattern:String) {
    return ("middle down", checkFor(value, spots: [2,5,8]))
}
func checkright(value:Int)->(location:String,pattern:String) {
    return ("right down", checkFor(value, spots: [3,6,9]))
}
func checkLRdiag(value:Int)->(location:String,pattern:String) {
    return ("left-right diagonal", checkFor(value, spots: [1,5,9]))
}
func checkRLdiag(value:Int)->(location:String,pattern:String) {
    return ("right-left diagonal", checkFor(value, spots: [3,5,7]))
}

func checkFor(value:Int, spots:Int[])->(String) {
    var conclusion = ""
    for cell in spots {
        if plays[cell] == value {
            conclusion += "1"
        }
        else {
            conclusion += "0"
        }
    }
    return conclusion
}

func isOccupied(spot:Int)->(Bool) {
    return Bool(plays[spot])
}


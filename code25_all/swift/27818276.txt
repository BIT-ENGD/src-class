public class Observer {

    weak private var method: ((message: AnyObject) -> ())! //error here

    weak private var context: AnyObject!

}

public init(method: (AnyObject -> ())?, context: AnyObject?) {
    self.method = method
    self.context = context
}

self.callback
var observer = Observer(method: self.callback, context: self) //pass of self.callback is a strong reference

deinit
class Test {

    private var ref: Observer?

    init() {
        ref = Observer(method: self.callback, context: self)
    }

    func callback(message: AnyObject) {

    }

    deinit {
        println("deinit test")
    }

}

public class Observer {

private var method: ((message: AnyObject) -> ())?
weak private var context: AnyObject!

public init(method: (AnyObject -> ())?, context: AnyObject?) {
    self.method = method
    self.context = context
}

deinit {
    println("deinit observer")
}
}


override func mouseDown(theEvent: NSEvent) {
    /* Called when a mouse click occurs */

    // check what nodes are clicked
    let p = gameView.convertPoint(theEvent.locationInWindow, fromView: nil)
    let hitResults = gameView.hitTest(p, options: nil)

    // check that we clicked on at least one object
    if (hitResults.count > 0){

        // retrieved the first clicked object
        let result: AnyObject = hitResults[0]

// #1 This works
        if let myNode: SCNNode = result.node? {
            if myNode.name? == "Die" {
                println("Node is named Die")
            }
        }

// #2 This does not work
        // error: Could not find an overload for the 'node' that accepts the supplied arguments
        if let myNode = result.node? {
            if myNode.name? == "Die" {
                println("Node is named Die")
            }
        }

// #3 This does not work either
        // error: Type 'String?' does not confrom to protocol '_RawOptionSet'
        if result.node?.name? == "Die" {
            println("Node is named Die")
        }

// #4 This does not work either
        // error: 'SCNNode!' does not have a member named 'name'
        if let myName = result.node?.name? {
            if myName == "Die" {
                println("Node is named Die")
            }
        }

        // get its material
        let material = result.node!.geometry.firstMaterial;

        // highlight it
        SCNTransaction.begin()
        SCNTransaction.setAnimationDuration(0.5)

        // on completion - unhighlight
        SCNTransaction.setCompletionBlock() {
            SCNTransaction.begin()
            SCNTransaction.setAnimationDuration(0.5)

            material.emission.contents = NSColor.blackColor()

            SCNTransaction.commit()
        }

        material.emission.contents = NSColor.redColor()

        SCNTransaction.commit()

    }

    super.mouseDown(theEvent)
}


import SpriteKit

class GameScene: SKScene {

var world: SKNode? //root node! ogni altro nodo del world dev'essere sottoclasse di questo
var overlay: SKNode? //node per l'HUD e altre cose che devono stare sopra al world
var camera: SKNode? //camera node. muovo questo per cambiare le zone visibili

//world sprites
var player: SKSpriteNode!

override func didMoveToView(view: SKView) {
    self.anchorPoint = CGPoint(x: 0, y: 0) //center the scene's anchor point at the center of the screen

    //world setup
    self.world = SKNode()
    self.world!.name = "world"
    self.addChild(world!)

    //camera setup
    self.camera = SKNode()
    self.camera!.name = "camera"
    self.world!.addChild(self.camera!)

    //UI setup
    self.overlay = SKNode()
    self.overlay?.zPosition = 10
    self.overlay?.name = "overlay"
    addChild(self.overlay!)

    player = world!.childNodeWithName("player") as SKSpriteNode!

}

var directionToMove = CGVectorMake(0, 0)

override func touchesBegan(touches: NSSet, withEvent event: UIEvent) {
    for touch: AnyObject in touches {
        let location = touch.locationInNode(self)

        directionToMove = CGVectorMake((directionToMove.dx + (location.x - player!.position.x)), (directionToMove.dy + (location.y - player!.position.y)))
    }
}

override func update(currentTime: CFTimeInterval) {
 //*these both print the string*
    if player == nil {
        println("player is nil")
    }
    if player?.physicsBody == nil {
        println("player.physicsBody is nil")
    }
 //*here it crashes*
    player!.physicsBody!.applyForce(directionToMove)
}

override func didFinishUpdate() {
    if self.camera != nil {
        self.centerOnNode(self.camera!)
    }
}

func centerOnNode(node: SKNode) {
    let cameraPositionInTheScene: CGPoint = node.scene!.convertPoint(node.position, fromNode: node.parent!)
    node.parent!.position = CGPoint(x: node.parent!.position.x - cameraPositionInTheScene.x, y: node.parent!.position.y - cameraPositionInTheScene.y)
}
}


class Heap<E:Comparable> {
var heap = Array<Node<E>>()

init() { }

class Node<E:Comparable >:Comparable {

    var key:E!

    init(key:E) { self.key = key }
}

func < <E> (lhs:Heap<E>.Node<E>, rhs:Heap<E>.Node<E>) -> Bool {
    return lhs.key < rhs.key }
func == <E> (lhs:Heap<E>.Node<E>, rhs:Heap<E>.Node<E>) -> Bool {
    return lhs.key == rhs.key }

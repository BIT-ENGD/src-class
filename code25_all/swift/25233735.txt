func fetchRecords(completionHandler: ((NSArray!) -> Void)!) {
    var predicate = NSPredicate(value: true)
    var query = CKQuery(recordType: "type", predicate: predicate)
    /*self.publicDatabase.performQuery(query, inZoneWithID: nil, { (results:[AnyObject]!, error:NSError!) -> Void in
    if (error){
    println("An error occured in \(NSStringFromSelector(__FUNCTION__)) \(error)");
    } else {
    completionHandler(results)
    }
    })*/

    var operation = CKQueryOperation(query: query)

    var results = NSMutableArray()

    operation.recordFetchedBlock = { (record:CKRecord!) -> Void in
        results.addObject(record)
    }

    operation.queryCompletionBlock = { (cursor:CKQueryCursor!, error:NSError!) -> Void in
        dispatch_async(dispatch_get_main_queue(), { () -> Void in
            if (error) {
                // Error Code 11 - Unknown Item: did not find required record type
                if (error.code == 11) {

                    // Since schema is missing, create the schema with demo records and return results

                }
                else {
                    // In your app, this error needs love and care.
                    println("An error occured in \(NSStringFromSelector(__FUNCTION__)): \(error)");
                    abort();
                }
            } else {
                completionHandler(results)
            }
        })
    }

    self.publicDatabase.addOperation(operation)
}


func initView()
{
    ...

    // init shop table view
    self.tblShop = UITableView(frame: CGRectMake(20.0, self.lblShop!.frame.origin.y + self.lblShop!.frame.size.height, 150.0, 150.0), style: UITableViewStyle.Plain);
    self.tblShop?.rowHeight = 60.0;
    self.tblShop?.delegate = self;
    self.tblShop?.dataSource = self;
    self.tblShop?.registerClass(UITableViewCell.classForCoder(), forCellReuseIdentifier: "shopCell");
    self.tblShop?.showsVerticalScrollIndicator = false;
    self.tblShop?.showsHorizontalScrollIndicator = false;

    // init bank table view
    self.tblInventory = UITableView(frame: CGRectMake(self.tblShop!.frame.origin.x + self.tblShop!.frame.size.width + 20.0, self.tblShop!.frame.origin.y, self.tblShop!.frame.size.width, self.tblShop!.frame.size.height));
    self.tblInventory?.rowHeight = self.tblShop!.rowHeight;
    self.tblInventory?.delegate = self;
    self.tblInventory?.dataSource = self;
    self.tblInventory?.registerClass(UITableViewCell.classForCoder(), forCellReuseIdentifier: "inventoryCell");
    self.tblInventory?.showsVerticalScrollIndicator = false;
    self.tblInventory?.showsHorizontalScrollIndicator = false;

    self.addSubview(self.lblShop!);
    self.addSubview(self.lblBank!);
    self.addSubview(self.tblShop!);
    self.addSubview(self.tblInventory!);
}

// ----------------------------------------------------------------------------
// MARK: - TableView Delegate Methods -
// ----------------------------------------------------------------------------

func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {

    if(tableView == self.tblShop)
    {
        return 5;
    }
    else
    {
        return 2;
    }
}

func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {

    var cellID:NSString?;

    if(tableView == self.tblShop)
    {
        cellID = "shopCell";
    }
    else
    {
        cellID = "inventoryCell";
    }

    println("cell type = \(cellID!)");

    var cell:UITableViewCell = tableView.dequeueReusableCellWithIdentifier(cellID!, forIndexPath: indexPath) as UITableViewCell;

    if(tableView == self.tblShop)
    {
        cell.textLabel.text = "Warm hat";
    }
    else
    {
        cell.textLabel.text = "Viking hat";
    }


    return cell;
}

Showing bank view
(lldb) po tableView == self.tblShop
true

cell type = inventoryCell
cell type = inventoryCell
cell type = shopCell
cell type = shopCell
cell type = shopCell
cell type = inventoryCell
cell type = inventoryCell
cell type = inventoryCell
2014-11-29 21:26:11.592 MyApp[1740:357230] *** Assertion failure in -[UITableView dequeueReusableCellWithIdentifier:forIndexPath:], /SourceCache/UIKit/UIKit-3318.16.21/UITableView.m:6116
2014-11-29 21:26:11.595 MyApp[1740:357230] *** Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'unable to dequeue a cell with identifier inventoryCell - must register a nib or a class for the identifier or connect a prototype cell in a storyboard'
*** First throw call stack:
(0x21bed49f 0x2f3a3c8b 0x21bed375 0x228bed7f 0x2521282d 0x9ec80 0x9f6e8 0x25375787 0x2537584b 0x2536afa1 0x251830df 0x250ad24f 0x24ad5a0d 0x24ad13e5 0x24ad126d 0x24ad0c51 0x24ad0a55 0x250aec13 0x21bb3d57 0x21bb3167 0x21bb17cd 0x21aff3c1 0x21aff1d3 0x28efd0a9 0x2510efa1 0xa8728 0xa8764 0x2f923aaf)
libc++abi.dylib: terminating with uncaught exception of type NSException
(lldb) 

numberOfRowsInSection
func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {

    if(tableView == self.tblShop)
    {
        return 5;
    }
    else
    {
        return 2;
    }
}

cell type = inventoryCell
cell type = inventoryCell
cell type = shopCell
cell type = shopCell
cell type = shopCell
cell type = inventoryCell
cell type = inventoryCell
cell type = inventoryCell


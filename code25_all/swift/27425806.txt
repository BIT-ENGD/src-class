@IBAction func addVCBenj(sender: AnyObject)
{
    // remove original constraint from button
    if (topConstraintBenjV != nil)
    {
        view.removeConstraint(topConstraintBenjV)
        topConstraintBenjV = nil
        println("addVCBen constraints removed")
    }
    // remove previous constraints as views are added
    if (constraintV != nil)
    {
        view.removeConstraints(constraintV!)
        println("removed")
    }

    // instantiate add add the view within the storyboard VC
    let storyboard = UIStoryboard(name: "Main", bundle: nil)
    let myVC = storyboard.instantiateViewControllerWithIdentifier("VCtoInsert") as UIViewController
    view.addSubview(myVC.view)

    // create and add a unique key for each view in the dictionary of views
    viewsDictionaryKey = "\(viewsDictionaryString)\(viewsDictionaryCounter)"
    viewsDictionaryCounter += 1
    viewsDictionary[viewsDictionaryKey!] = myVC.view

    // create the visual format string for layout
    suffixVisualFormatString_V = "[" + viewsDictionaryKey! + "(100)]-30-" + suffixVisualFormatString_V
    visualFormatString_V = prefixVisualFormatString_V + suffixVisualFormatString_V
    println(visualFormatString_V)

    // create and add horizontal and vertical constraints
    let constraintH = NSLayoutConstraint.constraintsWithVisualFormat("H:[\(viewsDictionaryKey!)(>=300)]", options: NSLayoutFormatOptions(0), metrics: metricsDictionary, views: viewsDictionary)

    myVC.view.setTranslatesAutoresizingMaskIntoConstraints(false)
    constraintV = NSLayoutConstraint.constraintsWithVisualFormat(visualFormatString_V!, options: NSLayoutFormatOptions(0), metrics: metricsDictionary, views: viewsDictionary)
    self.view.addConstraints(constraintV!)
    self.view.addConstraints(constraintH)
}


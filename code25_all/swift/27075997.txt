func application(application: UIApplication!, didFinishLaunchingWithOptions launchOptions: NSDictionary!) -> Bool {
    // Override point for customization after application launch.
    FBLoginView.self
    FBProfilePictureView.self
    initLocationManager();

    Parse.setApplicationId("key", clientKey: "key")
    let notificationTypes:UIUserNotificationType = UIUserNotificationType.Badge | UIUserNotificationType.Sound | UIUserNotificationType.Alert
    let notificationSettings:UIUserNotificationSettings = UIUserNotificationSettings(forTypes: notificationTypes, categories: nil)
    UIApplication.sharedApplication().registerUserNotificationSettings(notificationSettings)
    UIApplication.sharedApplication().registerForRemoteNotifications()

    return true
}

func application(application: UIApplication!, didRegisterUserNotificationSettings notificationSettings: UIUserNotificationSettings!) {
    UIApplication.sharedApplication().registerForRemoteNotifications()
}

func application(application: UIApplication!, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: NSData!) {
    let currentInstallation:PFInstallation = PFInstallation.currentInstallation()
    currentInstallation.setDeviceTokenFromData(deviceToken)
    currentInstallation.save()
}

func application(application: UIApplication!, didFailToRegisterForRemoteNotificationsWithError error: NSError!) {
    println(error.localizedDescription)
}

func application(application: UIApplication!, didReceiveRemoteNotification userInfo:NSDictionary!) {

    var notification:NSDictionary = userInfo.objectForKey("aps") as NSDictionary
    println(userInfo)

    if(application.applicationState == UIApplicationState.Active) {
        var ln: UILocalNotification = UILocalNotification()
        ln.userInfo = userInfo
        ln.soundName = UILocalNotificationDefaultSoundName
        ln.alertBody = notification["alert"] as NSString
        ln.fireDate = NSDate()
        application.scheduleLocalNotification(ln)
        println("local")
    } else {
        PFPush.handlePush(userInfo)
    }

}

var pushQuery: PFQuery = PFInstallation.query()
                        pushQuery.whereKey("user", equalTo: SelectedUser.sharedInstance.getUsername())

                        var push:PFPush = PFPush()
                        push.setQuery(pushQuery)
                        var data: AnyObject = ["from" : GlobalVars.sharedInstance.getUserID(), "message" : txtMessage.text, "aps" : ["alert" : txtMessage.text, "badge" : "1"]] as NSDictionary
                        push.setData(data as NSDictionary)

                        push.sendPush(NSErrorPointer())

push.sendPush(NSErrorPointer())
push.sendInBackground()

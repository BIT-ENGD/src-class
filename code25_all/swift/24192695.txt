protocol
Array
//ModelProtocol.swift
protocol ModelProtocol {
    // all my models should implement `all`
    class func all(completion: ((models: Array<ModelProtocol>) -> Void) )
}

//Person.swift
// calls the HTTP request and should return all Person-Objects in `completion` 
class func all(completion: ((models: Array<ModelProtocol>) -> Void) )  {

    let request = HTTPRequest()
    request.getAll() { (data:NSArray) in
        var persons:Person[] = //... `data` is the result from the HTTP GET request and will be parsed here - this is ok
        completion(models: persons)
    }
}

//HTTPRequest.swift
func getAll(completion: ((data: NSArray) -> Void) )  {
    //... some setup would be here
    NSURLConnection.sendAsynchronousRequest(request, queue: NSOperationQueue.mainQueue()) {(response, data, error) in

        var jsonResponse: NSArray = NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions.MutableContainers, error: nil) as NSArray

        completion(data: jsonResponse)
    }
}

//ViewController.swift
override func viewDidLoad() {
    super.viewDidLoad()

    // use this whole code here - receive all Persons and show in a tableView or something like this
    Person.all( { (models: Array<ModelProtocol>) in
        println(models) //CRASH here
        })
}

protocol
all
all
Person.swift
class func all(completion: ((models: Person[]) -> Void) )
Array<ModelProtocol>
ModelProtocol
Person
House
ViewController.swift
println(models)
EXC_BAD_ACCESS

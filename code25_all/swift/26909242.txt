viewDidLoad
ViewController
class ViewController : UIViewController
   {
       var effetto:Effects = Effects()

       override func viewDidLoad()
      {
           super.viewDidLoad()
           effects.typeEffects = 1
           effects.createEffect
      }
   }

   class Effects {

       var squareView: UIView!
       var gravity: UIGravityBehavior!
       var animator: UIDynamicAnimator!
       var collision: UICollisionBehavior!

       var typeEffects = 0

       func createEffect()
       {
          If var typeEffect = 1){
             gravity()
          } else {
             other()
          }
       }

       func gravity()
       {
        squareView = UIView(frame: CGRect(x: 100, y: 100, width: 100, height: 100))
        squareView.backgroundColor = UIColor.blueColor()
        viewController.addSubview(squareView)

        animator = UIDynamicAnimator(referenceView: viewControlle)
        gravity = UIGravityBehavior(items: [squareView])
        animator.addBehavior(gravity)

        collision = UICollisionBehavior(items: [squareView])
        collision.translatesReferenceBoundsIntoBoundary = true
        // collision.addBoundaryWithIdentifier("barrier", fromPoint:  CGPointMake(self.view.frame.origin.x, 350), toPoint: CGPointMake(self.view.frame.origin.x + self.view.frame.width, 350))
        animator.addBehavior(collision)
       }
       func other()
       {
         ......
       }

    }


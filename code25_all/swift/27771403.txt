import Foundation
import UIKit

@objc protocol BarChartDelegate {

    optional func barChart(colorForBarAtIndex index: Int) -> UIColor
}

class BarChart : BarChartDelegate {

    let data : [NSDecimalNumber]
    let container = UIView()

    var barWidth : CGFloat = 100
    var barSpacing : CGFloat = 10

    var delegate : BarChartDelegate?

    init(data: [NSDecimalNumber], frame: CGRect) {

        self.data = data
        self.container.frame = frame

        drawGraph()

    }

    func drawGraph() {

        var i = 0

        for item in self.data {

            var bar = UIView()  

            let xPos = CGFloat(i)*self.barWidth

            bar.frame = CGRectMake(xPos, 0, self.barWidth, 100)

            if let del = delegate? {

                bar.frame 
                println(del.barChart!(colorForBarAtIndex: i))

                bar.backgroundColor = del.barChart!(colorForBarAtIndex: i)

            }
            else {
                println("nope!")
            }

            self.container.addSubview(bar)

            i++

        }

    }

}

class ViewController: UIViewController, BarChartDelegate {

    var colors = [
        UIColor.greenColor(),
        UIColor.blueColor(),
        UIColor.redColor()
    ]

    override func viewDidLoad() {

        super.viewDidLoad()

        var barChart = BarChart(data: [NSDecimalNumber(double: 100.00), NSDecimalNumber(double: 200.00), NSDecimalNumber(double: 300.00)], frame: CGRectMake(0, 0, 400.00, 100.00))

        self.view.addSubview(barChart.container)

    }

    func barChart(colorForBarAtIndex index: Int) -> UIColor { // this is not running?

        return self.colors[index]

    }


}

"nope!"

self.highscoreText.text = "Highscore: \(highscoreshow)

import SpriteKit

class GameScene: SKScene {

    let playButton = SKSpriteNode(imageNamed:"play")
    let title = SKSpriteNode(imageNamed: "title")
    let highscoreText = SKLabelNode(fontNamed: "Chalkduster")

    override func didMoveToView(view: SKView) {
        self.playButton.position = CGPointMake(CGRectGetMidX(self.frame), CGRectGetMidY(self.frame))
        self.title.position = CGPointMake(CGRectGetMaxX(self.frame) - 150
            , CGRectGetMaxY(self.frame) - 150)
        self.highscoreText.text = "Highscore: \(highscore)"
        self.highscoreText.fontSize = 42
        self.highscoreText.position = CGPointMake(CGRectGetMidX(self.frame), CGRectGetMidY(self.frame) - 150)
        self.addChild(self.playButton)
        self.addChild(self.title)
        self.addChild(self.highscoreText)
        self.backgroundColor = UIColor(hex: 0x80D9FF)
    }

    override func touchesBegan(touches: NSSet, withEvent event: UIEvent) {
        for touch: AnyObject in touches {
            let location = touch.locationInNode(self)
            if self.nodeAtPoint(location) == self.playButton {
                var scene = PlayScene(size: self.size)
                let skView = self.view as SKView
                skView.ignoresSiblingOrder = true
                scene.scaleMode = .ResizeFill
                scene.size = skView.bounds.size
                skView.presentScene(scene)
            }
        }
    }

    override func update(currentTime: CFTimeInterval) {
        /* Called before each frame is rendered */
    }
}

func died() {

    var defaults = NSUserDefaults()

    var highscore = defaults.integerForKey("highscore")

    if (score > highscore){

        defaults.setInteger(score, forKey: "highscore")

    }

    var highscoreshow = defaults.integerForKey("highscore")

    if let scene = GameScene.unarchiveFromFile("GameScene") as? GameScene {
        let skView = self.view as SKView
        skView.ignoresSiblingOrder = true
        scene.size = skView.bounds.size
        scene.scaleMode = .AspectFill
        skView.presentScene(scene)
    }
}


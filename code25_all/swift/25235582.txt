// Returns true if at least one object of type entityName with the value queryValue in the attribute
// attributeName exists in context context.
func objectWithAttrValueExists (attributeName: String, queryValue: AnyObject, entityName: NSString, context: NSManagedObjectContext) -> Bool {
    let allEntities = context.persistentStoreCoordinator.managedObjectModel.entitiesByName
    // Some debugging print statements to see what NSEntityDescriptions exist.
    for key in allEntities.keys {
        println(key as String)
    }
    var request = NSFetchRequest(entityName: entityName)
    let attributeFilter = NSPredicate(format: "%K == %@", argumentArray: [attributeName, queryValue])
    request.predicate = attributeFilter
    var error = AutoreleasingUnsafeMutablePointer<NSError?>()
    let count = context.countForFetchRequest(request, error: error) // <- Exception here.
    if count <= 0 {
        return false
    } else {
        return true
    }
}

FixtureParameterType
FixtureParameterCategory
Fixture
FixtureParameter

NSFetchRequest could not locate an NSEntityDescription for entity name 'Fixture'
func objectWithAttrValueExists (attributeName: String, queryValue: AnyObject, entityName: String, context: NSManagedObjectContext) -> Bool {
    let allEntities = context.persistentStoreCoordinator.managedObjectModel.entitiesByName
    for key in allEntities.keys {
        println(key as String)
    }
    // I would expect this to work, but it doesn't.
    //var request = NSFetchRequest(entityName: entityName)
    // This works but is horrible.
    var request = NSFetchRequest()
    for key in allEntities.keys {
        let strkey = key as String
        if strkey == entityName {
            request.entity = allEntities[key] as NSEntityDescription
        }
    }
    let attributeFilter = NSPredicate(format: "%K == %@", argumentArray: [attributeName, queryValue])
    request.predicate = attributeFilter
    var error = AutoreleasingUnsafeMutablePointer<NSError?>()
    let count = context.countForFetchRequest(request, error: error) // <- Works!
    if count <= 0 {
        return false
    } else {
        return true
    }

allEntities
_PFEncodedString

class ParseFriend: PFObject, PFSubclassing {

override class func load() {

    self.registerSubclass()

}

class func parseClassName() -> String! {

    return "Friend"

}

@NSManaged var fromUser: ParseUser!

@NSManaged var toUser: ParseUser!

@NSManaged var status: NSNumber!



}

    let fromQuery = ParseFriend.query()

    fromQuery.whereKey("toUser", equalTo: ParseUser.currentUser())

    fromQuery.includeKey("fromUser")

    let toQuery = ParseFriend.query()

    toQuery.whereKey("fromUser", equalTo: ParseUser.currentUser())

    toQuery.includeKey("toUser")

    let orQuery = PFQuery.orQueryWithSubqueries([fromQuery, toQuery])

    orQuery.findObjectsInBackgroundWithBlock { (results, error) -> Void in

        println("this is never called")

    }


@IBAction func signInButtonPressed(sender: AnyObject) {
    MBProgressHUD.showHUDAddedTo(self.view, animated: true)

    if let url = NSURL(string: someURL) {

            // ...

            let task = NSURLSession.sharedSession().dataTaskWithRequest(request) {
                (data, response, error) in

                if let httpError = error {
                    dispatch_async(dispatch_get_main_queue()) {
                        self.alert("Error", message: "Unable to sign in: \(httpError.localizedDescription)")
                    }
                    return
                }

                var deserializationError: NSError?
                if let jsonData = NSJSONSerialization.JSONObjectWithData(data, options: nil, error: &deserializationError) as? [String: AnyObject] {

                    // ...

                    if let error = customer.error {
                        dispatch_async(dispatch_get_main_queue()) {
                            self.alert("Error", message: error)
                        }
                    } else {
                        // Show other view controller
                    }
                } else {
                    if let unwrappedError = deserializationError {
                        dispatch_async(dispatch_get_main_queue()) {
                            self.alert("Error", message: "Unable to sign in: \(deserializationError)")
                        }
                    }
                }
            }
            task.resume()
        } else {
            if let unwrappedError = serializationError {
                self.alert("Error", message: "Unable to sign in: \(serializationError)")
            }
        }
    }
}

self.view
dispatch_async(dispatch_get_main_queue()) {
    MBProgressHUD.hideHUDForView(self.view, animated: true)
    return
}

if
else

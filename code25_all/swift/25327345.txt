groupAnagrams(
  listofWords: pass an array of String (immutable)
 )

func charArrayToString(charArray ca: [Character]) -> String {
    var s = ""
    for c in ca {
        s += String(c)
    }
    return s
}

func groupAnagrams(#listOfWords: [String]) -> [String:[String]] {
    var s = ""
    var d: [String:[String]] = [String:[String]]()
    var i = 0, j = 0, k = 0
    var log = [String]()

    for s in listOfWords {
        var s1:[Character] = [Character](s)
        //    var s1 = s
        sort(&s1) { (a: Character, b: Character) -> Bool in return String(a) < String(b) }
//???        var s2 = toString(s1) // converts the Array of Character to a string (but it's for the for "[a,b,c,d]" and not "abcd" as you'd expect!
        var s3 = charArrayToString(charArray: s1)
        // Array already exists, add a string ELSE create the String array [String]() and add the fisst element
        if let p = d[s3] {
            // Array exists but d[s3] is "immutable" as it's optional array of String (type [String]?)
            ++i
            var arr = d[s3]!
            arr += [s]
            d[s3] = arr
            log += "Add string \(arr.count) \(s) to array \(s3) \n"
        } else {
            // ELSE: Create new String array
            ++j
            d[s3] = [String]()
            var arr = d[s3]!
            arr += [s]
            d[s3] = arr
            log += "Create array for \(s3) with string \(s) \n"
        }
        ++k
        //    break
    }


    var summary = [String]()
    summary += ["\(i) strings added to already created arrays"]
    summary += ["\(j) arrays created"]
    summary += ["\(k) words processed"]

    summary[0] // inspect
    summary[1] // inspect
    summary[2] // inspect

    log // inspect

    return d
}

func groupAnagramsList(strings: String...) -> [String:[String]] {
    return groupAnagrams(listOfWords: strings)
}

var listOfWords = [String]() + ["bats", "star", "tree", "stab", "rats", "reet", "pong", "peel", "leep", "path", "type", "pyte", "ypte"]

var anagrams = groupAnagrams(listOfWords: listOfWords)

var otherWay = groupAnagramsList("bats", "star", "tree", "stab", "rats", "reet", "pong", "peel", "leep", "path", "type", "pyte", "ypte")

if d[s3] == nil {
    d[s3] = [String]()
    ++j
} else {
    ++i
}
d[s3]! += [s]
log += ["Add string \(d[s3]!.count) \(s) to array \(s3) \n"]


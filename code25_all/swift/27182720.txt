 import UIKit

 public class IndicadorCirculo : NSObject {

//// Drawing Methods

public class func drawCanvas2(#indicadro: CGFloat) {
    //// General Declarations
    let context = UIGraphicsGetCurrentContext()

    //// Color Declarations
    let optimo = UIColor(red: 0.350, green: 0.800, blue: 0.320, alpha: 1.000)

    //// Oval 2 Drawing
    var oval2Path = UIBezierPath(ovalInRect: CGRectMake(48, 107, 237, 244))
    optimo.setFill()
    oval2Path.fill()
    UIColor.blueColor().setStroke()
    oval2Path.lineWidth = 8
    oval2Path.stroke()


    //// Oval Drawing
    var ovalPath = UIBezierPath(ovalInRect: CGRectMake(91, 152, 151, 154))
    UIColor.whiteColor().setFill()
    ovalPath.fill()
    UIColor.blueColor().setStroke()
    ovalPath.lineWidth = 8
    ovalPath.stroke()


    //// Bezier Drawing
    var bezierPath = UIBezierPath()
    UIColor.blueColor().setStroke()
    bezierPath.lineWidth = 8
    bezierPath.stroke()


    //// Bezier 2 Drawing
    CGContextSaveGState(context)
    CGContextTranslateCTM(context, 166.57, 231.46)
    CGContextRotateCTM(context, -indicadro * CGFloat(M_PI) / 180)

    var bezier2Path = UIBezierPath()
    bezier2Path.moveToPoint(CGPointMake(0.43, -124.22))
    bezier2Path.addCurveToPoint(CGPointMake(0.43, -79.28), controlPoint1: CGPointMake(0.43, -77.68), controlPoint2: CGPointMake(0.43, -79.28))
    UIColor.darkGrayColor().setStroke()
    bezier2Path.lineWidth = 8
    bezier2Path.stroke()

    CGContextRestoreGState(context)
}

  }

  @objc protocol StyleKitSettableImage {
  func setImage(image: UIImage!)
 }

 @objc protocol StyleKitSettableSelectedImage {
func setSelectedImage(image: UIImage!)
}


init(id: Int) {
    let movieURL = NSURL(string: "http://api.rottentomatoes.com/api/public/v1.0/movies/\(id).json?apikey=\(apiKey)")!

    NSURLConnection.sendAsynchronousRequest(NSURLRequest(URL: movieURL), queue: NSOperationQueue()) { (response, movieData, error) -> Void in
        var movieJson = NSJSONSerialization.JSONObjectWithData(movieData, options: NSJSONReadingOptions.MutableContainers, error: nil) as? [String: AnyObject]

        self.id = self.idFromMovieJson(movieJson)
        self.title = self.titleFromMovieJson(movieJson)
        // ...

        dispatch_async(dispatch_get_main_queue(), { () -> Void in
            self.delegate!.movieDidDownload(self)
        })
    }        
}

var movie = Movie(id: 771351912)
movie.delegate = self

func movieDidDownload(movie: Movie) {
    println(movie.title)
}

Optional("Interstellar")

let ids = [771351912, 771380953, 771041011, 13863, 12490, 771311818, 771321699, 11691]
for id in ids {
    var movie = Movie(id: id)
    movie.delegate = self
}

Optional("Super 8") 
Optional("Interstellar") 
Optional("Pulp Fiction")
nil 
Optional("The Nightmare Before Christmas") 
nil
nil
Optional("Nightcrawler")

Optional("Interstellar")
Optional("Pulp Fiction")
Optional("Super 8")
Optional("Nightcrawler")
Optional("The Nightmare Before Christmas")
nil
nil
nil

var queue = NSOperationQueue()
queue.name = "\(id)"

sleep(1)

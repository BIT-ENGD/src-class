blockNode
completedActionsCount
for action in blockActionSets[index]
        {
            var blockActionSet = blockActionSets[index]

            var completedActionsCount = 0

            let blockNode = getBlockNodeForBlock(action.block)

            if blockNode
            {
                blockNode!.updateWithAction(action, completion:
                    { blockAction in

                        completedActionsCount++

                        println(completedActionsCount)
                        println(blockActionSet.count)
                        if (completedActionsCount == blockActionSet.count)
                        {
                            index = index + 1
                            self.executeBlockActionSetAtIndexRecursive(index, blockActionSets: blockActionSets, completion: completion)
                        }
                    })
            }
            else
            {
                completedActionsCount++
            }
        }

func updateWithAction(blockAction : BlockAction, completion : (BlockAction) -> Void)
{
    if blockAction.blockActionType == BlockActionType.ChangeColor
    {
        var startColor = CIColor(CGColor: self.fillColor.CGColor)
        var endColor = CIColor(CGColor: UI.getUIColorForBlockType(blockAction.endBlockType).CGColor)

        var startRed = startColor.red()
        var startGreen = startColor.green()
        var startBlue = startColor.blue()
        var endRed = endColor.red()
        var endGreen = endColor.green()
        var endBlue = endColor.blue()

        var action = SKAction.customActionWithDuration(CHANGE_COLOR_ANIMATION_DURATION, actionBlock: {(node : SKNode!, elapsedTime : CGFloat)->Void in
                var blockNode = node as? BlockNode

                if blockNode
                {
                    var ratio : CGFloat = min(1.0, elapsedTime / CGFloat(self.CHANGE_COLOR_ANIMATION_DURATION))

                    blockNode!.fillColor = UIColor(red: startRed + ratio * (endRed - startRed),
                        green: startGreen + ratio * (endGreen - startGreen),
                        blue: startBlue + ratio * (endBlue - startBlue),
                        alpha: 1.0)
                }

                if elapsedTime >= CGFloat(self.CHANGE_COLOR_ANIMATION_DURATION)
                {
                    completion(blockAction)
                }
            })

        self.runAction(action)
    }
}


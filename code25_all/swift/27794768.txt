let appDel:AppDelegate = UIApplication.sharedApplication().delegate as AppDelegate
        let moc:NSManagedObjectContext = appDel.managedObjectContext!

        let asPredicate = NSPredicate(format: "albumID = %@", albumTuple.iD)
        let asFetchRequest = NSFetchRequest(entityName: "Album")
        asFetchRequest.predicate = asPredicate
        let asResults = moc.executeFetchRequest(asFetchRequest, error:nil)!
        currentAlbum = asResults.last as Album

        var foundPhotos : NSMutableSet = currentAlbum.photos as NSMutableSet
        var foundThumbs : NSMutableSet = currentAlbum.thumbPhotos as NSMutableSet

        let tPredicate = NSPredicate(format: "thumbID = %@", thumbs[counter].iD)
        let tFetchRequest = NSFetchRequest(entityName: "Thumbnail")
        tFetchRequest.predicate = tPredicate
        let tResults = moc.executeFetchRequest(tFetchRequest, error:nil)!

        var thumbToDelete = tResults.last as Thumbnail
        foundThumbs.removeObject(thumbToDelete as Thumbnail)
        currentAlbum.thumbPhotos = foundThumbs

        let pPredicate = NSPredicate(format: "photoID = %@", thumbs[counter].iD)
        let pFetchRequest = NSFetchRequest(entityName: "Photo")
        pFetchRequest.predicate = pPredicate
        let pResults = moc.executeFetchRequest(pFetchRequest, error:nil)!

        var photoToDelete = pResults.last as Photo
        foundPhotos.removeObject(photoToDelete as Photo)
        currentAlbum.photos = foundPhotos

        moc.save(nil)

func deletePhoto () {
        let appDel:AppDelegate = UIApplication.sharedApplication().delegate as AppDelegate
        let moc:NSManagedObjectContext = appDel.managedObjectContext!

        let asPredicate = NSPredicate(format: "albumID = %@", albumTuple.iD)
        let asFetchRequest = NSFetchRequest(entityName: "Album")
        asFetchRequest.predicate = asPredicate
        let asResults = moc.executeFetchRequest(asFetchRequest, error:nil)!
        currentAlbum = asResults.last as Album

        println("number of photos at start")
        println(currentAlbum.photos.count)

        let pPredicate = NSPredicate(format: "photoID = %@", thumbs[counter].iD)
        let pFetchRequest = NSFetchRequest(entityName: "Photo")
        pFetchRequest.predicate = pPredicate
        let pResults = moc.executeFetchRequest(pFetchRequest, error:nil)!

        var photoToDelete : Photo = pResults.last as Photo
        currentAlbum.photos.removeObject(photoToDelete as Photo)


        var error: NSError? = nil
        if moc.hasChanges && !moc.save(&error) {
            println("error")
            abort()
        }
        println("number of photos left")
        println(currentAlbum.photos.count)
    }


// a type conforming to this protocol should return a dictionary
// which counts the frequencies of values contained by the type instance
protocol ConvertibleToFrequencyDictionary {
   typealias ItemType
   func dictionaryCountingFrequencies<ItemType:Hashable>() -> Dictionary<ItemType,Int>
}

dictionaryCountingFrequencies
extension Array : ConvertibleToFrequencyDictionary {
  typealias ItemType=Element
  func dictionaryCountingFrequencies<ItemType:Hashable>() -> Dictionary<ItemType,Int> {
    var valueToCount = Dictionary<ItemType,Int>()
    for item in self {
      if let existingCount = valueToCount[item] {
        valueToCount.updateValue(value: existingCount + 1, forKey: item)
      } else {
        valueToCount.updateValue(value: 1, forKey: item)
      }
    }
    return valueToCount;
  }
}

Array<T:Hashable>
Array<Int>

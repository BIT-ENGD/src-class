let entities = SampleEntity.MR_findAll() as [SampleEntity]
let entitie = entities[0]

import Foundation
import XCTest

class MappingTests: XCTestCase {

    override func setUp() {
        super.setUp()

        MagicalRecord.setDefaultModelFromClass(SampleEntity.classForKeyedArchiver())
        MagicalRecord.setupCoreDataStackWithInMemoryStore()
    }

    override func tearDown() {
        super.tearDown()

        MagicalRecord.cleanUp()
    }

    func testSampleEntitiesAreProperlyImported() {

        let bundle = NSBundle(forClass: MappingTests.classForKeyedArchiver())
        let path = bundle.pathForResource("001", ofType: "json")
        let jsonData = NSData.dataWithContentsOfFile(path!, options: .DataReadingMappedIfSafe, error: nil)
        let jsonArray = NSJSONSerialization.JSONObjectWithData(jsonData, options: nil, error: nil) as NSArray

        for jsonDictionary in jsonArray {
            // This line works properly
            SampleEntity.MR_importFromObject(jsonDictionary)
        }

        let entities = SampleEntity.MR_findAll() as [SampleEntity]
        let entity = entities[0]
    }

}


UIControl
UIControl
drawRect:
CGContextAddArc
startAngle
endAngle
CGContextPathContainsPoint
drawRect:
CGContext
func indexOfTrackForPoint(point: CGPoint) -> Int
{
    // Configure parameters
    let basicTrackAngle = CGFloat(360 / tracks.count)
    let strokeWidth = 60.0
    let radius = CGFloat((CGFloat(self.frame.size.width) - CGFloat(strokeWidth)) / 2) - CGFloat(margin)

    // Initialize the context
    var context = UIGraphicsGetCurrentContext()
    CGContextSetLineWidth(context, CGFloat(strokeWidth))
    CGContextSetStrokeColorWithColor(context, UIColor.blackColor().CGColor)

    for  i in 0...tracks.count-1 {

        // Start and end angles of current track
        var currentTrackStartAngle = CGFloat(i) * basicTrackAngle
        var currentTrackEndAngle = currentTrackStartAngle + basicTrackAngle

        CGContextAddArc(context, center.x, center.y, CGFloat(radius), toNormalizedRadian(currentTrackStartAngle), toNormalizedRadian(currentTrackEndAngle), 0)

        if pointOnPath(point, inContext: context){
            println("point found on track: \(i)")
            return i
        }

        CGContextDrawPath(context, kCGPathStroke) // or kCGPathFillStroke to fill and stroke the circle
    }
}

drawRect:

let assetRep: ALAssetRepresentation! = alAsset.defaultRepresentation()
let sizeOfRawDataInBytes: Int = Int(assetRep.size())
var rawData: NSMutableData = NSMutableData(capacity: sizeOfRawDataInBytes)
var bufferPtr: UnsafeMutablePointer<Void> = rawData.mutableBytes
var bufferPtr8: UnsafeMutablePointer<UInt8> = UnsafeMutablePointer<UInt8>(bufferPtr)

var error: NSError? = nil
assetRep.getBytes(bufferPtr8, fromOffset: 0, length: sizeOfRawDataInBytes, error: &error)

if error != nil {
    NSLog("%@ %@", error!.userInfo!, error!)

    if completion != nil {
        NSOperationQueue.mainQueue().addOperationWithBlock { () -> Void in
            completion!(error: error)
        }
    }
} else {
    NSFileManager.defaultManager().createFileAtPath(path!, contents: nil, attributes: nil)
    rawData.writeToFile(path, atomically: true)

    if completion != nil {
        NSOperationQueue.mainQueue().addOperationWithBlock { () -> Void in
            completion!(error: nil)
        }
    }
}

alAsset    = (ALAsset!) 0x17d6f770
completion = (((error: NSError!) -> ())?)
path       = (String!) "/var/mobile/Applications/3C2E3C85-8F24-4CF1-958D-5D79A3200BE0/Documents/BEC3072C-45E9-4BC9-85C9-54FB6D9A1562.JPG"
rawData    = (NSConcreteMutableData *) 0 bytes
bufferPtr  = (UnsafeMutablePointer<()>) 0x03b9f000
bufferPtr8 = (UnsafeMutablePointer<UInt8>) 0x03b9f000
error      = (NSError?) nil
assetRep   = (ALAssetRepresentation!) 0x1468e6b0
sizeOfRawDataInBytes = (Int) 1118987

UnsafeMutablePointer<Void>
UnsafeMutablePointer<UInt8>
rawData.writeToFile(path, atomically: true)

let newData: NSData = NSData(bytesNoCopy: bufferPtr8, length: sizeOfRawDataInBytes, freeWhenDone: false)
newData.writeToFile(path, atomically: true)


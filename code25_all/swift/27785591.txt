class PlayingCardView : SKSpriteNode {

    init(imageNamed: String, cardIndex: Int) {
        let cardTexture = SKTexture(imageNamed: imageNamed)
        let cardScaleFactor:CGFloat = 0.22  
        let cardSize = CGSizeMake(cardTexture.size().width * cardScaleFactor,cardTexture.size().height * cardScaleFactor)
        super.init(texture: cardTexture, color: nil, size: cardSize)
        self.name = "\(cardIndex)"
    }
}

// MARK: UpdateUI
func updateUI() {
        assert(game.cards.count > 0, "No Cards")
        if status == GameIs.Paused {return}
        removeAllCards()
        PlayingCardViews.removeAll(keepCapacity: false)

        var scaleFactor:CGFloat = 0.8
        var upOffset:CGFloat = 0.0
        var cardsLeft = 0

        // create spritenotes for all 52 cards
        for i in 0..<game.cards.count {
            let card = game.cardAtIndex(i)
            // all cards until cardPositions.count face up. the rest on the stack
            var (x,y) = (7,6)
            if i<cardPositions.count {
                (x,y) = cardPositions[i]
            }
            // determine real position from the grid information
            let xPos:CGFloat = realXForPositionX(x)
            let yPos:CGFloat = realYForPositionY(y)
            let image =  backgroundImageForCard(card)
            // we save the currents positon in the Model
            card.positionGrid = (x,y)
            let cardSprite = PlayingCardView(imageNamed: backgroundImageForCard(card), cardIndex:i)
            PlayingCardViews.append(cardSprite) 
            if !card.removed {
                cardSprite.position = CGPointMake(realXForPositionX(x),realYForPositionY(y))  
                cardLayer.addChild(cardSprite)
                ++cardsLeft  
            }
        }
        if cardsLeft == 0 { gameOver(0, timeLeft: secondsLeft) }
    }


#!/usr/bin/perl -w
for $n (0..10000){      #this is basic idea but code is too messy !
    if( ($n-1) % 5 == 0 ){
     $remain = 4/5 * ($n -1 );
         if( ($remain - 1) % 5 == 0){
           $remain = 4/5 * ($remain -1 );
           if( ($remain - 1) % 5 == 0){
               $remain = 4/5 * ($remain -1 );
               if( ($remain - 1) % 5 == 0){
                   $remain = 4/5 * ($remain -1 );
                   if( ($remain - 1) % 5 == 0){
                      $remain = 4/5 * ($remain -1 );
                      print "remain: $remain original: $n\n";
                   }
               }
            }
          }
     }
 }

sub doit($){
    ($n) = @_;
    if( ($n - 1) % 5 ==0 ){ #if can be distributed by 5 monkey
       $n = ($n - 1) * 4/5;  #commit distribute
       return $n;
    }else{
       return -1;  #fail
    }
}

for $n (0..10000){   #restriction
    $r = $n;    #"recursively" find solution
    $o = $n;    #backup n
    $count = 0;
    for ($i = 0; $i < 5; $i++){  #assume there is 5 monkey, it can be changed
       $r = doit($r);
    if($r == -1){   #skip once fail
        last;
    }
    $count++;
    }
    if($count == 5){ # if pass 5 test, then you found the number !
       print "now ".$r."\n";
       print "origin ".$o."\n";
    }
}


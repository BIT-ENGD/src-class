$status = "match";
foreach $ip (@group_a) {
  if a_in_b($ip,@group_b) #this sub-routine would be similar but with different comparison function
   {
   next;
   }
   else
   {
   $status = "no match"; 
   last;}
}

use Net::IP;
use strict;
use warnings;

my @subnet = ("10.1.128.0/24","10.1.129.0/24","10.1.130.0/24","10.1.108.4");
my @net = ("10.1.128.0/21","10.1.108.0/22");


sub array_subset {
    my ($x, $y) = @_;
    a_in_b ($_, @$y) or return '' foreach @$x;
    return 1;
};

sub a_in_b  {
  my $node1 = shift(@_);
  my @ip_list = @_;
  for my $node2 (@ip_list) {
    print $node2, "\n";
    my $ip1 = new Net::IP ($node1) || die;
    my $ip2 = new Net::IP ($node2) || die;
    print "$node1  $node2 \n";
    if ($ip1->overlaps($ip2)==$IP_A_IN_B_OVERLAP) {
      return 1;
    }

  }
  return "";
}

if (array_subset(\@subnet, \@net)) {
  print "Matches";
}else
{
  print "Doesn't match"
}


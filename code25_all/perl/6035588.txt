my %members_list;
foreach my $row (2..$MembersLastRow){
    $members_list{lc($Members->Cells($row,1)->{'Value'})} = lc($Members->Cells($row,2)->{'Value'}); 
}

my @removals_list;
foreach my $row (2..$RemovalsLastRow)
{
    push(@removals_list, lc($Removals->Cells($row,1)->{'Value'}));
}

foreach my $key (sort @removals_list)
{
    print $key;
    if($members_list{$key}){
        print " - MATCH!";
    }
    print "\n";
}

use strict;
use 5.010;
use Win32::OLE qw(in with);
use Win32::OLE::Const 'Microsoft Excel';

$Win32::OLE::Warn = 3;                                # die on errors...

# get already active Excel application or open new
my $Excel = Win32::OLE->GetActiveObject('Excel.Application')
    || Win32::OLE->new('Excel.Application', 'Quit');  
$Excel->{DisplayAlerts}=0;   
# open Excel file

my $Book = $Excel->Workbooks->Open("**FILENAME1**"); 
my $Book2 = $Excel->Workbooks->Open("**FILENAME2**"); 

# You can dynamically obtain the number of worksheets, rows, and columns
# through the Excel OLE interface.  Excel's Visual Basic Editor has more
# information on the Excel OLE interface.  Here we just use the first
# worksheet, rows 1 through 4 and columns 1 through 3.


my $Members = $Book->Worksheets(1);
$Members->{Name} = "Members - Points";
my $Results = $Book->Worksheets(2);
$Results->{Name} = "Perl Results -Saved";

my $Removals = $Book2->Worksheets(1);
$Removals->{Name} = "Removals";

my $count=0;
my %members_list;
my @removals_list;

my $MembersLastRow = &findLastRow($Members);
print "After Members Last Row\n";
my $RemovalsLastRow = &findLastRow($Removals);
print "After Removals Last Row\n";

foreach my $row (2..$MembersLastRow)
{
    next unless defined $Members->Cells($row,1)->{'Value'};
    $members_list{lc($Members->Cells($row,1)->{'Value'})} = lc($Members->Cells($row,2)->{'Value'}); 
}
foreach my $row (2..$RemovalsLastRow)
{
next unless defined $Removals->Cells($row,1)->{'Value'};
push(@removals_list, lc($Removals->Cells($row,1)->{'Value'}));
}

#DO THE VLOOKUP
my $matches=1;
print "Now doing comparisons......\n";
$Results->Cells($matches,1)->{'Value'} = "Removal List";
$Results->Cells($matches,2)->{'Value'} = "Corresponding Member List";


foreach my $key (sort @removals_list)
{
    print $key;
    if($members_list{$key}){
        print " - MATCH!";
    }
    print "\n";
}

print "\nComparisons Complete.\n";

sub findLastRow
{
    $_[0]->UsedRange->Find({What=>"*",
    SearchDirection=>xlPrevious,
    SearchOrder=>xlByRows})->{Row};
}

sub findLastCol
{
    $_[0]->UsedRange->Find({What=>"*", 
    SearchDirection=>xlPrevious,
    SearchOrder=>xlByColumns})->{Column};
}

$Book->Save();


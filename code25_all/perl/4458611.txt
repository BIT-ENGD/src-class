    use PDF::API2;
    use PDF::Table;

    my $pdftable = new PDF::Table;
    my $pdf  = PDF::API2->new();
    my $page = $pdf->page;
    #data
    my $some_data =[ 
    ["1","1","1","1","1","1","1"],
    ["2","2","2","2","2","2","2"],
    ["2","2","2","2","2","2","2"],
    ["2","2","2","2","2","2","2"],
    ["2","2","2","2","2","2","2"],# x 100 time to have pages
    ];

    #build the table layout
    $pdftable->table(
     $pdf,
     $page,
     $some_data,
     x => 5,
     w => 600,
     start_y => 750,
     next_y  => 750,
     start_h => 700,
     next_h  => 700,
     # some optional params
     font_size => 8,
     border => 0,
     background_color_odd  => "white",
     background_color_even => "lightblue",
     header_props   => $hdr_props, # see section HEADER ROW PROPERTIES
    );

    $hdr_props = 
        {
            # This param could be a pdf core font or user specified TTF.
            #  See PDF::API2 FONT METHODS for more information
            font       => $pdf->corefont("Times", -encoding => "utf8"),
            font_size  => 10,
            font_color => '#006666',
            bg_color   => 'yellow',
            repeat     => 1,    # 1/0 eq On/Off  if the header row should be repeated to every new page
        };
print "Content-Type: application/pdf;\n\n";
binmode(STDOUT);
print $pdf->stringify;


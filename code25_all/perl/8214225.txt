 #!/usr/bin/perl
 use warnings;
 use strict;
 use XML::LibXML;
 use Carp;
 use File::Find;
 use File::Spec::Functions qw( canonpath );
 use XML::LibXML::Reader;
 use Digest::MD5 'md5';

 if ( @ARGV == 0 ) {
push @ARGV, "c:/main/work";
 warn "Using default path $ARGV[0]\n  Usage: $0  path ...\n";
 }

 open( my $allxml, '>', "all_xml_contents.combined.xml" )
 or die "can't open output xml file for writing: $!\n";
 print $allxml '<?xml version="1.0" encoding="UTF-8"?>',
 "\n<Shiporder xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n";
 my %shipto_md5;
 find(
 sub {
    return unless ( /(_stc\.xml)$/ and -f );
    extract_information();
    return;
 },
 @ARGV
);

print $allxml "</Shiporder>\n";

 sub extract_information {
 my $path = $_;
 if ( my $reader = XML::LibXML::Reader->new( location => $path )) {
    while ( $reader->nextElement( 'data' )) {
        my $elem = $reader->readOuterXml();
        my $md5 = md5( $elem );
        print $allxml $reader->readOuterXml() unless ( $shipto_md5{$md5}++ );
     }
  }
 return;
}

$reader->nextElement( 'details' );
    my $information = $reader->readOuterXml();

#!/usr/bin/perl
  use warnings;
  use strict;
  use XML::LibXML;
  use Carp;
  use File::Find;
  use File::Spec::Functions qw( canonpath );
  use XML::LibXML::Reader;
  if ( @ARGV == 0 ) {
  push @ARGV, "V:/main/work";
 warn "Using default path $ARGV[0]\n  Usage: $0  path ...\n";
  }

  my $libXML = new XML::LibXML;
   my $outputDom = $libXML->parse_string('<?xml version="1.0" encoding="UTF-8"?      
   >','<Shiporder xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">');
   my $shiporder = $outputDom->documentElement;

  find(
   sub {
    return unless ( /(_stc\.xml)$/ and -f );
    extract_information();
    return;
   },
  @ARGV
  );
 sub extract_information {
   my $path = $_;
 if(my @inputDom = XML::LibXML->load_xml(location => $path)){
 $inputDom->findnodes('//data || //deatils'); 
 foreach (@$inputDom) {
   $shiporder->appendChild($_->parentNode->cloneNode(1)); 
 }
  $outputDom->toFile("allfiles.xml");
   }
   }


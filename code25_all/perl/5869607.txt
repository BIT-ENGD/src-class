package MyExceptions;

use strict;
use warnings;
use Exception::Class (
     'MyExceptions::TestException' => {               
               fields => [qw{message}],
   }  
);

use Moose::Util::TypeConstraints;

class_type 'MyExceptions::TestException';

no Moose::Util::TypeConstraints;
1;

if ( $recv_data eq 'ERROR' )  
    {
        MyExceptions::TestException->throw( message => $data );
    }

    elsif ( $recv_data eq 'YES' ) 
    {        
        return $data;
    }

eval{
my $num = 0;
my $flag = 0;

    do
    {
        if($num>6)
    {
        $flag = 1;
        print "NOT found";
    }

        my $region = $obj->FindImage('SomeImage');
        my $x = $region->getX;
        my $y = $region->getY;
        if(($x > 0) && ($y>0))
        {
            $flag = 1;
            $obj->Command($x,$y);


        }
        else
        {
                    $Obj->Command1('50','2','160','275','160','220');
        }


$num++;

} while($flag==0);

$num = 0;

return;
};

    if ( my $ex = $@ ) {

        my $e ;

      if ( $e = Exception::Class->caught('MyExceptions::ExecutionException'))
     {       

         print $e->message;
    }

    }


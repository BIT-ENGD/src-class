$xml->{key}
#!/usr/bin/perl
use strict;
use warnings;
use XML::Simple;
use Data::Dumper;

system ("clear");

my $xml = XML::Simple->new;

# Using the XML::Simple object, read guest_os.xml to a hash

my $xml_file = $xml->XMLin('config.xml',

                SearchPath => './config',

                SuppressEmpty => 1);




$VAR1 = \{
        'esxi01' => {
                    'password' => 'myspoonistoobig!',
                    'user' => 'root',
                    'port' => '22'
                  },
        'esxi02' => {
                    'password' => 'myspoonistoobig!',
                    'user' => 'root',
                    'port' => '22'
                  },
        'Setup' => 'FALSE'
      };

<Config>
  <esxi01>
    <password>password</password>
    <port>22</port>
    <user>root</user>
  </esxi01>
  <esxi02>
    <password>password</password>
    <port>22</port>
    <user>root</user>
  </esxi02>
  <Setup>FALSE</Setup>
</Config>

my $xml = XML::Simple->new;

# Using the XML::Simple object, read guest_os.xml to a hash

my $xml_file = $xml->XMLin('config.xml',

                SearchPath => './config',

                SuppressEmpty => 1);

foreach my $server (keys %$xml_file) {
    foreach my $attribute (keys %{$xml_file->{$server}}) {
        print "$attribute\n";
    }
}

Can't use string ("password") as a HASH ref while "strict refs" in use at foreach_test line 21.

package My::Module;
use Moose;

has 'config'=>(isa=>'HashRef[Str]',is=>'rw',required=>1);

around BUILDARGS=>sub
{
  my $orig=shift;
  my $class=shift;
  my $args=shift; #other arguments passed in (if any).

  my %config_hash=();
  open(my $read,"<","config_file") or confess $!;
  while(<$read>)
  {
    chomp;
    my @array=split /:/;
    $config_hash{$array[0]}=$array[1];
  }
  close($read);

  $args->{config}=\%config_hash;

  return $class->$orig($args);
};

no Moose;
1;

#!/usr/local/bin/perl
package DART::Setup;

use namespace::autoclean;
use Moose;
use Config::Auto;

our $VERSION = '0.0.1';


has 'EMPTY' => ( isa => 'Str', is => 'ro', default => q{} );
has 'PPLTESTEXECUTIONID' => ( isa => 'Int', is => 'ro', default => 0 );
has 'SARQTESTEXECUTIONID' => ( isa => 'Int', is => 'ro', default => 0 );
has 'ISPROXY' => ( isa => 'Int', is => 'ro', default => 0 );
has 'LOCALHOST' => ( isa => 'Str', is => 'ro', default => '127.0.0.1' );
has 'config'=>(isa=>'HashRef[Str]',is=>'rw',required=>1);
has 'SSO' => ( isa => 'Str', is => 'rw', default => q{} );
has 'cookieFile' => ( isa => 'Str', is => 'rw', default => q{} );

around BUILDARGS=>sub
{
  my $orig=shift;
  my $class=shift;
  my $args=shift;

  my $cfg = Config::Auto::parse($args);
  my %config_hash = %{$cfg};

  $args->{config}=\%config_hash;

  return $class->$orig($args);
};


return 1;

my $newConfig = DART::Setup->new('/home/y/conf/MyApp/MyApp.cfg');

my %configHash = %{$newConfig->config()};

foreach my $key (keys %configHash) {
print "the key is, $key, and the value is: $configHash{$key}\n";
}


my $key;
my %hash = ( flintstones => [ "C:/Users1/f1.xml", "C:/Users1/f2.xml" ], 
            jetsons => [ "C:/Users2/f1.xml" ], 
            simpsons =>    [ "C:/Users3/f1.xml", "C:/Users3/f1.xml", "C:/Users3/f1.xml" ], ); 

foreach $key (keys%hash){
if (scalar@{$hash{$key}}>1){
    foreach my $path (@{$hash{$key}}){
        my $filehandle;
        open($filehandle, "+<$path") or die "cannot open out file out_file:$!";
        my $roots = { TAG => 1 };
        my $handlers = { 'ROOT/TAG' => \&tweak_server,
                    };
        my $twig = new XML::Twig(TwigRoots => $roots,
                             TwigHandlers => $handlers,
                             twig_print_outside_roots => \*$filehandle);
        $twig->parsefile($path);
        say $key;#could read key
        sub tweak_server {
            my ($twig, $root) = @_;
            my $tag2=$root->first_child_text('TAG2'); 
            say $key;# could not read
            if ($tag2=~/$key/){
            #BLABLA
            }
            $twig->flush( $filehandle, pretty_print => 'indented');
        }
    }
}

my $a="aaa";
open( $filehandle, "+<$path") or die "cannot open out file out_file:$!";
my $roots = { TAG => 1 };
my $handlers = { 'ROOT/TAG' => \&tweak_server,
            };
my $twig = new XML::Twig(TwigRoots => $roots,
                     TwigHandlers => $handlers,
                     twig_print_outside_roots => \*$filehandle
                     );
$twig->parsefile($path);
sub tweak_server {
    say $a;
    my ($twig, $root) = @_;
    my $tags=$root->first_child_text('TAG2');
    my $str="204B";
    if ($tag2=~m/$str/){
    foreach my $b(1...6){
                    say $a;             }
}
$twig->flush( $filehandle, pretty_print => 'indented');

}


$seed
k
use strict;
use Data::Dumper;
use Carp;

my $k = 2;

my %readlist = (

    "read1" => "ACTGA",
    "read2" => "ACAAA",
    "read3" => "CTCGC",
    "read4" => "GAGGG",
    "read5" => "TTTCC",
);


my %prefix_hash = (

    # This is a hash of array (prefix hash). 
    # The key is the last base
    # And array is the read that contain that base
    # at first k position
    # in this case k = 2

    "AC" => ["read1","read2"],
    "AG" => ["read3"],
    "GA" => ["read4"],
    "TT" => ["read5"]

);


my $seed = "AAAAC";


my @newreads = extend_seed($seed);


sub extend_seed {

    my  $str    = shift;

    my @new_str;
    my $first_lastk_str = substr($str,-($k));

    print "$first_lastk_str\n";
    # I'm stuck here how can I recurse and merge


    return @new_str;
}

Intial      AAAAC

First_merge AAAACTGA  # Seed merge with Read 1 
            AAAAACAA  # Seed merge with Read 2

Last_merge  AAAACTGAGGG # First_merge merge with Read 4 


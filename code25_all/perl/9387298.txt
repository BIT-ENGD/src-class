 __PACKAGE__->belongs_to( "location", "HABJ::Schema::Result::Location",
             {id => "location_id"},{...});

__PACKAGE__->belongs_to( "vacancy_category", "HABJ::Schema::Result::VacancyCategory",
             {id => "vacancy_category_id"},{...});

__PACKAGE__->has_many( "vacancies", "HABJ::Schema::Result::Vacancy",
             {"foreign.location_id" => "self.id"},{...});

__PACKAGE__->has_many( "vacancies", "HABJ::Schema::Result::Vacancy",
                     { "foreign.vacancy_category_id" => "self.id" },{...});

my $jobsRS;
# either one of these works. How do you combine them? 
if ($qJobsubtype) {
    $jobsRS = $c->model("HABJ::VacancyCategory") ->
        search ({ name=>$qJobsubtype}) ->
        search_related('vacancies', {});
    my $typeCount = $jobsRS -> count;
    $c->log->debug("$typeCount vacancies of type [$qJobsubtype]");
}

if ($qCounty) {
    $jobsRS = $c->model("HABJ::Location") ->
        search ({ 'me.name'=>$qCounty}) ->
        search_related('vacancies', {});
    my $coCount = $jobsRS -> count;
    $c->log->debug("$coCount vacancies in location [$qCounty]");
}

    $jobsRS = $c->model("HABJ::Vacancy") ->vacs_for_location($qCounty, $c);

    $jobsRS = $jobsRS -> vacs_for_job_subtype($qJobsubtype, $c);


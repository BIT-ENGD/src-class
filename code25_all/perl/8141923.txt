#!/usr/bin/perl
use strict;
use warnings;
use Data::Dumper;
use List::Util;
use Fcntl 'O_RDONLY';
use Tie::File;
use YAML qw();

my $digitData   = 'digitData.txt';
my $alphaData = 'alphaData.txt';

my (@dataA, @dataN) = dataMod();
print Dumper(@dataA);
print Dumper(@dataN);

sub dataMod {
    my (@alphaData, @numData);
    my $fileCount = `wc -l < $alphaData`;;
    chomp $fileCount;
    my $history   = eval {YAML::LoadFile('history.yaml')} || {};

    $history->{$_} && --$history->{$_} for keys %$history;

    tie my @alphas, 'Tie::File', $alphaData, mode => O_RDONLY;
    tie my @nums, 'Tie::File', $digitData, mode => O_RDONLY;

    LINES: for (1 .. $fileCount) {
            my @alphaPool = @alphas;
            my $pair;

            while (@alphaPool) {
                    my @numberPool = @nums;
                    my $tryAlpha = splice @alphaPool, rand(@alphaPool), 1;

                    while (@numberPool) {
                            my $tryNum = splice @numberPool, rand(@numberPool), 1;

                            next if $history->{"$tryAlpha|$tryNum"};

                            @alphas = grep {$_ ne $tryAlpha} @alphas;
                            @numberPool = grep {$_ != $tryNum} @numberPool;
                            #print "$tryAlpha $tryNum\n";
                            push @alphaData, $tryAlpha;
                            push @numData, $tryNum;
                            $history->{"$tryAlpha|$tryNum"} = 5;
                            next LINES;
                    }

                    @alphas = grep {$_ ne $tryAlpha} @alphas;
            }
    }
    YAML::DumpFile('history.yaml', $history);
    return(@alphaData, @numData);
}

$VAR1 = cellCpe2
$VAR2 = stemClearSte
$VAR3 = OctuStemPr2
$VAR4 = 10
$VAR5 = 30
$VAR6 = 20

cellCpe2 10
stemClearSte 30
OctuStemPr2 20


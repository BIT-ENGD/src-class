use strict;
use warnings;

package House;
sub new {
    my ( $class, %args ) = @_;
    my $self = {
        colour => $args{colour},
        size   => $args{size},
    };
    bless $self, $class;
    return $self;
}

package Boat;
sub new {
    my ( $class, %args ) = @_;
    my $self = {
        doors => $args{doors},
        roof  => $args{roof},
    };
    bless $self, $class;
    return $self;
}

package main;
my $obj = Boat->new( colour => "red", size => "big" );
$obj->_logger("created a big red boat");

my $obj2 = House->new( doors => 1, roof => "yes" );
$obj2->_logger("created a house with a door and roof");

package UNIVERSAL;
use POSIX qw( strftime );
use Sys::Hostname;
my $error_log
    = hostname() . "-" . strftime( "%Y-%m-%d_%H.%M", localtime ) . ".log";

sub _dump {
    my ( $self, $data, $filepath ) = @_;
    open my $fh, ">", $filepath or die "Cannot write to $filepath: $!";
    print $fh $data;
}

sub _logger {
    my ( $self, $data ) = @_;
    my $timestamp = strftime( "%Y-%m-%d %H:%M:%S", localtime );
    $self->_dump( $timestamp . " " . $data, $error_log );
}
__END__

$error_log
my $error_log
package UNIVERSAL;
use POSIX qw( strftime );
use Sys::Hostname;

{
    sub ERROR_LOG {
    return hostname() . "-" . strftime( "%Y-%m-%d_%H.%M", localtime ) . ".log";
    }
}

UNIVERSAL::_logger
UNIVERSAL->ERROR_LOG

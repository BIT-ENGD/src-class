# Create the soap client
my $client = SOAP::Lite->new;

# Get raw SOAP xml output
$client->outputxml(1);

# Set connection parameters
$client->uri($namespace);

# set the url in the proxy member. The keep_alive parameter is needed if user authentication
# is used, it is passed on to the user agent class to set up an authenticated HTTP session
$client->proxy($url, keep_alive => 1);

# Set the user credentials 
$client->transport->credentials("$host:$port", ''
    , $user
    , $password
);

# define the webservice method
$client->on_action( sub { return "$namespace$method" } );
my $soapmethod = SOAP::Data->name($method)
    ->attr({xmlns => $namespace});

# Generate the SOAP parameters and make the call
my @paramarray = ( \%paramhash );
my $ps = ${MakeSoapParameters(\@paramarray)};

# output the current number of filedescriptors used for this process
system("ls -l /proc/$$/fd | wc -l");
# Make the call
my $result = $client->call($soapmethod => $ps );
# output the current number of filedescriptors used for this process AFTER the call
system("ls -l /proc/$$/fd | wc -l");


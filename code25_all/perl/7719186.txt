#!/usr/bin/perl
    use strict;
    use AnyEvent::Twitter::Stream;

    use DBI;
    use DBD::mysql;



    my $done = AnyEvent->condvar;

    my($user, $password, $method, $args) = @ARGV;
    # my twitter login
    my %args;
    if ($method eq 'follow') {
        $args{follow} = $args;
        $method = 'filter';
    } elsif ($method eq 'track') {
        $args{track}  = $args;
        $method = 'filter';
    }

    binmode STDOUT, ":utf8";

    my $streamer = AnyEvent::Twitter::Stream->new(
        username => $user,
        password => $password,
        timeout => 0,
        method   => $method || "sample",
        %args,
        on_keepalive => sub {
              warn "ping\n";
          },
        on_tweet => sub {

            my $DBIconnect;
            #db connection info

            my $dsn = "dbi:mysql:$database:$host:$dbport";

            $DBIconnect = DBI->connect($dsn, $db_user, $db_pass);

            my $tweet = shift;

            if($tweet->{id}) {
               # occasionally twitter 
               # insert some data here

                my $save_tweet = $query;
                #print $query;
                my $save_handle = $DBIconnect->prepare($save_tweet);

                if($save_handle->execute()) { 
                    #print "Tweet #" . $tweet->{id} . " Stored\n";
                } else { 
                    #print "Error Saving Tweet #" . $tweet->{id} . "\n";
                }
                $save_handle->finish();
                $DBIconnect->disconnect();
            } else { 
                #print "Tweet did not contain Tweet ID.\n";
            }

        },
        on_error => sub {
            my $error = shift;
            print "Error! Error!";
            warn "ERROR: $error";


            $done->send;
            sleep 2;

            $done->recv;
        },
        on_eof   => sub {
            $done->send;
        },
    );


    $done->recv;

    on_error => sub {
        my $error = shift;
        print "Error! Error!";
        warn "ERROR: $error";


        $done->send;
        sleep 2;

        $done->recv;
    },


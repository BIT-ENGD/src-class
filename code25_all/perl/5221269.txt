     #!/usr/bin/perl -w
 use IO::Socket;
 use Net::hostent;              # for OO version of gethostbyaddr

 $PORT = 9050;                  # pick something not in use

 $server = IO::Socket::INET->new( Proto     => 'tcp',
                                  LocalPort => $PORT,
                                  Listen    => SOMAXCONN,
                                  Reuse     => 1);

 die "can't setup server" unless $server;
 print "[Server $0 accepting clients]\n";

 while ($client = $server->accept()) {
   $client->autoflush(1);
   print $client "Welcome to $0; type help for command list.\n";
   $hostinfo = gethostbyaddr($client->peeraddr);
   printf "[Connect from %s]\n", $hostinfo->name || $client->peerhost;
   print $client "Command? ";

   while ( <$client>) {
     next unless /\S/;       # blank line
     if    (/quit|exit/i) {
        last;                                     }
     elsif (/some|thing/i) {
        printf $client "%s\n", scalar localtime;  }
     elsif (/start/i ) {
        open RSPS, '|java -jar JARFILE.jar' or die "ERROR STARTING: $!\n";
        print  $client "I think it started...\n Say status for output\n";                }
     elsif (/stop/i ) {
        print RSPS "stop";
        close(RSPS);
        print  $client "Should be closed.\n"; }
     elsif (/status/i ) {
        $output = <RSPS>;
        print $client $output;      }
     else {
       print $client "Hmmmm\n";
     }
   } continue {
      print $client "Command? ";
   }
   close $client;
 }


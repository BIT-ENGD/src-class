#!/usr/bin/perl
use strict;
use warnings;
use encoding 'utf-8';
use FindBin;
use lib "$FindBin::Bin/lib";
use TwitterModule;
use IO::Prompt;

# Read keys from file
open KEYS, "<keys.txt" or die $!;
my ($ckey, $csecret, $atocken, $asecret) = <KEYS>;

# Auth
my $nt = TwitterModule::auth($ckey, $csecret, $atocken, $asecret) ;

# Other code skipped.

package TwitterModule;
use strict;
use warnings;
use utf8;
use encoding 'utf8';
use base 'Exporter';
use Net::Twitter;

BEGIN {
    use Exporter();

    our $VERSION = '0.01b'; 
    our @EXPORT_OK = qw(&auth);
    our %EXPORT_TAGS = (
        'functions' => [ qw(&auth) ]
    );

    # add all the other ":class" tags to the ":all" class, deleting duplicates

    my %seen;
    push @{$EXPORT_TAGS{all}},
        grep {!$seen{$_}++} @{$EXPORT_TAGS{$_}} foreach keys %EXPORT_TAGS;
}

### Common variables ###
# Make connection
sub auth {
    my ($ckey, $csecret, $atocken, $asecret) = @_;

    my $cn = Net::Twitter->new(
        traits              => [qw/Oauth API::REST/],
        consumer_key        => $ckey,
        consumer_secret     => $csecret,
        access_tocken       => $atocken,
        access_token_secret => $asecret
    );
    return $cn;
}

# Other code skipped
# return true
1


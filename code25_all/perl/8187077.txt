  file1:bvr.xml

<?xml version="1.0" encoding="UTF-8"?>
<specification xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <details>
 <name>johan</name>
 <address>Langgt 23</address>
  ---more info---
 </details>
</specification>

 file2:kvr.xml

 <?xml version="1.0" encoding="UTF-8"?>
 <specification xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <details>
 <name>venu</name>
 ---more info---
 </details>
 </specification>

   file3:svr.xml

 <?xml version="1.0" encoding="UTF-8"?>
 <specification xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <details>
 <name>kent</name>
 ---more info----
  </details>
  </specification>

  file4:tvr.xml

 <?xml version="1.0" encoding="UTF-8"?>
 <specification xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <definition>
 <name>kent</name>
  ----more info---
  </definition>
  </specification>

       new.xml 

<?xml version="1.0" encoding="UTF-8"?>
<specification xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <details>
 <name>johan</name>
 <address>Langgt 23</address>
  --more info--
 </details>

 <details>
 <name>venu</name>
 ---more info----
 </details>

 <details>
 <name>kent</name>
 <address>vadrss 25</address>
 ---more info--
  </details>

   <definition>
 <name>kent</name>
  ----more info----
  </definition>
</specification>

#!/usr/bin/perl
  use warnings;
  use strict;
 use File::Find;
   use XML::LibXML::Reader;
 use Data::Dumper;
  my $Number;

  my $dir="C:/file/sav";
  find(\&wanted, $dir);
  sub wanted() {
       if ( -f and /(\.xml)$/) {# find all the files with a suffix of .xml

  my $reader = XML::LibXML::Reader->new( location =>$_ )
 or die "cannot read file.xml\n";

    while ($reader->nextElement( 'details' ) ){

          $Number = $reader->readOuterXml();

          print "$Number\n";    
             } 

         }
   return;                   
  }

$Number
$Number
                    (or)

#!/usr/bin/perl
use warnings;
use strict;
  use XML::LibXML;
my @xml_files = glob '*.xml';
my $bigXML = XML::LibXML::Document->new( '1.0', 'UTF-8');
my $aggregated; for my $xml_file ( @xml_files ) {

my $doc = XML::LibXML->new->parse_file( $xml_file );

my ( $specNode ) = $doc->findnodes( '//Specification' );

  if ( $aggregated ) {
 $aggregated = $specNode;
 }
 else {
 my @details = $specNode->findnodes( './details' );
 $aggregated->addChild( $_ ) foreach @details;
 }
  }
  $bigXML->adoptNode( $aggregated ); 
 $bigXML->toFile( 'aggregated_data.xml' );

can't call method "findnodes" on an undefined value
my @xml_files = glob '*dtc.xml';

XML::LibXML::Document::adoptNode()-- Node is not a blessed SV reference at line 21


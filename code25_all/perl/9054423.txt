sub execute
{
  $SIG{__DIE__}         = \&_handleDie;

  eval{  #execute myscript.pl sub main  
         $rv = &$pFunct(@args);}

  if ($@){ processException($@)}

  print "myscript.pl success executed"           

}

use frame;
frame->execute( \&main );

sub main
{ 
   %codes that redirect STDOUT to a file% 

   #if below API cmd no exception, hide it's output, 
   #otherwise output the API cmd STDERR msg

   %codes called API of another module%


   try
    {
        die("sth wrong");
    }catch{
        %codes restore STDOUT to terminal% 
        print "error msg, but this line will not be executed, how to get it be execute?"
    }
}

frame->execute( \&main );

sub main
{
    open my $stdOri, ">&STDOUT";
    my $tmpFile = "/tmp/.output.txt.$$";
    open STDOUT, ">$tmpFile";

    #overwrite frame provided exception handling.
    local $SIG{__DIE__}=sub{close STDOUT;  open STDOUT, ">&", $stdOri;};

    #cause a exception, 
    #this exception will be processed by 'local $SIG{__DIE__}' block which restore STDOUT
    #then frame->eval catch this exception, and print it in the terminal.
    my $c=5/0;

}


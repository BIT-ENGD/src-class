#! /usr/local/ActivePerl-5.12/bin/perl

#this script will check to files, throw them into arrays and compare them
#to find entries in one array which meet specified criteria
#$field_file is the name of the file that contains the ablation date first,
#then the list of compared dates, then the low and high end date criteria, each
#value should end with a \n.
#$unfiltered_file is the name of the raw CSV with all the data
#$output_file is the name of the file the program will write to
use strict;
use 5.012;
use Text::CSV_XS;
use IO::HANDLE qw/getline/;
use Date::Calc qw/Decode_Date_US2 Delta_Days/;

my $csv = Text::CSV_XS->new ({ binary => 1, eol => $/ }) or
    die "Cannot use CSV: ".Text::CSV->error_diag ();

my ($field_file,
    $unfiltered_file,
    $output_file,
    @field_list,
    $hash_keys,
    %compare,
    $check,
    $i);
#Decode_Date_US2 scans a string and tries to parse any date within.
#($year,$month,$day)=Decode_Date_US2($string[,$language])
#Delta_Days returns the difference in days between the two given dates.
#$Dd = Delta_Days($year1,$month1,$day1, $year2,$month2,$day2);
sub days{
    Delta_Days(Decode_Days_US2(@compare{$field_list[0]}),
           Decode_Days_US2(@compare{$field_list[$i]}));
}

sub printout{
    $csv->print(<OUTPUTF>, $check) or die "$output_file:".$csv->error_diag();
}

print "\nEnter the check list file name: ";
chomp ($field_file = <STDIN>);
open FIELDF, "<", $field_file or die "$field_file: $!";
chomp (@field_list=<$field_file>);
close FIELDF or die "$field_file: $!";
print "\nEnter the raw CSV file name: ";
chomp ($unfiltered_file = <STDIN>);
print "\nEnter the output file name : ";
chomp ($output_file = <STDIN>);
open OUTPUTF, ">>", $output_file or die "$output_file: $!";
open RAWF, "<", $unfiltered_file or die "$unfiltered_file: $!";
if ($hash_keys = $csv->getline(<RAWF>)){
    $check = $hash_keys;
    &printout();
}else{die "\$hash_keys: ".$csv->error_diag();}

while ($check = $csv->getline (<RAWF>)){
    @compare{@$hash_keys}=@$check;    
    TEST: for ($i=1, $i==(@field_list-3), $i++){
        if (&days()>=$field_list[-2] && &days()<=$field_list[-1]){
            last TEST if (&printout());
    }
}    


sub handler : method{
my $mask      = POSIX::SigSet->new(&POSIX::SIGUSR2, &POSIX::SIGALRM);
my $oldaction_usr2 = POSIX::SigAction->new();
my $oldaction_alarm = POSIX::SigAction->new();
my $action = POSIX::SigAction->new(sub {
    Carp::confess("hm caught SIGUSR2 or ALARM DEAD LOCK YOU can run but not hide!");
},$mask,&POSIX::SA_NODEFER);
POSIX::sigaction(&POSIX::SIGUSR2,$action, $oldaction_usr2);
POSIX::sigaction(&POSIX::SIGALRM,$action, $oldaction_alarm);
alarm(30); #max 30 seconds per request

(gdb) bt
#0  0x00007fc4610fb606 in myck_entersub (my_perl=0x7fc47f7f63e0, op=0x7fc484b40910) at lib/Params/Classify.xs:682
#1  0x00007fc477a67abd in Perl_convert () from /usr/lib/libperl.so.5.14
#2  0x00007fc477a6f769 in Perl_utilize () from /usr/lib/libperl.so.5.14
#3  0x00007fc477a9daef in Perl_yyparse () from /usr/lib/libperl.so.5.14
#4  0x00007fc477b1635d in ?? () from /usr/lib/libperl.so.5.14

% gdb httpd <pid of spinning process>
(gdb) where
(gdb) source mod_perl-x.xx/.gdbinit
(gdb) curinfo


{
    package MyArray;
    use namespace::autoclean;
    use Moose::Util::TypeConstraints;
    use Moose;

    subtype 'My::ArrayRef' => as 'ArrayRef';
    coerce  'My::ArrayRef'
      => from 'Num|Str'
         => via {[$_]};

    has 'ents' => (
        traits  => ['Array'],
        is      => 'rw',
        isa     => 'ArrayRef[My::ArrayRef]',
        default => sub { [] },
        handles => {
            push      => 'push',
            get       => 'get',
            set       => 'set',
            elements  => 'elements',
            count     => 'count',
        },
        coerce => 1,
    );

    __PACKAGE__->meta->make_immutable;

}

use Modern::Perl;

my $a0 = MyArray->new( ents => [ 0, [ 0, 0, 0 ], [1,2,3] ] ) ;

use Data::Dumper;

print Dumper $a0;

$a0->set(0,'cat');
print Dumper $a0;
$a0->push(1.0);
print Dumper $a0;


$row
$routerIP    $row (an index to a global hash containing various details)
10.10.10.10  2
10.10.10.12  1
10.10.10.10  0
10.10.10.12  3

$ipGroup{$10.10.10.10}[1] = 2
$ipGroup{$10.10.10.10}[2] = 0

$ipGroup{$10.10.10.12}[1] = 1
$ipGroup{$10.10.10.12}[2] = 3

%ipGroup
my $routerIP = #code to get the ip
my $ind = $ipGroup{$routerIP}[0]+1;
$ipGroup{$routerIP}[0] = $ind;     
$ipGroup{$routerIP}[$ind] = $row;

$ind
$ind
$row
$routerIP
foreach $routerIP (keys %ipGroup) {

    my @rows = @{$ipGroup{$routerIP}};

    my $index = 0;

    while ($rows[$index]) {
        $index++;
        my $row = $rows[$index];

    # do stuff here
    }
}

@rows
$row=2
$row=0
$row=3
$row
$hashId
print "updated router: $routerIP index: $ind hashId: $hashId <br />";
updated router: 10.10.10.10 index: 1 hashId: 0 
updated router: 10.10.10.10 index: 2 hashId: 1 
updated router: 10.10.10.12 index: 1 hashId: 2 
updated router: 10.10.10.12 index: 2 hashId: 3 
updated router: 10.10.10.10 index: 3 hashId: 4 

$VAR1 = {
          '10.10.10.12' => [
                               2,
                               '2',
                               '3'
                             ],
          '10.10.10.10' => [
                               3,
                               '0',
                               '1',
                               '4'
                             ]
        };

print "in loop: $routerIP index: $index hashId: <br />";
in loop: 10.10.10.12 index: 1 hashId: 2 
in loop: 10.10.10.12 index: 2 hashId: 3 
in loop: 10.10.10.12 index: 3 hashId: 
in loop: 10.10.10.10 index: 1 hashId: 0 


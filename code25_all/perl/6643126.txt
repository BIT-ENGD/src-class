use Parallel::ForkManager;

my $pm=new Parallel::ForkManager(10); 
my(@cusips,@bad);
$pm->run_on_finish(sub{
my($pid,$exit_code,$ident,$exit_signal,$core_dump,$var,$v)=@_;
print "pid: ".$pid."\n";
print " first: ".${$var}."\n"; 
print " second: ".${$v}."\n";   
});


for(1..3){

$pm->start and next; # do the fork 
my $var=rand();
my $v=rand();

$pm->finish(0,\$var,\$v); # do the exit in the child process 
}


$pm->wait_all_children; 


  [][]  []  []  []  [][][]  []  []              []    []  []  []    [][]      []
  []    []  []  []  []      []  []    [][]  []    []    [][]  []          []  []
  []  [][]  []  []  []          []  []      [][][][]  []  []  [][][][][]  []  []
  []      [][]  []  []        []    [][][][]  []  []  []      []      [][]  []
[]  [][]        []  []  [][][]  []        []          []      []  [][]  []  []
[]  []  [][][][][]  []  []    [][]  [][]  []          [][]  []      [][][]  []
[]    []                    []  [][][]  [][]  [][][]          [][][]    []  []
  []  []  [][][][][][][][][][]                      [][][][][]      []      []
[][]  []                      [][][][][][][]  [][][]        [][]      [][]  []
    []  []      [][][][]        []  []    []  []    [][][]  []
  [][]  []  []        []                  []  []  [][]  []  [][]
    []  []  [][]      []    [][][][]    [][]  []        []
      [][]    []    [][][][][]    [][][]          [][][][][][][][]  [][]
  []      []  []  []            []        [][][][]                  [][]
[][]      []  []  []  []  []    []  [][][]          [][][][][][][][]
        [][]  []    []      []  []  []  []  [][][][]  []          [][]      [][]
[]            [][]  []    [][]  []          []            [][][][]    [][][]
[]      [][][][]    []  []      []  []  []        []  []  []  []  []  []      []
                [][][]  [][][]      []  [][]        [][]  []      []  []      []
  []                [][][]    []  [][]  [][]          []  []      []    [][]  []
  [][]            []        []        [][][][][][]        [][]  []  []  []
      []          []  [][][][][][][][][]          []    []    []    []    [][][]
    [][]  [][][]  []  []                  [][]  []      []  []  [][]  []  []  []
  []    []      []        [][]  [][][][][][][]  []  [][]    []    []  []      []

[]
#!/usr/bin/perl

use warnings;
use strict;
use Curses;
use Time::HiRes 'usleep';

my $iterations = 100;
$iterations = $ARGV[0] if @ARGV;

initscr;
getmaxyx(my $rows, my $columns);
$columns = int($columns / 2);
my ($i, $j);
my @initial_state;
foreach $i (0 .. $rows) {
        foreach $j (0 .. $columns) {
                $initial_state[$i][$j] = int rand(2);
        }
}

my @current_state = @initial_state;
my @next_state;
my $iteration;
my ($up, $down, $right, $left);
my $adjacent_cells;

foreach $iteration (0 .. $iterations) {
        foreach $i (0 .. $rows) {
                foreach $j (0 .. $columns) {
                        $up     = ($i + 1) % $rows;
                        $down   = ($i - 1) % $rows;
                        $right  = ($j + 1) % $columns;
                        $left   = ($j - 1) % $columns;
                        $adjacent_cells = $current_state[$i][$right] 
                                        + $current_state[$i][$left] 
                                        + $current_state[$up][$right] 
                                        + $current_state[$up][$left] 
                                        + $current_state[$down][$right] 
                                        + $current_state[$down][$left] 
                                        + $current_state[$up][$j] 
                                        + $current_state[$down][$j];
                        if ( $current_state[$i][$j] ) {
                                $next_state[$i][$j] = $adjacent_cells == 2 || $adjacent_cells == 3 ? 1 : 0;
                                addstr($i, 2*$j, '[]');
                        }
                        else {
                                $next_state[$i][$j] = $adjacent_cells == 3 ? 1 : 0;
                                addstr($i, 2*$j, '  ');
                        }
                }
        }
        @current_state = @next_state unless $iteration == $iterations;
        usleep 10000;
        refresh();
}

getch();
endwin();


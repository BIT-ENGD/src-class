{
package input_genrun;                                              
use Moose;                                                         
use IO::Pipe;                                                      
use FileHandle;                                                    

has 'name', is => 'ro', isa =>'Str';
has 'exe'      => (                 
                    is  => 'ro',    
                    isa => 'Str',   
                    default => '/usr/local/bin/bar',
                  );
has 'inp_fh'   => (
                    is => 'rw',
                    isa=> 'FileHandle',
                    default => sub {
                      my $handle = FileHandle->new;
                      return $handle;
                    }
                  );
has 'out_fh'   => (
                    is => 'rw',
                    isa=> 'IO::Pipe',
                    default => sub {
                      my $handle = IO::Pipe->new;
                      return $handle;
                    }
                  );

sub inp_wrt
{
  my ($self,$object) = @_;
  my $filename = $object->name() . ".inp";
  my $fh = FileHandle->new;
  $fh->open(">" . $filename);
  print $fh "foo \n";
  print $fh "bar \n";
  $fh->close;
}

sub run
{
  my ($self, $object) = @_;
  my $name = $object->name() . ".inp";
  my $exe = $self->exe;
  my $command = $self->exe . " $name";
  $self->out_fh()->reader($command);
  return($self->out_fh());
}

} 

my $l = input_genrun->new(name=> 'foo_l',exe=> 'wc');
my $m = input_genrun->new(name=> 'foo_m',exe=> 'cat');
my $n = input_genrun->new(name=> 'foo_n',exe=> 'tac');

$l->inp_wrt($l);
$m->inp_wrt($m);
$n->inp_wrt($n);

my $pipe_l = $l->run($l);
my $pipe_m = $m->run($m);
my $pipe_n = $n->run($n);

while (<$pipe_l>){
  print "from_l: $_";
}
while (<$pipe_m>){
  print "from_m: $_";
}
while (<$pipe_n>){
  print "from_n: $_";
}


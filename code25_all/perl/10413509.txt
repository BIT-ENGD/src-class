sort
$a
$b
@decreasing = sort { $b <=> $a } @list;

process_and_store
$item
process_and_store { do_something_with($item); } @list;

process_and_store { my $item = shift; do_something_with($item); } @list;

$item
SomePackage.pm
package SomePackage;

use strict;

require Exporter;
our @ISA = qw/Exporter/;
our @EXPORT = qw(process_and_store);

our $item;

sub import { 
  my $import_caller = caller();
  {   no strict 'refs';
    *{ $import_caller . '::item' } = \*item;
  }
  # Now, cue Exporter!
  goto &{ Exporter->can( 'import' ) };
}

sub process_and_store (&@) {
  my $code = shift;
  for my $x (@_) {
    local *item = \$x;
    $code->();
    print "stored: $item\n"
  }
}

1;

main.pl
#!/usr/bin/perl -w

use strict;
use SomePackage;

process_and_store { print "seen: $item\n"; } (1, 2, 3);

seen: 1
stored: 1
seen: 2
stored: 2
seen: 3
stored: 3


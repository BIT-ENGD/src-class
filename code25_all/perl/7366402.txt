# N1089767N_7_SWOPT_03-Jul-2011_78919186.xml
# N1089767N_7_SWOPT_25-Jun-2011_72745892.xml
# N1089772L_9_SWOPT_03-Jul-2011_78979055.xml
# N1089772L_9_SWOPT_20-Jul-2011_69380887.xml
# N1089772L_9_SWOPT_29-Jun-2011_74754662.xml
open( CONSULTS, "confile" );
@scons = <CONSULTS>;
close CONSULTS;
my %is_trade_id_unique;
foreach ( reverse sort consort @scons ) {
    chomp;

    #print $_. "\n";
    if ( $_ =~ m/(\w+_\d+_\w+)_(\d+)-([A-Za-z]{3})-2011_(\d+)[.]xml/i ) {
        my ( $trade_id, $date, $month, $row_num ) = ( $1, $2, $3, $4 );
        if ( !$is_trade_id_unique{$trade_id} ) {
            print $_. "\n";
            $is_trade_id_unique{$trade_id} = 1;
        }

        #print $_."\n";
    }

}

#N1089767N_7_SWOPT_03-Jul-2011_78919186.xml
sub consort {
    $aa = $a;
    $bb = $b;

  # save our variables because our sort routine affects them.  If I "chomp $a"
  # that will actually change the line seen in the foreach loop that calls this.

    chomp $aa;
    chomp $bb;

    $aa =~ s/^  *//;
    $bb =~ s/^  *//;

    my %months = (
        FY  => 0,
        Jan => 1,
        Feb => 2,
        Mar => 3,
        Apr => 4,
        May => 5,
        Jun => 6,
        Jul => 7,
        Aug => 8,
        Sep => 9,
        Oct => 10,
        Nov => 11,
        Dec => 12,
    );

    my ( $trade_id,  $date,  $month,  $row_num );
    my ( $btrade_id, $bdate, $bmonth, $brow_num );
    if ( $aa =~ m/(\w+_\d+_\w+)_(\d+)-([A-Za-z]{3})-2011_(\d+)[.]xml/i ) {
        ( $trade_id, $date, $month, $row_num ) = ( $1, $2, $months{$3}, $4 );
    }
    if ( $bb =~ m/(\w+_\d+_\w+)_(\d+)-([A-Za-z]{3})-2011_(\d+)[.]xml/i ) {
        ( $btrade_id, $bdate, $bmonth, $brow_num ) =
          ( $1, $2, $months{$3}, $4 );
    }

         $trade_id cmp $btrade_id
      || $month <=> $bmonth
      || $date <=> $bdate
      || $row_num <=> $brow_num;

}

#!/usr/bin/perl
use strict;
use warnings;

#use Smart::Comments;

use constant RegExp_parse_name => qr/(\w+)_(\d{2})-(\w{3})-(\d{4})_(\d+)/;

#qr/([A-Z0-9]+_\d+_[A-Z0-9]+)_(\d+)-([A-Z][a-z]{2})-(20\d{2})_(\d+)[.]xml/;

#create month hash
my @month = qw/Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec/;
my %months;
foreach my $index ( 0 .. $#month ) { $months{ $month[$index] } = $index }

#generate tmp array for special sort
my @tmp_scons;
while ( my $str = <DATA> ) {
    chomp($str);
    my ( $trade_id, $date, $month, $year, $row_num ) =
      $str =~ RegExp_parse_name;
    $trade_id or next;
    $month = $months{$month};
    push @tmp_scons, [ "$trade_id:$year-$month-$date:$row_num", $str ];
}
my @scons = map $_->[1], sort { $a cmp $b } @tmp_scons;

### @tmp_scons:@tmp_scons
### @scons:@scons
### %months:%months
my %is;

foreach my $str (@scons) {
    my ( $trade_id, $date, $month, $year, $row_num ) =
      $str =~ RegExp_parse_name;
    if ( !$is{$trade_id} ) {
        print "$str\n";
    }
    $is{$trade_id}++;

    #print "$str\n";
}

__DATA__
N1089767N_7_SWOPT_03-Jul-2011_78919186.xml
N1089767N_7_SWOPT_25-Jun-2011_72745892.xml
N1089772L_9_SWOPT_03-Jul-2011_78979055.xml
N1089772L_9_SWOPT_20-Jul-2011_69380887.xml
N1089772L_9_SWOPT_29-Jun-2011_74754662.xml


#!/usr/bin/perl -w

use strict;
use Config::General;
use YAML::XS;

### Load in the config data and move it into the hash.
my $configObj = new Config::General(-ConfigFile => \*DATA);
my %config_hash = $configObj->getall;

### define the year to use as the replacement
my $current_year = (localtime())[5] + 1900;

### Call the function to update the data.
recursive_hash_replacement(\%config_hash, $current_year);


sub recursive_hash_replacement {

    ### Pull in the hash ref.
    my $tmp_hash_ref = shift;
    my $replacment_year = shift;


    ### Loop through all the keys in the hash ref.
    for my $tmp_hash_key (keys %{$tmp_hash_ref}) {

        ### If the value is another hash ref, call the function recursively.
        if(ref $tmp_hash_ref->{$tmp_hash_key} eq ref {}) {
            recursive_hash_replacement($tmp_hash_ref->{$tmp_hash_key}, $replacment_year);
        }

        ### otherwise, just update the value.
        else {
            $tmp_hash_ref->{$tmp_hash_key} =~ s{!YEAR!}{$replacment_year}g;
        }

    }
}


### Show the output with the updated values.
print Dump \%config_hash;


### Define the config data locally for testing.
__DATA__

key1 = /path/with/no/update
key2 = /path/with/new/!YEAR!/update

<level1>
    <level2>
        key3 = /another/!YEAR!/update
    </level2>
</level1>


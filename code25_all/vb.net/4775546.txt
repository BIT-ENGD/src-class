AspNetHostingPermissionLevel GetCurrentTrustLevel() {
    foreach (AspNetHostingPermissionLevel trustLevel in
            new AspNetHostingPermissionLevel [] {
                AspNetHostingPermissionLevel.Unrestricted,
                AspNetHostingPermissionLevel.High,
                AspNetHostingPermissionLevel.Medium,
                AspNetHostingPermissionLevel.Low,
                AspNetHostingPermissionLevel.Minimal 
            } )
    {
        try {
            new AspNetHostingPermission(trustLevel).Demand();
        }
        catch (System.Security.SecurityException ) {
            continue;
        }

        return trustLevel;
    }

    return AspNetHostingPermissionLevel.None;
}

Private Function GetCurrentTrustLevel() As AspNetHostingPermissionLevel

    For Each trustLevel As AspNetHostingPermissionLevel In New _
        AspNetHostingPermissionLevel() { _
            AspNetHostingPermissionLevel.Unrestricted, _
            AspNetHostingPermissionLevel.High, _
            AspNetHostingPermissionLevel.Medium, _
            AspNetHostingPermissionLevel.Low, _
            AspNetHostingPermissionLevel.Minimal _
        }

            Try
                New AspNetHostingPermission(trustLevel).Demand()
            Catch generatedExceptionName As System.Security.SecurityException
                Continue Try
            End Try

            Return trustLevel
        Next

        Return AspNetHostingPermissionLevel.None
    End Function

New AspNetHostingPermission(trustLevel).Demand()

Continue Try


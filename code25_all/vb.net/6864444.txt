     Private Sub EncryptBytes(ByVal fileIn As String, ByVal fileOut As String, ByVal pass As String, ByVal ivString As String)

        Dim crypt As New RijndaelManaged
        crypt.KeySize = 256
        crypt.BlockSize = 256
        crypt.Padding = PaddingMode.PKCS7
        crypt.Mode = CipherMode.CFB

        'read byte array from file location, ie c:\temp\file.zip
        Dim data As Byte() = ReadByteArray(fileIn)

        Dim iv As Byte() = System.Text.Encoding.UTF8.GetBytes(ivString)
        Dim key As Byte() = System.Text.Encoding.UTF8.GetBytes(pass)
        Dim encryptor As ICryptoTransform = crypt.CreateEncryptor(key, iv)

        Using ms As New System.IO.MemoryStream

            Using cs As New CryptoStream(ms, encryptor, CryptoStreamMode.Write)

                cs.Write(data, 0, data.Length)
                cs.FlushFinalBlock()

            End Using

            'write byte array to file location, ie c:\temp\file_e.zip
            WriteByteArray(fileOut, ms.ToArray)

        End Using

    End Sub

public static function decryptZip(src:ByteArray, k:String, iv:String):ByteArray {

    var key:ByteArray = Hex.toArray(Hex.fromString(k)); 

    var mode:CFBMode = new CFBMode(new AESKey(key), new PKCS7(256));
    mode.IV = Hex.toArray(Hex.fromString(iv));

    mode.decrypt(src);

    return src;

}


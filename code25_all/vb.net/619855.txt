Public Class DataAccess
    Public Shared Function ReturnScalar(ByVal CmdStr As String) As String
        Dim Result As String
        Dim con As SqlConnection = New SqlConnection(ConfigurationManager.ConnectionStrings("RoutingConnectionString").ToString)
        con.Open()
        Dim cmd As SqlCommand = New SqlCommand(CmdStr, con)
        cmd.CommandType = CommandType.StoredProcedure
        Result = cmd.ExecuteScalar
        con.Close()
        Return Result
    End Function

    Public Shared Function ReturnScalar(ByVal CmdStr As String, ByVal ParamName As String, ByVal Param As Integer) As String
        Dim Result As String
        Dim con As SqlConnection = New SqlConnection(ConfigurationManager.ConnectionStrings("RoutingConnectionString").ToString)
        con.Open()
        Dim cmd As SqlCommand = New SqlCommand(CmdStr, con)
        cmd.CommandType = CommandType.StoredProcedure
        cmd.Parameters.Add(New SqlParameter(ParamName, Param))
        Result = cmd.ExecuteScalar
        con.Close()
        Return Result
    End Function

    Public Shared Function ReturnScalar(ByVal CmdStr As String, ByVal ParamName As String, ByVal Param As String) As String
        Dim Result As String
        Dim con As SqlConnection = New SqlConnection(ConfigurationManager.ConnectionStrings("RoutingConnectionString").ToString)
        con.Open()
        Dim cmd As SqlCommand = New SqlCommand(CmdStr, con)
        cmd.CommandType = CommandType.StoredProcedure
        cmd.Parameters.Add(New SqlParameter(ParamName, Param))
        Result = cmd.ExecuteScalar
        con.Close()
        Return Result
    End Function

    Public Shared Function ReturnScalar(ByVal CmdStr As String, ByVal Params As Hashtable) As String
        Dim Result As String
        Dim con As New SqlConnection(ConfigurationManager.ConnectionStrings("RoutingConnectionString").ToString)
        con.Open()
        Dim cmd As New SqlCommand(CmdStr, con)
        cmd.CommandType = CommandType.StoredProcedure
        For Each entry As DictionaryEntry In Params
            cmd.Parameters.Add(New SqlParameter(entry.Key.ToString, entry.Value))
        Next
        Result = cmd.ExecuteScalar
        con.Close()
        Return Result
    End Function

    Public Shared Function ReturnDataSet(ByVal CmdStr As String) As DataSet
        Dim DS As New DataSet
        Dim con As New SqlConnection(ConfigurationManager.ConnectionStrings("RoutingConnectionString").ToString)
        con.Open()
        Dim cmd As New SqlCommand(CmdStr, con)
        Dim adp As New SqlDataAdapter(cmd)
        cmd.CommandType = CommandType.StoredProcedure
        adp.Fill(DS)
        con.Close()
        Return DS
    End Function

    Public Shared Function ReturnDataSet(ByVal CmdStr As String, ByVal ParamName As String, ByVal Param As Integer) As DataSet
        Dim DS As New DataSet
        Dim con As New SqlConnection(ConfigurationManager.ConnectionStrings("RoutingConnectionString").ToString)
        con.Open()
        Dim cmd As New SqlCommand(CmdStr, con)
        Dim adp As New SqlDataAdapter(cmd)

        cmd.CommandType = CommandType.StoredProcedure
        cmd.Parameters.Add(New SqlParameter(ParamName, Param))
        adp.Fill(DS)
        con.Close()
        Return DS
    End Function

    Public Shared Function ReturnDataSet(ByVal CmdStr As String, ByVal ParamName As String, ByVal Param As String) As DataSet
        Dim DS As New DataSet
        Dim con As New SqlConnection(ConfigurationManager.ConnectionStrings("RoutingConnectionString").ToString)
        con.Open()
        Dim cmd As New SqlCommand(CmdStr, con)
        Dim adp As New SqlDataAdapter(cmd)    
        cmd.CommandType = CommandType.StoredProcedure
        cmd.Parameters.Add(New SqlParameter(ParamName, Param))
        adp.Fill(DS)
        con.Close()
        Return DS
    End Function

    Public Shared Function ReturnDataSet(ByVal CmdStr As String, ByVal Params As Hashtable) As DataSet
        Dim DS As New DataSet
        Dim con As New SqlConnection(ConfigurationManager.ConnectionStrings("RoutingConnectionString").ToString)
        con.Open()
        Dim cmd As New SqlCommand(CmdStr, con)
        Dim adp As New SqlDataAdapter(cmd)
        cmd.CommandType = CommandType.StoredProcedure
        For Each entry As DictionaryEntry In Params
            cmd.Parameters.Add(New SqlParameter(entry.Key.ToString, entry.Value))
        Next
        adp.Fill(DS)
        con.Close()
        Return DS
    End Function

    Public Shared Function ReturnDataTable(ByVal CmdStr As String) As DataTable
        Dim DT As New DataTable
        Dim con As New SqlConnection(ConfigurationManager.ConnectionStrings("RoutingConnectionString").ToString)
        con.Open()
        Dim cmd As New SqlCommand(CmdStr, con)
        Dim adp As New SqlDataAdapter(cmd)
        cmd.CommandType = CommandType.StoredProcedure
        adp.Fill(DT)
        con.Close()
        Return DT
    End Function

    Public Shared Function ReturnDataTable(ByVal CmdStr As String, ByVal ParamName As String, ByVal Param As Integer) As DataTable
        Dim DT As New DataTable
        Dim con As New SqlConnection(ConfigurationManager.ConnectionStrings("RoutingConnectionString").ToString)
        con.Open()
        Dim cmd As New SqlCommand(CmdStr, con)
        Dim adp As New SqlDataAdapter(cmd)
        cmd.CommandType = CommandType.StoredProcedure
        cmd.Parameters.Add(New SqlParameter(ParamName, Param))
        adp.Fill(DT)
        con.Close()
        Return DT
    End Function

    Public Shared Function ReturnDataTable(ByVal CmdStr As String, ByVal ParamName As String, ByVal Param As Date) As DataTable
        Dim DT As New DataTable
        Dim con As New SqlConnection(ConfigurationManager.ConnectionStrings("RoutingConnectionString").ToString)
        con.Open()
        Dim cmd As New SqlCommand(CmdStr, con)
        Dim adp As New SqlDataAdapter(cmd)
        cmd.CommandType = CommandType.StoredProcedure
        cmd.Parameters.Add(New SqlParameter(ParamName, Param))
        adp.Fill(DT)
        con.Close()
        Return DT
    End Function

    Public Shared Function ReturnDataTable(ByVal CmdStr As String, ByVal ParamName As String, ByVal Param As String) As DataTable
        Dim DT As New DataTable
        Dim con As New SqlConnection(ConfigurationManager.ConnectionStrings("RoutingConnectionString").ToString)
        con.Open()
        Dim cmd As New SqlCommand(CmdStr, con)
        Dim adp As New SqlDataAdapter(cmd)
        cmd.CommandType = CommandType.StoredProcedure
        cmd.Parameters.Add(New SqlParameter(ParamName, Param))
        adp.Fill(DT)
        con.Close()
        Return DT
    End Function

    Public Shared Function ReturnDataTable(ByVal CmdStr As String, ByVal Params As Hashtable) As DataTable
        Dim DT As New DataTable
        Dim con As New SqlConnection(ConfigurationManager.ConnectionStrings("RoutingConnectionString").ToString)
        con.Open()
        Dim cmd As New SqlCommand(CmdStr, con)
        Dim adp As New SqlDataAdapter(cmd)
        cmd.CommandType = CommandType.StoredProcedure
        For Each entry As DictionaryEntry In Params
            cmd.Parameters.Add(New SqlParameter(entry.Key.ToString, entry.Value))
        Next
        adp.Fill(DT)
        con.Close()
        Return DT
    End Function

    Public Shared Function DBExecute(ByVal CmdStr As String) As Integer
        Dim RowsAffected As Integer
        Dim con As New SqlConnection(ConfigurationManager.ConnectionStrings("RoutingConnectionString").ToString)
        con.Open()
        Dim cmd As New SqlCommand(CmdStr, con)
        cmd.CommandType = CommandType.StoredProcedure
        RowsAffected = cmd.ExecuteNonQuery
        con.Close()
        Return RowsAffected
    End Function

    Public Shared Function DBExecute(ByVal CmdStr As String, ByVal ParamName As String, ByVal Param As Integer) As Integer
        Dim RowsAffected As Integer
        Dim con As New SqlConnection(ConfigurationManager.ConnectionStrings("RoutingConnectionString").ToString)
        con.Open()
        Dim cmd As New SqlCommand(CmdStr, con)
        cmd.CommandType = CommandType.StoredProcedure
        cmd.Parameters.Add(New SqlParameter(ParamName, Param))
        RowsAffected = cmd.ExecuteNonQuery
        con.Close()
        Return RowsAffected
    End Function

    Public Shared Function DBExecute(ByVal CmdStr As String, ByVal Params As Hashtable) As Integer
        Dim RowsAffected As Integer
        Dim con As New SqlConnection(ConfigurationManager.ConnectionStrings("RoutingConnectionString").ToString)
        con.Open()
        Dim cmd As New SqlCommand(CmdStr, con)
        cmd.CommandType = CommandType.StoredProcedure
        For Each entry As DictionaryEntry In Params
            cmd.Parameters.Add(New SqlParameter(entry.Key.ToString, entry.Value))
        Next
        RowsAffected = cmd.ExecuteNonQuery
        con.Close()
        Return RowsAffected
    End Function
End Class


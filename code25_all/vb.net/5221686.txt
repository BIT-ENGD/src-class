Public Sub FormatText()

    If IsNothing(rtfContent.Document) Then
        Exit Sub
    End If

    Me.rtfContent.IsEnabled = False
    Me.rtfContent.Refresh()
    Me.Refresh()

    System.Threading.Thread.Sleep(50)

    Dim curRange As TextRange = New TextRange(rtfContent.Document.ContentStart, rtfContent.CaretPosition)

    Dim caretBefore As TextPointer = rtfContent.CaretPosition
    caretBefore = New TextRange(caretBefore, caretBefore.DocumentEnd).Start

    Dim caretBeforeOffset As Integer = rtfContent.Document.ContentStart.GetOffsetToPosition(caretBefore)

    Dim docRange As TextRange = New TextRange(rtfContent.Document.ContentStart, rtfContent.Document.ContentEnd)
    docRange.ClearAllProperties()

    Dim myText As String = docRange.Text
    Dim Lines As List(Of String) = Split(myText, vbCrLf).ToList
    Dim MyBlocks As New List(Of Block)
    Dim count As Integer = 1
    MyVars.Clear()
    myText = ""

    For Each Line In Lines
        If count = Lines.Count Then
            Exit For
        End If

        If Mid(Line, 1, 1) = "$" Then
            Dim words As String() = Split(Line, " ", 2)
            MyVars.Add(words(0))
            myText &= "<Paragraph Margin=""0,0,0,0"" Padding=""0,0,0,2"">" & Line & "</Paragraph>"
        ElseIf Mid(Line, 1, 1) = "#" Then
            myText &= "<Paragraph Margin=""0,0,0,0"" Padding=""0,0,0,2""><Run Foreground=""#FFFFA500"">" & Line & "</Run></Paragraph>"
        Else
            myText &= "<Paragraph Margin=""0,0,0,0"" Padding=""0,0,0,2"">" & Line & "</Paragraph>"
        End If

        count += 1
    Next

    myText = Regex.Replace(myText, "\$(\w*)", "<Run Foreground=""#FFFF0000"">$$$1</Run>")

    For Each var In MyVars
        myText = Regex.Replace(myText, "<Run Foreground=""#FFFF0000"">\" & var & "</Run>", "<Run Foreground=""#FF32CD32"">" & var & "</Run>")
    Next

    myText = myText.Replace("copy", "<Run Foreground=""#FF87CEFA"">copy</Run>")
    myText = myText.Replace("delete", "<Run Foreground=""#FF87CEFA"">delete</Run>")
    myText = myText.Replace("output", "<Run Foreground=""#FF87CEFA"">output</Run>")
    myText = myText.Replace("clear", "<Run Foreground=""#FF87CEFA"">clear</Run>")

    myText = "<FlowDocument PagePadding=""5,0,5,0"" AllowDrop=""True"" NumberSubstitution.CultureSource=""User"" xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation"">" & myText & "</FlowDocument>"

    Me.rtfContent.Document.Blocks.Clear()
    Me.rtfContent.Document = TryCast(XamlReader.Parse(myText), FlowDocument)

    caretBefore = caretBefore.DocumentStart.GetPositionAtOffset(caretBeforeOffset, LogicalDirection.Forward)

    Try
        Me.rtfContent.CaretPosition = caretBefore
    Catch
        Me.rtfContent.CaretPosition = rtfContent.Document.ContentEnd
    End Try

    Me.rtfContent.IsEnabled = True
    Me.rtfContent.Refresh()
    Me.Refresh()

End Sub


Protected Sub btnPDF_Click(sender As Object, e As EventArgs) Handles btnPDF.Click
    ' Request.QueryString["docid"].ToString();
    Dim docuid As String = "b39a443d-ccfd-47f4-b333-f12cd94683d6"
    'Connection and Parameters
    Dim param As SqlParameter = Nothing
    Dim conn As SqlConnection = New SqlConnection(
       ConfigurationManager.ConnectionStrings("menu").ToString())
    Dim cmd As New SqlCommand("sp_getdoc", conn)
    cmd.CommandType = CommandType.StoredProcedure
    param = New SqlParameter("@docuid", SqlDbType.NVarChar, 100)
    param.Direction = ParameterDirection.Input
    param.Value = docuid
    cmd.Parameters.Add(param)
    'Open connection and fetch the data with reader
    conn.Open()
    Dim reader As SqlDataReader =
      cmd.ExecuteReader(CommandBehavior.CloseConnection)
    If reader.HasRows Then
        reader.Read()
        '
        Dim doctype As String = reader("doctype").ToString()
        Dim docname As String = reader("docname").ToString()
        '
        Response.Buffer = False
        Response.ClearHeaders()
        Response.ContentType = doctype
        Response.AddHeader("Content-Disposition",
                 "attachment; filename=" + docname)
        '
        'Code for streaming the object while writing
        Const ChunkSize As Integer = 1024
        Dim buffer() As Byte = New Byte(ChunkSize) {}
        Dim binary(reader("document")) As Byte
        Dim ms As New MemoryStream(binary)
        Dim SizeToWrite As Integer = ChunkSize
        For i As Integer = 0 To binary.GetUpperBound(0) - 1 Step i = i + ChunkSize
            If Not Response.IsClientConnected Then
                Return
            End If
            If i + ChunkSize >= binary.Length Then
                SizeToWrite = binary.Length - i
            End If
            Dim chunk(SizeToWrite) As Byte
            ms.Read(chunk, 0, SizeToWrite)
            Response.BinaryWrite(chunk)
            Response.Flush()
        Next
        Response.Close()
    End If
End Sub

Dim binary(reader("document")) As Byte

Dim blob() As Byte
        blob = reader.Item("document")

Protected Sub btnPDF_Click(sender As Object, e As EventArgs) Handles btnPDF.Click
    ' Request.QueryString["docid"].ToString(); 
    Dim docuid As String = "ba32bf45-1b5c-451a-969c-290dc2cf9073"
    'Connection and Parameters
    Dim param As SqlParameter = Nothing
    Dim conn As SqlConnection = New SqlConnection(
       ConfigurationManager.ConnectionStrings("menu").ToString())
    Dim cmd As New SqlCommand("sp_getdoc", conn)
    cmd.CommandType = CommandType.StoredProcedure
    param = New SqlParameter("@docuid", SqlDbType.NVarChar, 100)
    param.Direction = ParameterDirection.Input
    param.Value = docuid
    cmd.Parameters.Add(param)
    'Open connection and fetch the data with reader
    conn.Open()
    Dim reader As SqlDataReader =
      cmd.ExecuteReader(CommandBehavior.CloseConnection)
    If reader.HasRows Then
        reader.Read()
        '
        Dim doctype As String = reader("doctype").ToString()
        Dim docname As String = reader("docname").ToString()
        '
        Response.Buffer = False
        Response.ClearHeaders()
        Response.ContentType = doctype
        Response.AddHeader("Content-Disposition",
                "attachment; filename=" + docname)
        '
        'Code for streaming the object while writing
        Const ChunkSize As Integer = 1024
        Dim buffer() As Byte = New Byte(ChunkSize) {}
        Dim blob() As Byte
        blob = reader.Item("document")
        Dim ms As New MemoryStream(blob)
        Dim SizeToWrite As Integer = ChunkSize
        For i As Integer = 0 To blob.GetUpperBound(0) - 1
            If Not Response.IsClientConnected Then
                Return
            End If
            If i + ChunkSize >= blob.Length Then
                SizeToWrite = blob.Length - i
            End If
            Dim chunk(SizeToWrite) As Byte
            ms.Read(chunk, 0, SizeToWrite)
            Response.BinaryWrite(chunk)
            Response.Flush()
            i = i + ChunkSize
        Next i
        Response.Close()
    End If
End Sub


CallbackOnCollectedDelegate was detected
Message: A callback was made on a garbage collected delegate of type 'KeyLogger!KeyLogger.CallBackFunction+DelegateCallBack::Invoke'. This may cause application crashes, corruption and data loss. When passing delegates to unmanaged code, they must be kept alive by the managed application until it is guaranteed that they will never be called.

Option Strict Off
Option Explicit On
Module CallBackFunction
    '******************************************************************************************
    '     Sample for retrieving keystrokes  by use of the "kbLog32.dll"
    '                      (c) 2004 by Nadeem Afanah.
    '******************************************************************************************

    'CallBack function
    Delegate Sub DelegateCallBack(ByVal msg As Integer, ByVal wParam As Integer, ByVal lParam As Integer)

    Sub CallBack(ByVal msg As Integer, ByVal wParam As Integer, ByVal lParam As Integer)
        'here we track only WM_CHAR and WM_KEYDOWN
        If msg = WM_KEYDOWN Then
             ...    
        End If
    End Sub
End Module

Option Strict Off
Option Explicit On
Module Declarations
    '******************************************************************************************
    '     Sample for retrieving keystrokes  by use of the "kbLog32.dll"
    '                      (c) 2004 by Nadeem Afanah.
    '******************************************************************************************
    '******************************************************************************************
    'DLL declarations
    Public Declare Function StartLog Lib "kbLog32" (ByVal hWnd As Integer, ByVal lpFuncAddress As DelegateCallBack) As Integer

    Public Declare Sub EndLog Lib "kbLog32" ()

    '----------------------------------------------------------------------------------------
    Declare Function SetWindowPos Lib "user32" (ByVal hWnd As Integer, ByVal hWndInsertAfter As Integer, ByVal x As Integer, ByVal y As Integer, ByVal cx As Integer, ByVal cy As Integer, ByVal wFlags As Integer) As Integer
    Declare Function FindWindow Lib "user32"  Alias "FindWindowA"(ByVal lpClassName As String, ByVal lpWindowName As String) As Integer
    Declare Function FindWindowEx Lib "user32"  Alias "FindWindowExA"(ByVal hWnd1 As Integer, ByVal hWnd2 As Integer, ByVal lpsz1 As String, ByVal lpsz2 As String) As Integer
    '****************************************************************************************
    ' Keyboard messages
    Public Const WM_KEYUP As Short = &H101s
    Public Const WM_KEYDOWN As Short = &H100s
    Public Const WM_CHAR As Short = &H102s
    Public Const WM_SYSKEYDOWN As Short = &H104s
    Public Const WM_SYSKEYUP As Short = &H105s

    'SetWindowPos messages
    Public Const SWP_NOSIZE As Short = &H1s
    Public Const SWP_NOMOVE As Short = &H2s
    Public Const HWND_TOPMOST As Short = -1
    Public Const SWP_SHOWWINDOW As Short = &H40s
    '******************************************************************************************

End Module


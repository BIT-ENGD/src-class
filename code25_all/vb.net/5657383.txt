Private Sub My_BgWorker_DoWork(ByVal sender As Object, ByVal e As System.ComponentModel.DoWorkEventArgs) Handles My_BgWorker.DoWork
    For i As Integer = 0 To m_CountTo
        ' Has the background worker be told to stop?
        If My_BgWorker.CancellationPending Then
            ' Set Cancel to True
            'e.Cancel = True
            Exit For
        End If
        System.Threading.Thread.Sleep(1000) ' Sleep for 1 Second
        ' Report The progress of the Background Worker.
        My_BgWorker.ReportProgress(CInt((i / m_CountTo) * 100))
        SetLabelText_ThreadSafe(Me.lbl_Status, FormatPercent(i / m_CountTo, 2))
    Next
End Sub

' The delegate
Delegate Sub SetLabelText_Delegate(ByVal [Label] As Object, ByVal [text] As String)

' The delegates subroutine.
Private Sub SetLabelText_ThreadSafe(ByVal [Label] As Object, ByVal [text] As String)
    ' InvokeRequired required compares the thread ID of the calling thread to the thread ID of the creating thread.
    ' If these threads are different, it returns true.
    If [Label].InvokeRequired Then
        Dim MyDelegate As New SetLabelText_Delegate(AddressOf SetLabelText_ThreadSafe)
        Me.Invoke(MyDelegate, New Object() {[Label], [text]})
    Else
        [Label].Text = [text]
    End If
End Sub

Public Class Person
    Public height As Integer
    Public weight As Integer
    Public age As Integer
    Public sex As Integer
    Public Sub New(ByVal height As Integer, ByVal weight As Integer, ByVal age As Integer, ByVal sex As String)
        Me.height = height
        Me.weight = weight
        Me.age = age
        Me.sex = sex
    End Sub
End Class

Persons.Add(new person(180,210,28,"male"))

persons.add

Function LogOut(ByVal go As String) As ActionResult
    ActivityLogService.AddActivity(AuthenticationHelper.RetrieveAuthUser.ID, _
                                   IActivityLogService.LogType.UserLogout, _
                                   HttpContext.Request.UserHostAddress)
    ActivityLogService.SubmitChanges()
    'more stuff happens after this'
End Function

    Public Sub AddActivity(ByVal userid As Integer, ByVal activity As Integer, ByVal ip As String) Implements IActivityLogService.AddActivity
        Dim _activity As ActivityLog = New ActivityLog With {.Activity = activity,
                                                             .UserID = userid,
                                                             .UserIP = ip.IPAddressToNumber,
                                                             .ActivityDate = DateTime.UtcNow}

        ActivityLogRepository.Create(_activity)  ''#ERROR THROWN HERE
    End Sub

Public Interface IActivityLogService
    Sub AddActivity(ByVal userid As Integer, ByVal activity As Integer, ByVal ip As String)
    Function GetUsersLastActivity(ByVal UserID As Integer) As ActivityLog
    Sub SubmitChanges()

    ''' <summary> '
    ''' The type of activity done by the user '
    ''' </summary>
    ''' <remarks>Each int refers to an activity. There can be no duplicates or modifications  after this application goes live</remarks> '
    Enum LogType As Integer
        ''' <summary> '
        ''' A new session started '
        ''' </summary> '
        SessionStarted = 1
        ''' <summary> '
        ''' A new user is Added/Created '
        ''' </summary> '
        UserAdded = 2
        ''' <summary> '
        ''' User has updated their profile '
        ''' </summary> '
        UserUpdated = 3
        ''' <summary> '
        ''' User has logged into they system '
        ''' </summary> '
        UserLogin = 4
        ''' <summary> '
        ''' User has logged out of the system '
        ''' </summary> '
        UserLogout = 5
        ''' <summary> '
        ''' A new event has been added '
        ''' </summary> '
        EventAdded = 6
        ''' <summary> '
        ''' An event has been updated '
        ''' </summary> '
        EventUpdated = 7
        ''' <summary> '
        ''' An event has been deleted '
        ''' </summary> '
        EventDeleted = 8
        ''' <summary> '
        ''' An event has received a Up/Down vote '
        ''' </summary> '
        EventVoted = 9
        ''' <summary> '
        ''' An event has been closed '
        ''' </summary> '
        EventCloseVoted = 10
        ''' <summary> '
        ''' A comment has been added to an event '
        ''' </summary> '
        CommentAdded = 11
        ''' <summary> '
        ''' A comment has been updated '
        ''' </summary> '
        CommentUpdated = 12
        ''' <summary> '
        ''' A comment has been deleted '
        ''' </summary> '
        CommentDeleted = 13
        ''' <summary> '
        ''' An event or comment has been reported as spam '
        ''' </summary> '
        SpamReported = 14
    End Enum
End Interface

Public Class ActivityLogRepository : Implements IActivityLogRepository
    Private dc As MyAppDataContext
    Public Sub New()
        dc = New MyAppDataContext
    End Sub

    ''' <summary> '
    ''' Adds the activity. '
    ''' </summary> '
    ''' <param name="activity">The activity.</param>
    Public Sub Create(ByVal activity As ActivityLog) Implements IActivityLogRepository.Create
        dc.ActivityLogs.InsertOnSubmit(activity)
    End Sub

    ''' <summary> '
    ''' Gets the activities. '
    ''' </summary> '
    ''' <returns>results AsQueryable</returns>
    Public Function Read() As IQueryable(Of ActivityLog) Implements IActivityLogRepository.Read
        Dim activity = (From a In dc.ActivityLogs
                        Order By a.ActivityDate Descending
                        Select a)
        Return activity.AsQueryable
    End Function

    ''' <summary> '
    ''' Submits the changes. '
    ''' </summary> '
    Public Sub SubmitChanges() Implements IActivityLogRepository.SubmitChanges
        dc.SubmitChanges()
    End Sub
End Class

2 parameters) +409
     System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary
1 continuation) +436
     System.Web.Mvc.<>c__DisplayClass17.<InvokeActionMethodWithFilters>b__14() +61
     System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList
2 parameters) +305
     System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName) +830
     System.Web.Mvc.Controller.ExecuteCore() +136
     System.Web.Mvc.ControllerBase.Execute(RequestContext requestContext) +232
     System.Web.Mvc.ControllerBase.System.Web.Mvc.IController.Execute(RequestContext requestContext) +39
     System.Web.Mvc.<>c__DisplayClassb.<BeginProcessRequest>b__5() +68
     System.Web.Mvc.Async.<>c__DisplayClass1.<MakeVoidDelegate>b__0() +44
     System.Web.Mvc.Async.<>c__DisplayClass8

Public Class IncidentManagerService
'Fakes
Private _fakeRepoFactory As IRepoFactory
Private _incidentRepo As FakeIncidentRepo
Private _incidentDefinitionRepo As FakeIncidentDefinitionRepo
Private _incManager As IncidentManager.Session

'Real
Private _started As Boolean = False
Private _repoFactory As New NHibernateRepoFactory
Private _psalertsEventRepo As IPsalertsEventRepo = _repoFactory.GetPsalertsEventRepo()
Protected Overrides Sub OnStart(ByVal args() As String)
    ' Add code here to start your service. This method should set things
    ' in motion so your service can do its work.
    If Not _started Then
        Startup()
        _started = True
    End If

End Sub

Protected Overrides Sub OnStop()

    'Tear down class variables in order to ensure the service stops cleanly
    _incManager.Dispose()
    _incidentDefinitionRepo = Nothing
    _incidentRepo = Nothing
    _fakeRepoFactory = Nothing
    _repoFactory = Nothing

End Sub

Private Sub Startup()
    Dim incidents As IList(Of Incident) = Nothing
    Dim incidentFactory As New IncidentFactory

    incidents = IncidentFactory.GetTwoFakeIncidents
    _repoFactory = New NHibernateRepoFactory
    _fakeRepoFactory = New FakeRepoFactory(incidents)
    _incidentRepo = _fakeRepoFactory.GetIncidentRepo
    _incidentDefinitionRepo = _fakeRepoFactory.GetIncidentDefinitionRepo

    'Start an incident manager session
    _incManager = New IncidentManager.Session(_incidentRepo, _incidentDefinitionRepo, _psalertsEventRepo)
    _incManager.Start()

End Sub

End Class


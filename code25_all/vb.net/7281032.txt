Private SpeedValue As Integer
<XmlIgnore()>
Public Property Speed() As Short
    Get
        Return SpeedValue 
    End Get
    Set(ByVal value As Short)
        SpeedValue = value
        NotifyPropertyChanged("Speed")
    End Set
End Property

Public Event PropertyChanged As PropertyChangedEventHandler _
    Implements INotifyPropertyChanged.PropertyChanged

Private Sub NotifyPropertyChanged(ByVal info As String)
    RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(info))

End Sub

Dim b As Binding = New Binding()
    b.Source = theVehicle
    b.UpdateSourceTrigger = UpdateSourceTrigger.PropertyChanged
    b.Path = New PropertyPath(theVehicle.Speed)
    b.Path = New PropertyPath("Speed")
    b.Converter = New SpeedValueToPicturePathConverter()
    b.ConverterParameter = GetType(Vehicle)
    img_fonctionnement.SetBinding(Image.SourceProperty, b)

' theConfig is a singleton which represent my XML config file deserialized
' Getting all vehicles declared in this file works by doing this
For Each vehic As Vehicle In theConfig.Vehicles
        Dim realTimeSpeed = server.Read("speed") 'reading the speed on some distant server - don't discuss this, it works fine
        If (Not vehic.Speed = realTimeSpeed) Then
            vehic.Speed = realTimeSpeed
        End If

    Next

'This actually works, a tab is added for each vehicle
For Each vehic As Vehicle In theConfig.Vehicles
        Dim vehicTabItem As TabItem = New TabItem()
        vehicTabItem.Header = vehic.Description
        If (TypeOf vehic Is Car) Then
        'Adding the CarView UserControl of my own
            vehicTabItem.Content = New CarView(DirectCast(vehic, Car))
            TabControl1.Items.Add(vehicTabItem)
        ElseIf (TypeOf vehic Is Plane) Then
            vehicTabItem.Content = New PlaneView(DirectCast(vehic, Plane))
            TabControl1.Items.Add(vehicTabItem)

        End If

    Next

Public Class CarView

Private theCar As Car

Public Sub New(ByVal theCar As Car)

    InitializeComponent()

    Me.theCar = theCar 

    Dim b As Binding = New Binding("Speed")
    b.Source = theCar
    b.Converter = New SpeedValueToPicturePathConverter()
    b.ConverterParameter = GetType(Vehicle)
    'img_fonctionnement is created in the graphic designer in Visual Studio in xaml
    'Remember, this binding works whn I use a static property just for testing
    img_fonctionnement.SetBinding(Image.SourceProperty, b)

End Sub

img_fonctionnement

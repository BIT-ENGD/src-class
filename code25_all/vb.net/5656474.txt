<asp:Content>
  <script type="text/javascript">
  // a standard home-grown Ajax javascript method
  function ajaxfunction() {
    var ajaxObj = getAjaxObj(); // does the usual browser-detection
    if (ajaxObj) {
      ajaxObj.open("GET", "Testy.aspx", true);
      ajaxObj.setRequestHeader("IsAjaxRequest", "true");
      ajaxObj.send();
      ajaxObj.onreadystatechange = function() {
        if (ajaxObj.readyState == 4) {
          document.getElementById("testytext").appendChild(document.createTextNode(ajaxObj.responseText));
        }
      }
    }
  }
  </script>

  ... other unrelated html, ASP controls, etc...

  <input id="testybutton" type="button" value="baroo" onclick="ajaxfunction()" />
  <div id="testytext"></div>

</asp:Content>

Partial Public Class Testy
  Inherits System.Web.UI.Page
  Implements System.Web.IHttpHandler

  ...code for an ordinary (non-Ajax) request is in the middle here...

  ' Now I have code for Ajax requests
  Overrides Sub ProcessRequest(ByVal context As HttpContext)
    If context.Request.Headers("IsAjaxRequest") = "true" Then
      context.Response.ContentType = "text/plain"
      context.Response.Write("Hello World!")
    Else
      MyBase.ProcessRequest(context)
    End If
  End Sub

  Overloads ReadOnly Property IsReusable() As Boolean
    Get
      Return False
    End Get
  End Property
End Class


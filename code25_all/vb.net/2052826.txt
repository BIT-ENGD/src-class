SiteMapProvider
AuthorizeAttribute
SiteMapProvider.IsAccessibleToUser(context, node)
AuthorizeAttribute.AuthorizeCore(context)
AuthorizeCore()
context
HttpContextBase
IsAccessibleToUser()
HttpContext
If Not SiteMap.Provider.IsAccessibleToUser(context, SiteMap.CurrentNode) Then

Public Class CustomValidateAuthorization : Inherits AuthorizeAttribute
    Public Sub New()

    End Sub

    Protected Overrides Function AuthorizeCore(ByVal httpContext As System.Web.HttpContextBase) As Boolean
        If Not Global.Page.IsAccessibleToUser(httpContext.User) Then
            //Exception or redirect (in exception)?
            // or return false?
        End If

        Return True
    End Function
End Class

Public Class CustomSiteMapProvider : Inherits StaticSiteMapProvider
Public Overrides Function IsAccessibleToUser(ByVal context As System.Web.HttpContext, ByVal node As System.Web.SiteMapNode) As Boolean
    Dim p As New BLL.Page
    p.LoadFromSiteMapNode(node)

    Return p.IsAccessibleToUser(context.User)
End Function
End Class


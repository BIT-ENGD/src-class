Private Function getClientSheetNames(Optional ByVal type As String = "all") As List(Of String)
    If type = "extra" Then
        Return clientExtraSheetNames
    End If
    Dim prev, curr As New List(Of String)
    For Each name In clientMonthlySheetNames
        curr.Add(name + " (" + currMonth + ")")
    Next name
    If type = "currMonth" Then
        Return curr
    End If
    For i = 1 To clientMonthlySheetNames.Count - 1
        prev.Add(clientMonthlySheetNames(i) + " (" + prevMonth + ")")
    Next
    If type = "prevMonth" Then
        Return prev
    End If
    If type = "monthly" Then
        Return curr.Union(prev).ToList
    End If
    Return clientExtraSheetNames.Union(curr.Union(prev)).ToList
End Function

Private Function getDevSheetNames(Optional ByVal type As String = "all") As List(Of String)
    If type = "extra" Then
        Return devExtraSheetNames
    End If
    Dim sheetNames, prev, curr As New List(Of String)
    For Each name In devMonthlySheetNames
        curr.Add(name + " (" + currMonth + ")")
    Next name
    If type = "currMonth" Then
        Return curr
    End If
    For Each name In devMonthlySheetNames
        prev.Add(name + " (" + prevMonth + ")")
    Next name
    If type = "prevMonth" Then
        Return prev
    End If
    If type = "monthly" Then
        Return curr.Union(prev).ToList
    End If
    sheetNames.Add(devExtraSheetNames(0))
    sheetNames.AddRange(curr.Union(prev).ToList)
    sheetNames.AddRange(devExtraSheetNames.GetRange(1, devExtraSheetNames.Count - 1))
    Return sheetNames
End Function


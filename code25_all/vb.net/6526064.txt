<System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)> _
Public Structure RepairInfoEx
    Public repair As RepairInfo
    Public repairRank As UShort
End Structure

<System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)> _
Public Structure RootCauseInfo
    <System.Runtime.InteropServices.MarshalAsAttribute(System.Runtime.InteropServices.UnmanagedType.LPWStr)> _
    Public pwszDescription As String
    Public rootCauseID As GUID
    Public rootCauseFlags As UInteger
    Public networkInterfaceID As GUID
    Public pRepairs As IntPtr
    Public repairCount As UShort
End Structure

    <System.Runtime.InteropServices.DllImportAttribute("ndfapi.dll", EntryPoint:="NdfDiagnoseIncident", CallingConvention:=System.Runtime.InteropServices.CallingConvention.StdCall)> _
    Public Function NdfDiagnoseIncident(<System.Runtime.InteropServices.InAttribute()> ByVal Handle As System.IntPtr, <System.Runtime.InteropServices.OutAttribute()> ByRef RootCauseCount As UInteger, ByRef RootCauses As IntPtr, ByVal dwWait As Integer, ByVal dwFlags As UInteger) As Integer
    End Function

    Dim rcInfoPtrToArray As IntPtr = Nothing
    Dim intRootCauseInfoSize As Integer = Marshal.SizeOf(GetType(RootCauseInfo))
    Dim intRepairInfoExSize As Integer = Marshal.SizeOf(GetType(RepairInfoEx))
    If HResult = 0 Then
        HResult = NdfDiagnoseIncident(ndfHandle, rootCauseCount, rcInfoPtrToArray, NativeConstants.INFINITE, 0)
        If rootCauseCount > 0 Then
            For i = 0 To rootCauseCount - 1 
                Dim rootCausePtr As IntPtr = New IntPtr(rcInfoPtrToArray.ToInt32 + intRootCauseInfoSize * i)
                Dim causeObj As RootCauseInfo = CType(Marshal.PtrToStructure(rootCausePtr, GetType(RootCauseInfo)), RootCauseInfo)
                Dim pRepairs(causeObj.repairCount) As IntPtr
                Marshal.Copy(causeObj.pRepairs, pRepairs, 0, causeObj.repairCount)
                For Each pRepair As IntPtr In pRepairs 
                    Dim repair As RepairInfoEx = CType(Marshal.PtrToStructure(pRepair, GetType(RepairInfoEx)), RepairInfoEx)
                    MsgBox(repair.repair.pwszDescription)
                Next
            Next
        End If
    End If

Dim rootCausePtr As IntPtr = New IntPtr(rcInfoPtrToArray.ToInt32 + intRootCauseInfoSize * i)

Dim repairInfoExPtr As IntPtr = New IntPtr(causeObj.pRepairs.ToInt32 + intRepairInfoExSize * j)

Dim repair As RepairInfoEx = CType(Marshal.PtrToStructure(repairInfoExPtr, GetType(RepairInfoEx)), RepairInfoEx)


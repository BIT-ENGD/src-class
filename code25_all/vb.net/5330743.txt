Public Function GetAllUsers(ByVal ldapServerName As String) As Hashtable
    'To retrieve list of all  LDAP users

    'This function returns HashTable
    _ldapServerName = ldapServerName

    Dim sServerName As String = "mail"

    Dim oRoot As DirectoryEntry = New DirectoryEntry("LDAP://" & ldapServerName & _
          "/ou=People,dc=mydomainname,dc=com")

    Dim oSearcher As DirectorySearcher = New DirectorySearcher(oRoot)
    Dim oResults As SearchResultCollection
    Dim oResult As SearchResult
    Dim RetArray As New Hashtable()

    Try

        oSearcher.PropertiesToLoad.Add("uid")
        oSearcher.PropertiesToLoad.Add("givenname")
        oSearcher.PropertiesToLoad.Add("cn")
        oResults = oSearcher.FindAll

        For Each oResult In oResults

            If Not oResult.GetDirectoryEntry().Properties("cn").Value = "" Then
                RetArray.Add(oResult.GetDirectoryEntry().Properties("uid").Value, _
                  oResult.GetDirectoryEntry().Properties("cn").Value)
            End If

        Next

    Catch e As Exception

        'MsgBox("Error is " & e.Message)
        Return RetArray

    End Try

    Return RetArray

End Function

ldapServerName
dc=mydomainname
_ldapServerName = ldapServerName
 Error 14 '_ldapServerName' is not declared. It may be inaccessible due to its protection level.

    ' create a domain context for your default domain
    Dim ctx As New PrincipalContext(ContextType.Domain)

    ' define a "query-by-example" to search for
    Dim searchExample As Principal = New UserPrincipal(ctx)

    ' define the principal searcher, based on that example principal
    Dim ps As New PrincipalSearcher(searchExample)

    ' loop over all principals found by the searcher
    For Each p As Principal In ps.FindAll()
        ' do whatever you want to do with the principals
        Console.WriteLine("Type: {0} / Name: {1}", p.StructuralObjectClass, p.Name)
    Next

ldap://mydomainhere.com/ou=Users
 ldap://mydomainhere.com

LDAP

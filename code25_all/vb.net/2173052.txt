Public Function EncryptBytes(ByVal pass As String, ByVal bytes() As Byte)

    Dim myRijndael As New RijndaelManaged
    myRijndael.Padding = PaddingMode.Zeros
    myRijndael.KeySize = 256
    myRijndael.BlockSize = 256

    Dim encrypted() As Byte
    Dim key() As Byte = CreateKey(pass)
    Dim IV() As Byte = CreateIV(pass)

    Dim encryptor As ICryptoTransform = myRijndael.CreateEncryptor(key, IV)

    Dim msEncrypt As New MemoryStream()
    Dim csEncrypt As New CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write)

    csEncrypt.Write(bytes, 0, bytes.Length)
    csEncrypt.FlushFinalBlock()

    encrypted = msEncrypt.ToArray()

    Return encrypted

End Function

Public Function DecryptBytes(ByVal pass As String, ByVal bytes() As Byte)

    Dim myRijndael As New RijndaelManaged
    myRijndael.Padding = PaddingMode.Zeros
    myRijndael.KeySize = 256
    myRijndael.BlockSize = 256

    Dim key() As Byte = CreateKey(pass)
    Dim IV() As Byte = CreateIV(pass)

    Dim decryptor As ICryptoTransform = myRijndael.CreateDecryptor(key, IV)

    Dim fromEncrypt() As Byte = New Byte(bytes.Length) {}

    Dim msDecrypt As New MemoryStream(bytes)
    Dim csDecrypt As New CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read)

    csDecrypt.Read(fromEncrypt, 0, fromEncrypt.Length)

    Return fromEncrypt

End Function

Private Function CreateKey(ByVal strPassword As String) As Byte()
    Dim chrData() As Char = strPassword.ToCharArray

    Dim intLength As Integer = chrData.GetUpperBound(0)

    Dim bytDataToHash(intLength) As Byte

    For i As Integer = 0 To chrData.GetUpperBound(0)
        bytDataToHash(i) = CByte(Asc(chrData(i)))
    Next

    Dim SHA512 As New System.Security.Cryptography.SHA512Managed

    Dim bytResult As Byte() = SHA512.ComputeHash(bytDataToHash)

    Dim bytKey(31) As Byte

    For i As Integer = 0 To 31
        bytKey(i) = bytResult(i)
    Next

    Return bytKey

End Function

Private Function CreateIV(ByVal strPassword As String) As Byte()
    Dim chrData() As Char = strPassword.ToCharArray

    Dim intLength As Integer = chrData.GetUpperBound(0)

    Dim bytDataToHash(intLength) As Byte

    For i As Integer = 0 To chrData.GetUpperBound(0)
        bytDataToHash(i) = CByte(Asc(chrData(i)))
    Next

    Dim SHA512 As New System.Security.Cryptography.SHA512Managed

    Dim bytResult As Byte() = SHA512.ComputeHash(bytDataToHash)

    Dim bytIV(31) As Byte

    For i As Integer = 32 To 47
        bytIV(i - 32) = bytResult(i)
    Next

    Return bytIV

End Function


Try
    If Not SiteContent.CurrentUser(False) Is Nothing Then
        If Not SiteContent.CurrentUser(False).IsAdministrator OrElse SiteVariables.CustomerMode Then
            SiteContent.PageViewManager.Create(New List(Of Control))
        End If
    Else
        SiteContent.PageViewManager.Create(New List(Of Control))
    End If
Catch ex As Heritage.Web.Content.Items.Exceptions.ExceptionGroup
     My.Response.Write(ex.Message & "<br />" & ex.StackTrace & "<br />")
End Try

Public Overridable Sub CheckValidity()

    'If the item is recycled then return true'

    If IsRecycled() Then
        Exit Sub
    End If

    'ExceptionGroup to store all exceptions which are thrown due to invalid data.'

    Dim ExceptionGroup As New Exceptions.ExceptionGroup
    Try

        'Checks if the item already exists'

        Exists()
    Catch ex As Exception
        'Add any exception as a result of this function to the ExceptionGroup'

        ExceptionGroup.AddException(ex)
    End Try

    'Check each attribute - add any exception which occurs as a result of validating their values to the ExceptionGroup'

    For Each Attribute As Items.Attribute In GetAttributes
        If TypeOf Attribute Is StringAttribute Then
            Dim StringAttribute As StringAttribute = Attribute
            Try
                If Not StringAttribute.Validate(StringAttribute.Value) Then Throw New Exceptions.ItemExceptions.RequiredFieldException(StringAttribute.Name)
            Catch ex As Exception
                ExceptionGroup.AddException(ex)
            End Try
        ElseIf TypeOf Attribute Is IntegerAttribute Then
            Dim IntegerAttribute As IntegerAttribute = Attribute
            Try
                If Not IntegerAttribute.Validate(IntegerAttribute.Value) Then Throw New Exceptions.ItemExceptions.RequiredFieldException(IntegerAttribute.Name)
            Catch ex As Exception
                ExceptionGroup.AddException(ex)
            End Try
        ElseIf TypeOf Attribute Is DateTimeAttribute Then
            Dim DateTimeAttribute As DateTimeAttribute = Attribute
            Try
                If Not DateTimeAttribute.Validate(DateTimeAttribute.Value) Then Throw New Exceptions.ItemExceptions.InvalidFormatException(DateTimeAttribute.Name)
            Catch ex As Exception
                ExceptionGroup.AddException(ex)
            End Try
        End If
    Next

    'Rollback the transaction if the ExceptionGroup contains any Exceptions'

    If ExceptionGroup.Exceptions.Count > 0 Then
        RollbackTransaction()
        Throw ExceptionGroup
    End If
End Sub


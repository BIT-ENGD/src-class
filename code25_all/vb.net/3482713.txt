sender As Object, e As EventArgs
sender
EventArgs
Announce_Events()
Triggered_Event()
Public Sub Announce_Events(event_name As String)

Dim obj_type = _a_specific_object.GetType()
Dim obj_event_info = obj_type.GetEvent(event_name, BindingFlags.Instance OR BindingFlags.Public)

Dim obj_event_delegate As [Delegate] = [Delegate].CreateDelegate(obj_event_info.EventHandlerType, Me, "Triggered_Event")
obj_event_info.AddEventHandler(_a_specific_object, obj_event_delegate)
obj_event_delegate = Nothing

End Sub


Private Sub Triggered_Event(sender As Object, e As EventArgs)

' Handle triggered event here

End Sub

Public Sub Announce_Events(event_name As String)

Dim obj_type = _a_specific_object.GetType()
Dim obj_event_info = obj_type.GetEvent(event_name, BindingFlags.Instance OR BindingFlags.Public)
Dim my_event_handler as EventHandler = Sub (sender As Object, e As Object)
    ' do something with sender, e, and event_name variables here '
    End Sub
obj_event_info.AddEventHandler(_a_specific_object, my_event_handler)

End Sub

Public Sub Announce_Events(event_name As String)

Dim obj_type = _a_specific_object.GetType()
Dim obj_event_info = obj_type.GetEvent(event_name, BindingFlags.Instance OR BindingFlags.Public)
Dim e_worker as new Event_Worker(event_name)
Dim obj_event_delegate = [Delegate].CreateDelegate(obj_event_info.EventHandlerType, e_worker, "Triggered_Event")
obj_event_info.AddEventHandler(_a_specific_object, obj_event_delegate)

End Sub


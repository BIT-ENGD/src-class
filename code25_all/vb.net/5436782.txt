 For i As Integer = 0 To fileLists.Count - 1
                   Do
                Try
                  If Not completeList.Contains(fileLists(i).ToString) AndAlso fileLists(i).EndsWith("xml") Then

                        If fileLists(i).Contains("Fa") Then 
                            inputFile = New StreamReader(fileLists(i))
                            data = String.Empty
                            infile = fileLists(i).ToString
                            swriter.WriteLine(infile.ToString)
                            swriter.Flush()
                            Dim objFileInfo As New FileInfo(fileLists(i))
                            fileDate = objFileInfo.CreationTime
                              Dim length As Integer = objFileInfo.Length
                                data = inputFile.ReadToEnd
                                If Not data Is Nothing Then
                                    parsingTools.xmlLoad(data)
                                    tempList.Add(fileLists(i))
                                    completeList.Add(fileLists(i))
                                End If
                                inputFile.DiscardBufferedData()
                            End If
                        End If
                    End If

        manager.AddNamespace("x", "http://www.w3.org/2005/Atom")
        manager.AddNamespace("a", "http://activitystrea.ms/spec/1.0/")
        Dim nodecount As Integer = xmlParser.getNodesCount(navigator, "x:entry", manager)
        For i As Integer = 1 To nodecount
            statid = xmlParser.XPathFind(navigator, "x:entry[" & i & "]/x:id", manager)
            contentDate = xmlParser.XPathFind(navigator, "x:entry[" & i & "]/x:published", manager)
            template = xmlParser.XPathFind(navigator, "x:entry[" & i & "]/x:title", manager)
            title = xmlParser.XPathFind(navigator, "x:entry[" & i & "]/x:source/x:title", manager)
            ctext = xmlParser.XPathFind(navigator, "x:entry[" & i & "]/x:summary", manager)
            htext = xmlParser.XPathFind(navigator, "x:entry[" & i & "]/a:object/x:content", manager)
            author = xmlParser.XPathFind(navigator, "x:entry[" & i & "]/x:author/x:name", manager)
            authorUri = xmlParser.XPathFind(navigator, "x:entry[" & i & "]/x:author/x:uri", manager)
            avatarUrl = xmlParser.XPathFind(navigator, "x:entry[" & i & "]/a:author/x:link[@rel='avatar']/@href", manager)
        Next


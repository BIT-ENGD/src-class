Public Class AnimatedPictureBox
    Inherits PictureBox

    Private WithEvents Timer As New Timers.Timer
    Public Property Interval As Double
        Get
            Return Timer.Interval
        End Get
        Set(ByVal value As Double)
            Timer.Interval = value
        End Set
    End Property    

    Public ImageList As New List(Of Image)
    Private NextImageIndex As Integer = 0

    Public Sub New(ByVal Interval As Integer)
        MyBase.New()
        Timer = New Timers.Timer
        Me.Interval = Interval
        Me.SizeMode = PictureBoxSizeMode.StretchImage
        Me.Visible = True
    End Sub
    Public Sub New()
        Me.New(100)
    End Sub

    Public Sub BeginAnimation(ByVal [Loop] As Boolean)
        Timer.Start()
    End Sub
    Public Sub BeginAnimation()
        BeginAnimation([Loop]:=True)
    End Sub
    Public Sub StopAnimation()
        Timer.Stop()
    End Sub

    Private Sub Timer_Elapsed(ByVal sender As Object, ByVal e As System.Timers.ElapsedEventArgs) Handles Timer.Elapsed
        InvokeControl(Me, _
            Sub(x)
                x.Image = x.ImageList(NextImageIndex)
                x.NextImageIndex += 1
                If x.NextImageIndex > x.ImageList.Count - 1 Then x.NextImageIndex = 0
            End Sub)
    End Sub
End Class

Private Sub InvokeControl(Of T As Control)(ByVal Control As T, ByVal Action As Action(Of T))
    If Control.InvokeRequired Then
        Try
            Control.Invoke(New Action(Of T, Action(Of T))(AddressOf InvokeControl), New Object() {Control, Action})
        Catch ex As Exception
            '..Handle the error..
        End Try
    Else
        Action(Control)
    End If
End Sub


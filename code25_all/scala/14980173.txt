class MyScalaClass {
   def instanceOfSomeType: SomeType = ...

   def consume(processor: PartialFunction[SomeType, Unit]) {
      processor.lift(instanceOfSomeType)
   }
}

  MyScalaClass myScalaClass = new MyScalaClass();

  PartialTransformer<SomeType, Unit> fn = new PartialTransformer<SomeType, Unit>() {
     @Override public boolean isDefinedAt(SomeType input) { return true; }
     @Override protected Unit transform0(SomeType input) { return null; }
  };

  PartialFunction<SomeType, Unit> partial = PartialFunctionBridge$.MODULE$.fromPartialTransformer(fn);

  myScalaClass.consume(partial);

consumeInt(scala.PartialFunction<SomeType,java.lang.Object>) in MyScalaClass cannot be applied
to        (scala.PartialFunction<SomeType,scala.Unit>)


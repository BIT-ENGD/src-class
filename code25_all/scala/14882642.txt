mapValues
case class thing(id: Int)
val rand = new java.util.Random
val distribution = Map(thing(0) -> 0.5, thing(1) -> 0.5)
val perturbed = distribution mapValues { _ + 0.1 * rand.nextGaussian }
val sumProbs = perturbed.map{_._2}.sum
val newDistribution = perturbed mapValues { _ / sumProbs }

mapValues
view
_ + 0.1 * rand.nextGaussian
perturbed
distribution map { case (s, p) => (s, p + 0.1 * rand.nextGaussian) }
mapValues
view
Map

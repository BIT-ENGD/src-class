object NameResolver extends Actor{
    import java.net.{InetAddress, UnknownHostException}

    def act(){
        react{
            case(name:String, actor:Actor) =>
                actor ! getIp(name)
                act()
            case "EXIT" => 
                println("Name resolver is exiting.")//quit
            case msg =>
                println("Unhandled message: "+msg)
                act()
        }
    }

    def getIp(name:String):Option[InetAddress]={
        try{
            Some(InetAddress.getByName(name))
        } catch {
            case _ : UnknownHostException => None
        }
    }

}

NameResolver ! ("http://stackoverflow.com", self)

scala> NameResolver ! ("http://stackoverflow.com", self)
<console>:8: error: too many arguments for method !: (msg: Any)Unit
              NameResolver ! ("http://stackoverflow.com", self)


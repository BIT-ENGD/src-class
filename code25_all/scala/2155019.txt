type Time = Int
type Item = (Time, Whatever)

implicit def order(thisItem: Item): Ordered[Item] =
    new Ordered[Item] {
      override def compare(thatItem: Item) = {
        val result = thisItem._1 compareTo thatItem._1
        -result
      }
    }

error: type mismatch;
 found   : SimulationMode.this.Time
 required: ?{val compareTo: ?}
Note that implicit conversions are not applicable because they are ambiguous:
 both method int2Integer in object Predef of type (Int)java.lang.Integer
 and method intWrapper in object Predef of type (Int)scala.runtime.RichInt
 are possible conversion functions from SimulationMode.this.Time to ?{val compareTo: ?}
        val result = thisItem._1 compareTo thatItem._1
                              ^


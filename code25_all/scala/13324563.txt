import sbt._
import Keys._
import PlayProject._
import com.typesafe.sbteclipse.core.EclipsePlugin.EclipseKeys

/*
 * This contains a data project with models. It also contains a frontend web
 * app. Finally, there is a backend project. The backend project is just a copy
 * of the fronend project for demonstration purposes, but in real life may
 * contain heavy data batch processing jobs or similar. Both projects rely on
 * the same database and so must both depend on the data project which contains
 * the models. 
 */
object ApplicationBuild extends Build {

  val appName         = "example"
  val appVersion      = "1.0-SNAPSHOT"

  val dataDependencies = Seq(
  )

  val frontendDependencies = Seq(
  )

  val backendDependencies = Seq(
  )

  val dataProject = PlayProject(appName + "-data", appVersion, dataDependencies, path = file("data"), mainLang = JAVA)

  val frontend = PlayProject(appName + "-frontend", appVersion, frontendDependencies, path = file("frontend"), mainLang = JAVA).dependsOn(dataProject).aggregate(dataProject)

  val backend = PlayProject(appName + "-backend", appVersion, backendDependencies, path = file("backend"), mainLang = JAVA).dependsOn(dataProject).aggregate(dataProject)

  val main = PlayProject(appName) dependsOn(frontend,backend) aggregate (frontend,backend)

  override def settings = super.settings ++ Seq(EclipseKeys.skipParent in ThisBuild := false)
}


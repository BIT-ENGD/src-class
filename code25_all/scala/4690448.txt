scala> trait Friendly {
     |   def greet() { println("hi there") }
     | }
defined trait Friendly

scala> object Friendly extends Friendly
defined module Friendly

scala> object ServiceConsumer {
     |  def myService: Friendly = myServiceInjected.getOrElse(throw new RuntimeException("dependency not injected"))
     |  var myServiceInjected: Option[Friendly] = None
     | }
defined module ServiceConsumer

scala> class ServiceConsumer {
     |  def callService() {
     |    ServiceConsumer.myService.greet()
     |  }
     | }
defined class ServiceConsumer

scala> object Configuration { 
     |  def init() {
     |   ServiceConsumer.myServiceInjected = Some(Friendly)
     |  }
     | }
defined module Configuration

scala> Configuration.init

scala> val c = new ServiceConsumer
c: ServiceConsumer = ServiceConsumer@292e2fba

scala> c.callService()
hi there


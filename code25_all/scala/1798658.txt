List[Option[T]]
List[T]
val l = List(Some("Hello"), None, Some("World"))

List(Hello, World)

l flatMap( o => o)
l flatMap identity[Option[String]]
l flatMap ( x => Option.option2Iterable(identity(x)))
for(x <- l; y <- x) yield y

Option[T]
Iterable[T]
l flatMap identity

<console>:6: error: type mismatch;
 found   : A
 required: Iterable[?]
       l flatMap identity


override def onCreate(savedInstanceState: Bundle) {
    super.onCreate(savedInstanceState)   
    competitionSetupDialogFragment.show(getFragmentManager(), HomeScreenActivity.CompetitionDialog)
  }  

  override def onStart() {
    super.onStart
    resourceHelper.setActivity(this)
  }

class CompetitionSetupDialogFragment extends DialogFragment {
  @Inject
  var competitionSetupDialogHandler: CompetitionSetupDialogHandler = null
  @Inject
  var resourceHelper: ResourceHelper = null

  override def onCreateDialog(savedInstanceState: Bundle): Dialog = {
    val builder = new AlertDialog.Builder(getActivity())
    builder.setMessage(getString(R.string.competitionSetupDialogMessage))
      .setCancelable(false)
      .setView(getActivity().getLayoutInflater.inflate(R.layout.competition_setup, null))
      .setNegativeButton(R.string.cancel, new OnClickListener {
        def onClick(dialog: DialogInterface, which: Int) {
          dismiss()
        }
      })
      .setPositiveButton(R.string.create, new OnClickListener {
        def onClick(dialog: DialogInterface, which: Int) {
          val competitionNameInput = resourceHelper.findViewById(R.id.competitionNameInput).asInstanceOf[EditText]
          val numberOfPlayersInput = resourceHelper.findViewById(R.id.numberOfPlayersInput).asInstanceOf[EditText]
          val numberOfSubsInput = resourceHelper.findViewById(R.id.numberOfSubsInput).asInstanceOf[EditText]
          val lengthOfHalfInput = resourceHelper.findViewById(R.id.lengthOfHalfInput).asInstanceOf[EditText]
          competitionSetupDialogHandler.retrieveValuesAndSave(competitionNameInput, numberOfPlayersInput, numberOfSubsInput, lengthOfHalfInput)
        }
      })

    builder.create()
  }
}

public View findViewById(int viewID) {
        return activity.findViewById(viewID);
    }


package aicore2.worker.scheduling
    object Priority extends Enumeration with App {
      type Priority = Value

      /**
       * Action is performed immediately, any running action is interrupted
       * and action queue is cleared
       */
      val ACHTUNG = Value

      /**
       * Action is performed before all LOW, NORMAL and HIGHER actions
       */
      val HIGH = Value

      /**
       * Action is performed before all NORMAL and LOW actions
       */
      val HIGHER = Value

      /**
       * Standart priority for most actions
       */
      val NORMAL = Value

      /**
       * Action is added to the end of the queue. Desired for non-critical maintenance actions
       */
      val LOW= Value


      Priority.values  foreach println
    }

package aicore2.worker.scheduling

import org.junit.Assert._
import org.junit.Test
import aicore2.worker.scheduling.Priority._

class PriorityTypeTests {

  @Test
  def toStringTest()  {
    //Priority.values  foreach println
    //Priority.main(Array("2"))
    assertEquals(HIGH.toString(), "HIGH")
  }

  @Test
  def stringParseTest() {
     assertEquals(Priority.withName("HIGH"), HIGH)
  }

}


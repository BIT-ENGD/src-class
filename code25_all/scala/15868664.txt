  trait Animal {
    type Species
  }

def breed(a: Animal, b: Animal)(implicit evidence: a.Species =:= b.Species) = ???

class Bed(a: Animal, b: Animal)(implicit evidence: a.Species =:= b.Species)

  trait Bed {
    type T
    def a: Animal { type Species = T }
    def b: Animal { type Species = T }
  }

  object Bed {

    def apply(a1: Animal, b1: Animal)(implicit ev: a1.Species =:= b1.Species) = new Bed {
      type T = b1.Species
      def a = a1  // this line won't compile,  as the compiler can't see the two species are equal ?
      def b = b1 
    }

  }


case class Foo(x : Int)

case class Bar(x : Int)

case class Converter(y : Int) {
    def convert(x : Int) = x + y
}

implicit def fooFromBar(b : Bar)(implicit c : Converter) = Foo(c convert (b x))

def roundaboutFoo(x : Int, converter : Converter) : Foo = Bar(x)

Bar(x)
Foo
Converter
Converter
Bar
Foo
fooFromBar
Foo
Bar
val c = converter
roundaboutFoo

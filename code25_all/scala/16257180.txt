class SIN(e: NumericalExpression[Double], m:OutMapper[Double])
    extends FunctionNode[Double]("sin", Some(m), Seq(e)) with NumericalExpression[Double]

def sin(e: NumericalExpression[Double])(implicit m:OutMapper[Double]) = new SIN(e,m)   

val query = from(StoreTable)(s =>
    select(s)
    orderBy(sin(s.latitude * Math.PI / 180))
)

Select ...
From
  store store14
Order By
  sin(store14.latitude)

val query = from(this.table)(s =>
    select(s)
    orderBy(sin(&(s.latitude * Math.PI / 180.0)))
)

[error]     NullPointerException: null (QueryDsl.scala:159)
[error] org.squeryl.internals.FieldReferenceLinker$.pushExpressionOrCollectValue(FieldReferenceLinker.scala:36)
[error] org.squeryl.dsl.QueryDsl$class.$amp(QueryDsl.scala:159)
[error] org.squeryl.PrimitiveTypeMode$.$amp(PrimitiveTypeMode.scala:40)


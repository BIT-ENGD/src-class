enemy.isVisible
def allActiveEnemies = List(enemyType1.getAllActive, enemyType2.getAllActive, ... ).flatten

flatten
trait Pooled[T <: Entity] {
    var pool = List[T]()
    val INITIAL_POOL_SIZE:Int

    def initPool() {
        for(i<-1 to INITIAL_POOL_SIZE)
        {
            addToPool(disable(createNew))
        }
    }

    def getAllActive:List[T] = pool.filter(e => e.isVisible)
}


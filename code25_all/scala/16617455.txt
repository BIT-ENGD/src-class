abstract class a {
    def m(p: List[Float]) {
        println("Passed List[Float] to p()")
    }
}

class b extends a {
    def m(p: List[Double]) {
        println("Passed List[Double] to p()")
    }
}

error: name clash between defined and inherited member:
method m:(p: List[Double])Unit and
method m:(p: List[Float])Unit in class a
have same type after erasure: (p: List)Unit
   def m(p: List[Double]) {


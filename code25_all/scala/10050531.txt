 class MemoizedFunction1[-T1, +R](f: T1 => R) {
    private[this] val cache = mutable.Map[T1, R]()
    def apply(t: T1): R = cache.getOrElseUpdate(t,f(t))
  }

private[this]
contravariant type T1 occurs in invariant position in type => scala.collection.mutable.Map[T1,R] of value cache


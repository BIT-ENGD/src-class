def mergeSort(list: Array[Int]): Array[Int] = {
    val len = list.length
    if (len == 1) list
    else {
      var x, y = new Array[Int](len / 2)
      val z = new Array[Int](len)
      Array.copy(list, 0, x, 0, len / 2)
      Array.copy(list, len / 2, y, 0, len / 2)
      x = mergeSort(x)
      y = mergeSort(y)
      var i, j = 0
      for (k <- 0 until len) {
        if (j >= y.length || (i < x.length && x(i) < y(j))) {
          z(k) = x(i)
          i = i + 1
        } else {
          z(k) = y(j)
          j = j + 1
        }
      }
      z
    }
  }

def mergeSort(list: Array[Int]): Array[Int] = {
    val len = list.length
    if (len == 1) list
    else {
      val z = new Array[Int](len)
      val x = mergeSort(list.dropRight(len/2))
      val y = mergeSort(list.drop(len/2))
      var i, j = 0
      for (k <- 0 until len) {
        if (j >= y.length || (i < x.length && x(i) < y(j))) {
          z(k) = x(i)
          i = i + 1
        } else {
          z(k) = y(j)
          j = j + 1
        }
      }
      z
    }
  }


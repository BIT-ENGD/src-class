xml.Elems
  def facilitiesSvc = {
    val myhost = host("upstream.api.co.uk") / "organisations" / "foo" / "123" / "bar" / "core.xml"
    myhost.addQueryParameter("apikey", "123456")
    myhost
  }

  def facilitiesXml: Future[Either[String, xml.Elem]] = {
    val res: Future[Either[Throwable, xml.Elem]] = Http((facilitiesSvc) OK as.xml.Elem).either
    for(exc <- res.left)
      yield "Can't connect to facilities service: \n" +
        exc.getMessage
  }

Left(Can't connect to facilities service: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 1; Content is not allowed in prolog.)

ï»¿<?xml version="1.0" encoding="utf-8"?>
new Http apply(url(uri.toString).copy(defaultCharset = "iso-8859-1") as_str)


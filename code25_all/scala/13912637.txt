scala> List( ).sliding( 2 ).size
res0: Int = 0
scala> List( 1 ).sliding( 2 ).size
res1: Int = 1

def row( num : Int ) : List[ Int ] =
{
    num match
    {
        case 0 => List( 1 )
        case x : Int => List( 1 ) ++ row( x - 1 ).sliding( 2 ).map( _.sum ) :+ 1
    }
}

scala> row( 1 )
res0: List[Int] = List(1, 1, 1)

def row2( num : Int ) : List[ Int ] =
{
    num match
    {
        case 0 => List( 1 )
        case 1 => List( 1, 1 )
        case x : Int => List( 1 ) ++ row2( x - 1 ).sliding( 2 ).map( _.sum ) :+ 1
    }
}


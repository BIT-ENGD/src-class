buildMailBody
class HtmlMailer extends Mailer {
  final case class HtmlMailBodyType(text: String) extends MailBodyType

  override protected def buildMailBody(tab: MailBodyType) = {
    tab match {
      case HtmlMailBodyType(text) =>
        val bp = new MimeBodyPart
        bp.setText(text, charSet, "html")
        bp
      case _ => super.buildMailBody(tab)
    }
  }
}

object HtmlMailer extends HtmlMailer

import net.liftweb.util.Mailer
import Mailer._    

HtmlMailer.sendMail(From(sender.email), Subject(subject), To(user.email), HtmlMailBodyType(body))

error: type mismatch;
found   : net.liftweb.util.Mailer.From
required: com.mypackage.HtmlMailer.From
Error occurred in an application involving default arguments.
HtmlMailer.sendMail(From(sender.email), Subject(subject), To(user.email), HtmlMailBodyType(body))

HtmlMailer
Mailer

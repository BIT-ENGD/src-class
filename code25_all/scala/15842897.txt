GlucoseReadings.scala
package models

import play.api.db._
import play.api.Play.current

import anorm._
import anorm.SqlParser._

import org.joda.time._
import java.util.Date

case class GlucoseReading(
    id: Int, mgdl: Int, recordTime: DateTime
)

object GlucoseReading {

  val glucoseReading = {
    get[Int]("id") ~
    get[Int]("mgdL") ~
    get[Date]("recordTime") map {
            case id~mgdL~recordTime => GlucoseReading(id, mgdL, new DateTime(recordTime))
        }
  }

  def dailyReadings(date: DateTime): List[GlucoseReading] = {
        DB.withConnection { implicit connection =>
        SQL("""
                SELECT 
          id,
                recordTime,
          mgDl
                FROM GlucoseReading
                ORDER BY recordDate DESC
            """).as(glucoseReading *)
    }
  }
}

GlucoseReadingsController.scala
package controllers

import play.api.mvc._
import play.api.data._
import play.api.data.Forms._

import org.joda.time._

import models.GlucoseReading

object GlucoseReadingsController extends Controller {

  def daily(year: Int, month: Int, day: Int) = Action {
    val date = new DateTime(year, month, day,0,0)
    val readings = GlucoseReading.dailyReadings(date)
    Ok(views.html.dailyChart(readings))
  }

}

dailyChart.scala.html
@(readings: List[GlucoseReading])

@import helper._

@main("Day With Read") {

    <ul>
        @reading.map { reading =>
            <li>
                I'm a glucose reading
            </li>
        }
    </ul>    
}

main
@(title: String)(content: Html)

<!DOCTYPE html>

<html>
    <head>
        <title>@title</title>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link href="css/bootstrap.min.css" rel="stylesheet" media="screen">
    </head>
    <body>
        @content
        <script src="http://code.jquery.com/jquery.js"></script>
        <script src="js/bootstrap.min.js"></script>
    </body>
</html>


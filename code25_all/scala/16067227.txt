abstract class SpecialFunction {
  def apply(): Unit
}

def mImpl(c: Context)(bodyBlock: c.Expr[Unit]): c.Expr[X] =
  c.universe.reify {
    new X(new SpecialFunction {
      override def apply() {
        bodyBlock.splice
      }
    })
  }

def m(bodyBlock: Unit): X = macro mImpl

def example = m {
  println("Hello, world")
}

def example = new X(new SpecialFunction {
  override def apply() {
    println("Hello, world")
  }
})

def example = m {
  val x = 7
  println(x.toString)
}

symbol value x does not exist in example

def example = new X(new SpecialFunction {
  override def apply() {
    val x = 7
    println(x.toString)
  }
})


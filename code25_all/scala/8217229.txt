trait L[S, A]

def emptyList[S, A: Manifest]: L[S, A] = ???

object Tree {
  private class Leaf[S, A]
  private class Impl[S, A](l: L[S, Leaf[S, A]]) extends Tree[S, A]

  def empty[S, A]: Tree[S, A] = new Impl(emptyList[S, Leaf[S, A]])
}
trait Tree[S, A]

Leaf[S, A]
Leaf
L
Array[Leaf[_, _]]
Array[java.lang.Object]

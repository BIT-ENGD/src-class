trait Expression {
  def ==(other: Expression): Expression = Equality(this, other)
  def !=(other: Expression): Expression = Inequality(this, other)
}
case class Equality(e1: Expression, e2: Expression) extends Expression
case class Inequality(e1: Expression, e2: Expression) extends Expression
case class Integer(e: Int) extends Expression
case class Boolean(e: Boolean) extends Expression

val formula: Expression = someFunctionReturingAnExpression
if(formula != null) {
  ... use the formula.
}

java.lang.NullPointerException
!=
formula
!=

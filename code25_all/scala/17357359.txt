val inputXML = <PC Price="100" CurrencyCode="USD"/>
val rule1 = new RewriteRule {
    override def transform(n: Node): Seq[Node] = n match {
        case Elem(prefix, "PC", attribs, scope, content @ _*)  => 
            Elem(prefix, "Mac", attribs, scope, content:_*)
        case other => other
    }
}

println(new RuleTransformer(rule1).transform(inputXML))

List(<Mac Price="100" CurrencyCode="USD"/>) 

val inputXML = <PC Price="100" CurrencyCode="USD"/>
val rule1 = new RewriteRule {
    override def transform(n: Node): Seq[Node] = n match {
        case Elem(prefix, "PC", attribs, scope, minimizeEmpty, content @ _*)  => 
            Elem(prefix, "Mac", attribs, scope, true, content:_*)
        case other => other
    }       
}

println(new RuleTransformer(rule1).transform(inputXML))

<PC Price="100" CurrencyCode="USD"/>


f: A => Option[B]
f
x
f(f(f(x).get).get...)
f
None
None
@tailrec
def recurrentCallUntilNone[B](f: B => Option[B], x: B): B = f(x) match {
  case Some(y) => recurrentCallUntilNone(f, y)
  case None => x
}

next
None
Option
end

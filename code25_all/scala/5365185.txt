boost::tuple<int, std::string, float>

cons<int, cons<std::string, cons<float, null_type> > >

template<typename T1, typename T2>
void countTupleElements( boost::tuples::cons<T1, T2>& tupleRec, int index, const std::vector<std::string>& vals )
{
    return 1 + countTupleElements( tupleRec.tail );
}

template<typename T>
void countTupleElements( boost::tuples::cons<T, boost::tuples::null_type>& tupleRec, int index, const std::vector<std::string>& vals )
{
    return 1;
}

val example = 1 :: 2.0 :: "Hello" :: "World" :: HNil


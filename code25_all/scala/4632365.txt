class A(val c: C[A]) {
    c.addEntry(this)
}
class B(c: C[A]) extends A(c)
class C[T <: A]{
    val entries = new ArrayBuffer[T]()
    def addEntry(e: T) { entries += e }
}
object Generic {
    def main(args : Array[String]) {
        val c = new C[B]()
        new B(c)
    }
}

new B(c)
C[+T <: A]
val c = new C[B]()
new B(c)

val c = new C[A]()
new B(c)

val c = new C[B]()
new A(c)


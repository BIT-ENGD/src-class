class Foo[+T <: Bar] extends FooBase ...

val v1: Foo[Bar] = new Foo[SubBar1]();
val v2: Foo[Bar] = new Foo[SubBar2]();

class Trouble extends FooBase ...
val iOnlyWantFooHere: FooBase = new Trouble();

class FooBase {
  def ohNoIDontKnowTheType: Bar;
}

class Foo[+T <: Bar] extends FooBase {
  override def ohNoIDontKnowTheType: T = ...;
}

class Foo[+T <: Foo[T]] extends FooBase ...

Foo
Foo[_]
Any
Foo
Foo[Foo]
Foo[Foo[_]]
Foo[Foo[Foo[Foo[_]]]

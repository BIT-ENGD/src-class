xs.toArray.toIterable     // Ugh?
xs.toList                 // Fast?
xs.copyToBuffer(anArrayBuffer)
Vector(xs: _*)            // There's no toVector, sadly. Is this construct as efficient?

def f(xs: Iterable[SomeType]) {    // xs might a stream, though I can't be sure
    val allOfXS = <xs all read in at once>
    g(allOfXS)
    h(allOfXS)    // Both g() and h() take an Iterable[SomeType]
}


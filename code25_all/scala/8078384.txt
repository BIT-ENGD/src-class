trait TableColumnTrait[T] {def createColumn(key: String, displayName: String): TableColumn[PricingRow, T]}

sealed class PricingStage[PT] extends LoggingTrait {
  implicit object TableColumnString extends TableColumnTrait[String] {
    override def createColumn(key: String, displayName: String): TableColumn[PricingRow, String] = {
      info("createColumn for String (" + key + ", " + displayName + ")")
      new TableColumn[PricingRow, String](displayName)
    }
  }

var columns = Map[String, TableColumn[PricingRow, TableColumn[PricingRow, PT]]]()
  private def createColumn[T: TableColumnTrait](key: String, displayName: String) = {
    val column = implicitly[TableColumnTrait[T]].createColumn(key, displayName)
    columns += key -> column
    pricingTable.getColumns().addAll(column)
  }


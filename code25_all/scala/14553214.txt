implicit class T1[A](val self: Iterator[A]) {
  def :+[B >: A](elem: B): Iterator[B] =
    self ++ Iterator(elem)
}

implicit class T2[A](val self: Iterator[A]) extends AnyVal {
  def :+[B >: A](elem: B): Iterator[B] =
    self ++ Iterator(elem)  
}

type arguments [B] do not conform to method ++'s type parameter bounds [B >: A]


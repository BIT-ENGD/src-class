 val products = 

  for (event <- reader) {    

     event match {

        case EvElemStart(_, "product", meta, _) =>

                  product = new Product()

                  product.title = meta("title").toString
                  product.description = meta("description").toString

        case EvElemEnd(_, "product") =>
                  yield product                  // <--

        case _ =>

     }

}

val products =   

   for (event <- reader) {

          var title = "";
          var description = "";

          event match {

            case EvElemStart(_, "product", meta, _) =>

              title = meta("title").toString
              description = meta("title").toString

            case EvElemEnd(_, "product") =>

            case _ =>

          }

   }  yield new Product("", "");  // <---


class A(val a: String, val b: Int)
object Test {
  implicit class wrap(obj: A) {
    def fn = obj.a + obj.b
  }

  def main(args: Array[String]) =
    println(new A("Hello", 1).fn)
}

public void main(java.lang.String[]);
  Code:
   0:   getstatic   #29; //Field scala/Predef$.MODULE$:Lscala/Predef$;
   3:   aload_0
   4:   new #31; //class A
   7:   dup
   8:   ldc #33; //String Hello
   10:  iconst_1
   11:  invokespecial   #36; //Method A."<init>":(Ljava/lang/String;I)V
   14:  invokevirtual   #38; //Method wrap:(LA;)LTest$wrap;
   17:  invokevirtual   #42; //Method Test$wrap.fn:()Ljava/lang/String;
   20:  invokevirtual   #46; //Method scala/Predef$.println:(Ljava/lang/Object;)V
   23:  return

fn

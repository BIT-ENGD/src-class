trait SocketFactory extends (SocketAddress => Socket)

type SocketFactory = SocketAddress => Socket

val factory: SocketFactory = addrToInet andThen inetToSocket

trait Base
trait T1 extends Base // subclassing
type T2 = Base        // type alias

trait T1[T]
trait T2 extends T1[Any]
type T3 = T1[Any]

class C2 extends T2

val c = new C2
println("" + (c match { case t: T3 => "T3"; case _ => "any" }))
println("" + (c match { case t: T2 => "T2"; case _ => "any"  }))

T3
T2


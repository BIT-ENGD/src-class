import actors.Actor
import java.util.Random

import scala.Numeric._
import Implicits._

class Constant(val n:Number) extends Actor{
    def act(){
        loop{
            receive{
                case "value" => reply( {n} )
            }
        }
    }
}

class Arithmetic[T: Numeric](A: ()=>T, B: ()=>T) extends Actor{
  def act(){
    receive{
      case "sum" => reply ( A() + B() )

    /*  case "mul" => reply ( A * B )
    */
    }
  }
}

object Main extends App{
    val c5 = new Constant(5)
    c5.start


    val a = new Arithmetic({c5 !! "value"}, {c5!!"value"} )
  a.start

  println(a!?"sum")
  println(a!?"mul")

}


public interface JavaProductAPI {
     public Set<IProduct> getProducts(String isin);
}

public class JavaProductAPIImpl implements JavaProductAPI {
    private Map<String, Set<ProductImpl>> productsByIsin;

    public Set<IProduct> getProducts() {
        Set<ProductImpl> s = productsByIsin.get(isin);
        return s == null 
                   ? Collections.<IProduct>emptySet()
                   : Collections.<IProduct>unmodifiableSet(s);
    }

}

ProductImpl
IProduct
scala.collection.immutable.Set
val productsByIsin: Map[String, scala.collection.Set[ProductImpl]] = ...
def getProducts(isin: String): scala.collection.immutable.Set[IProduct] = {
  productsByIsin.get(isin) match {
     case Some(s) => scala.collection.immutable.Set(s toSeq :_*)
     case None => scala.collection.immutable.Set.empty
  } 
}

scala.collection.Set
val productsByIsin: Map[String, scala.collection.mutable.Set[ProductImpl]] = ...
def getProducts(isin: String): scala.collection.Set[IProduct] = {
  productsByIsin.get(isin) match {
     case Some(s) => s readOnly
     case None => scala.collection.Set.empty
  } 
}


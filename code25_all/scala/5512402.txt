abstract class A { def aSeq : Seq[A] }
class B(val aSeq : A*) extends A
class C extends B { override val aSeq :Seq[A] = Seq() }

overriding value aSeq in class B of type A*;  value aSeq has incompatible type

class C extends B { override val aSeq  = new ofRef(Array[A]()) }


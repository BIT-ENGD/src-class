def aboutUsImages = Action { implicit request =>
        val getall = AboutImages.findAll
        Ok(views.html.adminpages.aboutusimages(getall))
    }


  def editUsImages(id: Int) = Action { implicit req =>

    val getbyid = AboutImages.findById(id)
    val text = getbyid(0).name
    val dummyform = Form(ignored(("dummy")))
    Ok(views.html.adminpages.aboutusimgsForm(dummyform, id, text))
  }


  def upload() = Action(parse.multipartFormData) { implicit request =>
    val dump = ""
    val form = Form(tuple(
      "id" -> nonEmptyText,
      "name" -> text,
      "image" -> ignored(request.body.file("image")).
        verifying("File missing", _.isDefined)))
    form.bindFromRequest.fold(
      formWithErrors => {
        Ok(views.html.adminpages.aboutusimgsForm(formWithErrors, request.id, dump))
      },
      value => Ok
    )
  } 

@helper.form(action = routes.AboutUsImages.upload(),'enctype -> "multipart/form-data") {
             <input type="hidden" name="id" value="@id">
            <input type="text" name="name" value="@text">
            @helper.inputFile(form("image"))


            <div class="actions">
                <input type="submit" value="Save Setting" class="btn primary"> or
                <a href="@routes.AboutUsImages.aboutUsImages()" class="btn">Cancel</a>
            </div>



        }


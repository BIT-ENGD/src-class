List(1->2, 1->3, 2->3) groupBy (_._1)

def removeDupeKeyFromPair[A, B](m: Map[A, List[Pair[A, B]]]): Map[A, List[B]] =
  m map { case(k, vlist) => k -> { vlist map { case(dupe, b) => b } } }

List[Pair[A,B]]
C[Pair[A,B]]
C<:Iterable
def removeDupeKeyFromPair[A, B, C[Pair[A, B]] <: Iterable[Pair[A, B]]]
                         (m: Map[A, C[Pair[A, B]]]): Map[A, C[B]]


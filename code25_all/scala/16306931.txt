class Data(val colValues: List[Array[Any]]) {
  def min(i: Int): Array[Any] = {
    colValues.minBy { _(i) }
  }
}

val rawData = List(Array("a", 20, "z", "m", 3.0), Array("b", 10, "y", "f", 4.0), Array("c", 40, "z", "m", 2.0))
val d =  new Data(rawData)
val m1 = d.min(1)
val m2 = d.min(4)

class Data(val colValues: List[Array[Any]]) {
  def withType(x: Any) = x match {
          case i: Int => i
          case l: Long => l
          case f: Float => f
          case d: Double => d
  }

  def min(i: Int): Array[Any] = {
    colValues.minBy { x:Array[Any] => withType(x(i)) }
  }
}


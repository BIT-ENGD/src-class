def option[T](
  name1: String, name2: String = null, name3: String = null,
  name4: String = null, name5: String = null, name6: String = null,
  name7: String = null, name8: String = null, name9: String = null,
  default: T = null.asInstanceOf[T],
  metavar: String = null,
  choices: Seq[T] = null,
  aliases: Map[T, Iterable[T]] = null,
  help: String = "")
(implicit convert: (String, String, ArgParser) => T, m: Manifest[T]) = {
  optionSeq[T](nonNullVals(name1, name2, name3, name4, name5, name6,
    name7, name8, name9),
    metavar = metavar, default = default, choices = choices,
    aliases = aliases, help = help)(convert, m)
}


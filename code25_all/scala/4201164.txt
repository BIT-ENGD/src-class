template<typename T, typename V>
struct{
    void operator()(T _1, V _2){
        _2.foo( _1 );
    }
};

def foo[T<:{def foo():Unit}]( arg:T ) = //something
def bar( x:{def foo():Unit} ) = //something
def baz[T,V<:Function1[T,_]]( x:T, y:V ) = y( x )

def biff[T,V:{def foo( x:T ):Unit}] = //something

def boff[T<:{def foo( x:Double ):_}]( y:T ) = y.foo _


case class WideLoad(a: String, b: Int, c: Float, d: ActorRef, e: Date)

someVal match {
    case WideLoad(_, _, _, d, _) => d ! SomeMessage(...)
}

WideLoad(_, _, _, _, _, some, _, _, _, thing, _, _, interesting)
someVal match {
    case WideLoad(d = dActor) => dActor ! SomeMessage(...)
    //              ^---------- does not compile
}

_, _, _, _
case wl @ WideLoad(...whatever...) => wl.d
val

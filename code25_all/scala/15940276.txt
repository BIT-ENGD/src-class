import scala.swing._
import java.awt._
import ListView._

import org.scalatest.junit.JUnitRunner
import org.junit.runner.RunWith
import org.scalatest.FunSpec
import org.scalatest.matchers.ShouldMatchers

object MyGui extends SimpleSwingApplication {
  def top = new MainFrame {
    title = "MyGui"

    val t = new Table(3, 3)
    t.peer.setName("my-table")
    contents = t
  }
}

object TestUtils {
  def getChildNamed(parent: UIElement, name: String): UIElement = {
    // Debug line
    println("Class: " + parent.peer.getClass() +
            " Name: " + parent.peer.getName())

    if (name == parent.peer.getName()) { return parent }

    if (parent.peer.isInstanceOf[java.awt.Container]) {

      val children = parent.peer.getComponents()
      /// COMPILER ERROR HERE   ^^^

      for (child <- children) {
        val matching_child = getChildNamed(child, name)
        if (matching_child != null) { return matching_child }
      }
    }

    return null
  }
}

@RunWith(classOf[JUnitRunner])
class MyGuiSpec extends FunSpec {
  describe("My gui window") {
    it("should have a table") {
      TestUtils.getChildNamed(MyGui.top, "my-table")
    }
  }
}

29: error: value getComponents is not a member of java.awt.Component
      val children = parent.peer.getComponents()
                                 ^
one error found

parent.peer

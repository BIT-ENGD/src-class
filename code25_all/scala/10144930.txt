class SymbolProvidesPair(i: Symbol) { def ->[T](s: T) = (i.toString.tail, s) }
@inline implicit def symbol2String(i: Symbol) = new SymbolProvidesPair(i)

val map: Map[String, Int] = Map("strings" -> 1, "blow" -> 2)
val map: Map[String, Int] = Map('symbols -> 1, 'rock -> 2)

implicit def symbolKey2String[A <: Symbol, B](x:(A,B)) = (x._1.toString, x._2)

A <: Symbol
[Symbol, B]
[A <: Symbol, B]
val map = Map('foo -> 1)


type CharsetMap = Map[Charset, Byte]

implicit def seqtup2CharsetMap(input: Seq[(String, Int)]): CharsetMap = {
  Map.empty  // placeholder
}

def somef(a: Int, b:Int, p: CharsetMap) = p
somef(1, 3, Seq(("hey", 2), ("there", 9)))

somef
def somef2(p: (CharsetMap) => Int) = p

val p = (a: Seq[(String, Int)]) => 19
somef2(p)

implicit def
(Seq[(String, Int)]) => Int

object WSLookup {

  implicit class LookupSC(val sc: StringContext) extends AnyVal {
    def lookup(args: Any*): String = {
      val strings = sc.parts.iterator
      val expressions = args.iterator
      var buf = new StringBuffer(strings.next)

      while (strings.hasNext) {
        buf append doLookup(expressions.next.toString)
        buf append strings.next
      }
      buf.toString()
    }

    def doLookup(s: String): String = {
      // Just change the string to uppercase to test.
      s.toUpperCase
    }
  }

  val x = "cool"
  val testString = "Not $x"
  lookup"How $x"

  // lookup testString //<--- See question 1
}


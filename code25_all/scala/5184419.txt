import collection.generic.CanBuildFrom

class Foo[P, S[X] <: Iterable[X]](val s : S[P]) {
  def bar(j : P)(implicit bf : CanBuildFrom[S[P],P,S[P]]) : S[P] = {
    val builder = bf(s)
    builder ++= s
    builder += j
    builder.result
  }

  def oneBar(j : P)(implicit bf : CanBuildFrom[S[P],P,S[P]]) : P = bar(j).head
}

implicit def iter2foo[P, S[X] <: Iterable[X]](s : S[P]) = new Foo[P,S](s)

println(Seq(1,2,3,4) bar 5)

println((1 to 4) bar 5)

error: value bar is not a member of scala.collection.immutable.Range.Inclusive 
with scala.collection.immutable.Range.ByOne

Range
implicit def iter2foo[P, S <: Iterable[P]](s : S) = new Foo[P,Iterable](s)

Range
Iterable[Int]
Iterable
implicit def iter2foo[P](s : Iterable[P]) = new Foo[P,Iterable](s)

bar
Iterable[P]

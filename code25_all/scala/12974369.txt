List[(A,B,C)]
List[(Schedule,GameResult,Team)]

Map[JodaTime, List(Schedule,GameResult,Team)]

val data = repo.games.findAllByDate(fooDate).groupBy(_._1.gameDate)

3 London Dragons vs. Paris Frogs 2

data.map{case(date,games) =>
  // game date row headers
  <tr><td>{date.toString("MMMM dd, yyyy")}</td></tr>

  // print out game result data rows
  games.map{case(schedule,result, team)=>
    ...
    // BUT (result,team) slice is ungrouped, need grouped by Schedule gameID
  }
}

for($x = 0; $x < $this->gameCnt; $x = $x + 2) {...}

games._._2(rowCnt).total games._._3(rowCnt).name games._._1(rowCnt).location games._._2(rowCnt+1).total games._._3(rowCnt+1).name


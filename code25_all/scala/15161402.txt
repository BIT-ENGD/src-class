object Sms extends Controller {  

val testForm: Form[Test] = Form (
    mapping(
      "firstname" -> nonEmptyText,
      "lastname" -> nonEmptyText,
      "password" -> tuple(
        "main" -> text(minLength = 6),
        "confirm" -> text
      ).verifying(
        "Passwords don't match", passwords => passwords._1 == passwords._2
      ),
      "email" -> tuple(
        "main" -> (text verifying pattern("^([0-9a-zA-Z]([-\\.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$".r, error="A valid email is req")),
        "confirm" -> text
        ).verifying(
        "Emails don't match", emails => emails._1 == emails._2
      ),
      "grade" -> Do the magic happen here?
    )(Test.apply)(Test.unapply)
  )



case class Test(
                    firstname: String,
                    lastname: String,
                    password: String,
                    email: String,
                    grade: Int
                    )

}

@inputRadioGroup(
testForm("grade"),
options = Seq("1"->1,"2"->2....and so on)
'_label -> "Grade",
'_error -> testForm("grade").error.map(_.withMessage("some error")))


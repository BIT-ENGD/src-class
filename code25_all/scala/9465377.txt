iv
MHashMap[DateTime, T]
MHashMap
scala.collection.mutableHashMap
def minimum: BigDecimal = {
  iv match {
    case dtMcM: MHashMap[DateTime, MyCustomClass] => dtMcM.minBy(_._2.bdField)._2.bdField
    case dtBdM: MHashMap[DateTime, BigDecimal] => dtBdM.minBy(_._2)._2
    case dtDlM: MHashMap[DateTime, Double] => dtDlM.minBy(_._2)._2.toBigDecimal
    case dtItM: MHashMap[DateTime, Int] => dtItM.minBy(_._2)._2
    case _ => throw new IllegalArgumentException("Unsupported underlying type")
  }
}

No implicit Ordering defined for T with Int.
case dtItM: MHashMap[DateTime, Int] => dtItM.minBy(_._2)._2

Double
BigDecimal
Int

def invokeMethods(instance: AnyRef, clazz: Class[_]) {
   assert(clazz.isInstance(instance)   // <- is there a way to check this statically? 

   for {method <- clazz.getDeclaredMethods
        if shouldInvoke(method) // if the method has appropriate signature
       } method.invoke(instance)
}

// overload for common case
def invokeMethods(instance: AnyRef) {
   invokeMethods(instance, instance.getClass)
}

def invokeMethods[T <:AnyRef](instance: T, clazz: Class[T]) {
   for {method <- clazz.getDeclaredMethods
        if shouldInvoke(method)
       } method.invoke(instance)
}


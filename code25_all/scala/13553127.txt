do {
  val result = body
} while(!cond(result))

def repeat[A](body: => A)(cond: A => Boolean): A = {
  val result = body
  if (cond(result)) result else repeat(body)(cond)
}

val result = repeat(body)(a => ...)

val result = do { body } until (a => ...)

body
until
AnyRef
A
AnyRef

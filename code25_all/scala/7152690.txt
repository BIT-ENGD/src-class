def foo1[A](ls: Iterable[A]) : Iterator[A] =
    for (List(a, b) <- ls sliding 2) yield a

def foo2[A](ls: Iterable[A]) : Iterator[A] =
    for (a::b::Nil <- ls sliding 2) yield a

warning: non variable type-argument A in type pattern List[A]
is unchecked since it is eliminated by erasure

List[B](_, _)
for (List(a, b) <- List(1,2,3,4) sliding 2) yield ()

foo1
[Int]
[A]

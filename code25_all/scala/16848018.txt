case class Property(name: String, value: Option[Any])

class PropertyType[+T <: Any: ru.TypeTag] {
  def isValidType(property: Property): Boolean = {
    property.value match {
      case None => true
      case Some(value) => ru.typeOf[T] == getTypeTag(value)
    }
  }

  private def getTypeTag[TT: ru.TypeTag](obj: TT) = ru.typeTag[TT]
}

case object StringPropertyType extends PropertyType[String] 

scala> Property("test", Some("test")).value.get.getClass
res4: Class[_] = class java.lang.String


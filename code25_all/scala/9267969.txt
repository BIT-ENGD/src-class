class Foo(var x: String) {}

object Helper {
  def model[T](get: ⇒ T, set: T ⇒ Unit) : Model[T] = new Model[T] {
    override def getObject(): T = get

    override def setObject(obj: T) { set(obj) }
  }
}

model
val f = new Foo("initial")
val stringModel = model(f.x, f.x = _)

missing parameter type for expanded function ((x$1) => f.x = x$1)

model
def model[T](get: ⇒ T)(set: T ⇒ Unit) // rest is unchanged

model(f.x)(f.x = _)


def stockPerBase = from(stock)(s => groupBy(s.base) compute(sum(s.quantity)))
def allCardsWithStock = 
    join(cards, parts, stockPerBase.leftOuter)((c,p,s) =>
        on(c.partId === p.id, p.base === s.map(_.key))  
        select(c, p, s.measures))

too many arguments for method on: (table: org.squeryl.Table[A])(declarations: A => Seq[org.squeryl.dsl.ast.BaseColumnAttributeAssignment])Unit
[error] on(c.partId === p.id, p.base === s.map(_.key))  


def run(subjects: List[Subject]) = {
  val configs = compute()
  subjects.map(s => configs.map(c => test(s,c)))
  // or flatMap, I don't really care at this point
}

Subject[T]
T
def run[L <: HList](subjects: L)(implicit mapper: Mapper[testFun.type, L]) = {
  val configs = compute()
  subjects.map(testFun)
}

testFun
val cfgHL = HList.fill(subjects.length)(configs)
(subjects zip cfgHL).map(testFun)

HList
fill

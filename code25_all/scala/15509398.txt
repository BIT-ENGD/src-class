import dispatch._

def request(in: String, address: java.net.URI, headers: Map[String, String]): String = {
  val req = url(address.toString) << in <:< headers
  val s = Http(req OK as.String)
  s()
}

Connection: keep-alive

Keep-Alive: timeout=120, max=256

Exception in thread "main" java.util.concurrent.ExecutionException: dispatch.StatusCode: Unexpected response status: 500
    at com.ning.http.client.providers.netty.NettyResponseFuture.abort(NettyResponseFuture.java:297)
19:32:46.474 [New I/O  worker #10] DEBUG c.n.h.c.p.n.NettyAsyncHttpProvider - Unexpected response status: 500
    at com.ning.http.client.providers.netty.NettyAsyncHttpProvider.abort(NettyAsyncHttpProvider.java:1326)
dispatch.StatusCode: Unexpected response status: 500
    at com.ning.http.client.providers.netty.NettyAsyncHttpProvider.access$700(NettyAsyncHttpProvider.java:137)

<dependency>
  <groupId>net.databinder.dispatch</groupId>
  <artifactId>dispatch-core_2.10</artifactId>
  <version>0.9.5</version>
</dependency>


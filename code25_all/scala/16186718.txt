-[node]+-(right subtree)
        |
        .
        .
        |
   (left subtree)

-[5]+-[9]+-[10]+-[14]+-[15]+-x
     |    |     |     |
     |    |     |     |
     |    |     |     |
     |    |     |     +
     |    |     |     -[12]+-[13]+-x
     |    |     |           |    |
     |    |     |           |    x
     |    |     |           |
     |    |     |           +
     |    |     |           -[11]+-x
     |    |     |                 |
     |    |     |                 x
     |    |     |
     |    |     x
     |    |
     |    +
     |    -[7]+-[8]+-x   
     |         |    |
     |         |    x
     |         |
     |         +
     |         -[6]+-x
     |              |
     |              x  
     |
     +
     -[4]+-x
          |
          x   

-[5]+-[9]+-[10]+-[14]+-[15]+-x
     |    |     |     |
     |    |     |     |
     |    |     |     |
     |    |     |     +
-[12]+-[13]+-x
     |    |     |           |    |
     |    |     |           |    x
     |    |     |           |
     |    |     |           +
-[11]+-x                        
     |    |     |                |
     |    |     |                x
     |    |     |                
     |    |     x
     |    |
     |    +
-[7]+-[8]+-x   
     |         |    |
     |         |    x
     |         |
     |         +
-[6]+-x             
     |              |
     |              x 
     |
     +
-[4]+-x
          |
          x

  def display(x:SeqNode[T], k:String) {
    if ( x == null )  { println("-x") }

    else {
      val line:String   =  "     |"
      val nil:String    =  "     x"
      val aplus:String  =  "     +"
      val empt:String   =  "      "

      val node:String = (x.value).toString

      print( "-[" + node + "]+" )
      display(x.right, k + line) 

      if ( x.left == null ) {
        println(k + line)
        println(k + nil)
      }
      else {
        println(k + line)
        println(k + aplus)
        display(x.left, k + empt)          
      }

    }

  } 

print( "-[" + node + "]+")

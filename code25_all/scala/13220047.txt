def atype: Parser[Any] =  "(?i)INTEGER".r | "(?i)REAL".r | "(?i)BOOLEAN".r | "(?i)VARCHAR".r  | "(?i)DATE".r 

def typeDate: Parser[Value] = "'" ~ dayOrMonth ~"/"~dayOrMonth~"/"~year ~ "'" ^^
        {case _ ~ a ~ _ ~ b ~ _ ~ c ~ _ => new typeDate(a,b,c)}

def dayOrMonth: Parser[String]= "([0-9][0-9])".r 

def year:Parser[String] = "([0-9][0-9][0-9][0-9])".r

def stringExpression: Parser[Value] = "'" ~> string <~ "'"  ^^
        {case a => new stringExpression(a)}
def string: Parser[Any] = letters

def letters: Parser[Any] =  """([a-zA-Z])+""" r


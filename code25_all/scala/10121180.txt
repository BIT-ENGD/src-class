def collectFirstOfT[T](la: List[_])(implicit m:Manifest[T]) : Option[T] = {
  la.collect{case x if m.erasure.isAssignableFrom(x.getClass) => x}.
    headOption.asInstanceOf[Option[T]]}

class A
class B

val oB:Option[B] = collectFirstOf(List(new A,new B)) 

val oB =collectFirstOf[B](List(new A,new B))


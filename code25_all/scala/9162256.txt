List[Int]
Int
List[String]
Int
traverse
val xs = List(1, 2, 3, 4)
val (sum, strings)  = (xs.sum, xs map (_.toString + "Z"))

State
val shape = (_ : List[Int]) map (_.toString + "Z")
val accum = (_ : List[Int]).sum

List[Int]
xs traverse shape //A List[String]
xs traverse accum //An Int

xs traverse (shape <x> accum) //The pair (List[String], Int)

shape
accum
shape
accum

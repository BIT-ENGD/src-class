abstract class Wrapper[A](wrapped: A) {

  protected def someCondition: Boolean

  def fold[B](whenTrue: => B)(whenFalse: => B): B =
    if (someCondition) whenTrue else whenFalse

}

fold
A
Any
wrapper.fold("hi")(42)

B
String
fold
def fold[B, B0 >: B](whenTrue: => B)(whenFalse: => B0): B0

B0
String
B0
def fold[B](whenTrue: => B)[B0 >: B](whenFalse: => B0): B0


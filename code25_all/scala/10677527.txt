val rooms = List(("Hi", "mom"),("hi", "dad"))
val foo = rooms.map(arg =>{
                  var fields = List
                    ( new JField("greeting",arg._1),
                      new JField("recipient",arg._2))
                      new JObject(fields)})

case class Room(greeting:String, recipient:String)
val rooms = List(Room("Hi", "mom"),Room("hi", "dad"))
val foo = rooms.map(arg =>{
                  var fields = List
                    ( new JField("greeting",arg.greeting),
                      new JField("recipient",arg.recipient))
                      new JObject(fields)})

[error] <file>: type mismatch;
[error]  found   : scala.collection.immutable.List.type (with underlying type object List)
[error]  required: List[blueeyes.json.JsonAST.JValue]
[error]                       new JArray(fields)


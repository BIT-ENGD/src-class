object Axons {
    var axonList=List[Axon]();
    var pos=0;
    def init(al: List[Axon]) {
        axonList= al;
    }
    def reverse(): List[Axon]  = axonList.reverse
    def get(count: Int) = axonList(count)
    def getList(): List[Axon] = axonList
    def length(): Int = axonList.length

}

for (axon <- axons.getList)

object Axons extends Traversable[Axon] {
    var axonList=List[Axon]();
    def init(al: List[Axon]) {
        axonList= al;
    }
    def reverse(): List[Axon]  = axonList.reverse
    def get(count: Int) = axonList(count)

        //look here!
    def foreach[U](f: Axon=> U): Unit = axonList.foreach(f)
    //end ... 
    def length(): Int = axonList.length
    def findAxonsBySource(sourceNeuron: Neuron): List[Axon] = {
        axonList collect { 
            case axon: Axon if axon.getSourceNeuron == sourceNeuron  => axon 
            }
    }
}


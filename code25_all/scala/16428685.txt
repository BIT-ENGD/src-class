abstract class Term
case class Constructor(txt:String) extends Term
case class Variable(txt:String) extends Term

case class Equality(t1:Term, t2:Term)

def foobar(e:Equality) = e match {
    case Equality(Variable(x),Constructor(y)) => "do something rather complicated with x and y"
    case Equality(Constructor(y),Variable(x)) => "do it all over again"
}

def foobar(e:Equality) = e match {
    case Equality(Variable(x),Constructor(y)) | Equality(Constructor(y),Variable(x)) 
        => "yeah! this time we need to write the code only one time ;-)"
}


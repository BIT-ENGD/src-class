val l = Seq(1, 2)
l: Seq[In] = List(1, 2)

[[syntax trees at end of typer]]// Scala source: <console>
package $line14 {
  final object $read extends java.lang.Object with ScalaObject {
    def this(): object $line14.$read = {
      $read.super.this();
      ()
    };
    final object $iw extends java.lang.Object with ScalaObject {
      def this(): object $line14.$read.$iw = {
        $iw.super.this();
        ()
      };
      final object $iw extends java.lang.Object with ScalaObject {
        def this(): object $line14.$read.$iw.$iw = {
          $iw.super.this();
          ()
        };
        private[this] val l: Seq[Int] = collection.this.Seq.apply[Int](1, 2);
        <stable> <accessor> def l: Seq[Int] = $iw.this.l
      }
    }
  }
}

[[syntax trees at end of typer]]// Scala source: <console>
package $line14 {
  final object $eval extends java.lang.Object with ScalaObject {
    def this(): object $line14.$eval = {
      $eval.super.this();
      ()
    };
    lazy private[this] var $result: Seq[Int] = {
      $eval.this.$print;
      $line14.$read.$iw.$iw.l
    };
    private[this] val $print: String = {
      $read.$iw.$iw;
      "l: Seq[Int] = ".+(scala.runtime.ScalaRunTime.replStringOf($line14.$read.$iw.$iw.l, 1000))
    };
    <stable> <accessor> def $print: String = $eval.this.$print
  }
}

l: Seq[Int] = List(1, 2)

collection.this.Seq.apply[Int](1, 2)


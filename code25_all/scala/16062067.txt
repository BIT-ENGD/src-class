package objsets

abstract class IntSet {
  def incl(x:Int): IntSet
  def contains(x:Int): Boolean
}


class Empty extends IntSet {
def contains(x: Int): Boolean = false
def incl(x: Int): IntSet = new NonEmpty(x, new Empty, new Empty)
}

class NonEmpty (elem: Int, left: IntSet, right: IntSet) extends IntSet {
    def contains(x: Int):Boolean =
        if (x < elem) left contains x
        else if (x > elem) right contains x
        else true

    def incl(x:Int):IntSet =
        if (x < elem) new NonEmpty(elem, left incl x,right)
        else if (x > elem) new NonEmpty(elem, left, right incl x)
        else this
}

object Video1 {
    val empty = new Empty
    empty.contains(2)
}

NoSuchMethodError: objsets.Empty.contains(I)Z

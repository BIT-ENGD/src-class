trait BaseTrait[EnumType <: Enumeration] {
    protected val enum: EnumType
    protected val valueManifest: Manifest[EnumType#Value]
}

object MyEnum extends Enumeration {
    val Tag1, Tag2 = Value
}

class BaseClass[EnumType <: Enumeration]
(protected val enum: EnumType)
(implicit protected val valueManifest: Manifest[EnumType#Value])
extends BaseTrait[EnumType] {
}

class Test extends BaseClass(MyEnum)


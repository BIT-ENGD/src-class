class Outer {
    class Inner
}

object OuterUtil {
  val obj = new Outer
  object xyz extends obj.Inner
  //do something with xyz
}

//-------------------
object OuterUtil2 {
    var m_obj: Outer = null

    def createOuter() = {
        m_obj = new Outer
    }

    def anotherMethod() {
        //Compilation error here: stable identifier required, 
        //but OuterUtil2.this.m_obj found.
        object xyz extends m_obj.Inner
    }
}

object Test {
    OuterUtil2.createOuter
    OuterUtil2.anotherMethod
}

OuterUtil
OuterUtil2
Outer
m_obj
var
createOuter
Outer
m_obj
anotherMethod
OuterUtil2

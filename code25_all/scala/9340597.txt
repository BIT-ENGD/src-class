Person
Employee
trait Person[T <: LongKeyedMapper[T]] extends LongKeyedMapper[T]{
  self: T =>
  object firstName extends MappedString[T](this, 50)
  object lastName extends MappedString[T](this, 50)
  object civicRegNumber extends MappedString[T](this, 12)
}

class Employee extends IdPK with OneToMany[Long, Employee] with Person[Employee] {
  def getSingleton = Employee

  object contactInfos extends MappedOneToMany(EmployeeContactInfo, EmployeeContactInfo.person) 
}

object Employee extends Employee with LongKeyedMetaMapper[Employee] 

trait PersonContactInfo[T <: LongKeyedMapper[T],P <: Person[P]] extends LongKeyedMapper[T] {
  self: T =>
  object email extends MappedEmail[T](this, 80)
  def personMeta:P with LongKeyedMetaMapper[P]
  object person extends LongMappedMapper[T,P](this, personMeta)
}

class EmployeeContactInfo extends IdPK with PersonContactInfo[EmployeeContactInfo, Employee] {
  def getSingleton = EmployeeContactInfo
  val personMeta = Employee

}
object EmployeeContactInfo extends  EmployeeContactInfo with LongKeyedMetaMapper[EmployeeContactInfo]

Person

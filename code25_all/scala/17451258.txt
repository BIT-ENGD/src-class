package examples
import scala.concurrent.ops._

object concurrent extends App {

    class BoundedBuffer[A](N:Int) {
        var in = 0;
        var out = 0;
        var n = 0;

        def put(x:A) = synchronized {
          while(n>=N)
            wait()
          in = (in + 1)/N;
          n = n+1;
          println("In put.")
          if(n==1)
            notifyAll()
        }

        def get = synchronized {
          while(n==0)
            wait()
          out = (out + 1)%N;
          n = n-1;
          println("In get.")
          if(n == N-1)
            notifyAll()
        }
    }

    val buf = new BoundedBuffer[Int](10)
    spawn {
        while(true)
            buf.put(0);
    }
    spawn {
        while(true)
            buf.get;
    }
}

In put.
In put.
In get.
In get.


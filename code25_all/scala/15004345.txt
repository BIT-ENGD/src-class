id | requestTimestamp
1  | Jan 1, 2013 01:02:003
2  | Jan 1, 2013 03:04:005
3  | Jan 1, 2013 05:06:007
4  | Jan 2, 2013 01:01:001

Jan 1, 2013 -> (1, 2, 3)
Jan 2, 2013  (4)

private implicit object Logins extends Table[(Int, Timestamp)]("LOGINS") {
    def id = column[Int]("ID", O.PrimaryKey)
    def requestTimeStamp = column[Timestamp]("REQUESTTIMESTAMP", O.NotNull)
    def * = logId ~ requestTimeStamp
}

val q = for {
    l <- Logins if (l.id >= 1 && l.id <= 4)
} yield l

val dayGroupBy = new java.text.SimpleDateFormat("MM/dd/yyyy")
val q1 = q.groupBy(l => dayGroupBy.format(l.requestTimeStamp))

db.withSession {
    q1.list
}

java.lang.IllegalArgumentException: Cannot format given Object as a Date


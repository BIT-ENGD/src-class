case class StringCaseClass(argument: String)

case class IntCaseClass(argument: Int)

type HasApply1 {
  def apply[A, R](argument: A): R
}

def method(caseClass: HasApply1) {
  // whatever
}

method(StringCaseClass)

found   : StringCaseClass.type
required: WithApply1
            (which expands to)  AnyRef{def apply[A, R](string: A): R}


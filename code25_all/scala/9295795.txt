class Boot {
  val bootLogger = LoggerFactory.getLogger(this.getClass)//slf4j
  val confPath = Option(System.getenv("CONF_FILE"))
  //living inside akka-kernel, so there is no access to real args
  val args: Array[String] = confPath match {
    case Some(path) => Array("-f", path)
    case None       => Array()
  }

  bootLogger.info(Class.forName("la.myproject.Config").toString)

  val runtime = RuntimeEnvironment(this, args)
  val server = runtime.loadRuntimeConfig[Server]()
  try {
    server.start()
  } catch {
    case e: Exception =>
      bootLogger.error("Server start failed", e)
  }
}

new la.myproject.Config {
  //use the defaults
}


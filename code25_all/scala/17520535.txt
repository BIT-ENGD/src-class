def session() = sessionFactory.getCurrentSession()

def transaction() = session().getTransaction()

def tx[A, B](f: A => B)(a: A): B = {
try {
  session().beginTransaction()
  val r = f(a)
  transaction().commit()
  return r
} catch {
  case e: 
    Throwable => 
      transaction().rollback()
      throw e
} finally {
  session.close()      
}

def saveMyEntity() {
  session().save(new MyEntity)
}

tx(saveMyEntity)()

[error]  found   : () => Unit
[error]  required: ? => ?
[error]   tx(saveMyEntity)()


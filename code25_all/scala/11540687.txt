case class Rect2D[A, N <: Nat](rows: Sized[Seq[A], N]*)

N
Rect2D
case class Rect2D[A](rows: Sized[Seq[A], _ <: Nat]*)

*
Rect2D(Sized(1, 2, 3), Sized(1, 2))

case class Rect2D[A](rows: Seq[Sized[Seq[A], N]] forSome { type N <: Nat })

forSome
Seq
Seq
Rect2D(Seq(Sized(1, 2, 3), Sized(3, 4, 5)))
*
case class Rect2D[A](rows: Sized[Seq[A], N] forSome { type N <: Nat }*)

case class Rect2D[A](rows: Sized[Seq[A], N]* forSome { type N <: Nat })

_
case class X[A](a: A)
case class Y(xs: X[_]*)

Y(X(1), X("1"))
case class Y(xs: Seq[X[B]] forSome { type B })

case class Y[B](xs: X[B]*)

Y
B

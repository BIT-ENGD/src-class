Boot.scala
LiftRules.httpAuthProtectedResource.prepend {
  case Req(List("api", "incomingCall", incomingCall), _, GetRequest) => Full(AuthRole("admin"))
}

LiftRules.authentication = HttpBasicAuthentication("lift") {
  case (username, password, req) => {
    User.find(By(User.firstName, username)) match {
      case Full(user) if user.password.match_?(password) => {
        userRoles(AuthRole("admin"))
        User.logUserIn(user) //I tried with and without this line
         true
      }
      case x => {
        false
      }
    }
  }
}

LiftRules.dispatch.append(IncomingCallRest)

object IncomingCallRest extends RestHelper {
  serve {
    case "api" :: "incomingCall" :: incomingCall :: _ JsonGet _ => {
      val currentUser = User.currentUser openOr User; //<--- On this line I'm trying to access the User, but it returns a blank user
      val messageWithUser = (incomingCall, currentUser.userIdAsString)
      ChatServer ! messageWithUser
      JString(incomingCall)
    }
  }
}

User.currentUser
User.currentUser

package models

import play.api.Play.current
import org.codehaus.jackson.annotate.JsonProperty
import net.vz.mongodb.jackson.ObjectId
import play.modules.mongodb.jackson.MongoDB
import reflect.BeanProperty
import scala.collection.JavaConversions._
import net.vz.mongodb.jackson.Id
import org.codehaus.jackson.annotate.JsonIgnoreProperties

case class Team( 
  @BeanProperty @JsonProperty("teamName") var teamName: String,
  @BeanProperty @JsonProperty("logo") var logo: String,
  @BeanProperty @JsonProperty("location") var location: String,
  @BeanProperty @JsonProperty("details") var details: String,
  @BeanProperty @JsonProperty("formOfSport") var formOfSport: String) 

object Team {
  private lazy val db = MongoDB.collection("teams", classOf[Team], classOf[String])

  def save(team: Team) { db.save(team) }


  def getAll(): Iterable[Team] = {
    val teams: Iterable[Team] = db.find()    
    return teams
  }

  def findOneByTeamName(teamName: String): Team = {
    val team: Team = db.find().is("teamName", teamName).first
    return team
  }

}

_id
findOneByTeamName
UnrecognizedPropertyException for _id.
Team.apply
Team.unapply
_id
id

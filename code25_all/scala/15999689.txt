import scala.reflect.runtime.{universe => ru, currentMirror => cm}
import ru._

def test[T:TypeTag](obj: T) {
  for (c <- typeOf[T].declarations; if c.annotations.exists(_.tpe =:= ru.typeOf[Message])) {
    val tpe = c.asClass.selfType
    for (m <- tpe.declarations.sorted) {
      println("Member type: " + m.typeSignature)
    }
  }
}

object Test extends App {
  test(TestMessageDef)
}

object TestMessageDef {
  @Message
  case class A(d: Option[Long])
}

@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.TYPE)
public @interface Message {
}

Member type: Option[Long]

Member type: Option[java.lang.Object]


abstract class A[T <: AnyRef]{
  def whichClass: Class[_] = classOf[T]
}

case class X()

object B extends A[X]

object Main{
  def main(args: Array[String]){
    B.whichClass //should return classOf[X]
  }
}

classOf[T]
error: class type required but T found
def whichClass: Class[_] = classOf[T]


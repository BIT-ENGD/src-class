package models

import play.api.Play.current
import com.novus.salat._
import com.novus.salat.dao._
import com.mongodb.casbah.Imports._
import se.radley.plugin.salat._
import com.novus.salat.global._

case class Category(
  _id: ObjectId = new ObjectId,
  category: Categories,
  subcategory: List[SubCategories]
)

case class Categories(
  category_id: String,
  category_name: String
  )

case class SubCategories(
  subcategory_id: String,
  subcategory_name: String
)

object Category extends ModelCompanion[Category, ObjectId] {
  val collection = mongoCollection("category")
  val dao = new SalatDAO[Category, ObjectId](collection = collection) {}
  val CategoryDAO = dao

  def options: Seq[(String,String)] = {
    find(MongoDBObject.empty).map(it => (it.category.category_id, it.category.category_name)).toSeq
  }

  def suboptions: Seq[(String,String,String)] = {
    find(MongoDBObject.empty).map(it => (it.category.category_id, it.subcategory.subcategory_id, it.subcategory.subcategory_name)).toSeq
  }
}

value subcategory_id is not a member of List[models.SubCategories]

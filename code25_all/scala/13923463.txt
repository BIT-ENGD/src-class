@RunWith(classOf[JUnitRunner])
class SandboxSpec extends FlatSpec with ShouldMatchersForJUnit {

  sealed trait PropertyValue

  case class IntValue(value: Int) extends PropertyValue
  case class RealValue(value: Float) extends PropertyValue

  class Parser extends JavaTokenParsers {
    def propertyLiteral : Parser[PropertyValue] = intValue | realValue

    def realValue  = floatingPointNumber ^^ {
      s => RealValue(s.toFloat)
    }

    def intValue  = wholeNumber ^^ {
      s => IntValue(s.toInt)
    }
  }

  "A java token parser" should "parse a float" in {
    val p = new Parser()

    val result = p.parseAll(p.propertyLiteral, "5.4") match {
      case p.Success(x, _) => x
      case p.NoSuccess(msg, _) => fail(msg)
    }

    result should be(RealValue(5.4f))

  }
}

string matching regex `\z' expected but `.' found

<~ not(not('.'))

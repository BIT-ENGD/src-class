class City(val id: Long, val name: String) extends KeyedEntity[Long] {
  def this() = this(0, "")
}

class Address(val id: Long, val street: String, val number: Int, val city_id: Long) 
     extends KeyedEntity[Long] {
  def this() = this(0, "", 0, 0)

  lazy val city = SpaDb.cities2Addresses.rightStateful(this)
}

object SpaDb extends Schema {
  val cities = table[City]("cities")
  val addresses = table[Address]("addresses")
  val cities2Addresses = oneToManyRelation(cities, addresses).via(_.id === _.city_id)
}

class SpaServlet extends SpaStack with JacksonJsonSupport {
  before() {
    contentType = formats("json")
  }

  get("/addresses") {
    Address.all   //return all addresses
  }
}

{"id":1,"street":"Street 1","city_id":1}

{"id":1,"street":"Street 1","city_id":1, "city": {"id":1,"name":"MyCity"}}


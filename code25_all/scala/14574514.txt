case class Msg(a:Int, s:Int)

implicit val formats = DefaultFormats
val msg = Msg(1, 1)
val jv = Extraction.decompose(m)
println(compact(render(jv))) // this print {}

"-dontoptimize",
"-printseeds keep.log", "-printmapping obf.log",
"-keepparameternames",
"-dontskipnonpubliclibraryclasses",
"-dontskipnonpubliclibraryclassmembers",
"-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,*Annotation*,EnclosingMethod",
"-dontobfuscate",
"-keepclassmembers class * { ** MODULE$; }",
"-keep public class scala.ScalaObject",
"-keep public class scala.Function*",
"-keep public class scala.Tuple2",
"-keep public class scala.Tuple4",
"-keep class my.pkg.**",
"-keep interface my.pkg.**",
"-keepclasseswithmembers class my.pkg.** { *; }"


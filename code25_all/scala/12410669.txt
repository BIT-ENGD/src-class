trait CellT[VAL <: AnyVal] {
  var value: VAL
  type NEXT <: AnyVal
  var next: CellT[NEXT]
}

abstract class Cell[VAL <: AnyVal] extends CellT[VAL] {
  var next = this  // defaults to `this`. ERROR
}

// impl example:
class CellInt extends Cell[Int] {
  var value: Int = 0
}

this
VAL <: AnyVal
NEXT <: AnyVal
next
Cell[A <: AnyVal]
[VAL <: AnyVal]
[VAL]
Cell[Int]
next
Cell[Int]
next
Cell[*]

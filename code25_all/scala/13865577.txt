trait World {
  type State
  def dynamics(s: State): State
  // ...
}
trait GridWorld extends World {
  class State {...} // concrete
  def dynamics(s: State) = s    // concrete
  // some other staff still abstract
}
trait SimpleGridWorld extends GridWorld {
  class State extends super.State {...}  // concrete
  def foo {dynamics(new State)}  // compiler error
}

dynamics
World
GridWorld
World
GridWorld
GridWorld.this.dynamics
extends super.State
SimpleGridWorld
GridWorld.State
State
SimpleGridWorld
GridWorld.this.State
dynamics
World
GridWorld
GridWorld.this.State
SimpleGridWorld.this.State
XXXWorld.this.State
super.State
dynamics
super.dynamics

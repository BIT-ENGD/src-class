class Client(server: ActorRef) extends Actor {

  var every = 2

  override def preStart() = {
    println("client started. sending message....")
    server ! new Message((x) => x % every == 0)
  }

}

preStart()
val every_ = every
Function1[A,B]
class MyFunc(every : Int) extends Function1[Int,Boolean] with Serializable {

  def apply(v1 :Int) : Boolean = {
    v1 % every == 0
  }  
}


server ! new Message(new MyFunc(every))

Function1.apply
apply
MyFunc
server ! new Message(new MyFunc(every){ // not valid scala code
  x % every == 0
})

every
Function1
Function1
Function1

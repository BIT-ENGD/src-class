case class Post(id: Pk[Long]= NotAssigned, name:String, image:String)

def listAllPostById():List[Post]={
    DB.withConnection{ implicit connection =>
      val listpost =SQL(
          """
          select * from POST 
          """).on(
              ).as(Post.simple.*)
    listpost     
    }

def listAllpost()= Action{
    val post:List[Post]=Post.listAllPostById
    Ok(views.html.allPosts.render(post))
   }

GET  /allPosts    controllers.Application.listAllpost

@for(post:Post<- posts){
@post.id
@post.name
@post.image}

 val simple ={
    get[Pk[Long]]("post.id") ~
    get[String]("post.name")~
    get[String]("post.image") map {
      case id ~ name ~ image => Post(id,name,image)
    }

Execution exception

[RuntimeException: UnexpectedNullableFound(post.IMAGE)] 

   ).as(Post.simple.*)


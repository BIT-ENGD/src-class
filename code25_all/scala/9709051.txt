// Generate list of integers by applying f to b until it returns None
def unfold(b: Int, f: Int => Option[(Int, Int)]): IntList = {
  f(b) match {
    case None => Nil()
    case Some((x, y)) => Cons(x,unfold(y, f))
  }
}

// generate the list of integers from i until j
def fromUntil(i: Int, j: Int): IntList = {
    unfold(i, (x: Int) =>if(x < j) Some((j, j - 1)) else None)
    }
}


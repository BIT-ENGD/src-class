import _root_.javax.persistence._
import org.apache.openjpa.persistence._
@Entity
@Table(name="tasks")
@ManyToMany
class CTask (name: String) {
   def this() = this("new task")
   @Id
   @GeneratedValue(strategy=GenerationType.IDENTITY)
   @Column(unique = true, nullable = false)
   var id: Int = _
   var title: String = name
   def getId = id
   def getTitle = title
   def setTitle(titleToBeSet: String) = title = titleToBeSet
   override def toString: String = title
}

import _root_.javax.persistence._
import _root_.java.util.ArrayList
import org.apache.openjpa.persistence._
@Entity
@Table(name="tasklists")
class CTaskList(titleText: String) {
@Id
@GeneratedValue(strategy=GenerationType.IDENTITY)
@Column(unique = true, nullable = false)
    var id: Int = _
    @Column(nullable = false)
    var title: String = titleText
    @ManyToMany
var tasks: ArrayList[CTask] = _;
var tags: String = ""
var rank: Int = 0

def getTasks = tasks
def this() = this("new task list")
def createTasks: ArrayList[CTask] = {
    tasks = new ArrayList[CTask]
    tasks
}
def getID = id
def getTags = tags
def setTags(tagsParam: String) = tags = tagsParam
def getRank = rank
def setRank(rankParam: Int) = rank = rankParam
def getTitle: String = title
def getTaskById(index: Int): CTask = {
    null
}
def equals(anotherTaskList: CTaskList): Boolean = {
    if (anotherTaskList == null)  return false
    if (anotherTaskList.getTasks == null)
        return id == anotherTaskList.getID && title == anotherTaskList.getTitle && tags == anotherTaskList.getTags && rank == anotherTaskList.getRank && tasks == null;
    else
        return id == anotherTaskList.getID && title == anotherTaskList.getTitle && tags == anotherTaskList.getTags && rank == anotherTaskList.getRank && tasks != null && tasks.size == anotherTaskList.getTasks.size
}

def addTask(taskToBeAdded: CTask): Int = {
    if (tasks == null) 
        tasks = new ArrayList[CTask]
    tasks.add(taskToBeAdded)
    tasks.indexOf(taskToBeAdded)}
def printTasks = println("TaskList's " + this + " tasks: " + tasks)


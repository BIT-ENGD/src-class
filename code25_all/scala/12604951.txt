object Chapter4Exercise2 extends App {

  //for sorting
  import util.Sorting._

  //grab the file
  val inputFile = new java.util.Scanner(new java.io.File("moby.txt"))

  //create a mutable map where key/values == word/count
  val wordMap = collection.mutable.Map[String, Int]() withDefault (_ => 0)

  //for formatting output (later), the longest word length is relevant
  var longestWord = 0
  var theWord: String = ""

  //start reading each word in the input file
  while (inputFile hasNext) {
    //grab the next word for processing, convert it to lower case, trim spaces and punctuation
    var nextWord = inputFile.next().toLowerCase().trim().filter(Character.isLetter(_))
    //if it's the longest word, update both theWord and longestWord
    if (nextWord.size > longestWord) longestWord = nextWord.size; theWord = nextWord; println(theWord + " " + longestWord)
    //update the map value for the key with same value as nextWord
    wordMap(nextWord) += 1
  }

    println("Longest word is " + theWord + " at " + longestWord + " Characters")
}

    if (nextWord.size > longestWord) longestWord = nextWord.size; theWord = nextWord; println(theWord + " " + longestWord)

    println("Longest word is " + theWord + " at " + longestWord + " Characters")


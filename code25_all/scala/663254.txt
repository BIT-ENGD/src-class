class Slot[+T] (var some: T) { 
   //  DOES NOT COMPILE 
   //  "COVARIANT parameter in CONTRAVARIANT position"

}

+T
T
T
T
class Slot[+T] (var some: Object){    
  def get() = { some.asInstanceOf[T] }
}

abstract class _Slot[+T, V <: T] (var some: V) {
    def getT() = { some }
}

Slot
var
val
class Slot[+T] (val some: T) { 
}


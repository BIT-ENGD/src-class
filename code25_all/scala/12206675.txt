def storePlayerEntry(n: Node, moved: Boolean) = {

    moved match {
      // storing a current player record
      // rowkey = playerid
      case true => {
        //println("current: " + teamId + ":" + n)
        println("id: " + n \ "@uID")
        for (
          s <- Seq("first_name",
            "last_name",
            "known_name",
            "birth_date",
            "weight",
            "height",
            "jersey_num",
            "real_position",
            "real_position_side",
            "join_date",
            "country")
        ) {
          val stat = (n \\ "Stat").filter(_.attribute("Type").filter(_.toString() == s).isDefined)
          Option(stat.text) match {
            case Some(st) if (st == "") => // do nothing
            case Some(st) => println(st)
            case None => // do nothing
          }
        }
        //val ret = dataApi.upsertMulti("players", 
      }
      case false => {
        //println("old: " + teamId + ":" + n)            
      }
    }
  }


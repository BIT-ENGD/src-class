trait WithUpperBounds[AA[_] <: Set[_], Node, Edge] {
    val nodes: AA[Node]
    val edges: AA[Edge]
}

class WithoutUpperBounds[AA[_] <: Set[_], Node, Edge](
    val nodes: AA[Node],
    val edges: AA[Edge]
) extends WithUpperBounds[AA, Node, Edge] {
    val nodes2Set: Set[Node] = nodes
    val edges2Set: Set[Edge] = edges
}

scala> :l …/Sandbox.scala
Loading …/Sandbox.scala...
defined trait WithUpperBounds
<console>:10: error: type mismatch;
 found   : AA[Node]
 required: Set[Node]
        val nodes2Set: Set[Node] = nodes
                                   ^
<console>:11: error: type mismatch;
 found   : AA[Edge]
 required: Set[Edge]
        val edges2Set: Set[Edge] = edges
                                   ^


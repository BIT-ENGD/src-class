trait DFA[S] { /* S is the type of the symbols in the alphabet */
  trait State { def next(x : S); }
  /* final type Sigma = S */
}

<% Seq[alphabet-type-of-the-dfa]
def runDFA[S, D <: DFA[S], SQ <% Seq[S]](d : D)(seq : SQ) = ....

def runDFA[D <: DFA[S] forSome { type S }, SQ <% Seq[D#Sigma]]( ... same as above

def runDFA[D <: DFA, SQ <% Seq[D#Sigma]]( ... same as above

dfa.Sigma
D#Sigma

class Calculator(pBrand: String, pModel: String) {
  /**
   * A constructor
   */
  val brand: String = pBrand
  val model: String = pModel
  val color: String = if (brand.toUpperCase == "TI") {
    "blue"
  } else if (brand.toUpperCase == "HP") {
    "black"
  } else {
    "white"
  }

  // An instance method
  def add(m: Int, n: Int): Int = m + n
}

class ScientificCalculator(pBrand: String, pModel: String) extends Calculator(pBrand: String, pModel: String) {
  def log(m: Double, base: Double) = math.log(m) / math.log(base)
}

class EvenMoreScientificCalculator(pBrand: String, pModel: String) extends ScientificCalculator(pBrand: String, pModel: String) {
  def log(m: Int): Double = log(m, math.exp(1))
}

bobk-mbp:Scala_School bobk$ sbt console
[info] Set current project to default-b805b6 (in build file:/Users/bobk/work/_workspace/Scala_School/)
[info] Starting scala interpreter...
[info] 
Welcome to Scala version 2.9.2 (Java HotSpot(TM) 64-Bit Server VM, Java 1.7.0_17).
Type in expressions to have them evaluated.
Type :help for more information.
...
scala> def calcType(calc: Calculator) = calc match {
     |   case calc.brand == "hp" && calc.model == "20B" => "financial"
     |   case calc.brand == "hp" && calc.model == "48G" => "scientific"
     |   case calc.brand == "hp" && calc.model == "30B" => "business"
     |   case _ => "unknown"
     | }
<console>:9: error: not found: value &&
         case calc.brand == "hp" && calc.model == "20B" => "financial"
                                 ^
<console>:10: error: not found: value &&
         case calc.brand == "hp" && calc.model == "48G" => "scientific"
                                 ^
<console>:11: error: not found: value &&
         case calc.brand == "hp" && calc.model == "30B" => "business"
                                 ^
scala> 


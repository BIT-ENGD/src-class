class TestWrapper(wrapped: Test) extends Test { ... }

val pName = newTermName("wrapped")
val paramSym = myNewClass.newValueParameter(owner.pos.focus, pName)
paramSym.setInfo(wrapped.tpe).setFlag(SYNTHETIC)
val param = ValDef(paramSym)

ClassDef(myNewClass, NoMods, List(List(param)), List(Nil),
        members, owner.pos)

// Scala source: Test.scala
[[syntax trees at end of generatewrappers]]
package test {
  <synthetic> class TestWrapper extends Object with test.Test {
    <synthetic> val wrapped: test.Test = _;
    def this(wrapped: test.Test): test.TestWrapper = {
      TestWrapper.super.this();
      ()
    };
    <synthetic> def m3: Int = TestWrapper.this.wrapped.m3;
  };

java.lang.NoSuchFieldError: wrapped
    at test.TestWrapper.m3(Test.scala:1)
    ...

1) A constructor parameter
2) An class instance field
3) A getter for the class instance field

<synthetic> val wrapped: test.Test = _;


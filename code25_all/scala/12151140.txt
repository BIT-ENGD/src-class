object Test {
  sealed trait Pattern[T] {
    val data : T
  }
  object Pattern {
    def apply[T](data : T) : Pattern[T] = Primary(data)
    def apply[T](data : T, f : Float) : Pattern[T] = Full(data,f)
    def unapply[T](pat : Pattern[T]) : Option[T] = Some(pat.data)
  }
  final case class Primary[T](data : T) extends Pattern[T]
  final case class Full[T](data : T, f: Float) extends Pattern[T]

  val recognize1 : PartialFunction[Pattern[Any],Unit] = {
    case pat@Pattern(d) => println("pattern recognized: " + pat)
    case _ => println("simple failed")
  }
  val recognize2 : PartialFunction[Pattern[Any],Unit] = {
    case pat@Full(x : Int, f) => println("full@Int detected: " + pat)
    case pat@Pattern(c : Float) => println("pat@Float detected: " + pat)
    case _ => println("full-pattern detection failed")
  }
  val recognize3 : PartialFunction[Pattern[Any],Unit] = {
    case pat@Pattern(x : Int) => println("pat@Int detected: " + pat)
    case pat@Pattern(c : Float) => println("pat@Float detected: " + pat)
    case _ => println("pattern-pattern detection failed")
  }
  val recognize4 : PartialFunction[Pattern[Any],Unit] = {
    case pat@Full(x : Int, f) => println("full@Int detected: " + pat)
    case pat@Full(c : Float, f) => println("full@Float detected: " + pat)
    case _ => println("full-full detection failed")
  }
  val allRecognize : List[PartialFunction[Pattern[Any],Unit]] =
    List( recognize1, recognize2, recognize3, recognize4)

  val tests : List[Any] = List(3) ++ List(5.0f)

  def testAll() = for (t <- tests) {
    println("test: " + t)
    val primary = Pattern(t)
    for (r <- allRecognize) r(primary)
    val full = Pattern(t,1.0f)
    for (r <- allRecognize) r(full)
    println("")
  }
}

scala> Test.testAll()
test: 3
pattern recognized: Primary(3)
full-pattern detection failed
pat@Int detected: Primary(3)
full-full detection failed
pattern recognized: Full(3,1.0)
full@Int detected: Full(3,1.0)
pat@Int detected: Full(3,1.0)
full@Int detected: Full(3,1.0)

test: 5.0
pattern recognized: Primary(5.0)
pat@Float detected: Primary(5.0)
pat@Float detected: Primary(5.0)
full-full detection failed
pattern recognized: Full(5.0,1.0)
full-pattern detection failed
pat@Float detected: Full(5.0,1.0)
full@Float detected: Full(5.0,1.0)


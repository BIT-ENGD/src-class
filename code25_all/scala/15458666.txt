Elem
trait NumbersParsers extends RegexParsers {
  def number = """\d+""".r
}

trait LookupParsers extends Parsers {
  type Elem = String
  def word = elem("word", (potential:String) => dictionary.exists(_.equals(x))
}

object MyParser extends NumbersParsers with RegexParsers {
  def quantitive = number ~ word
}

Elem

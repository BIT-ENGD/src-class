def sequence[A](a:List[Option[A]]):Option[List[A]]

def sequence[A](a:List[Option[A]]):Option[List[A]] = a match {
   case Nil => Some(Nil)
   case h::t => h flatMap (r => sequence(t) map (h::_))
}

h flatMap (r => sequence(t) map (h::_))
Option[A]
Option[B]
Option[B]
sequence(t) map (h :: _)
Option[List[A]]
List[Option[A]]
Option[List[A]]

class Foo { this: A with B with C =>
  // ...
}

A
B
C
class Outer[A, B, C] {
  class Inner { this: A with B with C =>
    // ...
  }
}

class Outer {
  type A
  type B
  type C
  class Inner { this: A with B with C =>
    // ...
  }
}

abstract class Inner extends A with B with C
A
B
C
trait A { def a }
trait B { def b }
trait C { def c }
class Foo { this: A with B with C =>
  // ...
}

abstract class Foo extends A with B with C

val sets = Set(Set("a","b","c"), Set("1","2"), Set("S","T"))

Set("a&1&S", "a&1&T", "a&2&S", ..., "c&2&T")

def combine[A](f:(A, A) => A)(xs:Iterable[Iterable[A]]) =
    xs.reduceLeft { (x, y) => x.view.flatMap {a => y.map(f(a, _)) } } 

val expanded = combine{(x:String, y:String) => x + "&" + y}(sets).toSet

Set[Set[A]]
Set[B]
f
combine
(a:Int, b:String) => a + b.length 


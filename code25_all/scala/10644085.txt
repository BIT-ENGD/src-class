import scala.actors._
object main_object {
    def infoterm(msg: String) = {
        println(msg)
    }
    def main(args: Array[String]) = {
    println("hallo")
    empfänger ! "foo"


    }
}


object empfänger extends Actor{
    var port = 50042
    var name = "local"
    var continuevar = true
    def foo(in: String) = {
        println("foo-empfänger" + in)
    }
    def act() {
        println("ydfjskj")
        test2.infoterm("tut")
        println("Empfänger gestartet")
        while(continuevar) {
            react {
                case msg:String  => {
                    println("empfänger" + msg)
                    test2.infoterm(msg)
                    foo("empfänger" + msg)
                }
            }
        }
    }
}

import scala.actors._
object test2 {
    def infoterm(msg: String) = {
        println(msg)
    }
    def main(args: Array[String]) = {
    println("hallo")
    }
}

object empfänger extends Actor{
    def act() {
        // test2.infoterm("tut")
        // println("Empfänger gestartet")
        loop {
            react {
                case msg:String  => {
                    if(msg == "Stop") exit()
                    else {
                    println("empfänger" + msg)
                    // test2.infoterm(msg)
                    }
                }
            }
        }
    }
}


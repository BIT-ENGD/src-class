trait Operable {
  def +[A](other: A)(implicit evidence: this.type =:= A): this.type
  def -[A](other: A)(implicit evidence: this.type =:= A): this.type
  def *[A](other: Float): this.type
}
/** Position descriptions */
trait Pos[T <: Operable] {
  def eval: T
}
def test[T <: Operable](x1: Pos[T], x2: Pos[T]): T = {
  x2.eval - x1.eval
}

 Cannot prove that _1.type =:= T.


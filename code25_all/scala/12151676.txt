package controllers.api

import play.api.mvc._
import play.Logger
import play.api.data.Form
import play.api.data.Forms.{mapping, text, optional}
import com.codahale.jerkson.Json
import org.squeryl.PrimitiveTypeMode._
import models.{ApplicationDatabase, Category}


object Categories extends Controller { 

  def findAll = Action {
    val json = inTransaction {
      val list = from(ApplicationDatabase.categories)(categories =>
        select(categories)
        orderBy(categories.title)
      )      
      Logger.info(list.toString)
      Json.generate(list)
    }

    Ok(json).as(JSON)
  }

  def findById(id: Long) = Action {
    val category = inTransaction { 
      ApplicationDatabase.categories.lookup(id)
    }

    Ok(Json.generate(category)).as(JSON)
  }

}

package models

import org.squeryl.PrimitiveTypeMode._    
import org.squeryl.annotations.Column


class Category(var uid: String, var title: String) extends FlashcardsDbObject {

}

package models;

import java.sql.Timestamp    
import org.squeryl._
import org.squeryl.annotations.{Column}
import org.squeryl.PrimitiveTypeMode._

class FlashcardsDbObject extends KeyedEntity[Long] {

  val id: Long = 0

  @Column("created_at")
  var createdAt = new Timestamp(System.currentTimeMillis)


  @Column("updated_at")
  var updatedAt = new Timestamp(System.currentTimeMillis)

}

{
  persisted: true
},
{
  persisted: true
},

{
  id: 1,
  uid: 'chemistry',
  title: 'Chemistry'
  persisted: true
},
{
  id: 2,
  uid: 'biology',
  title: 'Biology'
  persisted: true
},


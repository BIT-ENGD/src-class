f: A => B => ... => Z
f.uncurried:(A, B, ...) => Z
implicit def enrichMyCurriedFunction[A, B, C] = new EnrichedCurriedFunction[A, B, C](_)

class EnrichedCurriedFunction[A, B, C](f: A => B => C) {
  def uncurried: (A, B) => C = (a, b) => f(a)(b)
}


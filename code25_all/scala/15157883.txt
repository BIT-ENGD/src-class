case class One(someParam: String) {
private val _defaultTimeout = readFromConfig("defaultTimeout")
val timeout: Timeout = akka.util.Timeout(_defaultTimeout seconds)
val info: Option[Info] = Await.result(someSmartService.getInformationForSomething(someParam)), timeout.duration)
}

def encrypt(oldOne: One): One = {
  val encryptedSomeParam = EncryptService.getHash(oldOne.someParam)
  val encryptedInfo = encryptInfo(oldOne.info)
  // what to do with that? ^^
  one.copy(someParam = encryptedSomeParam)
}

val info: Option[Info] = EncryptionService.encrypt(someSmartService.getInformationForSomething(someParam))


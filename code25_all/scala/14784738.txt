    class C (val i: Int) {
          def mkString() = { println("C.i =" + this.i) }

    object C {
               implicit val cOrdering = new Ordering [C] 
               {
                   def compare (a: C, b: C)= 
                   {
                        a.i compare b.i;
                   }
               }

    class  ContainerOfC [C] (s:Int) (implicit ordering: cOrdering[C]) {

               var internalCollection = new TreeSet[C]()

               def + (c:C): ContainerOfC [C] = {
                   this.internalCollection += c
                   this
               }

               def mkStringOfElems () = {

                   val y = this.internalCollection.toList

                   println (y.head.i) // <--- Problem here

                }

            }

error: value i is not a member of type parameter C
                                    println(y.head.i)
                                                   ^


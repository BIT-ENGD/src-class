abstract class AbstractProcessor {
  def onPush(i:Info): Unit
}

trait Pass1 {
  def onPush(i:Info): Unit = { /* stuff */ }
}

trait Pass2 {
  def onPush(i:Info): Unit = { /* stuff */ }
}

new AbstractProcessor with Pass1
new AbstractProcessor with Pass2
trait Custom extends AbstractProcessor {
  abstract override def onPush(i:Info): Unit = {
    // do stuff before
    super.onPush(i)
    // do stuff after
  }
}

new AbstractProcessor with Pass1 with Custom

trait CList[T]
trait CNil [T] extends CList[T]
trait CCons[T] extends CList[T] {
  def head: T
  def tail: CList[T]
}

@annotation.tailrec def lastValue[T](l: CList[T]): Option[T] = l match {
  case _: CNil [_] => None
  case c: CCons[_] => lastValue(c.asInstanceOf[CCons[T]]) // ouch!
}

CList
T

val f = Future{ 1 + 4 }

f onComplete
{
  _.value.get.fold(
    v => throw new Exception("My Exception"),
    println(_)
  )
}

class FutureDemo extends Actor
{
  def receive =
  {
    case (a: Int, b: Int) =>
      a + b
  }
}

val fa1 = actorOf[FutureDemo].start()

val future = fa1 ? (1, 2)

future onComplete
{
  _.value.get.fold(
    v => throw new Exception("My Exception"),
    println(_)
  )
}

println(future.get)

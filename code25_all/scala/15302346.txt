...
[NodeA]
propA=val1
propB=val2
propC=val3

[NodeB]
...

lazy val parserA: Parser[String] = "propA" ~> "=" ~> mPropA 
lazy val parserB: Parser[String] =  
...

lazy val nodeA: Parser[NodeA] = "[" ~> "NodeA" ~> "]" ~> parserA ~> parserB ~> parserB ^^ { 
   case iPropA ~ iPropB ~ iPropC => new NodeA(iPropA, iPropB, iPropC)
}

[NodeA]
propC=val3
propA=val1
propB=val2


TraversableLike.flatMap
def flatMap[B, Th](f : (A) => Traversable[B])(implicit bf : CanBuildFrom[Repr, B, Th]) : Th

GenericTraversableTemplate.flatten
def flatten[B](implicit asTraversable : (A) => Traversable[B]) : CC[B] 

flatMap
implicit
TraversableLike
def flatten[B, Th](implicit asTraversable: (A) => Traversable[B], 
                   implicit bf : CanBuildFrom[Repr, B, Th]) : Th


src/main/resources
[trace] Stack trace suppressed: run last Akkdroid/android:package-debug for the full output.
[error] (Akkdroid/android:package-debug) 
[error] Using keystore: /home/ghik/.android/debug.keystore
[error] Packaging akkdroid-0.1.apk
[error] /data/Studia/S10/Mobilne/akkdroid/target/resources.apk:
[error] => res/layout/main.xml
[error] => AndroidManifest.xml
[error] => resources.arsc
[error] /data/Studia/S10/Mobilne/akkdroid/target/classes.dex => classes.dex
[error] /data/Studia/S10/Mobilne/akkdroid/target/classes.min.jar:
[error] => akkdroid.conf
[error] => library.properties
[error] => reference.conf
[error] => org/jboss/netty/container/spring/beans.xml
[error] /data/Studia/S10/Mobilne/akkdroid/src/main/resources/akkdroid.conf => akkdroid.conf
[error] 
[error] Error packaging /data/Studia/S10/Mobilne/akkdroid/target/akkdroid-0.1.apk: Duplicate files at the same path inside the APK
[error] Total time: 20 s, completed 2013-04-24 20:32:47

akkdroid.conf
classes.min.jar
sbt
classes.min.jar
src/main/resources
sbt
import sbt._

import Keys._
import AndroidKeys._

object General {
  val settings = Defaults.defaultSettings ++ Seq(
    name := "Akkdroid",
    version := "0.1",
    versionCode := 0,
    scalaVersion := "2.10.1",
    platformName in Android := "android-10",
    javacOptions ++= Seq("-source", "1.6", "-target", "1.6")
  )

  val proguardSettings = Seq(
    useProguard in Android := true,
    proguardOption in Android :=
      """-keepclassmembers class * {
        |  ** MODULE$;
        | }
        |-keep public class akka.actor.LocalActorRefProvider {
        |public <init>(...);
        |}
        |-keep public class akka.remote.RemoteActorRefProvider {
        |public <init>(...);
        |}
        |-keep class akka.actor.SerializedActorRef {
        |*;
        |}
        |-keep class akka.remote.netty.NettyRemoteTransport {
        |*;
        |}
        |-keep class akka.serialization.JavaSerializer {
        |*;
        |}
        |-keep class akka.serialization.ProtobufSerializer {
        |*;
        |}
        |-keep class com.google.protobuf.GeneratedMessage {
        |*;
        |}
        |-keep class akka.event.Logging*
        |-keep class akka.event.Logging$LogExt{
        |*;
        |}
        |-keep class scala.Option
        |-keep class scala.Function1
        |-keep class scala.PartialFunction
        |-keep class scala.collection.SeqLike {
        |public protected *;
        |}
        |-keep class akka.**
        |-keepclassmembers class akka.**
        |-keep class org.omg.**
        |-keep class scala.Tuple2
        |-dontskipnonpubliclibraryclassmembers
        |-dontskipnonpubliclibraryclasses
      """.stripMargin
  )

  lazy val fullAndroidSettings =
    General.settings ++
      AndroidProject.androidSettings ++
      TypedResources.settings ++
      proguardSettings ++
      AndroidManifestGenerator.settings ++
      AndroidMarketPublish.settings ++ Seq(
      keyalias in Android := "change-me",
      libraryDependencies += "org.scalatest" %% "scalatest" % "1.9.1" % "test"
    )
}

object AndroidBuild extends Build {
  javacOptions ++= Seq("-target", "1.6")

  lazy val main = Project(
    "Akkdroid",
    file("."),
    settings = General.fullAndroidSettings ++ Seq(
      libraryDependencies += "com.typesafe.akka" % "akka-actor_2.10" % "2.1.2",
      libraryDependencies += "com.typesafe.akka" % "akka-remote_2.10" % "2.1.2"
    )
  )

  lazy val tests = Project(
    "tests",
    file("tests"),
    settings = General.settings ++
      AndroidTest.androidSettings ++
      General.proguardSettings ++ Seq(
      name := "AkkdroidTests"
    )
  ) dependsOn main
}


trait SomeBaseTrait{
  def someFun[B](args:SomeArgs)(f: => B):B
}

class MyMockOfBase extends SomeBaseTrait{
     def someFun[Boolean](args:SomeArgs)(f: => Boolean):Boolean = true
}

[error]  found   : scala.Boolean(true)
[error]  required: Boolean
[error]   def someFun[Boolean](args:SomeArgs)(f: => Boolean):Boolean = true
[error]                                                                ^
[error] one error found

 trait SomeBaseTrait2{
    def someFun2[B](args:SomeArgs):B
  }

val mockBase = new SomeBaseTrait2{def someFun2(args:SomeArgs):Boolean = true}

new SomeBaseTrait2{def someFun2(args:String):Boolean = true}
<console>:9: error: object creation impossible, since method someFun2 in trait SomeBaseTrait2 of type [B](args: String)B is not defined
              new SomeBaseTrait2{def someFun2(args:String):Boolean = true}


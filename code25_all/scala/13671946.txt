List(1,2).toHtml
<ul><li>1</li><li>2</li></ul>
String
toHtml
object Conversions {

  implicit def fromIterable[A](l : Iterable[A]) = new Object {
       def toHtml = <ul> { l.map{ e => <li>{ e }</li> } } </ul> toString
  }
}
import Conversions._

List(1,2).toHtml
Iterable
List( List(1,2), List(3,4) ).toHtml
<ul> <li><ul><li>1</li><li>2</li></ul></li> <li><ul><li>3</li><li>4</li></ul></li> </ul>
toHtml
Iterable
toHtml
def toHtml = <ul> { l.map{ e => <li>{ e.toHtml  }</li> } } </ul> toString
value toHtml is not a member of type parameter A
new Object { ... }
fromIterable[A]
toHtml
fromIterable(l : List[List[Any]])

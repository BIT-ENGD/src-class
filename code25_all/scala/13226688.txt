abstract class Node {
  def next: Node   
}

case class SpecificNode(nxt: Node) extends Node {
  val next = nxt
}

object NullNode extends Node{
  val next = new Exception("no more node")
}

case class SpecificNode(nxt: Node) extends Node {
  var next = nxt
}

next
sn.next = ...
next_
var
next
var
def
val

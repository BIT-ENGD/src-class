case class myLoaner() {
  implicit val i = "How to get this val into scope within the session function"

  def withCode[T](session: => T): Either[Exception, T] = {
    try {
      Right(session)
    } catch {
      case ex: Exception => {
        Left(ex)
      }
    }
  }
}

object Test {
  def main(args: Array[String]) {
    val r = myLoaner()

    r.withCode {
      implicit val imp = r.i // I want to get rid of this line of code and use the implict val defined above directly
      val h = new Helper
      h.run 
    }
  }

  class Helper {
    def run(implicit i: String) {
      println(i)
    }
  }
}


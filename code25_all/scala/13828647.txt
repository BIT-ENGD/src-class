object Worksheet {
    class Request {
        //var op = List[( _<:Response ) => Unit]()
        var op = List[Response => Unit]()             // FIXED
    }
    class Response {}
    class MyResult extends Response {}
    class AnotherMyResult extends Response {}

    val map = Map[String, Request]()                  

  def getResult(a:Any) {
    a match {
            ...
        case r:Response =>
            //map.get("").get.op foreach ((o) => o(r)) //PROBLEM 
                      map("").op foreach ((o) => o(r))        //NO PROBLEM 
            ...
    }
  }                                               
}

  def simpleop (r:MyResult) : Unit = { }

  def req = new Request()
  req.op += simpleop _                      //PROBLEM STILL

  map += ("" -> req)


final case class Attr[A](name: String)(implicit conv: String To A) {
  def apply(value: A)(implicit dummy: DummyImplicit) = Attribute(name, value)
  def apply(value: String) = Attribute[A](name, value)
}

1| val FooAttr = Attr[String]("foo")
2| val catch22 = FooAttr("bar")

final case class Txt(str: String) {
  override def toString = str
}

2| val catch22 = FooAttr("bar")

apply
(value: String)
final case class Attr[A](name: String)(implicit conv: String To A) {
  def apply(value: A) = Attribute(name, value)
}


fib().takeWhile(_ < n).filter(_ % 2 == 0).sum

fib().filter(_ % 2 == 0).takeWhile(_ < n).sum

 $ scala com.ms.E2_1 4000000000000001237

   takeWhile 1st    => 3770056902373173214
   filter 1st   => -8573983172444283806

object E2_1 {

 def fib(a: Long = 0, b: Long = 1): Stream[Long] = {
  a #:: fib(b, a + b)
 }

 def main(args: Array[String]): Unit = {
   if (args.length == 1) { 
     val n = args(0).toLong     
     println("takeWhile 1st \t=> " + fib().takeWhile(_ < n).filter(_ % 2 == 0).sum)     
     println("filter 1st \t=> " + fib().filter(_ % 2 == 0).takeWhile(_ < n).sum)
  } else {
    println("missing args")
  }
 }
}


def train[T, M <: MatrixInverter[T], S <: Kernel[T]](): GP_Spawn[T] = null

T
Double
Int
MatrixInverter[T]
calculateInverse
Kernel[T]
@specialized
def train[T, @specialized(CholeskyDecomposition[T]) M <: MatrixInverter[T], S <: Kernel[T]](): GP_Spawn[T] 

T
T
Vector[T]
Matrix[T]
import algorithms.{CholeskyDecomposition, MatrixInverter}
CholeskyDecomposition
CholeskyDecomposition
val testMat = new Matrix[T](3, 3)
val testInv = fac(testMat)    
testInv match {
    case chol : CholeskyDecomposition[T] => println("Found Cholesky!")
    case _ => println("Found something different.")
}


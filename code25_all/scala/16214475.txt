abstract class Listener(g: Engine) {
  g.addListener(this)
}
class Listener1(g: Engine) extends Listener(g)
class Listener2(g: Engine) extends Listener(g)

class Engine {
  val listener1 = new Listener1(this)
  val listener2 = new Listener2(this)  

  var listeners: List[Listener] = Nil
  def addListener(g: Listener) = {
    listeners = g::listeners
  }
}

NullPointerException
listeners
null
listener1
listener2
  def addListener(g: Listener) = {
    if(listeners == null) {
      listeners = List(g)
    } else {
      listeners = g::listeners
    }
  }

var listeners: List[Listener] = _
def addListener(g: Listener) = {
  if(listeners == null) 
    listeners = List(g)
  else
    listeners = g::listeners
}

_
listeners
listener1
listener2

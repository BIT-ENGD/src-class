abstract class Animal[T <: Animal[T]] {
  def mateWith(that: T)
}

class Cow extends Animal[Cow] {
  override def mateWith(that: Cow) { println("cow") }
}

class Dog extends Animal[Dog] {
  override def mateWith(that: Dog) { println("dog") }
}

class Caretaker (val pet: Animal) {
  ...
}

class Caretaker[T <: Animal[T]](val pet: Animal[T]) {
  ...
}


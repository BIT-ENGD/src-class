object A {
  def main(args: Array[String]) {
    println(test());
  }

  def test(): String = {
    getFirstNotNullResult(f1 _ :: f2 _ :: f3 _ :: Nil);
  }

  def getFirstNotNullResult(fs: List[() => String]): String = {
    fs match {
      case head::tail => 
        val v = head(); 
        if (v != null) return v;
        return getFirstNotNullResult(tail);

      case Nil => null
    }
  }

  // these would be some complex and slow functions; we only want to execute them if necessary; that is, if f1() returns not null, we don't want to execute f2 nor f3.
  def f1(): String = { null }
  def f2(): String = { "hello" }
  def f3(): String = { null }
}


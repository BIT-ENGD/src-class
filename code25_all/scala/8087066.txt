eq
AnyRef
def refEquals[A <% AnyRef, B <% AnyRef](a: A, b: B) = a eq b

refEquals(1,2)
Predef
int2IntegerConflict
def refEquals(a: Any, b: Any) = a match {
  case x: AnyRef => b match {
    case y: AnyRef => x eq y
    case _ => false
  }
  case x: Any => b match {
    case y: AnyRef => false
    case y: Any => x == y
  }
}

refEquals(1.0, 1.0)
false
def refEquals(a: Any, b: Any) = a match {
  case x: Boolean if b.isInstanceOf[Boolean] => x == b
  case x: Byte    if b.isInstanceOf[Byte]    => x == b
  case x: Short   if b.isInstanceOf[Short]   => x == b
  case x: Char    if b.isInstanceOf[Char]    => x == b
  case x: Int     if b.isInstanceOf[Int]     => x == b
  case x: Float   if b.isInstanceOf[Float]   => x == b
  case x: Double  if b.isInstanceOf[Double]  => x == b
  case x: Long    if b.isInstanceOf[Long]    => x == b
  case _ => a.asInstanceOf[AnyRef] eq b.asInstanceOf[AnyRef]
}


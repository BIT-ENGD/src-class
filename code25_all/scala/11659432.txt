foldLeft
Buffer
    List<Integer> javaList = new ArrayList<>();
    javaList.add(1);
    javaList.add(3);
    javaList.add(5);

    Buffer<Integer> scalaBuffer = JavaConversions.asScalaBuffer(javaList);

    scalaBuffer.foldLeft(0, new Function2<Integer, Integer, Integer>() {
        @Override
        public Integer apply(Integer accumulator, Integer element) {
            return carry + element;
        }
    });

Multiple markers at this line
- The type new Function2<Integer,Integer,Integer>(){} must implement the 
 inherited abstract method Function2<Integer,Integer,Integer>.apply$mcVDI
 $sp(double, int)
- The type new Function2<Integer,Integer,Integer>(){} must implement the 
 inherited abstract method Function2<Integer,Integer,Integer>.tupled$mcIDD$sp()
- The type new Function2<Integer,Integer,Integer>(){} must implement the 
 inherited abstract method Function2<Integer,Integer,Integer>.tupled$mcVJJ$sp()
- The type new Function2<Integer,Integer,Integer>(){} must implement the 
 inherited abstract method Function2<Integer,Integer,Integer>.apply$mcZDJ
 $sp(double, long)
    .
    .
    .


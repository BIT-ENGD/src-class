object Rest  extends RestHelper {

serve {

    case "supplier" :: "findAll" :: _ XmlGet _
        => supplierListToXml(Supplier.findAll)

}

def supplierListToXml(suppliers : List[Supplier]) = {
    <suppliers>{suppliers.mapConserve(f=> f.toXml)}</suppliers>
}

object RestApi extends RestHelper {
implicit def cvt: JxCvtPF[Convertable] = {
   case (JsonSelect, c, _) => c.toJson
   case (XmlSelect, c, _) => c.toXml
 }

serveJx {
    case Get("2.0" :: "supplier" :: "head" :: _,_)
        => Full(Supplier.findAll.head)
}

    case Get("2.0" :: "supplier" :: "findAll" :: _,_)
        => Full(Supplier.findAll.toList)


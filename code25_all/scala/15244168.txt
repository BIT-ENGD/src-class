A
B
B
def accept[A](a:A)(implicit ev:FooOrBaish[A]){ /* do something */}

case class Foo(i:Int)
trait Baish
case object Bar extends Baish
case class Baz(x:String) extends Baish
class FooOrBaish[A]
object FooOrBaish{
  implicit object FooWit extends FooOrBaish[Foo]
  implicit object BaishWit extends FooOrBaish[Baish]
}

Foo(5)
Baz("a")
Bar
error: could not find implicit value for parameter ev: FooOrBaish[Baz]

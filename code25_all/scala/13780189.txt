case
Array[T]
class Variable[T](val p: Prototype[T], val value: T)

class Prototype[T](val name: String)(implicit m: Manifest[T])

  // Columns to variable converter
implicit def columns2Variables[T](columns:Array[(String,Array[T])]): Iterable[Variable[Array[T]]] = {
    columns.map{
      case(name,value) =>
      new Variable[Array[T]](new Prototype[Array[T]](name), value)
     }.toIterable
  }

error: constructor cannot be instantiated to expected type;
found   : (T1, T2)
required: fr.geocite.simExplorator.data.Variable[Array[T]]
case(name,value) =>


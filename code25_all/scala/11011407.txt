object User extends User 
  with MongoMetaRecord[User]
  with MetaMegaProtoUser[User] {
    override def skipEmailValidation = true
  }

class User private () extends MongoRecord[User]
  with MegaProtoUser[User] {
    def meta = User

     //protected methods ...

}

object SignupWizard extends Wizard {
  object completeInfo extends WizardVar(false)

  val person = new Screen {

    //Incoroporate MegaProtoUser fields here ...

    override def nextScreen = {
       business
    }
  }

  val business = new Screen {
    val business = field("Business name","")
  }

  def finish() {
    S.notice("Thank you for registering!")
    completeInfo.set(true)
  }

}


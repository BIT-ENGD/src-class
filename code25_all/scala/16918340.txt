case class TestData(substore:String) {}

object TestData {  
  private implicit val formats = net.liftweb.json.DefaultFormats

  implicit def toJson(item: TestData): JValue = Extraction.decompose(item)

  def apply(in: JValue): Box[TestData] = Helpers.tryo{in.extract[TestData]}

  def unapply(in: Any): Option[TestData] = in match {
    case i: TestData => Some(TestData(i.substore)
    case _ => None
  }
}

object RestExample extends RestHelper {
  serve {
    case "api" :: "user" :: AsLong(id) :: Nil JsonGet _ => JInt(id)
    case "api" :: "test2" :: Nil JsonPut _ => TestData("testeee"): JValue
    case "api" :: "test" :: Nil JsonPut TestData(testData) -> _ => testData : JValue
  }
}

curl -i -H "Content-Type: application/json" -X PUT http://localhost:8080/api/test2

curl -i -H "Content-Type: application/json" -X PUT -d '{"substore":"abs"}' http://localhost:8080/api/test

<html> <body>The Requested URL /api/test was not found on this server</body> </html> 


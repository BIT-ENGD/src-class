class Team extends MongoRecord[Team] with MongoId[Team] {
  def meta = Team

  object name extends StringField(this, 100)
  object slug extends StringField(this, 100)
}

object Team extends Team with MongoMetaRecord[Team] {
  def all = Team orderAsc (_.slug) fetch()

  def apply(in: JValue): Box[Team] = Helpers.tryo{in.extract[Team]}

  def unapply(in: String): Option[Team] = Team where (_.slug eqs in) get()

  implicit def toJson(team: Team): JValue =
    Extraction.decompose(team)

  implicit def toJson(teams: Seq[Team]): JValue =
    Extraction.decompose(teams)
}

object TeamRestService extends RestHelper {
  serve( "api" / "teams" prefix {
    case Nil JsonGet _ => Team.all: JValue

    case Team(team) :: Nil JsonGet _ => team: JValue
  })
}

curl -i -H "Accept: application/json" http://localhost:8080/api/teams
[{}, {}]
curl -i -H "Accept: application/json" http://localhost:8080/api/teams/team-1
TeamRestService

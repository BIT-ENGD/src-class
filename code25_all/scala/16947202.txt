object RestTest extends Controller {

  case class Address(street: String,
                     number: Int)

  case class Person(name: String,
                    age: Int,
                    address: Address)

  implicit  val address = Json.reads[Address]
  implicit val rds = Json.reads[Person]

  def restTest = Action(parse.json) {
    request =>

      request.body.validate[Person].map {
          case person => Ok(Json.obj("e" -> 0, "message" -> ("The name is: " + person.name + " and he lives in " + person.address.street)))
        }.recoverTotal(e => Ok("e" -> 1)
      }
}

case class SecondStructure(index: Int)

case class EntryStructure(field1: String,
                  muSecondJsonArray: List[SecondStructure])

case class MyJsonArray(allEntries: List[EntryStructure])


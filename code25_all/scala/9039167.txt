\
def executeAll(): Boolean = {
  while (dataBuf.length != 0) {
    val dir = directory + "subjects/" + dataBuf.first.subjectID + "/mri/orig"
    val expr = """\s+""".r  
    val path = expr.replaceAllIn((dataBuf.first.path), """\\ """)
    val folder = new File(dir)
    val execute = freesurfer + """bin/mri_convert -it dicom -ot mgz -ii """ + path + """ -oi """ + dir + """/001.mgz"""
    if (folder.mkdirs()) {
      val command = Process(execute, folder, ("FREESURFER_HOME", freesurfer))
      val exitCode = command.!
      println(command.toString())
    }
    dataBuf.remove(dataBuf.indexOf(dataBuf.first))
  }
  println("DONE")
  dataListView.listData = dataBuf
  true
} 

val path = /Applications/freesurfer/bin/mri_convert -it dicom -ot mgz -ii /Volumes/N/0110547/2008-05-24/data/BIRNSequence_4/IM-0003-0001.dcm -oi /Users/michael/Documents/subjects/dadasd/mri/orig/001.mgz 

[/Applications/freesurfer/bin/mri_convert, -it, dicom, -ot, mgz, -ii, /Volumes/N/0110547/2008-05-24/data/BIRNSequence_4/IM-0003-0001.dcm, -oi, /Users/michael/Documents/subjects/dadasd/mri/orig/001.mgz]

val path = /Applications/freesurfer/bin/mri_convert -it dicom -ot mgz -ii /Volumes/N/0110547/2005-07-31/this\ is\ the\ data/AXBIRN_4/IM-0004-0001.dcm -oi /Users/michael/Documents/subjects/adsfsdf/mri/orig/001.mgz 

mri_convert: extra arguments ("the\" and following)
 [/Applications/freesurfer/bin/mri_convert, -it, dicom, -ot, mgz, -ii, /Volumes/N/0110547/2005-07-31/this\, is\, the\, data/AXBIRN_4/IM-0004-0001.dcm, -oi, /Users/michael/Documents/subjects/adsfsdf/mri/orig/001.mgz]


  def deserialize(json:JsonElement, 
                  typeOfT:Type, 
                  context:JsonDeserializationContext) = {
    var eventData = new EventData(null, null)
    var jsonObject = json.getAsJsonObject
    for(entry <- jsonObject.entrySet()) {
      var key = entry.getKey()
      var element = entry.getValue()
      element
      if("previous_attributes".equals(key)) {
        var previousAttributes = new scala.collection.mutable.HashMap[String, Object]()
        populateMapFromJSONObject(previousAttributes, element.getAsJsonObject())
        eventData.setPreviousAttributes(previousAttributes)
        eventData
      } else if ("object".equals(key)) {
        val `type` = element.getAsJsonObject().get("object").getAsString()
        var cl = objectMap.get(`type`).asInstanceOf[StripeObject]
        var `object` = abstractObject.retrieve(cl, key)
        eventData.setObject(`object`)
        eventData
      }
    }
  }

type mismatch; found : Unit required: com.stripe.EventData
for(entry <- jsonObject.entrySet())
entrySet()
eventData

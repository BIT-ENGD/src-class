or
query.filter(filters(0) || filters(1) || … || filter(n))

and
for (filter ← filters)
    query = query.filter(filter)

Boolean
or
val any = evaluateToBools.foldLeft(true)(
    (left: Boolean, right: Eval2Bool) =>
    left || right.evaluate
)

filter
val tms = Set( ("A","a"), ("B", "b"), ... )

... WHERE/AND ( (t="A" and m="a") or (t="B" and m="b") or ... )

in
... WHERE (t,m) IN (("A","a"), ("B","b"), ...)

val tms = markers map { tm ⇒ tm._1 +"||"+ tm._2 }
query.filter(d ⇒ d._4 ++"||"++ d._5 inSet tms)

rq = rq filter { d ⇒
    markers map { tm ⇒
        (d._4 is tm._1) && (d._5 is tm._2)
    } reduceLeft { _||_ }
}


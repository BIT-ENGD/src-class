def divide(xs: List[Int]): List[Int] = {
      val mid = xs.length/2
      (xs take mid, xs drop mid)
}

   def mylength: List[Any] => Int = {
     case Nil   => 0
     case x::xs => mylength(xs)+1
   }

   def myConcat(xs: List[Any], ys: List[Any]) = {
              xs ++ ys
   }

   def myAppend1(xs: List[Any], y: Any): List[Any] = {
        y :: xs
   }

  def myAppend2: List[Any] => Any => List[Any] = {
           /* how can i do this here, when no names y/xs are given?*/
   }


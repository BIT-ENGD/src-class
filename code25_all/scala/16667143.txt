http://localhost:9000/r/123

def showSurvey(id: String) = Action {

      implicit val reader = Review.ReviewReader
    Async {
      val cursor = reviews.find(BSONDocument("_id" -> BSONObjectID(id))).cursor[Review]
      cursor.headOption.map(maybeReview =>
        maybeReview.map(review => {
          // fill form
          Ok(views.html.review.desktopSurvey(Some(id), surveyForm.fill(SurveyForm(review.grade, review.text, REGULAR_AUTH, false, "", "")), grades))
        }


        ).getOrElse {
          //NotFound Temporary below:
      val review = Review(Some(new BSONObjectID(id)), 3, "bla", Some(new DateTime()), Some(new DateTime()), Some("0.0.0.0"), ReviewStatus.NOT_CLAIMED, Some(1), Some(1L))
      Ok(views.html.review.desktopSurvey(Some(id), surveyForm.fill(SurveyForm(review.grade, review.text, REGULAR_AUTH, false, "", "")), grades))
     }
      ).recover {
        case e => InternalServerError(e.getMessage())
      }
    }
  }

clean compile stage
[error] r.c.a.MongoDBSystem - The entire node set is unreachable, is there a network problem?

[info] application - ReactiveMongoPlugin successfully started with db 'blala'! Servers:
        [87.238.57.140:27017]


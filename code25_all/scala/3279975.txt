MySpec extends Specification {
  "system" should {
    "example0" in { ... }
    "example1" in { ... }
    "example2" in { ... }
  }

  "system" can {
    "example0" in { ... }
  }
}

"example0" in { ... } :: "example1" in { ... } :: "example2" in { ... } :: Nil
implicit def sus2spec(sus: Sus): Specification = {
  suslist += sus
  this
}

root: statement*;

statement:
    IDENT '{' statement* '}'
  | declaration*
  ;

declaration: IDENT ':=' INT+;

MyRoot extends Root {
  "statement0" is {
    "nested_statement0" is {
      "nested_nested_statement0" is {
        "declaration0" := 0
      }

      "declaration1" := 1
      "declaration2" := 2
    }

    "declaration3" := 3
  }

  "statement1" is {
    "declaration4" := 4
  }
}

is

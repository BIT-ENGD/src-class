object ImplicitMap {
  implicit def extendMap(m : Map[String,Any]) = new MapExtension(m)
}
class MapExtension(m : Map[String,Any]) {
  def +?(conditional:Boolean)(pair:(String,Any)):Map[String,Any] = 
    if (conditional) m + pair
    else m
}

 test ("Map +?") {

    def +?(conditional:Boolean)(pair:(String,Any)):Map[String,Any] = if (conditional)   Map.empty + pair else Map.empty

    +?(true)("hi" -> 2) should equal (Map("hi" -> 2))
  }


foo
bar
lowerBound
upperBound
Bar
trait Foo {
  type Bar <: Ordered[Bar]
  val lowerBound: Bar
  val upperBound: Bar
  def foo(bar: Bar) = bar >= lowerBound && bar <= upperBound
}

Foo
FooImpl
class FooImpl extends Foo {
  type Bar = Int
  val lowerBound = 0
  val upperBound = 5
}

scala.Int
scala.runtime.RichInt
scala.math.Ordered[Int]
Bar
RichInt
scala.math.Ordered[RichInt]
Bar
Ordered[Ord]
Ord
type Ord
FooImpl
Int

case class ClientContext(clientName: String) 

object ClientContext {
  def apply(request: Request) = {
    new ClientContext(request.params("clientName")) //pseudo code
  }
}

object MyDAO {
  def findAll(context: ClientContext) = { ... }
}

object MyController extends Controller {
  def index = Action { implicit request => 
    val results = MyDAO.findAll(ClientContext(request))
    Ok(results)
  }
}

implicit request
Action
implicit request =>
ClientContext(request)
context: ClientContext
MyDAO.findAll
object MyDAO {
  def findAll(implicit context: ClientContext) = { ... }
}

def index = ActionWithContext {
  val results = MyDAO.findAll
  Ok(results)
} 

def ActionWithContext(action: ClientContext => Result) = {
  Action { implicit request =>
    action(ClientContext(request))
  }
} 

def index = ActionWithContext { context => 
  val results = MyDAO.findAll(context)
  Ok(results)
}


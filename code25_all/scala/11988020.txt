// either using the "override" reserved keyword or not, this code will compile with SBT 0.7.7 but not with 11.3


 sealed trait FacetJoin[T1, T1S, T2S] {
    def facetJoin (a: T1S, b: T1S
      , fVals: (T1, T1) => T2S
      , fFacets: (Formula, T1S, T1S, Formula, T1S, T1S) => T2S
      , fBothL: (T1S, Formula, T1S, T1S) => T2S
      , fBothR: (Formula, T1S, T1S, T1S) => T2S
      , fOther: (T1S, T1S) => T2S): T2S
  }
  object FacetJoin {
    implicit object BoolBoolFacetJoin
    extends FacetJoin[Boolean, Formula, Formula] {

// Eclipse complaint for next line: 
//// Multiple markers at this line
////    - only classes can have declared but undefined 
////     members
////    - ':' expected but ',' found.

      override def facetJoin (a, b, fVals, fFacets, fBothL, fBothR, fOther): Formula = {
 ...

// Eclipse complaint for next line: 
//// Multiple markers at this line
////    - identifier expected but '}' 
////     found.
////    - not found: type <error>
        }
      }
    }
 }


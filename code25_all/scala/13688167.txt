abstract class Element {
  var name: String
  var description: String
  var types : Set[Type]  
}

class SAComponent (var name :String,
        var description : String,
        var properties : Set[Property] = Set(),
        var types : Set[Type] = Set(),
        ) extends Component

abstract class Element {    
  def name: String
  def name_= (value: String): Unit = {if (isBadValue(value)throw new IllegalArgumentException
  name = value
  }
  var description : String,
  var types : Set[Type] = Set }

  class Component (override var name : String, var description: String) extends Element


BenchmarkOption
object CommandLineHelper {
  //TODO: use configuration file ?
  val MILLI_SEC_SEPERATORS = 0 + "," + Int.MaxValue
  val SBE_ID = "SBETEST5";
  val SBE_PSW = "GZ@API53";
  val NUM_OF_REQUESTS = 1
  val NUM_OF_WORKERS = 1
  val PAUSE_IN_MILlI_SECOND = 1L;
}

class BenchmarkOption private {
  import  com.ggd543.mulerestletdemo.{CommandLineHelper => CLH}
  private  var _msSeperators = CommandLineHelper.MILLI_SEC_SEPERATORS
  def msSeperators = _msSeperators

  private var _nOfReq = CLH.NUM_OF_REQUESTS
  def nOfReq = _nOfReq

  private var _sbeId = CLH.SBE_ID
  def  sbeId = _sbeId

  private var _sbePsw = CLH.SBE_PSW
  def  sbePsw = _sbePsw

  private var _pauseInMilliSec = CLH.PAUSE_IN_MILlI_SECOND;
  def pauseInMillSec = _pauseInMilliSec

  private var _dataFile = new File("./data.csv")
  def  dataFile = _dataFile
  // may be too many fields  

}

object BenchmarkOption {
  def newBuilder() = new Builder

  class Builder {
    private val bmo = new BenchmarkOption

    def buildBenchmarkOption = bmo;

    def msSeperators_=(s: String) = bmo._msSeperators = s
    def msSeperators = bmo._msSeperators

    def nOfReq_=(n: Int ) = bmo._nOfReq =  n
    def nOfReq = bmo._nOfReq

    def sbeId_=(s: String) = bmo._sbeId = s
    def sbeId = bmo._sbeId

    def sbePsw_=(s: String ) = bmo._sbePsw = s
    def sbePsw = bmo._sbePsw

    def pauseInMilliSec_=(milliSec: Long) = bmo._pauseInMilliSec = milliSec
    def pauseInMilliSec = bmo._pauseInMilliSec

    def dataFile_=(file: File) = bmo._dataFile = file
    def dataFile = bmo._dataFile

  }


}


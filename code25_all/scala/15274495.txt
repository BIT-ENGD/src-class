import java.util.Properties

class MyProperties extends Properties

object MyProperties {

    def get(): MyProperties = new MyProperties

    def anotherMethod(): MyProperties = new MyProperties

}

get()
MyProperties
import java.util.Properties;
import scala.reflect.ScalaSignature;

public class MyProperties extends Properties
{
  public static MyProperties anotherMethod()
  {
    return MyProperties..MODULE$.anotherMethod();
  }
}

MyProperties
java.util.Properties
get()
java.util.Properties
public V get(Object key)
java.util.Dictionary
get()
import java.util.Properties;

public class MyPropertiesjava extends Properties {

    private static final long serialVersionUID = 1L;

    public static MyProperties get() {

        return new MyProperties();
    }

    public static MyProperties antotherMethod() {

        return new MyProperties();
    }
}

import java.util.Properties

class MyPropertiesImpl extends Properties

object MyProperties {

    type MyProperties = MyPropertiesImpl

    def get(): MyProperties = new MyPropertiesImpl

    def anotherMethod(): MyProperties = new MyPropertiesImpl

}


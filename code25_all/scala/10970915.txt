import scala.actors.Actor

class MonadChainActor[T](monadChain: Option[T]=>Option[T]) extends Actor {

  case class OptionMessage(o:Option[T])

  def act() {
    while(true){
      receive {
        case OptionMessage(o) => println(monadChain(o).get)
      }
    }
  }

}

def monadIntChain(a:Option[Int]):Option[Int] = 
  a.map(x => x+1).map(x => x+1).map(x => x+1)

object Main {
  def main(args: Array[String]): Unit = {
    var a = new MonadChainActor(monadIntChain)
    a ! a.OptionMessage(Some(1))  
  }
}


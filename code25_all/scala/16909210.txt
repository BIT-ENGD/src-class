TypeRef
Option[List[Double]]
case myType @ TypeRef(_, sym, args) if myType <:< typeOf[Option[Any]] ⇒

sym
Option
args.head
List[Double]
Double
Option[MyType]
type Mytype = List[Double]
case myType @ TypeRef(_, sym, args) if myType <:< typeOf[Option[Any]] ⇒

sym
Option
args.head
MyType
MyType
List[Double]
MyType
List
Double
TypeRef(
  pre: Universe.Type,
  sym: Universe.Symbol,
  args: List[Universe.Type])


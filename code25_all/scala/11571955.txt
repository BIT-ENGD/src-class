join(DB.jobs, DB.users.leftOuter, DB.clients.leftOuter, DB.projects.leftOuter)((j,u,c,p) =>
      where((j.teamId === teamId)
        and (j.startTime > yesterdayBegin))
      groupBy(j.userId)
      on(j.userId === u.map(_.id), j.clientId === c.map(_.id), j.projectId === p.map(_.id)))

Job.teamTimeline( teamId(request) ).map{ user => Map(
        "name" -> user._1.map(_.name).getOrElse("Pending")
      )}

value _1 is not a member of org.squeryl.dsl.Group[Option[org.squeryl.PrimitiveTypeMode.LongType]]


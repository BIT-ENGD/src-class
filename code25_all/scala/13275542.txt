abstract class Task
case class DefinedTask(id: Long) extends Task
case class EmptyTask() extends Task  

Task
DefinedTask
EmptyTask
DefinedTask
EmptyTask
Defined/Empty
def makeReturned[T: Manifest, U: Manifest](obj: T)(u: U)(f: T => Value) = 
   if(manifest[U] equals manifest[T]) f(obj) else
     throw new IllegalArgumentException()
}
//call to it
makeReturned(task)(DefinedTask)(makeTask)

U
DefinedTask
T
DefinedTask or EmptyTask
Task
manifest[U].erasure.toString //"class DefinedTask$"
manifest[T].erasure.toString //"class Task"  


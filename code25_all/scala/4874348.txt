Field
trait Field[A] {  
  // Additive identity
  def zero: A

  // Multiplicative identity
  def one: A
}

Numeric
zero
one
Numeric
Field
def func[F: Field](f: F) = println(f)
func(2)

scala> implicit def numericToField[N](n: Numeric[N]) = new Field[N] {
     |     def zero = n.zero
     |     def one = n.one
     |   }
numericToField: [N](n: Numeric[N])java.lang.Object with Field[N]

scala> def func[F: Field](f: F) = println(f)
func: [F](f: F)(implicit evidence$1: Field[F])Unit

scala> func(2)
<console>:12: error: could not find implicit value for evidence parameter of type Field[Int]
       func(2)
           ^


abstract class Top {

  var a = "a"
  var b = 3
  var c = "c"
  implicit def js2WJ(js: String) : Wrapper = {
    new Wrapper(js)
  }

}

case class B() extends Top
{
    "B" ==> 44 | "foo"
}

class Wrapper(js: String)
{
    var ju : Option[Int] = None 
    var cs : Option[String] = None
    def ==>(j: Int): Wrapper = {
      ju = Some(j)
      this
    }
    def | (cs: String) =
    {
      this.cs = Some(cs) 
    }
}


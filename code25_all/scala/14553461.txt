main()
<ALL the imports>

object HelloWorld {
   def main(args: Array[String]) {
     <ALL the rest code from RestClient.scala>
   }
}

scala: forward reference extends over defintion of value command
val httppost = new HttpPost(url)
                ^

def
require( args.size >= 2, "You need at least two arguments to make a get, post, or delete request")

val command = args.head
val params = parseArgs(args)
val url = args.last

command match {
  case "post"    => handlePostRequest
  case "get"     => handleGetRequest
  case "delete"  => handleDeleteRequest
  case "options" => handleOptionsRequest
}

extends App
main()
<All the imports>
object RestClient extends App {
   <All the rest of the code from RestClient.scala>
}

object HelloWorld
extends App
main()
main()
extends App

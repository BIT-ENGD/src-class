object DatabaseConnection { this: LoginDevice =>
    val Connection = ...

    class LoginDevice {
        val prep = Connection.prepareStatement("SELECT * FROM USER WHERE NAME = ?")
        def login(username: String, password: String) = {
            prep.setString(1, username)
            val rs = prep.executeQuery
            if (!rs.next)
                throw User404
            new User(rs.getString("Name"), ...)             
        }
    }
}

object RequestHandler {
    type Request = (String, String)

    def handle(request: Request) = request._1 match {
        case "Login" => {
            val info = request._2.split(",")
            DatabaseConnection.login(info(0), info(1)) // SYNTAX ERROR
        }
        case _ => throw new Exception("Request type is not valid.")
    }
}

Connection

  class PubServlet extends WebSocketServlet {
 override def createWebSocketInbound (subProtocol: String, request: HttpServletRequest): StreamInbound = {
        println("create#############################################")
        new WebSocketHandler()
    }
}

public class InitServlet extends HttpServlet {

    private static final long serialVersionUID = -3163557381361759907L;

    private static List<MessageInbound> socketList;  

    public void init(ServletConfig config) throws ServletException {  
        InitServlet.socketList = new ArrayList<MessageInbound>();  
        super.init(config);  
        System.out.println("Server start============");  
    }  

    public static synchronized List<MessageInbound> getSocketList() {  
        return InitServlet.socketList;  
    }  
}

class WebSocketHandler extends MessageInbound{

    protected override def onBinaryMessage(arg0: ByteBuffer)  {  
        // TODO Auto-generated method stub  

    }   
    protected override def onTextMessage(msg: CharBuffer)  {

    }

    protected override def onClose(status: Int) {
        println(status)
        super.onClose(status)
    }

    protected override def onOpen(outbound: WsOutbound) {
        super.onOpen(outbound)
        InitServlet.getSocketList().add(this)
    }
}

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Index</title>
<script type="text/javascript">
var ws = null;
function startWebSocket() {
    if ('WebSocket' in window){
        ws = new WebSocket("ws://localhost:8080/PubSub_Web/index.do");
        alert(ws);
    }
    else if ('MozWebSocket' in window)
        ws = new MozWebSocket("ws://localhost:8080/PubSub_Web/index.do");
    else
        alert("not support");


    ws.onmessage = function(evt) {
        alert(evt.data);
    };

    ws.onclose = function(evt) {
        alert("close");
    };

    ws.onopen = function(evt) {
        alert("open");
    };

}

function sendMsg() {
    ws.send(document.getElementById('writeMsg').value);
}
</script>
</head>
<body onload="startWebSocket();">
<input type="text" id="writeMsg"></input>
<input type="button" value="send" onclick="sendMsg()"></input>
</body>
</html>


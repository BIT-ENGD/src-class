object hw3v2 { 

  // 
  // partition 
  // 
  // this is the code that partitions 
  // our array, rearranging it in place 
  // 

  def partition(a: Array[Int], b: Int, c: Int): Int = { 

    val x:Int = a(c) 
    var i:Int = b

    for (j <- b to c-1)
      if (a(j) <= x) {
        i += 1
        a(i) = a(j)
        a(j) = a(i)

      }

    a(i+1) = a(c)
    a(c) = a(i+1)
    i + 1
  }

  def select(a: Array[Int], p: Int, r: Int, i: Int): Int = {

    if (p == r)
      a(0)

    else {
      val q = partition(a, p, r)
      val j = q - p + 1
      if (i <= j)
        select(a, p, q, i)
      else
        select(a, q+1, r, i-j)
    }
  }

  def main(args: Array[String]) {

    val which = args(0).toInt

    val values: Array[Int] = new Array[Int](args.length-1);
    print("Selecting element "+which+" from amongst the values ")
    for (i <- 1 until args.length) {
      print(args(i) + (if (i<args.length-1) {","} else {""}));
      values(i-1) = args(i).toInt;
    }
    println();

    println("==> "+select(values, 0, values.length-1, which))
  }
}


class Entry extends BaseModel[Entry] {
  def getSingleton = Entry

  object parent extends MappedBase(this, AnyList)

}

object Entry extends Entry with LongKeyedMetaMapper[Entry] {

}

class ListA extends BaseModel[ListA] with OneToMany[Long, ListA] {
  def getSingleton = ListA

  object entries extends MappedOneToMany(Entry, Entry.parent)

}

object ListA extends ListA with LongKeyedMetaMapper[ListA] {

}

class ListB extends BaseModel[ListB] with OneToMany[Long, ListB] {
  def getSingleton = ListB

  object entries extends MappedOneToMany(Entry, Entry.parent)

}

object ListB extends ListB with LongKeyedMetaMapper[ListB] {

}

class ListC extends BaseModel[ListC] with OneToMany[Long, ListC] {
  def getSingleton = ListC

  object entries extends MappedOneToMany(Entry, Entry.parent)

}

object ListC extends ListC with LongKeyedMetaMapper[ListC] {


} 


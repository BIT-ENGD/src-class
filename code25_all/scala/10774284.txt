def firstAndLast[CC, A, That](seq: CC)(implicit asSeq: CC => Seq[A], cbf: CanBuildFrom[CC, A, That]): That = {
  val b = cbf(seq)
  b += seq.head
  b += seq.last
  b.result
}

List("abc", "def") map {firstAndLast(_)}
List("abc", "def") map firstAndLast

error: No implicit view available from CC => Seq[A].
List("abc", "def") map firstAndLast


result.map { row =>
  addLink( row.href, row.label )
}.fold(NodeSeq.Empty)(_++_)

<li><a>links</a></li>
val result = dao.getHeadlines // List[of model objects]
if(result.isEmpty) NodeSeq.Empty
else 
  result map { row =>
    addLink( row.href, row.label ) // NodeSeq
  } reduce(_ ++ _)

result.isEmpty ? NodeSeq.Empty :
  result map { row =>
    addLink( row.href, row.label )
  } reduce(_ ++ _)

match {...}
for {...} yield

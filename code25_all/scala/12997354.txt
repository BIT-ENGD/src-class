def IsAuthenticated(f: => String => Request[AnyContent] => Result) = Security.Authenticated(username, onUnauthorized) { user =>
    Action(request => f(user)(request))
  }   

Security.Authenticated
username: RequestHeader => Option[String]
onAuthorized: RequestHeader=>SimpleResult
String => Action[A]
def index = isAuthenticated { ...code }}  

f
=> String => Request[AnyContent] => Result
User.findByEmail....
username => _ => ...
username => _ =>
    User.findByEmail(username).map { user =>
      Ok(
        html.dashboard(
          Project.findInvolving(username), 
          Task.findTodoInvolving(username), 
          user
        )
      )
    }.getOrElse(Forbidden)  

def isAuthenticated(f: => Request[AnyContent] => Result)
def f2: String => Int => List[Char] = x => _ => x.toList  

f2("Andrew")(2) //there can be anything replacing 2 because I don't have access to it anyway  

def f: => String => Request[AnyContent] => Result = username => _ => User.find.....  

String => Request => Result
String => Result

    def func(x:Int):List[Int]...
    case head :: tailList => head :: func(x,tailList)

    insertTail(x,tailList,head::acc) 

def funcTailTest(x:Int,xs:List[Int]):List[Int] =  {
@tailrec
def inner(x:Int,xs:List[Int],acc:List[Int]) : List[Int] = xs match {

  case head::tailList => {
    inner(x,tailList,head::acc)
  }
}
inner(x,xs,Nil)

}

head::inner(x,tailList)


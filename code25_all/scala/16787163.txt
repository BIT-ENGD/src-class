val jmxannotation = ru.typeOf[EnableForMonitoring]
val m = runtimeMirror(getClass.getClassLoader)
val mSymbol = m.classSymbol(jmxe.getClass)
val mType = mSymbol.selfType
mType.declarations.foreach(symbol => {
  symbol.annotations.find(a => a.tpe == jmxannotation) match {
    case Some(_) => {
      info(s"(A) For $symbol on $jmxe, annotated for monitoring")
      val ms = symbol.asMethod
      // TODO: HOW TO CONVERT ms to a Java Method
    }
    case None =>
  }
})


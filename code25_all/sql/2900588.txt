  def self.commentors(cutoff=0)
    return User.find_by_sql("select users.*, count(*) as total_comments from users, comments 
      where (users.id = comments.user_id) and (comments.public_comment = 1) and (comments.aasm_state = 'posted') and (comments.talkboard_user_id is null) 
      group by users.id having total_comments > #{cutoff} order by total_comments desc")
  end

  named_scope :commentors, lambda { |count=0|
    { :select => "users.*, count(*) as total_comments",
      :joins => :comments,
      :conditions => { :comments => { :public_comment => 1, :aasm_state => 'posted', :talkboard_user_id => nil} },
      :group => "users.id",
      :having => "total_comments > #{count.to_i}",
      :order => "total_comments desc"
    }
  }

  named_scope :commentors, lambda { |*args|
      { :select => 'users.*, count(*) as total_comments',
        :joins => :comments,
        :conditions => { :comments => { :public_comment => 1, :aasm_state => 'posted', :talkboard_user_id => nil} },
        :group => 'users.id',
        :having => ['total_comments > ?', args.first || 0],
        :order => 'total_comments desc' }
      }  


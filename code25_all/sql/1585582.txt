idCategory | Title    | idCategoryParent | DisplayOrder
1          | cat1     | NULL             | 1
2          | sub-cat1 | 1                | 1
3          | sub-cat2 | 1                | 2
4          | cat2     | NULL             | 2
5          | sub-cat3 | 4                | 1
6          | sub-cat4 | 4                | 2
7          | cat3     | NULL             | 3

titleCat | titleSubCat | idCategory

cat1     | sub-cat1    | 1
cat1     | sub-cat2    | 1
cat2     | sub-cat3    | 4
cat2     | sub-cat4    | 4
cat3     | NULL        | 7

cat1     | null        | 1
cat1     | sub-cat1    | 1
cat1     | sub-cat2    | 1
etc..

SELECT subcat.title as catTitle, cat.title as parentTitle, subcat.idCategory as catIdCategory, subcat.idCategoryParent 
FROM `test_category` as cat
RIGHT OUTER JOIN test_category as subcat ON cat.idCategory=subcat.idCategoryParent

--
-- Table structure for table `test_category`
--

CREATE TABLE IF NOT EXISTS `test_category` (
  `idCategory` int(11) NOT NULL AUTO_INCREMENT,
  `idCategoryParent` int(11) DEFAULT NULL,
  `title` varchar(20) NOT NULL,
  `order` int(11) NOT NULL,
  PRIMARY KEY (`idCategory`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=8 ;

--
-- Dumping data for table `test_category`
--

INSERT INTO `test_category` (`idCategory`, `idCategoryParent`, `title`, `order`) VALUES
(1, NULL, 'cat1', 1),
(2, 1, 'sub-cat1', 1),
(3, 1, 'sub-cat2', 2),
(4, NULL, 'cat2', 2),
(5, 4, 'sub-cat3', 1),
(6, 4, 'sub-cat4', 2),
(7, NULL, 'cat3', 3);


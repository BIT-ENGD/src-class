has_many
has_many
has_many
belongs_to
has_many
belongs_to
has_many
:through => :messages
has_many
:through => :messages
def log_msg(userinfo, target, message, type = nil, time = nil)
  # methods not shown yet obvious
  return unless chan = find_channel(target) 
  return unless nick = find_nickname(userinfo)

  msg = Message.new(:message => message)         

  msg.created_at = time unless time.nil?

  if !type.nil? && msg.respond_to?(type)
    msg.send("#{type}=", true)
  end

  msg.channel = chan
  msg.nickname = nick

  msg.save
end

  Channel Load (0.0ms) SELECT * FROM "channels" WHERE ("channels"."name" = '#main_chat') AND ("channels".network_id = 1) LIMIT 1‚Üê[0m

  Nickname Load (0.0ms) SELECT * FROM "nicknames" WHERE ("nicknames"."nickname" = 'bob_saget') LIMIT 1

  Channel Load (0.0ms) SELECT "channels".id FROM "channels" WHERE ("channels"."name" = '#main_chat' AND "channels".network_id = 1 AND "channels".id <> 1) LIMIT 1

  Network Load (0.0ms) SELECT * FROM "networks" WHERE ("networks"."id" = 1)

  Message Create (0.0ms) INSERT INTO "messages" ("message", "is_action", "channel_id", "is_part", "updated_at", "is_nick", "is_mode", "is_topic", "is_ban", "nickname_id", "is_init", "is_quit", "is_join", "is_kick", "created_at") VALUES(NULL, NULL, 1, NULL, '2009-09-01 20:21:47', NULL, NULL, NULL, NULL, 1, 't', NULL, NULL, NULL, '2009-09-01 20:21:47')


named_scope :with_avg_ratings,  lambda { |*params|
hash = params.first || {}
has_params = hash[:user_ids] || hash[:time_ago]
dir = hash[:dir] || 'DESC'
{
  :joins => %Q{
    LEFT JOIN (select user_id, venue_id, max(updated_at) as last_updated_at from updates 
    WHERE type = 'Review' GROUP BY user_id, venue_id) lu ON lu.venue_id = venues.id
    LEFT JOIN updates ON lu.last_updated_at = updates.updated_at 
    AND updates.venue_id = venues.id AND updates.user_id = lu.user_id
  },
  :select => "venues.*, ifnull(avg(rating),0) as avg_rating", 
  :group => "venues.id",
  :order => "avg_rating #{dir}",
  :conditions => Condition.block { |c|
    c.or { |a|
      a.and "updates.user_id", hash[:user_ids] if hash[:user_ids]
      a.and "updates.updated_at", '>', hash[:time_ago] if hash[:time_ago]
    } if has_params
    c.or "updates.id", 'is', nil if has_params
  }

}


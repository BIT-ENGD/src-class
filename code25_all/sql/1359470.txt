from h in HistoryData
select new { NewData = string.Format( "New Data: {0}", h.hisData ) };

SELECT [t0].[hisData] AS [arg0]
FROM [HistoryData] AS [t0]

var before9_1_2009 = DateTime.Today < new DateTime( 2009, 9, 1 );
var fiveThousand = 5000;
var tenThousand = 10000;
var testNumber = 
    Profiles.Where( p => p.pAuthID == "111111111" )
            .Select( p => new { Number = before9_1_2009 ? fiveThousand : p.pKey } );
var cmd = GetCommand( testNumber );
cmd.CommandText.Dump( "Number Property: Works (i.e. evaluates on SQL Server)" );

var testString = 
    Profiles.Where( p => p.pAuthID == "111111111" )
            .Select( p => new { String = before9_1_2009 ? "StringConstant" : p.pAuthID } );
cmd = GetCommand( testString );
cmd.CommandText.Dump( "String Property: Works (i.e. evaluates on SQL Server)" );

var testBool = 
    Profiles.Where( p => p.pAuthID == "111111111" )
            .Select( p => new { Boolean = boolExp ? true : p.pProcessed } );
cmd = GetCommand( testBool );
cmd.CommandText.Dump( "Boolean Property: Has NULL AS [EMPTY] - Post Processing Needed" );

testNumber = 
    Profiles.Where( p => p.pAuthID == "111111111" )
            .Select( p => new { Number = before9_1_2009 ? fiveThousand : tenThousand } );
cmd = GetCommand( testNumber );
cmd.CommandText.Dump( "Number Property (using two constants): Has NULL AS [EMPTY] - Post Processing Needed" );

SELECT 
    (CASE 
        WHEN @p1 = 1 THEN @p2
        ELSE [t0].[pKey]
     END) AS [Number]
FROM [Profile] AS [t0]
WHERE [t0].[pAuthID] = @p0

SELECT 
    (CASE 
        WHEN @p1 = 1 THEN CONVERT(NVarChar(255),@p2)
        ELSE [t0].[pAuthID]
     END) AS [String]
FROM [Profile] AS [t0]
WHERE [t0].[pAuthID] = @p0

SELECT NULL AS [EMPTY]
FROM [Profile] AS [t0]
WHERE [t0].[pAuthID] = @p0

SELECT NULL AS [EMPTY]
FROM [Profile] AS [t0]
WHERE [t0].[pAuthID] = @p0


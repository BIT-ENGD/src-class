  1->2->3->4

parent_id   child_id
1           2
2           3
3           4
//... other edges, not connected to the subgraph above

with foo(parent_id,child_id) as (
// anchor member that happens to select first and last edges:
select parent_id,child_id from #bar where parent_id in (1,3)
union all
// recursive member:
select #bar.* from #bar
join foo on #bar.parent_id = foo.child_id
)
select parent_id,child_id from foo

parent_id  child_id
1          2
3          4
2          3
3          4    // 2nd appearance!

where foo.child_id not in (1,3)

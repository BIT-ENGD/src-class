def get_type
  x = [{:type=>'A', :patterns=>['foo.*']}, {:type=>'B', :patterns=>['bar.*']}]

  name = 'foo.txt'

  result = x.each { |item|
    item[:patterns].each { |regex|
      puts "Checking #{regex} against #{name}"
      if !name.match(regex).nil?
        puts "Found match: #{item[:type]}"
        return item[:type]
      end
    }
  }
end

result = get_type
puts "result: #{result}"

Checking foo.* against foo.txt
Found match: A
result: A

Checking foo.* against foo.txt
Found match: A

def get_type
  x = [{:type=>'A', :patterns=>['foo.*']}, {:type=>'B', :patterns=>['bar.*']}]

  name = 'foo.txt'

  result = []
  x.each { |item|
    item[:patterns].each { |regex|
      puts "Checking #{regex} against #{name}"
      if !name.match(regex).nil?
        puts "Found match: #{item[:type]}"
        result << item[:type]
      end
    }
  }
  result[0] unless result.empty?
end


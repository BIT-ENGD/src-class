module Amazon
  module AWS
    # All dynamically generated exceptions occur within this namespace.
    #
    module Error
      # An exception generator class.
      #
      class AWSError
        attr_reader :exception

        def initialize(xml)
          err_class = xml.elements['Code'].text.sub( /^AWS.*\./, '' )
          err_msg = xml.elements['Message'].text

          unless Amazon::AWS::Error.const_defined?( err_class )
            Amazon::AWS::Error.const_set( err_class,
                    Class.new( StandardError ) )
          end

          ex_class = Amazon::AWS::Error.const_get( err_class )
          @exception = ex_class.new( err_msg )
        end
      end
    end
  end
end

AWS.InvalidParameterValue
Amazon::AWS::Error::InvalidParameterValue
StandardError
begin
  do_aws_stuff
rescue Amazon::AWS::Error => error
  puts "Got an AWS error"
end

do_aws_stuff
NameError
irb(main):007:0> NameError.new.kind_of?(Amazon::AWS::Error)
=> true

true
irb(main):009:0> NameError.new.kind_of?(Amazon::AWS)
=> false

begin
  do_aws_stuff
rescue => error
  if error.class.to_s =~ /^Amazon::AWS::Error/
    puts "Got an AWS error"
  else
    raise error
  end
end

error = Amazon::AWS::Error::AWSError.new( xml )
raise error.exception

rescue
kind_of?(Amazon::AWS::Error)
include Amazon::AWS::Error
Amazon::AWS::Error
kind_of?(Amazon::AWS::Error)
Amazon::AWS::Error

  def create_new_email_image

    if email_changed?

      path_to_images = '/images/emails'

      puts "Connecting to AWS..."
      config = YAML.load(File.open("#{RAILS_ROOT}/config/s3_credentials.yml"))[RAILS_ENV]
      AWS::S3::Base.establish_connection!(
        :access_key_id     => config['access_key_id'],
        :secret_access_key => config['secret_access_key']
      )

      puts "Finding S3 bucket..."
      begin
        bucket = AWS::S3::Bucket.find config['bucket_name']
      rescue AWS::S3::NoSuchBucket
        AWS::S3::Bucket.create config['bucket_name']
        bucket = AWS::S3::Bucket.find config['bucket_name']
      end

      images_path = "#{RAILS_ROOT}/tmp/"
      file_name = "#{id}.png"
      #file_name = "5056.png"
      file_path = images_path + "/"+ file_name

      File.delete file_path if File.exists? file_path

      img = Magick::Image.new(400, 22) { self.background_color = 'transparent' }
      img.format = 'PNG'

      text = Magick::Draw.new
      text.annotate(img, 0, 0, 1, 0, "#{email}") {
          self.gravity = Magick::WestGravity
          self.pointsize = 18
          self.fill = '#000000'
          self.kerning = -1
          self.font_weight = Magick::BoldWeight
          }

      img.write file_path

      if AWS::S3::S3Object.exists? file_name, bucket.name + path_to_images
        puts "file exists (deleting)"
        AWS::S3::S3Object.delete file_name, bucket.name + path_to_images, :force => true
      end

      AWS::S3::S3Object.store file_name, 
         File.open(file_path), 
         bucket.name + path_to_images, 
         :content_type => 'image/png',
         :access => :public_read,
         :reload => true

      `rm #{file_path}`
    end
  end


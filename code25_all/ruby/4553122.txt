class User < ActiveRecord::Base
  belongs_to :address  
  accepts_nested_attributes_for :address

  # Include default devise modules. Others available are:
  # :token_authenticatable, :confirmable, :lockable and :timeoutable
  devise :database_authenticatable, :registerable,
         :recoverable, :rememberable, :trackable, :confirmable, :lockable, :validatable

  # Setup accessible (or protected) attributes for your model
  attr_readonly :username
  attr_accessible :email, :password, :password_confirmation, :remember_me, :phone_number, :username, :newsletter, :address_attributes

  validates :username, :presence => true, :uniqueness => true, :length => {:minimum => 4, :maximum => 16 }, :format => { :with => /\A[a-z0-9][a-z0-9._-]*\z/i }
  validates :phone_number, :length => {:minimum => 6, :maximum => 25}, :format => { :with => /\A\S[0-9\+\/\(\)\s\-]*\z/i }, :allow_nil  => true
  validates :address, :presence => true
end

it "should be valid without an phonenumber" do
    Factory.build(:user, :phone_number  => nil).should be_valid
  end

  it "should be invalid with an invalid phonenumber" do   
    invalid_phonenumbers.each do |invalid|
      Factory.build(:user, :phone_number  => invalid).should_not be_valid
    end
  end

  it "should be valid with an valid phonenumber" do
    valid_phonenumbers.each do |valid|
      Factory.build(:user, :phone_number  => valid).should be_valid
    end
  end

  def invalid_phonenumbers
    ["Hans Wurst","+49 221 Hans","Gebe ich nicht ein","        ","110",""]
  end

  def valid_phonenumbers
    ["+492203969534","0221/549534","0800-2222 800","+49-0221-2222-390","+49 (221) / 549534 - 23","+49 (0) 221 / 549534 - 23","0221269534"]          
  end


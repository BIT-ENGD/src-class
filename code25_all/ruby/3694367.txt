validate_each

# app/models/user.rb

# a custom validator class
class IsNotReservedValidator < ActiveModel::EachValidator
  RESERVED = [
    'admin',
    'superuser'
  ]

  def validate_each(record, attribute, value)
    if RESERVED.include? value
      record.errors[attribute] <<
        # options[:message] assigns a custom notification
        options[:message] || 'unfortunately, the name is reserved'
    end
  end
end

validates

# a user model
class User < ActiveRecord::Base
  include ActiveModel::Validations

  ERRORS = []

  begin
    validates :name,
      :is_not_reserved => true,
      # 1st try to set a custom message
      :options         => { :message => 'sorry, but the name is not valid' }
  rescue => e
    ERRORS << e
    begin
      validates :name,
        :is_not_reserved => true,
        # 2nd try to set a custom message
        :message         => 'sorry, but the name is not valid'
    rescue => e
      ERRORS << e
    end
  ensure
    puts ERRORS
  end
end


>> user = User.new(:name => 'Shamaoke')
Unknown validator: 'options'
Unknown validator: 'message'


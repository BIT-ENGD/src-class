class Document < ActiveRecord::Base
end

class Page < Document
end

class Folder < Document
end

class Symlink < ActiveRecord::Base
  set_table_name  :documents

  instance_methods.each { |m| undef_method m if (ActiveRecord::Base.instance_methods(false).include? m) && (!['link', 'link_id', 'link_id='].include? m) }

  def method_missing(sym, *args, &block)
    puts "Sending #{sym}(#{args.join(',')}) to obj"
    link.__send__(sym, *args, &block)
  end

  def save
    raise 'Symlink cant be saved' unless new_record?
    super
  end

  private

  def link
    @link ||= Document.find(self.link_id)
  end  
end

acts_as_symlink :column => 'parent_id'

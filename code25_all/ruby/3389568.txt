cards
app/models
- card.rb
+ base_game
  - foo.rb
    - class BaseGame::Foo < Card
  - bar.rb
    - class BaseGame::Bar < Card
+ exp_one
  - thing.rb
    - class ExpOne::Thing < Card

constants
Module
class Card
  def self.base_game_cards 
    BaseGame.constants.map {|c| ("BaseGame::" + c).constantize}.select {|c| c.instance_of?(Class) and c.superclass == Card}
  end
end

Card.base_game_cards
[]
# Preload all card models from all expansions. This allows us to dynamically
# determine card types by reflection.
Dir.glob("#{RAILS_ROOT}/app/models/*/*.rb").each do |file| 
  require file
end

raise
inpect
Card.base_game_cards
[]
[]
glob

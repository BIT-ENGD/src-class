class Person
  #a class that wraps to some db table
  def initialize(attributes=nil)
    populate_with_attributes(attributes) if !attributes.nil?
  end
  def self.find(id)
    @the_db.execute('query here where id....')
  end
  def save
    #save logic and queries here
    @the_db.execute('save query here')
  end
  # other methods .....
end

class SuperPerson
  #another class that wraps to some db table
end

class SpTh < Thread
  def initialize(thread_id, *other_params)
    super
    @thread_id = thread_id
    @db = SQLite3.Database.new("./db_#{@thread_id}.sqlite3")
    #....
  end

  def start
    person = Person.find(55)
    person.age = 27
    person.save
  end
  # other methods .....
end

class Sp
  def initialize
    @threads_amount = 5
    @threads = []
    #...
    raise_threads
    #...
  end

  def raise_threads
    @threads_amount.times{|thread_id|
      @threads << SpTh.new(thread_id, *other_params){}
    }
  end
  # other methods .....
end


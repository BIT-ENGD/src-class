 # 1. Query
 ALTER TABLE foo ADD PRIMARY KEY (id)
 # 2. Handle exception:
 Duplicate entry '3761290' for key 'PRIMARY' (Mysql::Error)
 # 3. Query:
 SELECT COUNT(1) FROM TABLE foo WHERE id = 3761290
 # 4. (Assuming 5 rows were returned from the previous query) Query:
 DELETE FROM TABLE foo WHERE id = 3761290 LIMIT 4 OFFSET 1
 # 5. retry ALTER TABLE query

def test_create_primary_key
  table = 'foo'
  db = flexmock
  db.should_receive(:prepare).
      with("ALTER TABLE #{table} ADD PRIMARY KEY (id)").
      twice.
      and_raise(Mysql::Error, "Duplicate entry '3761290' for key 'PRIMARY'")
  db.should_receive(:prepare).
      with("SELECT COUNT(1) FROM #{table} WHERE id = ?").
      once.
      and_return(MockStatement.new [ [5] ])
  db.should_receive(:prepare).
      with("DELETE FROM #{table} WHERE id = ? LIMIT 4 OFFSET 1").
      once.
      and_return(MockStatement.new [ [5] ])

  indexer = Indexer.new :database_handle => db
  indexer.create_indexes table
end


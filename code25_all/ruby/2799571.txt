Point
point * 3
class Point
  def initialize(x,y)
    @x, @y = x, y
  end

  def *(c)
    Point.new(@x * c, @y * c)
  end
end

point = Point.new(1,2)
p point
p point * 3

#<Point:0x336094 @x=1, @y=2>
#<Point:0x335fa4 @x=3, @y=6>

3 * point

Point
Fixnum
TypeError
coerce
class Point
  def coerce(something)
    [self, something]
  end
end

p 3 * point

#<Point:0x3c45a88 @x=3, @y=6>

3 * point
3.*(point)
*
point
3
*
point.coerce(3)

[point, 3]

*
Point
*
Point
point.coerce(3)
*
Fixnum
case
coerce
coerce
*
coerce
Fixnum
Fixnum
*
Fixnum
class Fixnum
  def *(something)
    if (something.is_a? ...)
    else if ...  # other type / class
    else if ...  # other type / class
    else
    # it is not a type / class I know
      array = something.coerce(self)
      return array[0].*(array[1])   # or just return array[0] * array[1]
    end
  end
end

Fixnum
coerce
coerce
Point
*
+
point = Point.new(100,100)
point - 20  #=> (80,80)
20 - point  #=> (-80,-80)


(a, b), c = [[:a, :b], :c]
[a,b,c]
=> [:a, :b, :c]

(a,), = [[:a]]
a
=> :a

abc, a, b =* "abc".match(/(a)(b)./)
=> ["abc", "a", "b"]

nil1, =* "abc".match(/xyz/)
=> []

5.times.map { 1 }    
=> [1,1,1,1]

Array.new(5) { 1 }
=> [1,1,1,1,1]

[2]*5
=>[2,2,2,2,2]

Array.new 5, 2
=>[2,2,2,2,2]

[1,2,3].reduce(0, &:+)

=> 6

a.each_with_index.find_all { |e, i| some_predicate(e) }.map(&:last)

(1..4).zip(%w[cls1 cls2].cycle)

=> [[1, "cls1"], [2, "cls2"], [3, "cls1"], [4, "cls2"]]

keys, values = {a: 1, b: 2}.to_a.transpose
keys
=> [:a, :b]

"".methods.sort.grep(/\?/)

"".methods.sort - [].methods


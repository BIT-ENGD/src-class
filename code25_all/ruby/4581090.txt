<% form_for @user do |f| %>
<div id="form">
    <%= f.label :email, "E-mail" %>
    <%= f.text_field :email %>

    <%= f.label :password, "Password" %>
    <%= f.password_field :password %>

    <%= link_to "I don't have an account, "#", :id => "changeForm"%>
    <%= f.submit "Login" %>
</div>
<% end %>

<% form_for @user do |f| %>
<div id="form">
    <%= f.label :name, "Name" %>
    <%= f.text_field :name %>

    <%= f.label :email, "E-mail" %>
    <%= f.text_field :email %>

    <%= f.label :password, "Password" %>
    <%= f.password_field :password %>

    <%= f.label :password_confirmation, "Password confirmation" %>
    <%= f.password_field :password_confirmation %>

    <%= link_to "I do have an account, "#", :id => "changeForm"%>
    <%= f.submit "Register" %>
</div>
<% end %>

class User < ActiveRecord::Base
    attr_reader :password
    validates_presence_of :name, :email, :password
    validates_format_of :email, :with => /\A([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})\Z/i
    validates_confirmation_of :password   

#if password_conf or the name are present the user has tried to register...
if params[:user][:password_confirmation].present? || params[:user][:name].present?
   #so we'll try to save the user
   if @user.save
     #if the user is saved authenticate the user
     current_session.user = User.authenticate(params[:user])
     #if the user is logged in?
     if current_session.user.present?
       flash[:notice] = "succesvully logged
       redirect_to some_routes_path
     else
       #not logged in...
       flash[:notice] = "Not logged in"  
       render :action => "new"            
     end
   else
     #user not saved
     render :action => "new"
   end
 else
   #So if the params[:user][:password_confirmation] or [:user][:name] weren't present we geuss the user wants to login...
   current_session.user = User.authenticate(params[:user])
     #are we logged_in?
     if current_session.user.present?
       flash[:notice] = "Succesvully logged in"
       redirect_to some_routes_path
     else
       #errors toevoegen    
       @user.errors.add(:email, "The combination of email/password isn't valid")
       @user.errors.add(:password," ")
       render :action => "new"
     end
 end
end

    #login form
    <%= f.hidden_field :login, :value => true %>
    # and ofcourse set it to false if we want to register.

before_validation_on_create do |user|
  if params[:user].login == true #throws an error i know...
      validates_presence_of :email, :password
      validates_format_of :email, :with => /\A([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})\Z/i
  else
    validates_presence_of :name, :email, :password
    validates_format_of :email, :with => /\A([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})\Z/i
    validates_confirmation_of :password        
  end
end


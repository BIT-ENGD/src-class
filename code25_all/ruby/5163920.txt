case quad

when "0"

79           #upper-left address
 80            pdf.draw_text contact.first_name + " " + contact.last_name,
 81               :at =>[(pdf.bounds.left + postcard_width - in2pt(2.75)), (pdf.bounds.top - in2pt(2.25))],
 82               :size => 14
 83 
 84            pdf.draw_text contact.address.street1,
 85               :at =>[(pdf.bounds.left + postcard_width - in2pt(2.75)), (pdf.bounds.top - in2pt(2.25) - 20)],
 86               :size => 14
 87 
 88            pdf.draw_text contact.address.city + ", " + contact.address.state,
 89               :at =>[(pdf.bounds.left + postcard_width - in2pt(2.75)), (pdf.bounds.top - in2pt(2.25) - 40)],
 90               :size => 14
 91 
 92            pdf.draw_text contact.address.zip,
 93               :at =>[(pdf.bounds.left + postcard_width - in2pt(2.75)), (pdf.bounds.top - in2pt(2.25) - 60)],
 94               :size => 14

when 1
....(same code)

when 2
....(same code)

when 3
....(same code)


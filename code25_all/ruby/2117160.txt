CoreExtensions::CamelcasedJsonString
â€¦::CamelcasedJsonSymbol
Symbol#to_s
String
CamelcasedJsonString
Symbol#to_s
require 'rubygems' if RUBY_VERSION < '1.9'
require 'spec'

module CoreExtensions

  module CamelcasedJsonString; end

  module CamelcasedJsonSymbol

    alias to_s_before_core_extension to_s
    def to_s(*args)
      to_s_before_core_extension(*args).extend(CamelcasedJsonString)
    end

  end
  ::Symbol.send :include, CamelcasedJsonSymbol

end

describe Symbol do

  subject { :chunky_bacon }

  it "should be a CamelcasedJsonSymbol" do
    subject.should be_a(CoreExtensions::CamelcasedJsonSymbol)
  end

  it "should respond to #to_s_before_core_extension" do
    subject.should respond_to(:to_s_before_core_extension)
  end

  specify "#to_s should return a CamelcasedJsonString" do
    subject.to_s.should be_a(CoreExtensions::CamelcasedJsonString)
  end

end

require 'rubygems' if RUBY_VERSION < '1.9'
require 'spec'

module CoreExtensions
  module CamelcasedJsonString; end
end

class Symbol
  alias to_s_before_core_extension to_s
  def to_s(*args)
    to_s_before_core_extension(*args).extend(CoreExtensions::CamelcasedJsonString)
  end
end

describe Symbol do

  subject { :chunky_bacon }

  it "should respond to #to_s_before_core_extension" do
    subject.should respond_to(:to_s_before_core_extension)
  end

  specify "#to_s should return a CamelcasedJsonString" do
    subject.to_s.should be_a(CoreExtensions::CamelcasedJsonString)
  end

end

Symbol
Symbol#to_json
Hash#to_json
#to_s
#to_json
Symbol#to_s
#to_json
#to_json
Hash#to_json

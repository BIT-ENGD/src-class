class PatientsController < ApplicationController

  before_filter :require_user
  load_and_authorize_resource

  def new
    @patient = Patient.new

    respond_to do |format|
      format.html # new.html.erb
      format.xml  { render :xml => @patient }
    end
  end

  def edit
    @patient = Patient.find(params[:id])
  end

  def create
    @patient = Patient.new(params[:patient])
    respond_to do |format|
      if @patient.save
        format.html { redirect_to(@patient, :notice => 'Patient was successfully created.') }
      else
        format.html { render :action => "new" }
      end
    end
  end

  def update
    @patient = Patient.find(params[:id])
    respond_to do |format|
      if @patient.update_attributes(params[:patient])
        format.html { redirect_to(@patient, :notice => 'Patient was successfully updated.') }
      else
        format.html { render :action => "edit" }
      end
    end
  end

end

class Patient < ActiveRecord::Base

  #patient can have many apointments and vistis
  has_many :appointments, :dependent => :destroy
  has_many :visits, :dependent => :destroy

  # adding the photo as an attribute to patient 
  attr_accessible :photo
  has_attached_file :photo, :styles => { :small => "200x200>" }

  # validate  that fields are not blank
  validates_presence_of(:f_name, :l_name, :tel_number, :address)

  # validate that fields are numeric
  validates_numericality_of(:height, :weight, :bmi, :tel_number)

  #v alidate uniqueness of fields and users
  validates_uniqueness_of(:email, :universal_ID)
  validates_uniqueness_of(:l_name, :case_sensitve => false, :scope => [:date_of_birth, :f_name, :tel_number], :message => "User already existsts")

  #validate Email is right format
  validates_format_of(:email, :with => /\A([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})\Z/i, :message => "Dosen't look like a real email address, please try again")

  #validate the date of birth
  validates_inclusion_of(:date_of_birth, :in => Date.civil(1900, 1, 1) .. Date.today, :message => "Must be between the year 1900 and today")


end


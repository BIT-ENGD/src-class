class Story < ActiveRecord::Base
    validates_presence_of :name, :link
    has_many :votes do
        def latest
            find :all, :order => 'id DESC', :limit => 3
        end
    end

    def to_param
        "#{id}-#{name.gsub(/\W/, '-').downcase}"
    end
end

class Vote < ActiveRecord::Base
    belongs_to :story
end

one:
  name: MyString
  link: MyString

two:
  name: MyString2
  link: MyString2

one:
  story: one

two:
  story: one

def test_should_have_a_votes_association
    assert_equal [votes(:one),votes(:two)], stories(:one).votes
  end

def test_should_return_highest_vote_id_first
    assert_equal votes(:two), stories(:one).votes.latest.first
  end

def test_should_have_a_votes_association
    assert_equal [votes(:two),votes(:one)], stories(:one).votes
  end

  def test_should_return_highest_vote_id_first
    assert_equal votes(:one), stories(:one).votes.latest.first
  end


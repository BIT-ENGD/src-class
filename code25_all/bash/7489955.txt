./script.sh * folder/to/files/ 
#
# or #
#
./script.sh xx folder/to/files/

#!/bin/bash

# ck init params
if [ $# -le 0 ]
then
  echo "Usage: $0 <letters>"
  exit 0
fi

# list files in current dir
list=`ls BRUTE*` 
for i in $list 
do 

  # prepare regex    
  case $1 in
       "*") REGEXP="^.*(.)\1+$";;
       *) REGEXP="^.*[$1]$";;
  esac    
  FILE=$i

  # backup file
  cp $FILE $FILE.bak

  # removing line with same letters
  sed -Ee "s/$REGEXP//g" -i '' $FILE
  cat $FILE | grep -v "^$"

done

exit 0

$cat BRUTE02.dat BRUTE03.dat
aa
ab
ac
ad
ee
ef
ff
hhh
$

 sed [-Ealn] command [file ...]
 sed [-Ealn] [-e command] [-f command_file] [-i extension] [file

 A single command may be specified as the first argument to sed. 

 The following options are available:

 -E      Interpret regular expressions as extended (modern)

 -a      The files listed as parameters for the ``w'' functions

 -e command
         Append the editing commands specified by the command

 -f command_file
         Append the editing commands found in the file

 -i extension
         Edit files in-place, saving backups with the specified

 -l      Make output line buffered.

 -n      By default, each line of input is echoed to the standard

 The form of a sed command is as follows:

       [address[,address]]function[arguments]

 Whitespace may be inserted before the first address and the

 Normally, sed cyclically copies a line of input, not including

 Some of the functions use a hold space to save all or part of the


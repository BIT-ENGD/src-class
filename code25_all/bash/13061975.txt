useradd
sudo
useradd -m --user-group jaredm2 #command that is attempting to run...
useradd: invalid option -- ' '
Usage: useradd [options] LOGIN
....rest of useradd error text....

#!/bin/bash
#Add a new user

FINALCOMMAND="-m"

#import useradd defaults...
. /etc/default/useradd

#Check if running as root
if [ "$(id -u)" != "0" ]; then
    echo "This script must be ran as root"
    exit 1
fi

#Get the new users Name
#echo -n "Please enter the users First and Last Name and press [ENTER]: "
#read Name

#Get the new users username
echo "The username must be 4-20 characters."
echo -n "Please enter the users requested username and press [ENTER]: "
read USERNAME
while [ $(grep -c "^${USERNAME}:" /etc/passwd) -ge 1 ] || [ ${#USERNAME} -le 3 ] || [ ${#USERNAME} -ge 21 ]
do
    echo " "
    echo "Error: Username is in use or invalid.  Please select a different username."
    echo " "
    echo -n "Please enter the users requested username and press [ENTER]: "
    read USERNAME   
done #USERNAME will be valid from this point

#ASK about the default shell now
echo -n "Enter the new shell if you would like one (currently $SHELL) or leave blank for the default and press [ENTER]: "
read tempSHELL
if [ ${#tempSHELL} -ge 1 ]; then
    SHELL="$tempSHELL"
    FINALCOMMAND="$FINALCOMMAND ""-s $SHELL"
fi

#ASK about a different primary group
echo "Would you like to enter a non-default primary user group? Defaults to creating a new group that matches the username"
echo "Enter a new Primary Group or leave blank for the default and press [ENTER]: "
read newPrimaryGroup

if [ ${#newPrimaryGroup} -eq 0 ]; then
    FINALCOMMAND="$FINALCOMMAND --user-group"
else
    if [ $(grep -c "^${newPrimaryGroup}" /etc/group) -ge 1 ]; then
        FINALCOMMAND="$FINALCOMMAND -g $newPrimaryGroup"
    else
        echo "Invalid group specified reverting to default!"
        FINALCOMMAND="$FINALCOMMAND --user-group"
    fi
fi
useradd -m --user-group jaredm2
#ASK about additional groups
echo "Would you like the new user to be a part of any additional groups?  Leave blank if no additional groups are needed or enter additional groups in the format of GROUP1,GROUP2,... (NO SPACES) and press [ENTER]: "
read extraGroups
#remove spaces if the user entered any
extraGroups="${extraGroups//[[:space:]]}"
FINALEXTRAGROUPS=""
IFS=","
for g in $extraGroups
do
    if [ $(grep -c "^${g}" /etc/group) -ge 1 ]; then
        FINALEXTRAGROUPS="$FINALEXTRAGROUPS,$g"
    else
        echo "$g is invalid user will not be added..."
    fi
done
FINALEXTRAGROUPS=$(echo "$FINALEXTRAGROUPS" | tail -c +2)
if [ ${#FINALEXTRAGROUPS} -ge 1 ]; then
    FINALCOMMAND="$FINALCOMMAND -G $FINALEXTRAGROUPS"
fi

#ASK about the home directory
echo "Would you like to enter a new home directory for the user?  Leave blank to use the default of $HOME/$USERNAME or enter your own and press [ENTER]: "
read NEWHOME

if [ ${#NEWHOME} -ge 1 ]; then
    FINALCOMMAND="$FINALCOMMAND -d $NEWHOME"
fi

#ADD the username to the command
FINALCOMMAND=`echo "$FINALCOMMAND $USERNAME" | sed 's/ *$//g' | sed 's/^ *//g'`
echo "useradd $FINALCOMMAND"
#PASSCOMMAND="sudo passwd $USERNAME"
#ADD THE USER
`useradd $FINALCOMMAND`

`passwd $USERNAME`

`chfn $USERNAME`

+ '[' 0 -ge 1 ']'
++ sed 's/^ *//g'
++ sed 's/ *$//g'
++ echo '/usr/sbin/useradd -m -U JaredM'
+ FINALCOMMAND='/usr/sbin/useradd -m -U JaredM'
++ '/usr/sbin/useradd -m -U JaredM'
./addnewuser.sh: line 89: /usr/sbin/useradd -m -U JaredM: No such file or directory


#!/bin/bash  
expect -c "  
spawn telnet 1.1.1.1 2000  
sleep 1  
send \"\r\"  
send \"\r\"  
expect {  
Prompt> { send \"dir\r\"  }  
}  
set output $expect_out(buffer)  
"    
echo "$output"  

spawn telnet 1.1.1.1 2000  
Trying 1.1.1.1...  
Connected to 1.1.1.1 (1.1.1.1).  
Escape character is '^]'.  




Prompt>  

Prompt>  

expect -c "
spawn telnet $IP $PORT1
sleep 1
send \"\r\"
send \"\r\"
"
expect -c '
expect {
Prompt> { send \"dir\r\" }
set output $expect_out(buffer)
puts "$output"
}
'

spawn telnet 172.23.149.139 2033
can't read "expect_out(buffer)": no such variable
while executing
"expect {
Prompt> { send \"dir\r\" }
set output $expect_out(buffer)
puts "$output"
}
"

output=$(expect -c '  
spawn telnet '"$IP $PORT1"'  
sleep 1  
send '"\r"'  
send '"\r"'  

expect Prompt> { send '"dir\r"'  }  
expect '"\n"'  
expect -indices Prompt>  
puts '"[string range $expect_out(buffer) 0 [expr $expect_out(0,end) - 1]]"'  

')  

echo "======="  
echo "$output"  
echo "======="  

syntax error in expression "(0,end) - 1"  
    while executing  
"expr (0,end) - 1"  
    invoked from within  
"string range (buffer) 0 [expr (0,end) - 1]"  
    invoked from within    
"puts [string range (buffer) 0 [expr (0,end) - 1]]"  

=======
spawn telnet 1.1.1.1 2000
Trying 1.1.1.1...
Connected to 1.1.1.1 (1.1.1.1).
Escape character is '^]'.




Prompt>

Prompt>

=======

puts '"[string range $expect_out(buffer) 0 [expr $expect_out(0,end) - 1]]"'

puts '"$expect_out(buffer)"'

Prompt>

Prompt> (buffer)


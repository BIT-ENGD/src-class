echo start
for i in $(<dump.txt) ; do
    md=$(echo $i|awk -F'|' '{print $1}')
    file=$(echo $i|awk -F'|' '{print $2}')
    for j in $(<dump.txt) ; do
        m=$(echo $j|awk -F'|' '{print $1}')
        f=$(echo $j|awk -F'|' '{print $2}')
        if [ "$md" == "$m" ]; then
            echo $file and $f are duplicates
        fi
    done
done
echo end

404460c24654e3d64024851dd0562ff1 *./extest.sh
7a900fdfa67739adcb1b764e240be05f *./test.txt
7a900fdfa67739adcb1b764e240be05f *./test2.txt
88f5a6b83182ce5c34c4cf3b17f21af2 *./dump.txt
c8709e009da4cce3ee2675f2a1ae9d4f *./test3.txt
d41d8cd98f00b204e9800998ecf8427e *./checksums.txt

#!/bin/sh
func ()  
{
if [ "$1" == "" ]; then
echo "Default";
for i in `find` ; 
do
    #if [ -d $i ]; then
        #echo $i "is a directory";
    #fi
    if [ -f $i ]; then
        if [ "$i" != "./ex.sh" ]; then
            #echo $i "is a file";
            md5sum $i >> checksums.txt;
            sort --output=dump.txt checksums.txt;
        fi
    fi
done
fi

if [ "$1" == "--long" ]; then
echo "--long";
for i in `find` ; 
do
    #if [ -d $i ]; then
        #echo $i "is a directory";
    #fi
    if [ -f $i ]; then
        echo $i "is a file";        
    fi
done
fi

if [ "$1" == "--rm" ]; then
echo "--rm";
for i in `find` ; 
do
    #if [ -d $i ]; then
        #echo $i "is a directory";
    #fi
    if [ -f $i ]; then
        echo $i "is a file";        
    fi
done
fi
}

parse () {
echo start
for i in $(<dump.txt) ; do
    md=$(echo $i|awk -F'|' '{print $1}')
    file=$(echo $i|awk -F'|' '{print $2}')
    for j in $(<dump.txt) ; do
        m=$(echo $j|awk -F'|' '{print $1}')
        f=$(echo $j|awk -F'|' '{print $2}')
        #echo $md
        #echo $m
        if [ "$file" != "$f" ] && [ "$md" == "$m" ]; then
            echo Files $file and $f are duplicates.
        fi
    done
done
echo end
}

getArgs () {
if [ "$1" == "--long" ]; then
    echo "got the first param $1";
else
    if [ "$1" == "--rm" ]; then
        echo "got the second param $1";
    else
        if [ "$1" == "" ]; then
            echo "got default param";
        else
            echo "script.sh: unknown option $1";
            exit;
        fi  
    fi
fi
}


#start script
cat /dev/null > checksums.txt;
cat /dev/null > dump.txt;
getArgs $1;
func $1;
parse;
#end script


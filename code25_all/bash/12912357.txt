key=value
sed
batch_sub () {
    local file="${@: -1}" # Last argument is file to be changed.
    [[ -w "${file}" ]] || { echo "Invalid file: ${file}" ; return 1 ; }
    for arg in "${@}" ; do
        [[ $arg =~ (.*)=(.*) ]] || continue
        # 'trim_str' will trim leading & trailing spaces.
        local key=$(trim_str "${BASH_REMATCH[1]}")
        local value=${BASH_REMATCH[2]}
        sed -i 's@'"\(${key}"' *=\).*@\1'"${value}"'@' "${file}"
    done
}

batch_sub "a = x" "b = y" "c = z" "a.b.d.e=udp://b:8080" "/tmp/file"

batch_sub "a = x b = y c = z a.b.d.e=udp://b:8080" "/tmp/file"

sed
sed -i -e 's/$key=/\1$value/'
       -e 's/$key1=/\1$value1/'
       '/tmp/file'


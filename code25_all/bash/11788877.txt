cp -r /root/puppet /opt
mydirectory
    - script.sh
    - assets
        - puppet
            - file1
            - file2
            - file3

#!/bin/bash

### VARIABLE INITIALIZATION
BOOTSTRAP_DIR="/opt/bootstrapping"

# Die with an error message
die()
{
    echo "**** BOOTSTRAPPING FAILED ****"
    echo -e "ERROR:  ${2}"
    exit ${1}
}

# check the return code of the previous command and die if != 0
check_errs()
{
    if [ "${1}" -ne "0" ]; then
        die ${1} "${2}"
    fi
}

# Get the path of the directory from which this script is being executed
SCRIPT_PATH="`dirname \"$0\"`"              # relative
check_errs $? "Could not get the relative path of the executing script"
SCRIPT_PATH="`( cd \"$SCRIPT_PATH\" && pwd )`"  # absolutized and normalized
check_errs $? "Could not get the absolute path of the executing script"

### DEPLOY THE BOOTSTRAPPING FILES
if [ -d "${BOOTSTRAP_DIR}" ]; then
    echo "Removing ${BOOTSTRAP_DIR}"
    rm -rf ${BOOTSTRAP_DIR}
    check_errs $? "Could not remove ${BOOTSTRAP_DIR}"
fi

if [ ! -d "${SCRIPT_PATH}/assets/puppet" ]; then
    die 1 "Can not find ${SCRIPT_PATH}/assets/puppet"
fi

if [ ! -f "${SCRIPT_PATH}/assets/rc.local" ]; then
    die 1 "Can not find ${SCRIPT_PATH}/assets/rc.local"
fi

# This command succeeds, but /opt/bootstrapping/puppet does not exist afterwards.
# Instead I get /opt/bootstrapping/files...
echo "Copying ${SCRIPT_PATH}/assets/puppet to ${BOOTSTRAP_DIR}"
cp -r ${SCRIPT_PATH}/assets/puppet ${BOOTSTRAP_DIR}
check_errs $? "Could not copy ${SCRIPT_PATH}/assets/puppet to ${BOOTSTRAP_DIR}"

echo "Copying ${SCRIPT_PATH}/assets/rc.local to /etc/rc.local"
cp ${SCRIPT_PATH}/assets/rc.local /etc/rc.local
check_errs $? "Could not copy ${SCRIPT_PATH}/assets/rc.local to /etc/rc.local"

cp -r /root/assets/puppet /opt/bootstrapping

sed: first RE may not be empty
sed: first RE may not be empty
sed: first RE may not be empty
sed: first RE may not be empty
sed: first RE may not be empty
sed: first RE may not be empty
sed: first RE may not be empty

#!/bin/bash

FIND_DIRECTORIES=$(find . -type d -maxdepth 1 -mindepth 1)
FIND_IN_DIRECTORIES=$(find $FIND_DIRECTORIES"/app/design/adminhtml" -name "login.phtml")

for i in $FIND_IN_DIRECTORIES
  do
    # Generate Random Number
    RANDOM=$[ ( $RANDOM % 1000 )  + 1 ]

    # Find the line where password is printed out on the page
    # Grep for the whole line, then remove all but the numbers
    # This will leave the old password number
    OLD_NUM_HOLDER=$(cat $i | grep "<?php echo Mage::helper('adminhtml')->__('Password: ')" )
    OLD_NUM="${OLD_NUM_HOLDER//[!0-9]}"

    # Add old and new number to the end of text string
    # Beginning text string is used so that sed can find
    # Replace old number with new number
    OLD_NUM_FULL="password\" ?><?php echo \""$OLD_NUM
    NEW_NUM_FULL="password\" ?><?php echo \""$RANDOM
    sed -ie "s/$OLD_NUM_FULL/$NEW_NUM_FULL/g" $i

    # GREP for the setNewPassword function line
    # GREP for new password that has just been set above
    SET_NEW_GREP=$(cat $i | grep "setNewPassword(" )
    NEW_NUM_GREP=$(cat $i | grep "<?php echo \"(password\" ?><?php echo" )
    NEW_NUM_GREPP="${NEW_NUM_GREP//[!0-9]}"

    # Add new password to string for sed
    # Find and replace old password for setNewPassword function
    FULL_NEW_PASS="\$user->setNewPassword(password"$NEW_NUM_GREPP")"
    sed -ie "s/$SET_NEW_GREP/$FULL_NEW_PASS/g" $i
  done

#!/bin/bash

for i in $(find . -type d -maxdepth 1 -mindepth 1); do
  FIND_IN_DIRECTORIES=$i"/app/design/adminhtml/default"
  FIND_IN_DIRECTORIES=$(find $FIND_IN_DIRECTORIES -name "login.phtml")

  # Generate Random Number
  RANDOM=$[ ( $RANDOM % 1000 ) + 1 ]

  # Find the line where password is printed out on the page
  # Grep for the whole line, then remove all but the numbers
  # This will leave the old password number
  OLD_NUM_HOLDER=$(cat $FIND_IN_DIRECTORIES | grep "<?php echo Mage::helper('adminhtml')->__('Password: ')" )
  OLD_NUM="${OLD_NUM_HOLDER//[!0-9]}"

  # Add old and new number to the end of text string
  # Beginning text string is used so that sed can find
  # Replace old number with new number
  OLD_NUM_FULL="password\" ?><?php echo \""$OLD_NUM
  NEW_NUM_FULL="password\" ?><?php echo \""$RANDOM
  sed -ie "s/$OLD_NUM_FULL/$NEW_NUM_FULL/g" $FIND_IN_DIRECTORIES

  # GREP for the setNewPassword function line
  # GREP for new password that has just been set above
  SET_NEW_GREP=$(cat $FIND_IN_DIRECTORIES | grep "setNewPassword(" )
  NEW_NUM_GREP=$(cat $FIND_IN_DIRECTORIES | grep "<?php echo \"(password\" ?><?php echo" )
  NEW_NUM_GREPP="${NEW_NUM_GREP//[!0-9]}"

  # Add new password to string for sed
  # Find and replace old password for setNewPassword function
  FULL_NEW_PASS="\$user->setNewPassword(password"$NEW_NUM_GREPP")"
  sed -ie "s/$SET_NEW_GREP/$FULL_NEW_PASS/g" $FIND_IN_DIRECTORIES
done


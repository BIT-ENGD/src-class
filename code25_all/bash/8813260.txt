#!/bin/bash
## Here I just print in the screen the "form" with the "checkboxes"
function screen_info(){
clear
cat <<EOF

    /\_/\_/\_/\_/\_/\_/\_/\_/\_/\_
    ||
    ||      1[ ]    2[ ]    3[ ]
    ||
    #############################



EOF
}

## This function detects the arrow keys and moves the cursor
function arrows(){

## I use ANSII escape sequences to detect the arrow keys
left_arrow=$'\x1b\x5b\x44'  #leftuierda
right_arrow=$'\x1b\x5b\x43' #rightecha
just_x_key=""

## With tput I move the cursor accordingly
cursor_x=14
cursor_y=3
tput cup $cursor_y $cursor_x

while [ -z "$just_x_key" -o "$just_x_key" != "$just_x_key" ]; do
    read -s -n3 key
    while [ `expr length "$key"` -ne 3 ]; do
        key=""
        read -s -n3 key
        break
    done
    case "$key" in
    $left_arrow)
        if [ $cursor_x -gt 14 ]; then
            cursor_x=`expr $cursor_x - 8`
        fi
        tput cup $cursor_y $cursor_x
        #This is supposed to be a simple condition detecting the x key pressed wich I want to trigger something... But how to read a single character to this condition and 3 characters at the same time if the user presses the arrow key ???? =/
        #read -s just_x_key
        #if [ $just_x_key == x ]; then
        #   echo X
        #   tput cup 7 15
        #   echo "YOU PRESSED THE RIGHT KEY!!! =D"
        #fi 
        ;;
    $right_arrow)
        if [ $cursor_x -lt 28 ]; then
            cursor_x=`expr $cursor_x + 8`
        fi
        tput cup $cursor_y $cursor_x
        #read -s just_x_key
        #if [ $just_x_key == x ]; then
        #   echo X
        #   tput cup 7 15
        #   echo "YOU PRESSED THE RIGHT KEY!!! =D"
        #fi 
        ;;
    esac
done

exit $?
}


#EXECUTION
#=========

## I just call the functions!
screen_info
arrows


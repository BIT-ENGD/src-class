#!/bin/bash

processLine(){
  line="$@" # get the complete first line which is the complete script path 
name_of_file=$(basename "$line" ".php") # seperate from the path the name of file excluding extension
ps aux | grep -v grep | grep -q "$line" || ( nohup php -f "$line" > /var/log/iphorex/$name_of_file.log & ) 
}

FILE=""

if [ "$1" == "" ]; then
   FILE="/var/www/iphorex/live/infi_script.txt"
else
   FILE="$1"

   # make sure file exist and readable
   if [ ! -f $FILE ]; then
    echo "$FILE : does not exists. Script will terminate now."
    exit 1
   elif [ ! -r $FILE ]; then
    echo "$FILE: can not be read. Script will terminate now."
    exit 2
   fi
fi
# read $FILE using the file descriptors
# $ifs is a shell variable. Varies from version to version. known as internal file seperator. 
# Set loop separator to end of line
BACKUPIFS=$IFS
#use a temp. variable such that $ifs can be restored later.
IFS=$(echo -en "\n")
exec 3<&0 
exec 0<"$FILE"
while read -r line
do
    # use $line variable to process line in processLine() function
    processLine $line
done
exec 0<&3

# restore $IFS which was used to determine what the field separators are
IFS=$BAKCUPIFS
exit 0

/var/www/iphorex/live/infi_script.txt
[: 24: unexpected operator
infinity.sh: 32: cannot open : No such file


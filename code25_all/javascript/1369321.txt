rowspan
cellIndex==1
function OffsetCells($tbody) {
// if already indexed, we don't need to re-do it
if (!$tbody.data('isOffset').value) {
    // set offset for all cells to zero
    $tbody.find('td').data('offset', { value: 0 });
    // it's not already indexed, so get the cells that span multiple rows
    // capitalization of 'rowSpan' is important for IE
    var $rowSpanners = $tbody.find('td[rowSpan!=1]');
    $rowSpanners.each(function() {
        var $rowSpanningCell = $(this);
        // we need to select all the cells to the 'apparent' right of this cell, 
        // so we need this cell's apparent position
        // multiplying by one is easier than parseInt() to ensure conversion
        $rowSpanningCell.data('apparentIndex', { value: this.cellIndex * 1 +     $rowSpanningCell.data('offset').value });
        // we also need to know what row this cell is in 
/*???*/     $rowSpanningCell.data('rowIndex', { value: $rowSpanningCell.parent('tr').get(0).rowIndex });
        // down to business:
        $tbody.parent('table')  // get the whole table
        .find('tr')            // get all the rows in the table
        .slice($rowSpanningCell.data('rowIndex').value + 1, $rowSpanningCell.data('rowIndex').value + this.rowSpan) // narrow selection to the applicable rows
        .find('td')             // get the cells in the chosen rows
        .filter(function(index) {  // get the cells to the apparent right of this one.
            return index + $(this).data('offset').value >= $rowSpanningCell.data('apparentIndex').value;
        }).each(function() {
            $(this).data('offset', { value: $(this).data('offset').value + 1 });
        });
    });
    $tbody.data('isOffset', { value: true });
}
}

/*???*/
$rowSpanningCell.parent('tr').get(0).rowIndex
rowIndex
alert($rowSpanningCell.parent('tr').get(0).nodeName)
<TR>
rowIndex

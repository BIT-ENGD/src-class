function onGenePubmedSubmit() {

var contentCur = document.getElementById("curatedquery");
var contentValue = contentCur.value;

// New tabView widget
var tabView = new YAHOO.widget.TabView('tvcontainer');

// Define label and content
var labelText = nameReq + '<span class="close">X</span>';
var tabcontainer = idReq;
var content = "<div id="+tabcontainer+"></div>";

// Add new tab - work well !
if (labelText && content)
{
tabView.addTab( new YAHOO.widget.Tab({
                label:labelText,
                content:content,
                id: 'pubmedView',
                active:true }));
                }

// Define DataTable myPubmedListTable Columns
var myColumnDefsPubmed = [
    {key:"pmid", label:"PMID", sortable:true},
    {key:"articletitle", label:"Article Title", sortable:true},
    {key:"abstract", label:"Abstract", sortable:true},
    {key:"authorlist", label:"Authorlist", sortable:true},
    {key:"medline", label:"Medline", sortable:true}
    ];

// Define DataSource
var myDataSourcePubmed = new YAHOO.util.DataSource("qct-list-article.html");
myDataSourcePubmed.responseType = YAHOO.util.DataSource.TYPE_JSON;
myDataSourcePubmed.connXhrMode = "queueRequests";
myDataSourcePubmed.responseSchema = {
  resultsList: "articleItemList",
  fields: ["pmid","articletitle","abstract","authorlist","medline"]
  };

// myPubmedListTable config
var oConfigsPubmed = {
    initialRequest: '?term='+ contentValue,
    selectionMode: "single"
    };

// Create new DataTable - myPubmedListTable
var myPubmedListTable = new YAHOO.widget.DataTable(idReq, myColumnDefsPubmed, myDataSourcePubmed,oConfigsPubmed);

// Show myPubmedListTable
myPubmedListTable.onShow();

// Remove tab on tabView ----------- this part don't work---------- !          
YAHOO.util.Event.on(tabView.getElementsByClassName('close')[0], 'click', function(ev) {
YAHOO.util.Event.stopEvent(ev);
             //  some test - but don't work !               
             //  tabView.set('activeTab', tabView.get('tabs')[0]);
             //  tabView.set('activeIndex', 1);
             //  tabView.removeTab(tabView.get("activeTab"));
tabView.removeTab(tabView);
                      });
}


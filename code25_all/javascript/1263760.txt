function processData(unprocessed, nextReadPos) {
    var lastLineEnd = unprocessed.lastIndexOf('\n');
    if (lastLineEnd !== -1) {
        var lines = unprocessed.substring(0, lastLineEnd).split('\n');
        nextReadPos += lastLineEnd + 1 /* 1 == '\n'.length */;

        processLines(lines);
    } // end if

    return nextReadPos;
}

function handleResponse() {
    ...
    // here xhr.readyState === 4 && xhr.status === 200
    // in case we were called before finished processing
    if (inProgress) {
        return;
    } else {
        inProgress = true;
    }

    // extract new whole (complete) lines, and process them
    while (prevDataLength !== xhr.responseText.length) {
        if (xhr.readyState === 4 &&
            prevDataLength === xhr.responseText.length) {
            break;
        }

        prevDataLength = xhr.responseText.length;
        var unprocessed = xhr.responseText.substring(nextReadPos);
        nextReadPos = processData(unprocessed, nextReadPos);
    } // end while
    ...
    inProgress = false;
}
...
xhr.onreadystatechange = handleResponse;

httpRequest.onreadystatechange = function() { alertContents(httpRequest); };  //1 (simultaneous request)

xhr.onreadystatechange = function() { handleResponse(xhr); };  //1 (simultaneous request)

prevDataLength
nextReadPos

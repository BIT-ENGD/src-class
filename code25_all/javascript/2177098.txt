function startExec()
{
    var mC = new Corridor();
    mC.OpenNextPage();
}

Corridor.prototype.OpenNextPage = function()
{
    if(this.KeepLoading == false)
    {
        if(this.KeepLoadingTimer)
            clearTimeout(this.KeepLoadingTimer);        

        return 0;
    }

    this.ShowLoadingCorridorMsg();        
    this.LoadPage(++this.LoadedPages, this.OpenNextPage, 3 * this.ItemsPerPage);
}

//********************************************************************************
//Private
Corridor.prototype.LoadPage = function(page, callBack, pageSize)
{
    var ref = this;

    var mt = new MWsTraffic();
    var city = new MCity();

    city.name = cityList.getCurrentCity().name;
    city.state = cityList.getCurrentCity().state;

    var rr = new MResultRange();

    //This function is defined in a sort of public API available on the partner web site. 
    //So, as far as I know, the execution context will be changed and as of this point the 'this' will refer
    //to another object, that's why I have a this reference in the ref variable. This is what I think
    mt.getCorridors(city, rr,
        function(cInfo)
        {
            if (cInfo == null) 
            {   
                ref.KeepLoading = false;
                return null;
            }

            if( (cInfo.recordCount == 0) ) 
            {
                ref.KeepLoading = false;
                return null;
            }

            var e;
            for (var i = 0; i < cInfo.recordCount; i++) 
            {
                e = cInfo.corridor[i];                
                ref.totalCorridorsArray.push( new corridorContents(e.codCorridor, e.nameCorridor, e.levelCongested, e.point.x, e.point.y, false) );
            }

            if(callBack != null)
            {
                //Corridor.call(ref, callBack);
                callBack(); // <----  here's is the problem. This callback which points to the OpenNextPage function is being executed in another context. 
                            // I want to execute it in the same context OpenNextPage was called originaly (from inside startExec mC object)
            }
        }
    );    
}


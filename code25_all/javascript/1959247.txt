var mid_parser = new Parser.apply(null, mid_patterns);

TypeError: Function.prototype.apply called on incompatible [object Object]

var mid_parser = new Parser.prototype.apply(null, mid_patterns);

TypeError: Function.prototype.apply called on incompatible [object Object]

function Parser()
{
    this.comparemanager = new CompareManager(arguments);
}

mid_patterns = [objA,objB,objC]
var mid_parser = new Parser();
Parser.constructor.apply(mid_parser, mid_patterns);

syntax_model.js:91: SyntaxError: malformed formal parameter

var mid_parser = Parser.apply(null, mid_patterns);

TypeError: this.init is undefined // init is a function of Parser.prototype

function Parser()
{
    if(arguments.length) this.init.call(this,arguments); // call init only if arguments
}
Parser.prototype = {
   //...
   init: function()
   {
         this.comparemanager = new CompareManager(arguments);
   }
   //...
}

var normal parser = new Parser(objA,objB,objC);

mid_patterns = [objA,objB,objC]
var dyn_parser = new Parser();
dyn_parser.init.apply(dyn_parser, mid_patterns);


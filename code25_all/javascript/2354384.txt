month_start = new Date(this.Year, this.Month, 1);

function Display_Calendar_Week(x, month_days){
ds = '';
d=0;
//for the first day of the month, start at the appropriate day of the week
if(x==1)
{
    //first date of current month and year

    month_start = new Date(this.Year, this.Month, 1);

    d = month_start.getDay();
}
for(j=0;j<7;j++)
{
    if( (j<d) || (x > month_days))
    {
        ds +=('<div class="Calendar_Day_Square_Empty"></div>');
    }
    else
    {
        if((x==RightNow_Date) && (RightNow_Month==this.Month) && (RightNow_Year==this.Year))
        {

            ds +=('<div class="Calendar_Day_Square_Today" onClick="'+this.InstanceName+'.Select_Date(\''+ this.PageElement +'\', '+ this.Year +', '+ this.Month +', '+ x +');">' + x + '</div>');
        }
        else if((x==this.Selected_Date) && (this.Selected_Month==this.Month) && (this.Selected_Year==this.Year))
        {
            ds +=('<div class="Calendar_Day_Square_Selected" onClick="'+this.InstanceName+'.Select_Date(\''+ this.PageElement +'\', '+ this.Year +', '+ this.Month +', '+ x +');">' + x + '</div>');
        }
        else
            ds +=('<div class="Calendar_Day_Square" onClick="'+this.InstanceName+'.Select_Date(\''+ this.PageElement +'\', '+ this.Year +', '+ this.Month +', '+ x +');">' + x + '</div>');
        x++;
    }
}
return [x, ds];


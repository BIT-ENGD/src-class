   <input id="customerNameField" type="text" name="" value="">
    <input id="customerStreetField" type="text" name="" value="">

 [[wv mainFrame] stopLoading];     

 request = [NSURLRequest requestWithURL:currentPrintTemplateURL];

 [[wv mainFrame] loadRequest:request];

+(BOOL)isKeyExcludedFromWebScript:(const char *)name {

 // TODO: Implement specific blocks here; but for now let it all through

 NSLog(@"Excluding nothing from WebScript");

 return NO;

}

function populateRepairFields(repairCase) {
 document.getElementById("customerNameField").value = repairCase;
 }

     // grab the data we want to send to the javascript     
    NSString *customerFirstName = [self valueForKeyPath:@"currentRepairCase.customer.firstName"];

 NSLog(@"(debug) Ensure we have a value - customerFirstName = %@", customerFirstName);

 // build the array whose items will be passed as arguments to the javascript method

   NSArray * args = [NSArray arrayWithObjects:customerFirstName, nil]; 

// get the windowScriptObject, then (debug) log the output so we can be sure it is not null

  ws = [wv windowScriptObject];


 NSLog(@"WebScriptObject = %@", ws);


//Then call the javascript method via the bridge, logging the output so we can see if there is an WSUndefined error returned (results are the same even if we don't wrap it in an NSLog)

     NSLog(@"WS ERR: %@", [ws callWebScriptMethod:@"populateRepairFields" withArguments:args]);  


optim
optim
nlminb
optim
# The objective function:
llk.tree <- function (Q, data) 
{
    p <- Q[1]
    q <- Q[2]
    r <- Q[3]
    e <- rep(NA,4)
    e[1] <- p * q * r
    e[2] <- p * q * (1-r)
    e[3] <- p * (1-q) * r
    e[4] <- p * (1-q) * (1-r) + (1-p)

    llk <- sum(data * log(e))
    if (is.na(llk)) 
        llk <- -1e+19
    if (llk == -Inf) 
        llk <- -1e+19
    return(-llk)
}

# The call to optim:
optim(runif(3, 0.1, 0.9), llk.tree, data = c(24, 65, 30, 61), method = "L-BFGS-B", lower = rep(0, 3), upper = rep(1, 3))

$par
[1] 1.0000000 0.4944449 0.3000001

$value
[1] 234.7110

$counts
function gradient 
      11       11 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$par
[1] 0.8668081 0.6326655 0.1433857

$value
[1] 257.7328

$counts
function gradient 
       3        3 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

nlminb
nlminb(runif(3, 0.1, 0.9), llk.tree, data = c(24, 65, 30, 61), lower = 0, upper = 1)

$par
[1] 1.0000000 0.4944445 0.3000000

$objective
[1] 234.711

$convergence
[1] 0

$iterations
[1] 14

$evaluations
function gradient 
      19       55 

$message
[1] "relative convergence (4)"

optim
optim
optim(c(0.5, 0.5, 0.5), llk.tree, data = c(24, 65, 30, 61), method = "L-BFGS-B", lower = rep(0, 3), upper = rep(1, 3))

$par
[1] 0.5 0.5 0.5

$value
[1] 276.1238

$counts
function gradient 
       3        3 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


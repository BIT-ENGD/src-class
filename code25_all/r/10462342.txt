res.raw
res
res
res.raw
dim
dimnames
N <- 2
nd <- length(d <- c(2, 5, 10))
nt <- length(t <- c(0.25))
nm <- length(m <- c("m1", "m2", "m3", "m4"))
nil <- length(il <- c(FALSE, TRUE))

g <- expand.grid(il=il, t=t, d=d, stringsAsFactors=FALSE)[,3:1]
ng <- nrow(g)

require(foreach)
res.raw <- foreach(l=1:ng) %dopar% {
    res. <- lapply(1:N, function(x) list(res.m1=list(value=l, foo=l),
                                         res.m2=list(value=l+1, foo=l+1),
                                         res.m3=list(value=l+2, foo=l+2),
                                         res.m4=list(value=l+3, foo=l+3)))
    names(res.) <- 1:N
    res.
}
names(res.raw) <- apply(g, 1, paste, collapse="."))

## str(res.raw)
## List of 6 => d*t*il
##  $ :List of 2 => N
##   ..$ 1:List of 4 => m's
##   .. ..$ res.m1:List of 2
##   .. .. ..$ value: int 1
##   .. .. ..$ foo  : int 1

## str(unlist(res.raw, recursive=FALSE))
## List of 12 => d*t*il*N (or possibly different order)
##  $ 1:List of 4 => m's
##   ..$ res.m1:List of 2
##   .. ..$ value: int 1
##   .. ..$ foo  : int 1

## str(unlist(unlist(res.raw, recursive=FALSE), recursive=FALSE))
## List of 48 => d*t*il*N*m (or possibly different order)
##  $ 1.res.m1:List of 2
##   ..$ value: int 1
##   ..$ foo  : int 1

ul <- function(x) unlist(x, recursive=FALSE)
res <- array(ul(ul(res.raw)), dim=c(nd, nt, nil, N, nm),
             dimnames=list(d=d, t=t, il=il, N=1:N, m=m))
## => wrong order

res.raw <- foreach(l=1:ng, .combine="c") %dopar% {
    sapply(1:N, function(x) list(res.m1=list(value=l, foo=l),
                                 res.m2=list(value=l+1, foo=l+1),
                                 res.m3=list(value=l+2, foo=l+2),
                                 res.m4=list(value=l+3, foo=l+3)))
}
str(res.raw)
## List of 48
##  $ :List of 2
##   ..$ value: int 1
##   ..$ foo  : int 1

res <- array(res.raw, dim=c(nd, nt, nil, N, nm),
             dimnames=list(d=d, t=t, il=il, N=1:N, m=m))
## => correct order?


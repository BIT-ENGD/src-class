sapply
slow_function=function(n) c(n*n, 0, (-n)^n, -1, +1)
quick_analysis=function(res) res[1]+res[3]

results=sapply(1:8,function(n){
  res=slow_function(n)
  a=quick_analysis(res)
  b=table(sign(res))
  list(
    a=a,
    up=b['1'],
    down=b['-1'],
    level=b['0']
    )
  })

      [,1] [,2] [,3] [,4] [,5]  [,6]  [,7]    [,8]    
a     0    8    -18  272  -3100 46692 -823494 16777280
up    2    3    2    3    2     3     2       3       
down  2    1    2    1    2     1     2       1       
level 1    1    1    1    1     1     1       1  

results=vector()
for(n in 1:8){
  res=slow_function(n)
  a=quick_analysis(res)
  b=table(sign(res))
  results[n]=list(
    a=a,
    up=b['1'],
    down=b['-1'],
    level=b['0']
    )
  }

1: In results[n] = list(a = a, up = b["1"], down = b["-1"], level = b["0"]) :
  number of items to replace is not a multiple of replacement length

[[1]]
[1] 0

[[2]]
[1] 8

[[3]]
[1] -18

[[4]]
[1] 272

[[5]]
[1] -3100

[[6]]
[1] 46692

[[7]]
[1] -823494

[[8]]
[1] 16777280

matrix()
list()
slow_function
results=sapply(1:8,function(n){
  res=slow_function(n)
  a=quick_analysis(res)
  b=table(sign(res))
  list(
    a=a,
    up=b['1'],
    down=b['-1'],
    level=b['0']
    )
  res=-res  #Modify res
  a=quick_analysis(res)
  b=table(sign(res))
  list(
    a=a,
    up=b['1'],
    down=b['-1'],
    level=b['0']
    )
  })

      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12]  [,13]   [,14] [,15]   [,16]   
a     0     0    8     -8   -18  18    272  -272 -3100 3100  46692  -46692 -823494 823494 16777280 -16777280
up    2     2    3     1    2    2     3     1    2     2     3      1      2       2      3        1
down  2     2    1     3    2    2     1     3    2     2     1      3      2       2      1        3
level 1     1    1     1    1    1     1     1    1     1     1      1      1       1      1        1  


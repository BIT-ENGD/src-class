list
list
lapply()
mongo <- mongo.create(db="test")
ns <- "test.foo"
buf <- mongo.bson.buffer.create()
mongo.bson.buffer.append(buf, "x", 1)
mongo.bson.buffer.append(buf, "y", 1)
x.1 <- mongo.bson.from.buffer(buf)
buf <- mongo.bson.buffer.create()
mongo.bson.buffer.append(buf, "x", 2)
mongo.bson.buffer.append(buf, "y", "string")
x.2 <- mongo.bson.from.buffer(buf)
buf <- mongo.bson.buffer.create()
mongo.bson.buffer.append(buf, "x", 3)
mongo.bson.buffer.append(buf, "y", NULL)
x.3 <- mongo.bson.from.buffer(buf)
buf <- mongo.bson.buffer.create()
mongo.bson.buffer.append(buf, "x", 4)
x.4 <- mongo.bson.from.buffer(buf)

mongo.insert.batch(mongo, ns, list(x.1, x.2, x.3, x.4))

cursor <- mongo.find(mongo, ns, query=list(y=NULL))

# Alternatively
buf <- mongo.bson.buffer.create()
mongo.bson.buffer.append(buf, "y", NULL)
query <- mongo.bson.from.buffer(buf)
cursor <- mongo.find(mongo, ns, query)

out <- NULL
while (mongo.cursor.next(cursor)) {
    out <- c(out, list(mongo.bson.to.list(mongo.cursor.value(cursor))))
}
out

as.list(cursor)
# Say I could find out the length of the result set:
cursor.length <- length(cursor
out <- lapply(cursor.length, function(x) {
    mongo.cursor.value(cursor[[x]])
)}

# Alternative:
out <- vector("list", cursor.length)
for (x in 1:cursor.length) {
    out[[x]] <- mongo.cursor.value(cursor[[x]])
)}


colonies <- read.table(text =             
'  X        Y      Timecount ID_col Age
582906.4 2883317      2004      1  15
583345.9 2883102      2004      2   4
583119.5 2883621      2004      3  13
583385.0 2882933      2004      4   5
583374.0 2882936      2004      5   2
583271.0 2883076      2004      7   5
582898.9 2883229      2004      8   1
582927.9 2883234      2004      9  20
582956.7 2883272      2004     10  13
582958.8 2883249      2004     11   3', header = TRUE)

year = 2004
survival_prob = 0.01
male_prob = 0.5

Present <- colonies$Timecount == year

app <- sum(colonies$Age[Present] >= 4 & colonies$Age[Present] < 10) * 1000 * survival_prob
app2 <- sum(colonies$Age[Present] >= 10 & colonies$Age[Present] < 15) * 10000 * survival_prob
app3 <- sum(colonies$Age[Present] >= 15 & colonies$Age[Present] <= 20) * 100000 * survival_prob

size <- app + app2 + app3

pop <- data.frame(matrix(0,nrow=size,ncol=2))
colnames(pop) <- c("X","Y")

if (dim(pop)[1] > 0){

 #FOR cycle going through each existing point
 for (i in 1:sum(Present)){     

   if (colonies[Present,]$Age[i] < 4) { next
   } else if (colonies[Present,]$Age[i] >= 4 & colonies[Present,]$Age[i] < 10) { alates <- 1000 
   } else if (colonies[Present,]$Age[i] >= 10 & colonies[Present,]$Age[i] < 15) { alates <- 10000 
    } else if (colonies[Present,]$Age[i] >= 15 & colonies[Present,]$Age[i] <= 20) { alates <- 100000 
    }

    indiv <- alates * survival_prob
    #Initialize two coordinate variables based on the established (or existing) colonies
    X_temp <- round(colonies[Present,]$X[i],2)
    Y_temp <- round(colonies[Present,]$Y[i],2)
    distance <- rexp(indiv,rate=1/200)
    theta <- runif(indiv, 0, 2*pi)
    C <- cos(theta)
    S <- sin(theta)
    #XY coords (meters) using polar coordinate transformations
    X <- X_temp + round(S * distance,2)
    Y <- Y_temp + round(C * distance,2)
    pop[,] <- c(X,Y) #******HERE I GOT STUCK...it should be pop[1:indiv,] 
                     #but then it does not work for the next i since it would over write...

    }
    pop$Sex <- rbinom(size,1,male_prob)
    pop$ID <- 1:dim(pop)[1]
}


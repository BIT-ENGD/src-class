require(lubridate)
require(ggplot2)

set.seed(12345)
df <- data.frame(date=seq(as.Date("2003/06/01"), by="month", length.out=103),myval=runif(103, min=-1, max=1))
df$date <- (df$date + months(1)) - days(1) # get last day of month
df$year <- as.numeric(format(as.Date(df$date), format="%Y"))
df$month <- as.numeric(format(as.Date(df$date), format="%m"))
# create quarterly label
df$qtr <- ifelse(df$month==3,"Jan-Mar",ifelse(df$month==6,"Apr-Jun",ifelse(df$month==9,"Jul-Sep",ifelse(df$month==12,"Oct-Dec",""))))
qtr <- df[ df$month %in% c(3,6,9,12), ] # extract quarter-end figures

p <- ggplot(qtr[qtr$date>='2004-01-01',], aes(x=qtr,y=year(date), fill = myval, label = sprintf("%1.1f%%", 100*myval))) + 
  scale_y_date(major="years", format="%Y") +
  scale_y_reverse(breaks=2003:2012, labels=2003:2012, expand=c(0,0)) + 
  geom_tile() + geom_text(size=geomtextsize,colour = "black") +
  scale_fill_gradient2(low = "blue", high = "red",,midpoint=0) +
  scale_x_discrete(expand=c(0,0))

print(p)

set.seed(12345)
df <- data.frame(date=seq(as.Date("2003/06/01"), by="month", length.out=103),myval=runif(103, min=-1, max=1))
df$date <- (df$date + months(1)) - days(1) # get last day of month
df$year <- as.numeric(format(as.Date(df$date), format="%Y"))
df$month <- as.numeric(format(as.Date(df$date), format="%m"))
# create quarterly label
df$qtr <- ifelse(df$month==3,"Jan-Mar",ifelse(df$month==6,"Apr-Jun",ifelse(df$month==9,"Jul-Sep",ifelse(df$month==12,"Oct-Dec",""))))
df$qtr[ df$qtr=="" ] <- NA
df$display_year <- ifelse( df$month < 4, df$year - 1, df$year )
df$display_year <- paste( df$display_year, df$display_year + 1, sep="-" )
df$qtr <- ordered(df$qtr, levels=c("Apr-Jun", "Jul-Sep", "Oct-Dec", "Jan-Mar"))
qtr <- df[ df$month %in% c(3,6,9,12), ]
qtr$display_year <- factor( qtr$display_year, levels = sort( unique(qtr$display_year), decreasing=TRUE ) )

p <- ggplot(qtr, aes(x=qtr,y=display_year, fill = myval, label = sprintf("%1.1f%%", 100*myval))) + 
scale_y_discrete(expand=c(0,0)) +
geom_tile() + geom_text(size=geomtextsize,colour = "black") +
scale_fill_gradient2(low = "blue", high = "red",,midpoint=0) +
scale_x_discrete(expand=c(0,0))
p


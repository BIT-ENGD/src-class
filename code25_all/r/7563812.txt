gr
control
gr
people = list('Seymour'='BOS',
'Franny'='DAL',
'Zooey'='CAK',
'Walt'='MIA',
'Buddy'='ORD',
'Les'='OMA')

schedulecost <- function(schedule){
    return(sum(schedule))
}

annealingOptimize <- function(domains, step=1, T=10000,costf=schedulecost){
    solution <- sample(1:9, 2 * length(people), replace=T)
    grFunction <- function(sol){
        index <- sample(c(1:length(domains$Up)), 1, replace=T)
        delta <- as.integer(runif(1,min=-step-1,max=step+1))
        newValue <- sol[index] + delta
        if (newValue > domains$Up[index]){
            newValue <- domains$Up[index]
        }
        if (newValue < domains$Down[index]){
            newValue <- domains$Down[index]
        }
        sol[index] <- newValue
        return(sol)
    }
    values <- optim(solution,costf,gr=grFunction, method='SANN',
            control=list(temp=T, REPORT=1, maxit=200, tmax=10))
    print(values)
    return(values$par)
}
domains <- list(Down=rep(1,length(people) * 2), Up=rep(9, length(people) * 2))
schedule <-annealingOptimize(domains)

$par
 [1] 2 2 6 2 3 5 5 1 9 1 1 7

$value
[1] 44

$counts
function gradient 
     200       NA 

$convergence
[1] 0

$message
NULL

gr
fn
fn
gr
gr
grFunction
fn
gr

mean_detects<- function(obs,cens) {
 detects <- obs[cens==0]
 nondetects <- obs[cens==1]
 res <- mean(detects)
 return(res) 
}

mu <-log(1); sigma<- log(3); n_samples=10, n_iterations = 5; p=0.10
dset2 <- function (mu, sigma, n_samples, n_iterations, p) {
  X_after <- matrix(NA_real_, nrow = n_iterations, ncol = n_samples)
  delta <- matrix(NA_real_, nrow = n_iterations, ncol = n_samples)
  lod <- quantile(rlnorm(100000, mu, sigma), p = p)
  pct_cens <- numeric(n_iterations)
  count <- 1
  while(count <= n_iterations) {     
  X_before <- rlnorm(n_samples, mu, sigma)
  X_after[count, ] <- pmax(X_before, lod)
  delta [count, ] <- X_before <= lod
  pct_cens[count] <- mean(delta[count,])
  if (pct_cens [count]  > 0 & pct_cens [count] < 1 ) count <- count + 1 }
  ave_detects <- mean_detects(X_after,delta)  ## how can I use apply or other functions here?
  return(ave_detects) 

}

ave_detects <- mean_detects(X_after,delta) 


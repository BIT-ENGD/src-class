my.data
my.data2
my.data
record.id
my.data
group=1
group=2
reshape
my.data <-  "record.id group s1 s2 s3 s4
    1  1      2      0      1      3
    1  2      0      0      0     12
    2  1      0      0      0      0
    3  1     10      0      0      0
    4  1      1      0      0      0
    4  2      0      0      0      0
    8  2      0      2      2      0
    9  1      0      0      0      0
    9  2      0      0      0      0"    

my.data2 <- read.table(textConnection(my.data), header=T)

# desired output
#
# 1     2      0      1      3      0      0      0     12
# 2     0      0      0      0      0      0      0      0
# 3    10      0      0      0      0      0      0      0
# 4     1      0      0      0      0      0      0      0
# 8     0      0      0      0      0      2      2      0
# 9     0      0      0      0      0      0      0      0

dat_sorted <- sort(unique(my.data2[,1]))
my.seq <- match(my.data2[,1],dat_sorted)

my.data3 <- cbind(my.seq, my.data2)

group.min <- tapply(my.data3$group, my.data3$my.seq, min)
group.max <- tapply(my.data3$group, my.data3$my.seq, max)

# my.min <- group.min[my.data3[,1]]
# my.max <- group.max[my.data3[,1]]

my.records <- matrix(0, nrow=length(unique(my.data3$record.id)), ncol=9)

x <- 1

for(i in 1:max(my.data3$my.seq)) {

   for(j in group.min[i]:group.max[i]) {

      if(my.data3[x,1] == i) my.records[i,1]   = i

      # the two lines below seem to be causing an error
      if((my.data3[x,1] == i) & (my.data3[x,3] == 1)) (my.records[i,2:5] = my.data3[x,4:7])
      if((my.data3[x,1] == i) & (my.data3[x,3] == 2)) (my.records[i,6:9] = my.data3[x,4:7])

      x <- x + 1

   }
}


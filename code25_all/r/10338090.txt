f = sum( Cms*MS + Cmd*MD + Csd*SD - (Price-Csm)*SM), on all time steps.

Csm
Csd
genoud()
# libraries

#rm(list=ls())                    
#Sys.sleep(1) 
library("rgenoud")

# number of periods 
Np<-12
# number of variables 
Nvars<-4*Np

# dec1 dec2 dec3 dec4
#MD    MS   SD   SM

# initial price stock per unit 
Stock0<-23.5

price <- c(29,29,28,26,25,25,23,23,26,27,28,29,29,28,27,26,25,24,23,25,26,27,28,29)
price <- price[1:Np] 
price

dem<-c(12,11,9,8,7,6,6,6,7,8,10,11,12,11,9,8,7,6,6,6,7,8,10,11)
dem<-dem[1:Np] 
length(dem)

StockMax<-c(75,65,50,40,52,65,73,85,95,100,95,85,75,65,50,40,60,70,75,85,95,100,85,80)
StockMax<-StockMax[1:Np] 
StockMin<-StockMax-40
StockIni<-(StockMax[1]-StockMin[1])/2 + StockMin[1]

dem<-c(12,11,9,8,7,6,6,6,7,8,10,11,12,11,9,8,7,6,6,6,7,8,10,11)
dem<-dem[1:Np]

# objective function
logistic<-function(dec,Np,Stock0,StockIni,price,dem,StockMax,StockMin) {
    V<-0  
    Stock0<-Stock0   
    Cinj<-0.34   
    Cext<-0.11
    V<-numeric(Np) 
    V2<-numeric(Np)   
    V1<-StockIni*Stock0

    for(i in 1:Np){   
        V[i]<-(price[i]+Cinj)*dec[4*(i-1)+1]
        V0<-mean(c(V1,V[i:1]))
        V2[i]<-price[i]*dec[4*(i-1)+1] + (price[i]+Cinj)*dec[4*(i-1)+2] + (Cinj+V0)*dec[4*(i-1)+3] - (price[1]-Cext-V0)*dec[4*(i-1)+4]   
    }

     Resf<-sum(V2)

     #  if I don't respect my equalities contraints my objective function value is bad   
    Z<-numeric(Np)     
    for(i in 1:Np) {
        Z[i]<-dec[4*(i-1)+1]+dec[4*(i-1)+3]
        if(Z[i]<=(dem[i]-0.05*dem[i]) || Z[i]>=(dem[i]+0.05*dem[i])) {
            Resf<- + 100000
        }  
    }

    # if I don't respect my inequalities contraints my objective function is bad  

    Z1<-numeric(Np)  
    Z1[1]<-StockIni+dec[2]-dec[3]-dec[4]   
    if(Z1[1]<=StockMin[i] || Z1[1]>=StockMax[i]) {
        Resf <- + 100000
    } 

    for(i in 2:Np) {
        Z1[i]<-Z1[i-1]+dec[4*(i-1)+2]-dec[4*(i-1)+3]-dec[4*(i-1)+4]
        if(Z1[i]<=StockMin[i] || Z1[i]>=StockMax[i]) {
            Resf <- + 100000
        }  
    }   

    return(Resf)  
}

# limit of the box contraints 
LB1<-0 
UB1<-50 
dom<-matrix(0,Nvars,2)
dom[,1]<-LB1 
dom[,2]<-UB1 
dom


# resolution by genetic algorithm  
ans <- genoud(logistic, nvars=Nvars, max=FALSE, pop.size=1000,
              max.generations=70, wait.generations=30,
              hard.generation.limit=TRUE, starting.values=PopIni, MemoryMatrix=TRUE, 
              Domains=dom, solution.tolerance=1, data.type.int=TRUE,
              boundary.enforcement=0, lexical=FALSE, gradient.check=FALSE,
              BFGS=TRUE,           
              print.level=2,
              Np=Np,
              Stock0=Stock0,
              price=price,
              StockIni=StockIni,
              dem=dem,
              StockMax=StockMax,
              StockMin=StockMin)



# plotting stuffs


ans2<-ans$par        

Res1<-matrix(NA,Np,4) 
for(i in 1:Np){   
    Res1[i,1]<-ans2[4*(i-1)+1]  
    Res1[i,2]<-ans2[4*(i-1)+2]   
    Res1[i,3]<-ans2[4*(i-1)+3]  
    Res1[i,4]<-ans2[4*(i-1)+4] 
}

Res1
Res1<-as.data.frame(Res1) 
colnames(Res1)<-c("MA","MS","SA","SM")
Res1

Stock1<-numeric(Np+1) 
Stock1[1]<-StockIni 
for(i in 2:(Np+1)){  
    Stock1[i]<-Stock1[i-1]+Res1[i-1,2]-Res1[i-1,3]-Res1[i-1,4]
} 
Stock1

StockMax2<-c(StockMax[1]+5,StockMax)
StockMin2<-c(StockMin[1]+5,StockMin)

plot(Stock1, col='black', ylim=c(0,100),type='b') 
lines(StockMax2,col='red') 
lines(StockMin2, col='red')


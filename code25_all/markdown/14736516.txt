Take a look at the below strangely named cow, and imagine sorting through all 93 packages of ground meat.

<%= image_tag('MeatUp Log.png', class: 'blog_photo') %>

Since every package was associated with a given user and had an expected and actual weight, butchers had to comb through long lists of cuts (for cows, as MeatUp broke them down, there were 22 different cuts, totaling hundreds of packages), to find the right one to update after they weighed it.

To simplify the process both visually and practically, I looked into a simple Javascript expand/collapse function, and ended up homebrewing a neater, more adaptable version from something I found in a blog.

<div class="codebox">
 expand.js.coffee

 ```
 jQuery -> 
  $('.cl .bundle').on 'click', (e) ->
    e.preventDefault()
    $collapse = $(@).closest('.collapse-group').find('.collapse')
    $collapse.collapse 'toggle'
 ```

</div>

  class HTMLwithPygments < Redcarpet::Render::HTML
    def block_code(code, language)
        Pygments.highlight(code, lexer: language)
    end
  end

  def markdown(text)
    renderer = HTMLwithPygments.new(hard_wrap: true, filter_html: true)
    options = {
      autolink: true,
      no_intra_emphasis: true,
      fenced_code_blocks: true,
      lax_html_blocks: true,
      strikethrough: true,
      superscript: true
    }
    Redcarpet::Markdown.new(renderer, options).render(text).html_safe // This guy
  end


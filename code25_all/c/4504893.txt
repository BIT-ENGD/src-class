void entab (char from[], char to[], int length, int tabwidth)
{
    int i, j, tabpos, flag, count;

    j = tabpos = flag = count = 0;
    for (i = 0; from[i] != '\0' && j < length - count - 2; i++) {
        if (from[i] == ' ') {
            // If you see a space, set flag to true and increment the
            // whitespace counter. Don't add any characters until you reach the
            // next tabstop.
            count++;
            tabpos = (tabpos + 1) % tabwidth;
            flag = 1;
            if (count >= tabwidth - tabpos) {
                to[j] = '\t';
                j++;
                count = count - tabwidth + tabpos;
                tabpos = 0;
            }
        } else {
            if (flag == 1) {
                // if you see something other than a space and flag is true,
                // there weren't enough spaces to reach a tabstop. Add count
                // spaces to the string.
                flag = 0;
                tabpos = (tabpos + count + 1) % tabwidth;
                while (count > 0) {
                    to[j] = ' ';
                    j++;
                    count--;
                }
            } else {
                tabpos = (tabpos + 1) % tabwidth;
            }
            count = 0;
            to[j] = from[i];
            j++;
        }
    }
    to[j] = '\0';
    return;
}

    foobar
        foo  bar      foo bar
    foo     bar

/t/tfoobar
/t/t/t/tfoo  bar/t/t/t foo bar
/t/tfoo/t/t bar

/tfoobar
/t/tfoo/t bar/t/t foo bar
/tfoo/t/tbar


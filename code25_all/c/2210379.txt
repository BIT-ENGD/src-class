va_list
sum
vsum
int vsum(int n, va_list ap) {
    int total = 0;
    for (int i = 0; i < n; ++i) {
        total += va_arg(n, int);
    return total;
}

int sum(int n, ...) {
    va_list ap;
    va_start(ap, n);
    int total = vsum(n, ap);
    va_end(ap);
    return total;
}

sum
sum(4, 1, 2, 3, 4)
vsum
sum
vsum_stub
int vsum_stub(int n, va_list ap) {
    va_list temp_ap;
    va_copy(temp_ap, ap);
    for (int i = 0; i < n; ++i) {
        int *arg = &va_arg(ap, int);
        *arg += 2;
    }
    va_end(temp_ap);
    return vsum(n, ap);
}

sum(4, 1, 2, 3, 4)
vsum_stub
va_list
va_arg
printf
hc_printf
hc_printf
%s
printf
foo
foo
malloc
char *foo = fake_malloc(4);
fake_strcpy(foo, "foo");

fake_vprintf
int fake_vprintf(const char *format, va_list args) {
    for each pointer argument p in args
        translate p to q, a real pointer to contiguous memory
        replace p with q in args
    }
    return vprintf(format, args);
}

fake_vprintf
vprintf
fake_vprintf
vprintf

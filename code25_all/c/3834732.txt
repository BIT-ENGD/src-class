int main(int argc, char *argv[]){
 while (fgets(buffer, MAX_LEN + 1, input) != NULL) {
  get_command(t, buffer);
 }
return 0;
}

static void get_command(Table *t, char *command) {
    COMMAND command_name = 0;
    char *valid_args_str[] = {"aa","bb"};
    int arg_counter = 1;

 scanf("%s", command);

 if (!strncmp(command, "in", 2)) {
  command_name = INSERT;
  while(arg_counter){
   printf("whileloop reached, arg_counter is %d", arg_counter);
   scanf("%s", valid_args_str[arg_counter - 1]);
  }
.
.
.
}

while (fgets(buffer, MAX_LEN + 1, input) != NULL)
scanf()
scanf(
typedef enum { INSERT = 1, SEARCH, DELETE, RESET, DISPLAY} COMMAND;

static void get_command(Table *t, char *command) {
    COMMAND command_name = 0;
    char valid_args_str[] = {"aa","bb"};
    int arg_counter = 0;
    char other_buffer[MAX_LEN + 1];

    sscanf(command, "%s", other_buffer);

 if (!strncmp(other_buffer, "in", 2)) {
  command_name = INSERT;
  while(++arg_counter){
   printf("whileloop reached, arg_counter - 1 is %d\n", arg_counter - 1);
   scanf("%s", valid_args_str[arg_counter - 1]);
  }
 } else if (!strncmp(other_buffer, "se", 2)) {
.
.
.
execute_comm(t, command_name, valid_args_str);
}

static void execute_comm(Table *t, COMMAND command, char *args[]){
 switch(command){
 case INSERT:
  insert(t, args[0], args[1]);
  break;
.
.
}

int main(int argc, char *argv[]){

 FILE *input;
 char buffer[MAX_LEN + 1];
 input = stdin;
 if(argc > 2){
  fprintf(stderr, "%s", "Too many arguments");
  perror("Too many arguments");
  exit(EX_OSERR);
 } else if (argc == 2){
  if ((input = fopen(argv[1], "r")) == NULL) {
   fprintf(stderr, "%s", "error opening files");
   perror("error opening file");
   exit(EXIT_FAILURE);
  }
 }

 while (fgets(buffer, MAX_LEN + 1, input) != NULL) {
  get_command(t, buffer);
 }
 fclose(input);
 return 0;
}


mtrace
#include <stdlib.h>
#include <mcheck.h>

extern void leaky_();  // this might be different on your system
    // if it doesn't work, try to run:
    // 1) gfortran leaky.f90 -c
    // 2) nm leaky.o
    // and then change this declaration and its use below

void main() { 
    mtrace();
    leaky_();
    muntrace();
}

subroutine leaky()
  real, allocatable, dimension(:) :: tmp
  integer :: error
  allocate (tmp(10), stat=error)
  if (error /= 0) then
    print*, "subroutine leaky could not allocate space for array tmp"
  endif
  tmp = 1
  !of course the actual code makes more...
  print*, ' subroutine leaky run '
  return
end subroutine leaky

gfortran -g example.c leaky.f90

export MALLOC_TRACE=`pwd`/raw.txt; ./a.out

raw.txt
mtrace
mtrace a.out raw.txt

mtrace
malloc
mtrace
mtrace()
muntrace()
malloc
mtrace
nm
readelf
malloc()
_gfortran_allocate_array

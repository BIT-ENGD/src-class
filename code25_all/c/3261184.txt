  // open output file for writing
  if ( ( outfilefd = fopen( file_name, "w+t" ) ) == NULL )
    {
      fprintf(stderr, "Unable to create file\n");
      exit(1);
    }

FILE *zipFile;

   if ( ( zipFile = fopen( "C:\\LOGS\\test.txt.z", "w+t" ) ) == NULL )
   {
         fprintf(stderr, "Unable to create file\n");
         exit(1);
   }



   int ret = def(outfilefd, zipFile, Z_DEFAULT_COMPRESSION);
        if (ret != Z_OK)
            printf("ZLIB Error");

 int def(FILE *source, FILE *dest, int level)
    {
        int ret, flush;
        unsigned have;
        z_stream strm;
        unsigned char in[CHUNK];
        unsigned char out[CHUNK];

        /* allocate deflate state */
        strm.zalloc = Z_NULL;
        strm.zfree = Z_NULL;
        strm.opaque = Z_NULL;
        ret = deflateInit(&strm, level);
        if (ret != Z_OK)
            return ret;

        /* compress until end of file */
        do {

            strm.avail_in = fread(in, 1, CHUNK, source);
      int g = ferror(source);//<---------------- EROR HERE returning 32?
            if (ferror(source)) {
                (void)deflateEnd(&strm);
                return Z_ERRNO;
            }

zipFile
strm.avail_in
in
ferror(source)
strm.avail_in
CHUNK

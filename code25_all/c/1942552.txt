void *GetFuncAddr(HMODULE hModule, char *fname) 
{
    unsigned int count = 1;
    IMAGE_DOS_HEADER *DosHeader;
    IMAGE_NT_HEADERS *NtHeaders;
    IMAGE_OPTIONAL_HEADER *OptionalHeader;
    IMAGE_DATA_DIRECTORY *DataDirectory;
    IMAGE_EXPORT_DIRECTORY *Exp;
    ULONG *addrof;
    char *fullfname;
    ULONG *faddr;

    DosHeader = (IMAGE_DOS_HEADER *)hModule; 
    if (DosHeader->e_magic != IMAGE_DOS_SIGNATURE) 
    { 
        return NULL;
    } 

    NtHeaders = (IMAGE_NT_HEADERS *)(((BYTE *)DosHeader) + DosHeader->e_lfanew); 
    if (NtHeaders->Signature != IMAGE_NT_SIGNATURE)
    { 
        return NULL;
    } 

    OptionalHeader = &NtHeaders->OptionalHeader; 
    DataDirectory = &OptionalHeader->DataDirectory[IMAGE_DIRECTORY_ENTRY_EXPORT]; 

    Exp = (IMAGE_EXPORT_DIRECTORY *)((size_t)DosHeader + DataDirectory->VirtualAddress); 

    addrof = (ULONG *)((BYTE*) hModule + Exp->addrof);
    faddr = (ULONG*) ((BYTE*) hModule + Exp->AddressOfFunctions);

    for(count = 0; count < Exp->NumberOfNames; count++)
    {
        fullfname = (char*)((BYTE*) hModule + addrof[count]);       
        if(strcmp(fullfname, fname) == 0)
        {   
            return (void*)((BYTE*) hModule + faddr[count]);
        }
    }

    return NULL;
}   


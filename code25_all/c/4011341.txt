
main function  


 load in static pages to large array of fileinfo struct that hold the file data and length  
 create the socket
 set it to listen to port 80
 set it to listen for 10 connections at a time(i know this is low...)
 start an endless loop
      block while waiting for someone to connect
      check if it's a localhost connection
          shutdown the server
      otherwise
           start a thread(with pthread), sending it the socket variable
 loop



 load in static pages to large array of fileinfo struct that hold the file data and length  
 create the socket
 set it to listen to port 80
 set it to listen for 10 connections at a time(i know this is low...)
 start an endless loop
      block while waiting for someone to connect
      check if it's a localhost connection
          shutdown the server
      otherwise
           start a thread(with pthread), sending it the socket variable
 loop



Thread Function  


 setsock opt for 3 sec timeout on send/recv and enable Keep-alive  
 start endless loop
    read in request  
    if request timed out, break the loop  
    Validate Request function call  
    Create Reponse function call  
    Send response  
    if request contained Connection: close header break the loop  
loop  
close socket  
return



 setsock opt for 3 sec timeout on send/recv and enable Keep-alive  
 start endless loop
    read in request  
    if request timed out, break the loop  
    Validate Request function call  
    Create Reponse function call  
    Send response  
    if request contained Connection: close header break the loop  
loop  
close socket  
return



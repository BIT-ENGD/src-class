//(input is a FILE* which is opened and passed to the function)
//(output is also a FILE* which is also opened and passed to the function)

//1. Variables declaration
short* sample_buffer;
int buffer_size=1;
short samples_read;
unsigned long value_x=7;
short* nzb_buffer;
short buffer_position=-1;
int i;

//2.Memory allocation
sample_buffer= malloc(sizeof(short)*buffer_size);
nzb_buffer = malloc(sizeof(short)*value_x);

....

//3. Read from infile, one short at time, process and write it to outfile
do
{
     //3.1. Read from input file
     samples_read = fread(sample_buffer,sizeof(short),buffer_size, input);
     //3.2. Switch position inside nzb_buffer one to the right, 
     //     going back to zero if out of bounds
     buffer_position=(buffer_position+1)%value_x;

     ....

     //3.3. Put least significant bit of the just read short into nzb_buffer
     nzb_buffer[buffer_position]=sample_buffer[0]%2;

     ....

     //3.4. Write the short we just read from infile to the outfile
     for (i=0;i<samples_read;i++)
     {
         fwrite(sample_buffer,sizeof(short),1, output);
     }
} while(samples_read==buffer_size);


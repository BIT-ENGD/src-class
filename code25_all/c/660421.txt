setsockopt()
char* demarre_client( client_args * c_args,char* message, /*char* SERVEUR_PORT*/int port){
int socket_client=socket(PF_INET,SOCK_STREAM,0);
memset(&(c_args->adresse_serveur),0,sizeof(c_args->adresse_serveur));
c_args->adresse_serveur.sin_family=AF_INET;
c_args->adresse_serveur.sin_addr.s_addr=inet_addr(SERVEUR_IP);
//int port=APHash(SERVEUR_PORT,strlen(SERVEUR_PORT));
c_args->adresse_serveur.sin_port=htons(port);
int err=0;

if ((err=connect(socket_client, (struct sockaddr *) &(c_args->adresse_serveur), sizeof(c_args->adresse_serveur)))<0)
{
    printf("CONNECT error %d\n", errno);
    exit(-1);
}
if (send(socket_client, message, strlen(message), 0)!=strlen(message))
{
    printf("send error!!\n");
    exit(-2);
}
char* raspFin=(char* )malloc(sizeof(char)*1024);
strcpy(raspFin,"");
int num=-1;
int nn=0;
char* rasp=(char* )malloc(sizeof(char)*1024);
memset (rasp, 0, 1024 * sizeof(char ));
    /* here it reads the first response and after he get out of while */
while ((num=recv(socket_client, rasp,1024,MSG_WAITALL))>0)
{
    printf("recu %s mun=%d\n" , rasp,num);
    strcat(raspFin,rasp);
    strcat(raspFin,"\n");
    rasp=(char* )malloc(sizeof(char)*1024);
    memset (rasp, 0, 1024 * sizeof(char ));

}

if (num<0)
{
    printf("rasp error!!\n");
    exit(-3);
}


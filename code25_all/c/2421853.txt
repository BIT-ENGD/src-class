\r
\n
select()
//This is the chunk of code ran after select(), when a socket
//has readable data
char buf[256] = { 0 };
int nbytes;

if ((nbytes = recv(i, buf, sizeof(buf) - 1, 0)) <= 0)
{   
   if (nbytes == 0)
   {   
      struct remote_address addr;

      get_peername(i, &addr);
      do_log("[Socket #%d] %s:%d disconnected", i, addr.ip, addr.port);
   }   
   else
      do_log("recv(): %s", strerror(errno));

   close(i);
   FD_CLR(i, &clients);
}   
else
{   
   buf[sizeof(buf) - 1] = 0;
   struct remote_address addr;

   get_peername(i, &addr);
   do_log("[Socket #%d] %s:%d (%d bytes): %s", i, addr.ip, addr.port, nbytes, buf);

   // split "buf" here, and process each line
   // but how to be able to get the rest of a possibly cut off line
   // in case it did not fit into the 256 byte buffer?
}

malloc()

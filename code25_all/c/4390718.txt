struct keyval{
unsigned short key[2];
unsigned short val[2];
};

struct keyval *codes1 = malloc(sizeof(struct keyval)*(0x1000000));
struct keyval *codes2 = malloc(sizeof(struct keyval)*(0x1000000));

val
qsort(codes1,SIZE_OF_CODES1, sizeof(struct keyval), compare);
qsort(codes2,SIZE_OF_CODES2, sizeof(struct keyval), compare);

int compare(const void *a, const void *b){
    struct keyval *ia = (struct keyval *)a;
    struct keyval *ib = (struct keyval *)b;

    if(ia->val[0] > ib->val[0]){
        return 1;
    }else if (ia->val[0] < ib->val[0]){
        return -1;
    }else{
        return (ia->val[1] - ib->val[1]);
    }

codes1[i].val == codes2[i].val
while(e <= SIZE_OF_CODES1){

    struct keyval *found = (struct keyval*) bsearch(&codes1[e],codes2,SIZE_OF_CODES2,sizeof(struct keyval),compare );

    if(found){
        printf("\n found key = %08x %04x value = %04x %04x", found -> key, found -> key[1],found->val[0],found ->val[1] );
    }

    e++;
}

int compare(const void *a, const void *b){
struct keyval *ia = (struct keyval *)a;
struct keyval *ib = (struct keyval *)b;

if(ia->val[0] > ib->val[0]){

    return 1;
}else if(ia->val[0] < ib->val[0]){
    return -1;
}else{
    if(ia->val[1] > ib->val[1]){
        return 1;
    }else if(ia->val[1] < ib->val[1]){
        return -1;
    }else{
        return 0;
        }
}


typedef struct iNode
{
    int myInt;
    struct iNode* next;
} IntNode, *IntNodePtr;

IntNodePtr insert(int i, IntNodePtr p)
{
    IntNodePtr newp = malloc(sizeof(struct iNode));
    newp->myInt = i;
    newp->next = p;
    return newp;
}

IntNodePtr delete(int i, IntNodePtr p)
{
    /* End of list check */
    if(p == NULL)
        return NULL;

    /* Check if current node is the one to delete */
    if(p->myInt == i)
    {
        IntNodePtr temp;
        temp = p->next;

        free(p);
        return temp;
    }

    p->next = delete(i, p->next);
    return p;
}

IntNodePtr replace(int i, int j, IntNodePtr p)
{
    if(p == NULL)
        return NULL;

    if(p->myInt == i)
        insert(j, p->next);

    free(p);

    p->next = replace(i, j, p->next);
    return p;
}


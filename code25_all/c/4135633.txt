// library.h
typedef struct {
    long foo;
    char *bar;
   /* ... (long & complex stuff omitted) */
} *pointer_to_complex_struct_t;

complex_struct_t
// library.h
  /* ... (long & complex stuff omitted) */
} complex_struct_t, *pointer_to_complex_struct_t;


// my.h
extern complex_struct_t my_variable;

// my.h
extern typeof( * (type_placeholder)0 )  my_variable; // Thanks caf!

///// library.h //////
// Signature has been simplified
typedef double (*ptr_to_callback_t)(long, int, char *);
// Too bad this is not provided: typedef double callback_t(long, int, char *);

///// my.h /////
// This avoids copy-paste but is not portable
typedef typeof( * (ptr_to_callback_t)0 ) callback_t;

extern callback_t callback_1;
extern callback_t callback_2;
extern callback_t callback_3;
// etc.

typeof

#include <stdio.h>
#include <stdlib.h>
#include "log4c.h"

int main(){
  int rc = 0;
  log4c_category_t* mycat = NULL;

  if (log4c_init()){
    printf("log4c_init() failed");
    rc = 1;
  }else{
      mycat = log4c_category_get("test.program");          
      log4c_category_log(mycat, LOG4C_PRIORITY_ERROR, "Some ERROR message...!");
      log4c_category_log(mycat, LOG4C_PRIORITY_INFO, "Some INFO message...!");
      log4c_category_log(mycat, LOG4C_PRIORITY_WARN, "Some WARN message...!");
      log4c_category_log(mycat, LOG4C_PRIORITY_ALERT, "Some ALERT message...!");
      log4c_category_log(mycat, LOG4C_PRIORITY_CRIT, "Some CRITICAL message...!");
      log4c_category_log(mycat, LOG4C_PRIORITY_FATAL, "Some FATAL message...!");
      log4c_category_log(mycat, LOG4C_PRIORITY_NOTICE, "Some NOTICE message...!");

    if ( log4c_fini()){
      printf("log4c_fini() failed");
    }
  }
  return 0;
}

<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE log4c SYSTEM "">

<log4c version="1.2.1">

    <config>
        <bufsize>0</bufsize>
        <debug level="INFO3"/>
        <nocleanup>0</nocleanup>
        <reread>1</reread>
    </config>       
     <category name="test.program" priority="info" appender="stdout"/> 
</log4c>

lynton@lynton-Latitude-E5400 ~/Desktop/log4c/LogTest/LogTest $ ./LogTest 
[stdout] ERROR    test.program - Some ERROR message...!
[stdout] INFO     test.program - Some INFO message...!
[stdout] WARN     test.program - Some WARN message...!
[stdout] ALERT    test.program - Some ALERT message...!
[stdout] CRIT     test.program - Some CRITICAL message...!
[stdout] FATAL    test.program - Some FATAL message...!
[stdout] NOTICE   test.program - Some NOTICE message...!
lynton@lynton-Latitude-E5400 ~/Desktop/log4c/LogTest/LogTest $ 


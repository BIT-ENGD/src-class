#define LLADDR(s) ((caddr_t)((s)->sdl_data + (s)->sdl_nlen))

int main() {
    pcap_if_t *alldevs;
    pcap_if_t *d;
    pcap_addr_t *alladdrs;
    pcap_addr_t *a;

    struct sockaddr_dl* link;

    char eb[PCAP_ERRBUF_SIZE];
    char *addr_buf[40];

    if (pcap_findalldevs(&alldevs, eb) == -1) {
        printf("no devs found\n");
        return(-1);
    }

    for (d = alldevs; d != NULL; d = d->next) {
        printf("Device: %s\n", d->name);
        alladdrs = d->addresses;
        for (a = alladdrs; a != NULL; a = a->next) {
            if(a->addr->sa_family == AF_LINK && a->addr->sa_data != NULL){
                // MAC ADDRESS
                //struct sockaddr_dl *sdl = (struct sockaddr_dl *) a->addr->sa_data;
                link = (struct sockaddr_dl*)a->addr->sa_data;

                char mac[link->sdl_alen];
                caddr_t macaddr = LLADDR(link);

                memcpy(mac, LLADDR(link), link->sdl_alen);
                printf("link sdl_alen: %i\n", link->sdl_alen);
                int i;
                printf("mac: ");
                for(i = 0; i<link->sdl_alen; i++){
                    printf("%02x:", (unsigned char)mac[i]);
                }
                printf("\n");
            }
        }
    }
}


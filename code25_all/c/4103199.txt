int main (int argc, char *argv[]) {

/*Core Dump Program*/

#include <stdio.h>
#include <sys/resource.h>
#include <stdlib.h>
#include <errno.h>


int main (int argc, char *argv[])
 {
  struct rlimit limit;

  limit.rlim_cur = 0;
  limit.rlim_max = 0;
  if (setrlimit(RLIMIT_CORE, &limit) == -1){
    printf("Error preventing core dump errno=%d\n", errno);
    exit(10);
  }
  else {
    printf("The current core limit is %llu\n", limit.rlim_cur);
    printf("The core max limit is %llu\n", limit.rlim_max);
    exit(0);
  }
  if (getrlimit(RLIMIT_FSIZE, &limit) == -1){
    printf("getlimit() failed with errno=%d\n", errno);
    exit(1);
  }
  else {
    printf("The current core limit is %llu\n", limit.rlim_cur);
    printf("The core max limit is %llu\n", limit.rlim_max);
    exit(0);

  }
  if (getrlimit(RLIMIT_CPU, &limit) == -1){
    exit(1);
  }
  else {
    printf("The current core limit is %llu\n", limit.rlim_cur);
    printf("The core max limit is %llu\n", limit.rlim_max);
    exit(0);
  }

  if (getrlimit(RLIMIT_NOFILE, &limit) == -1){
      printf("Error preventing core dump errno=%d\n", errno);
      exit(1);
    }
  else {
      printf("The current core limit is %llu\n", limit.rlim_cur);
      printf("The core max limit is %llu\n", limit.rlim_max);
      exit(0);
  }

  if (getrlimit(RLIMIT_NPROC, &limit) == -1){
    printf("Error preventing core dump errno=%d\n", errno);
    exit(1);
  }
  else {
    printf("The current core limit is %llu\n", limit.rlim_cur);
    printf("The core max limit is %llu\n", limit.rlim_max);
    exit(0);

  }
  }


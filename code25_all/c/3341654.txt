t, p and s
t:p:s:
t:p:s:iv
i
v
while ((opt = getopt(argc, argv, options)) != -1) {
        switch (opt) {
            case 't':
                break;
            case 's':
                break;
            case 'p':
                break;
            case 'h':
            default:
                ShowHelp(this, argc, argv);
                exit(EXIT_FAILURE);
        }

        /*
         * Check all available modules and see if options should be passed to it
         */
        i = 0;
        while((module = this->availablemodules[i++]) != NULL) {
            if(opt == module->triggerArg) {
                output = module->ParseOptions(module, argc, argv);
                AddActiveModule(this, module);
            }
        }
    }

this->availablemodules
./myprog -t foo -s bar -p 10 -i -c 2 -v -c 1 -t bar

-i
-v
t:
t
./myprog -t foo -s bar -p 10 --module=module1 -c 2 --module=module2 -c 1 -t bar

module1
module2
--module

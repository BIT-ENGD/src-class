#include <cassert>
#include <iostream>

/*
memory layout:
    row major:
        0 1 2 3
        4 5 6 7
        8 9 10 11

    cartesian:
        2 5 8 11
        1 4 7 10
        0 3 6 9
*/

unsigned rowmaj_to_cartesian(const unsigned& i) {
    return ?;
}

int main(int argc, const char* argv[]) {

    const unsigned W(4);
    const unsigned H(3);
    const unsigned A(W * H);

    unsigned a[A];

    for (size_t i(0); i < A; ++i) {
        /* populate a[] with row-major layout */
        a[i] = i;
    }

    for (size_t i(0); i < A; ++i) {
        /* convert the index values to cartesian layout */
        a[i] = rowmaj_to_cartesian(a[i]);
        std::cout << i << ": " << a[i] << "\n";
    }

    /* sanity check the results */
    assert(a[0] == 2);
    assert(a[1] == 5);
    assert(a[2] == 8);
    assert(a[3] == 11);

    assert(a[4] == 1);
    assert(a[5] == 4);
    assert(a[6] == 7);
    assert(a[7] == 10);

    assert(a[8] == 0);
    assert(a[9] == 3);
    assert(a[10] == 6);
    assert(a[11] == 9);

    return 0;
}


main()
static void Main() 
{       
    Application.EnableVisualStyles();
    Application.SetCompatibleTextRenderingDefault(false);                        
    //Create an instance of form1
    Form1 form1 = new Form1();          
    Application.Run(form1);

    if(form1.isLoggedIn) 
    {             
        filename = Path.Combine(Environment.GetFolderPath(System.Environment.SpecialFolder.CommonApplicationData), DateTime.Now.ToString("ddMMyyhhmm") + "-" + form1.username);
        Flow palm = new Flow(new FlowArguments(form1.username, filename));
        MessageBox.Show("Thankyou, exiting...");
        form1.Dispose();                
    } 
}

Flow
public class Flow 
{
    //global variables
    FlowArguments FlowArgs;
    System.Threading.Timer tm;

    //constructor
    public Flow(FlowArguments fmg) 
    {
        FlowArgs = fmg;

        tm = new System.Threading.Timer(Tick, null, 
                                            System.Threading.Timeout.Infinite, 10000);


        using(StreamWriter sw = new StreamWriter(FlowArgs.Filename)) 
        {            
            //sw.writelines that SO doesnt really care for.               
        }

        //enable the timer
        tm.Change(0, 100);
    }

    public void Tick(object State) 
    {
        Console.WriteLine("Hello");
        //a bunch of SteamWriter writeline methods that SO doesnt care for.
    }

    public void WriteProcesses(StreamWriter sw, DateTime dw) 
    {
        var localAll = Process.GetProcesses().Where(o => o.ProcessName.ToLower() != "svchost");
        foreach(Process p in localAll) 
        {
            sw.WriteLine("@" + p.ProcessName +
                         "[" + dw.ToString("ddMMyyhhmm") + "]" +
                         "[" + FlowArgs.Username + "]");
        }              
    }
}

System.Threading.Timer
Form.Timer
Main()

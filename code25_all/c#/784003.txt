    public List<Model.Question> GetSurveyQuestions(string type, int typeID)
    {
        using (eMTADataContext db = DataContextFactory.CreateContext())
        {
            List<Model.Question> questions = new List<Model.Question>();
            List<Linq.Survey_Question> survey_questions;
            List<Linq.Survey> surveys = db.Surveys
                                          .Where(s => s.Type.Equals(type) && s.Type_ID.Equals(typeID))
                                          .ToList();

            if (surveys.Count > 0)
            {                   
                survey_questions = db.Survey_Questions
                                     .Where(sq => sq.Survey_ID == surveys[0].ID).ToList();

                foreach (Linq.Survey_Question sq in survey_questions)
                {
                    Model.Question q = Mapper.ToBusinessObject(sq.Question);
                    q.Status = sq.Status;
                    questions.Add(q);                        
                }
            }
            else
            {
                questions = null;
            }
            return questions;
        }
    }

  internal static Model.Question ToBusinessObject(Linq.Question q)
        {
            return new Model.Question
            {
                ID = q.ID,
                Name = q.Name,
                Text = q.Text,
                Choices = ToBusinessObject(q.Question_Choices.ToList())                
            };            
  }

 internal static Model.Question ToBusinessObject(Linq.Question q)
    {
        return new Model.Question
        {
            ID = q.ID,
            Name = q.Name,
            Text = q.Text,
            Choices = ToBusinessObject(q.Question_Choices.ToList()),
            Status = q.Survey_Questions[?].Status
        };
    }

 foreach (Linq.Survey_Question sq in survey_questions)
{
    Model.Question q = Mapper.ToBusinessObject(sq.Question);
    q.Status = sq.Status;
    questions.Add(q);                        
}

EntitySet<Survey_Question>

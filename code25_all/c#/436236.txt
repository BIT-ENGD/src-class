<TextBlock Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}},
                                                Mode=OneWay, 
                                                Path=(Silhouette_Controls_ThumbnailListbox:ListBoxItemIndex.ItemIndex)}"
                                       TextAlignment="Center"
                                       VerticalAlignment="Bottom" 
                                       HorizontalAlignment="Center" />

public class ListBoxItemIndex : DependencyObject
    {
        public static readonly DependencyProperty ItemIndexProperty = 
            DependencyProperty.RegisterAttached(
                "ItemIndex",
                typeof(string),
                typeof(ListBoxItemIndex),
                new PropertyMetadata("Default", new PropertyChangedCallback(OnItemIndexChanged)));

        public static string GetItemIndex(DependencyObject element)
        {
            return (string)element.GetValue(ItemIndexProperty);
        }

        public static void SetItemIndex(DependencyObject element, string value)
        {
            element.SetValue(ItemIndexProperty, value);
        }

        private static void OnItemIndexChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)
        {
            ListBoxItem item = d as ListBoxItem;

            ListBox view = ItemsControl.ItemsControlFromItemContainer(item) as ListBox;

            int index = view.ItemContainerGenerator.IndexFromContainer(item);
        }
    }


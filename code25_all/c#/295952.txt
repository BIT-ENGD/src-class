public delegate void NotifyDelegate<T>(IEnumerator<T> loadable, NotifyArgs na);

interface IObserver
{
    void Notify<T>(IEnumerator<T> loadable, NotifyArgs na);
}

class Subject
{
    NotifyDelegate notifier;  //won't compile:  needs type args

    void Register(IObserver o)
    {
        notifier += o.Notify;
    }
}

public delegate void NotifyDelegate<T>(NotifyArgs na);

public delegate void NotifyDelegate<T>(IEnumerator<T> loadable, NotifyArgs na);


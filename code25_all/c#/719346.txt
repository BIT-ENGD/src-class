public interface IFooService
{
   void DoSomething();
}

public class FooService<TRequestingClass> : IFooService
{
   public virtual void DoSomething() { }
}

public class Bar
{
   private IFooService _fooService;
   public Bar(IFooService fooService)
   {
      this._fooService = fooService;
   }
}

public class FooService : IFooService
{
   public FooService(string requestingClassName) { }
}

public class GenericLogger<T> : ILogger
{
    private readonly ILog log;

    public GenericLogger()
    {
        this.log = log4net.LogManager.GetLogger(typeof(T));
    }

    public void Debug(object message)
    {
        this.log.Debug(message);
    }

    /* .... etc ....  */
}


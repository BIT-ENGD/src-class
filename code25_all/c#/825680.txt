


<class name="TestApp.Components.User,TestApp.Components"  table="Users">

<id name="Id" column="UserId" type="Int32" unsaved-value="0">
  <generator class="native"></generator>
</id>

<property name="UserName" type="string" length="100" not-null="false"/>

<bag name="Groups" table="User_Group" lazy="true" >
  <key column="UserId"></key>
  <many-to-many class="Group" column="GroupId" />
</bag>  


<class>


<class name="TestApp.Components.User,TestApp.Components"  table="Users">

<id name="Id" column="UserId" type="Int32" unsaved-value="0">
  <generator class="native"></generator>
</id>

<property name="UserName" type="string" length="100" not-null="false"/>

<bag name="Groups" table="User_Group" lazy="true" >
  <key column="UserId"></key>
  <many-to-many class="Group" column="GroupId" />
</bag>  

<class>


    select distinct username from users u, user_group ug
    WHERE u.userid = ug.userid
    AND (ug.groupid = 1 OR ug.groupid = 2 OR ug.groupid = 3)


    var session = sessionManager.GetSession();
    var items = session.CreateCriteria(typeof(User));  


ICriterion criterion = null;  

foreach (var groupid in Groups)  
{  
    ICriterion tempCriterion = Restrictions.Eq("Groups.GroupId", groupid);  
    criterion = criterion == null ? tempCriterion : Restrictions.Or(criterion, tempCriterion);  
}  
items.Add(criterion);



ICriterion criterion = null;  

foreach (var groupid in Groups)  
{  
    ICriterion tempCriterion = Restrictions.Eq("Groups.GroupId", groupid);  
    criterion = criterion == null ? tempCriterion : Restrictions.Or(criterion, tempCriterion);  
}  
items.Add(criterion);



public static void AttachUpdated(this ObjectContext context, EntityObject objectDetached)
{
    if (objectDetached.EntityState == EntityState.Detached)
    {
        object currentEntityInDb = null;

        if (context.TryGetObjectByKey(objectDetached.EntityKey, out currentEntityInDb))
        {
            context.ApplyPropertyChanges(objectDetached.EntityKey.EntitySetName, objectDetached);
            //Apply property changes to all referenced entities in context 
            context.ApplyReferencePropertyChanges((IEntityWithRelationships)objectDetached,
                                                  (IEntityWithRelationships)currentEntityInDb); //Custom extensor method 
        }
        else
        {
            //The entity should be added
            //?????
        }
    }
}

public static void ApplyReferencePropertyChanges(this ObjectContext context,
                                                         IEntityWithRelationships newEntity,
                                                         IEntityWithRelationships oldEntity)
{
    foreach (var oldRelatedEnd in oldEntity.RelationshipManager.GetAllRelatedEnds())
    {
        var oldRef = oldRelatedEnd as EntityReference;

        if (oldRef != null)
        {
            // this related end is a reference not a collection 
            var newRef = newEntity.RelationshipManager.GetRelatedEnd(oldRef.RelationshipName, oldRef.TargetRoleName) as EntityReference;
            if (newRef.EntityKey != null)
            {
                oldRef.EntityKey = newRef.EntityKey;
            }
            else
            {   
                //When oldRed is a 1:Many relationship
                //newRef is an EntityReference<TEntity> object
                EntityObject entity = newRef.GetType().GetProperty("Value").GetValue(newRef, null) as EntityObject;
                oldRef.EntityKey = entity.EntityKey;
            }
        }
        else
        {
            IRelatedEnd newRelatedEnd = newEntity.RelationshipManager.GetRelatedEnd(oldRelatedEnd.RelationshipName, oldRelatedEnd.TargetRoleName);
            foreach (IEntityWithRelationships e in newRelatedEnd)
            {
                if (!oldRelatedEnd.Contains((e as IEntityWithKey).EntityKey))
                {
                    //this is a new relation and it needs to be added.
                    //???????
                }
                else
                {
                    //Find out if relation was modified - and update it if needed
                    //????????
                }
            }
            IEnumerable entities = oldRelatedEnd as IEnumerable;

        }
    }
}


    List<SerializedForm> deserializedObject = JsonConvert.DeserializeObject<List<SerializedForm>>(searchFilters).Where(x => !string.IsNullOrEmpty(x.value) && !string.Equals(x.value.ToUpper(), "ALL")).ToList();
    List<StaffingPositionsDataContract> staffingPositionResponse = new StaffingPositionsDataContract().LoadMockData();

  private static List<T> _GetFilteredList<T, U>(IList<T> ListToFilter, string PropertyToFilterOn, List<U> FilterValues)
    {
        ParameterExpression p = Expression.Parameter(typeof(T), "x");

        Func<T, U> select = Expression.Lambda<Func<T, U>>(
            Expression.Property(p, PropertyToFilterOn), p).Compile();

        return ListToFilter.Join(FilterValues, select, u => u, (t, u) => t).ToList();
    }

 var filteredPositions = staffingPositionResponse;
        deserializedObject.ForEach(delegate(SerializedForm filters)
        {
            filteredPositions = _GetFilteredList<StaffingPositionsDataContract, string>(staffingPositionResponse, filters.name, new List<string> { filters.value });
        });


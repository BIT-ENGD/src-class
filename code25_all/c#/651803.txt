Helper
Helper
Helper
Helper
internal

namespace NameSpace1
{
  public class Client1
  {
    Processor processor;

    private class Helper
    {
      public Property1 { get; set; }
      public Property2 { get; set; }
    }

    public Client1(Processor p)
    {
      processor = p;
      processor.ProcessCompleted += Processor_ProcessCompleted;
    }

    void Processor_Process(object sender, ProcessCompletedEventArgs e)
    {
      Helper helper = (Helper)e.UserState;
      // ... do a bunch of stuff
    }
  }
}

namespace NameSpace2
{
  public class Client2
  {
    Processor processor;

    private class Helper
    {
      public Property1 { get; set; }    
    }

    public Client2(Processor p)
    {
      processor = p;
      processor.ProcessCompleted += Processor_ProcessCompleted;
    }

    void Processor_Process(object sender, ProcessCompletedEventArgs e)
    {
      Helper helper = (Helper)e.UserState;
      // ... do a bunch of stuff
    }
  }
}

object

    processor.Process(request, helper);


Processor processor = new Processor();
Client1 client1 = new Client1(processor);
Client2 client2 = new Client2(processor);

client1.ExecuteSomeRequest(); // calls processor.Process(request, helper);
client2.ExecuteSomeOtherRequest(); // calls processor.Process(request, helper);


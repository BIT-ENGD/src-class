    [AcceptVerbs(HttpVerbs.Post)]
    public ActionResult New(RequestForm form)
    {
        // contract
        if (form == null)
        {
            throw new ArgumentException("Cannot be null", "form");
        }

        // validate the form
        form.Validate(ModelState);

        // if valid, save & continue
        if (ModelState.IsValid)
        {
            var request = new Request();
            form.Update(request);
            repository.Save(request);
            return RedirectToAction("Edit", "Request", new {id = form.ID});
        }

        // if not valid, return new form
        return View("New", form);
    }

    public void Save(T entity)
    {
        using (ISession session = GetSession())
        using (ITransaction transaction = session.BeginTransaction())
        {
            session.SaveOrUpdate(entity);
            transaction.Commit();
        }
    }

<class
  name="Request"
  table="Data_Requests"
  dynamic-update="true">

<id 
  name="Id" 
  type="Int32" 
  access="property"
  column="RequestId"
  unsaved-value="0">
  <generator class="native"/>
</id>


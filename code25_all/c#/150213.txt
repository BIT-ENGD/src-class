var dailyCountList =
    (from a in showDC.Attendee
    let justDate = new DateTime(a.A_DT.Year, a.A_DT.Month, a.A_DT.Day)
    group a by justDate into DateGroup
    orderby DateGroup.Key
    select new RegistrationCount
    {
        EventDateTime = DateGroup.Key,
        Count = DateGroup.Count()
    }).ToList();

// Create a new list of data ranging from the beginning to the end of the first list, specifying 0 counts for missing data points (days with no registrations)
var allDates = new List<RegistrationCount>();
for (DateTime date = (from dcl in dailyCountList select dcl).First().EventDateTime; date <= (from dcl in dailyCountList select dcl).Last().EventDateTime; date = date.AddDays(1))
{
    DateTime thisDate = date; // lexical closure issue - see: http://www.managed-world.com/2008/06/13/LambdasKnowYourClosures.aspx
    allDates.Add(new RegistrationCount
    {
        EventDateTime = date,
        Count = (from dclInner in dailyCountList
        where dclInner.EventDateTime == thisDate
        select dclInner).DefaultIfEmpty(new RegistrationCount
        {
            EventDateTime = date,
            Count = 0
        }).Single().Count
    });
}


public class TabularEntry
    {
        public string Tag { get; set; }
        public string Description { get; set; }
        public string Code { get; set; }
        public string UseNote { get; set; }
        public List<string> Excludes { get; set; }
        public List<string> Includes { get; set; }
        public List<string> Synonyms { get; set; }
        public string Flags { get; set; }
        public List<TabularEntry> SubEntries { get; set; }
    }

<I4 Ref="1">222.2
    <DX>Prostate</DX>
    <EX>
        <I>adenomatous hyperplasia of prostate (600.20-600.21)</I>
        <I>prostatic:
            <I>adenoma (600.20-600.21)</I>
            <I>enlargement (600.00-600.01)</I>
            <I>hypertrophy (600.00-600.01)</I>
        </I>
    </EX>
    <FL>M</FL>
</I4>

<EX>
<I>
<EX>
<I>
<I>
<I>
List<TabularEntry> GetTabularEntries(XElement source)
        {
            List<TabularEntry> result;

            result = (from tabularentry in source.Elements()
                         select new TabularEntry()
                         {
                             Tag = tabularentry.Name.ToString(),
                             Description = tabularentry.Element("DX").ToString(),
                             Code = tabularentry.FirstNode.ToString(),
                             UseNote = tabularentry.Element("UN") == null ? null : tabularentry.Element("UN").Value,
                             Excludes = (from i in tabularentry.Element("EX").Elements("I")
                                             select i.Value).ToList()
                         }).ToList();

            return result;
        }


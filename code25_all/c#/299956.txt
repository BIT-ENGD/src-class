private static readonly object EventItemCommand = new object();

protected override bool OnBubbleEvent(object sender, EventArgs e)
{

   // throw new Exception();
    bool flag = false;
    if (e is RepeaterCommandEventArgs)
    {
        this.OnItemCommand((RepeaterCommandEventArgs)e);
        flag = true;
    }
    return flag;
}


protected virtual void OnItemCommand(RepeaterCommandEventArgs e)
{
    RepeaterCommandEventHandler handler = (RepeaterCommandEventHandler)base.Events[EventItemCommand];
    if (handler != null)
    {
        handler(this, e);
    }
}

public event RepeaterCommandEventHandler ItemCommand
{
    add
    {
        base.Events.AddHandler(EventItemCommand, value);
    }
    remove
    {
        base.Events.RemoveHandler(EventItemCommand, value);
    }
}


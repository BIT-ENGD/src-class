
using System;
using System.Collections.Generic;
using System.Security.Cryptography;
using System.Text;
using System.Windows.Forms;

namespace MyNameSpace
{

  public class RSAcrypt
  {
    private string _encryptedData;
    private string _decryptedData;

    public string EncryptedData
    {
      get { return _encryptedData; }
      set { _encryptedData  = value; }
    }

    public string DecryptedData
    {
      get { return _decryptedData; }
      set { _decryptedData  = value; }
    }

    public RSAcrypt()
    {
    }
    /// <param name="CryptAction"> The action to perform on the string {Encrypt|Decrypt} </param >
    /// <param name="StringToCrypt"> A string to perform the Action on </param>
    public RSAcrypt(string CryptAction, string StringToCrypt)
    {
        UnicodeEncoding thisUnicodeEncoding = new UnicodeEncoding();
        RSACryptoServiceProvider thisRSACryptoServiceProvider = new RSACryptoServiceProvider();
        byte[] _stringToCrypt = thisUnicodeEncoding.GetBytes(StringToCrypt);

        switch (CryptAction)
        {
            case "Encrypt":
                byte[] encryptedData = Encrypt(_stringToCrypt, thisRSACryptoServiceProvider.ExportParameters(false));
                _encryptedData = thisUnicodeEncoding.GetString(encryptedData);
            break;

            case "Decrypt":
                byte[] decryptedData = Decrypt(_stringToCrypt, thisRSACryptoServiceProvider.ExportParameters(true));
                _decryptedData = thisUnicodeEncoding.GetString(decryptedData);
            break;

            default:

            break;
        }

    }

    static private byte[] Encrypt(byte[] DataToEncrypt, RSAParameters keyInfo)
    {
        RSACryptoServiceProvider RSA = new RSACryptoServiceProvider();
        RSA.ImportParameters(keyInfo);
        return RSA.Encrypt(DataToEncrypt, false);
    }

    static private byte[] Decrypt(byte[] DataToDecrypt, RSAParameters keyInfo)
    {
      #region Temporary Assignment - Remove before build

      byte[] tmpVal = null;

      #endregion

      RSACryptoServiceProvider RSA = new RSACryptoServiceProvider();

      try
      {
          RSA.ImportParameters(keyInfo);

          #region Temporary Assignment - Remove before build

          tmpVal = RSA.Decrypt(DataToDecrypt, false);

          #endregion
      }
      catch (Exception ex)
      {

          MessageBox.Show("Error: " + ex.Message, "Exception Thrown");

      }

      #region Temporary Assignment - Remove before build

      return tmpVal;

      #endregion
    }
  }
}


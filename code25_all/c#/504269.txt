public class RedirectorConfiguration : ConfigurationSection
{
    [ConfigurationProperty("requestRegex", DefaultValue = ".*")]
    public string RequestRegex { get; set; }

    [ConfigurationProperty("redirectToUrl", IsRequired = true)]
    public string RedirectToUrl { get; set; }

    [ConfigurationProperty("enabled", DefaultValue = true)]
    public bool Enabled { get; set; }
}

<?xml version="1.0"?>
<configuration>
    <configSections>
        <section name="httpRedirector" type="Company.HttpRedirector.RedirectorConfiguration, Company.HttpRedirector"/>
    </configSections>
    <httpRedirector redirectToUrl="http://www.google.com" />
</configuration>

using System;
using System.Configuration;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Web;

namespace Company.HttpRedirector
{
    public class HttpRedirectorModule : IHttpModule
    {
        static RegexOptions regexOptions = RegexOptions.IgnoreCase | RegexOptions.IgnorePatternWhitespace;
        static Regex requestRegex = null;

        public void Dispose() { }

        public void Init(HttpApplication context)
        {
            context.PreRequestHandlerExecute += new EventHandler(context_PreRequestHandlerExecute);
        }

        void context_PreRequestHandlerExecute(object sender, EventArgs e)
        {
            var app = sender as HttpApplication;
            var config = ConfigurationManager.GetSection("httpRedirector") as RedirectorConfiguration;

            if (app == null || app.Context == null || config == null)
                return; // nothing to do

            if (requestRegex == null)
            {
                requestRegex = new Regex(config.RequestRegex,
                    regexOptions | RegexOptions.Compiled);
            }

            var url = app.Request.Url.AbsoluteUri;
            if (requestRegex != null || requestRegex.IsMatch(url))
            {
                if (!string.IsNullOrEmpty(config.RedirectToUrl))
                    app.Response.Redirect(config.RedirectToUrl);
            }
        }
    }
}


<typeAliases>
    <!-- Lifetime manager types -->
    <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager,Microsoft.Practices.Unity" />
    <typeAlias alias="external" type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager,Microsoft.Practices.Unity" />
    <typeAlias alias="IValidator`1" type="MySerivice.IValidator`1,MyService" />
    <typeAlias alias="VABValidator`1" type="MySerivice.VABValidator`1,MyService" />
    <typeAlias alias="MyService" type="MySerivice.MyService,MyService" />
</typeAliases>

<types>    
  <type type="MyService">
    <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement Microsoft.Practices.Unity.Configuration">
      <property name="Validator" propertyType="IValidator`1"/>
    </typeConfig>
  </type>
  <type type="IValidator`1" mapTo="VABValidator`1">
    <lifetime type="singleton" />
  </type>
</types>

private IValidator<RegExpressionObject> validator;

[Dependency]
public IValidator<RegExpressionObject> Validator
{
    get { return validator; }
    set { validator = value; }
}


//Interface.cs in assembly WMI.Interface.dll

using System;
using System.Collections.Generic;
using System.Text;

[assembly: System.Management.Instrumentation.WmiConfiguration(@"root\Test",
    HostingModel = 
System.Management.Instrumentation.ManagementHostingModel.Decoupled)]

namespace WMI
{
    [System.ComponentModel.RunInstaller(true)]
    public class MyApplicationManagementInstaller :
        System.Management.Instrumentation.DefaultManagementInstaller { }

    [System.Management.Instrumentation.ManagementEntity(Singleton = true)]
    [System.Management.Instrumentation.ManagementQualifier("Description",
        Value = "Obtain processor information.")]
    public class Interface
    {
        [System.Management.Instrumentation.ManagementBind]
        public Interface()
        {
        }

        [System.Management.Instrumentation.ManagementProbe]
        [System.Management.Instrumentation.ManagementQualifier("Descriiption",
            Value="The number of processors.")]
        public int ProcessorCount
        {
            get { return Environment.ProcessorCount; }
        }
    }
}

//Button click in windows forms application to publish class
try
{
    System.Management.Instrumentation.InstrumentationManager.Publish(new 
WMI.Interface());
}
catch (System.Management.Instrumentation.InstrumentationException 
exInstrumentation)
{
    MessageBox.Show(exInstrumentation.ToString());
}
catch (System.Management.Instrumentation.WmiProviderInstallationException 
exProvider)
{
    MessageBox.Show(exProvider.ToString());
}
catch (Exception exPublish)
{
    MessageBox.Show(exPublish.ToString());
}


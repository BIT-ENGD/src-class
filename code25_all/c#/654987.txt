public delegate void Event_x_Delegate(ref ComParam pVal, out bool result);

public sealed class Event_X_Handling  : BasicEvent<Event_X_Handling.Event_x_Delegate>

public abstract class BasicEvent<DELEGATE> : Loggable
    where DELEGATE: class { ...

public abstract class BasicEventListener<EVENTPARAM1> :
    BasicEvent<BasicEventListener<EVENTPARAM1>.BasicDelegate<EVENTPARAM1>> {

    #region TYPES

    public delegate void BasicDelegate<PARAM1>(ref EVENTPARAM1 pVal, out bool result);

    #endregion

public sealed class Event_X_Handling  : BasicEventListener<ComParam>


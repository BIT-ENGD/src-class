 public interface IRepository<T>
 {
    T Get(int id);
    void Add(T value);
    void Update(T value);
    void Delete(T value);
    ...
 }

public class NHibernateRepository<T>
{
    ...
}

public interface IUserRepository : IRepository<User>
{
     IList<User> GetUsersByRole(Role role);
}

public class UserRepository : NHibernateRepository<User>, IUserRepository
{
    ....
}

IUserRepository repository = container.Resolve< IUserRepository>();

public class UserRepository : DecoratorRepository<T>, IUserRepository
{
    protected IRepository<T> Repository { get; set; }

    public UserRepository(IRepository<T> innerRepository)
    {
        Repository = innerRepository;
    }
}


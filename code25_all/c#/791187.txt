    public abstract class LinqedTable<T> where T : LinqableTable {
    public static T Get(long ID) {
        DataContext context = LinqUtils.GetDataContext<T>();
        var q = from obj in context.GetTable<T>()
                        where obj.ID == ID
                        select obj;
        return q.Single<T>();
    }
}

public abstract class LinqableTable {
    public abstract long ID { get; set; }
}

LinqUtils.GetDataContext<T>()
LinqableTable
LinqedTable<MyType>.Get(ID)
long
ID
    public abstract class LinqedTable<T> where T : LinqableTable {
    public static T Get(long ID) {
        DataContext context = LinqUtils.GetDataContext<T>();
        var q = from obj in context.GetTable<T>()
                        where obj.IDValue == ID
                        select obj;
        return q.Single<T>();
    }
}

public abstract class LinqableTable {
    internal long IDValue {
        get { return (long)IDProperty.GetValue(this, null); }
        set { IDProperty.SetValue(this, value, null); }
    }
    internal PropertyInfo IDProperty {
        get { return this.GetType().GetProperty(IDPropertyName); }
    }
    internal protected virtual string IDPropertyName {
        get { return "ID"; }
    }
}

long
overrides
q.Single<T>();
The member 'EISS.Utils.LinqableTable.IDValue' has no supported translation to SQL.
obj
IDValue
IDValue

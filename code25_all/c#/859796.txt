using System;

namespace ConsoleTest
{
    class Program
    {
        static void Main()
        {
            var o1 = new oObject
                             {
                                 Name = "Before Method"
                             };

            var o1b = new oObjectBad
            {
                Name = "Before Method"
            };

            Console.WriteLine("Object Bad 1 Before: " + o1b.Name);
            oObjectBad o2b = GetNewObjectBad(o1b);
            Console.WriteLine("Object Bad 1 After: " + o1b.Name);
            Console.WriteLine("Object Bad 2 After: " + o2b.Name);


            Console.WriteLine(string.Empty);

            Console.WriteLine("Object 1 Before: " + o1.Name);
            oObject o2 = GetNewObject(o1);
            Console.WriteLine("Object 1 After: " + o1.Name);
            Console.WriteLine("Object 2 After: " + o2.Name);

            Console.ReadLine();
        }

        public static oObject GetNewObject(oObject o)
        {
            oObject newObject = new oObject(o);

            newObject.Name = "Changed in Method";
            return newObject;
        }

        public static oObjectBad GetNewObjectBad(oObjectBad o)
        {
            o.Name = "Changed in Method";
            return o;
        }
    }

    class oObject
    {
        public oObject()
        {
        }

        public oObject(oObject o)
        {
            Name = o.Name;
        }

        public string Name { get; set; }
    }

    class oObjectBad
    {
        public string Name { get; set; }
    }
}

using System;

namespace ConsoleTest
{
    class Program
    {
        static void Main()
        {
            var o1 = new oObject
                             {
                                 Name = "Before Method"
                             };



            Console.WriteLine("Object 1 Before: " + o1.Name);
            oObject o2 = GetNewObjectBad(o1);
            Console.WriteLine("Object 1 After: " + o1.Name);
            Console.WriteLine("Object 2 (New Object) After: " + o2.Name);

            Console.ReadLine();
        }

        public static oObject GetNewObjectBad(oObject o)
        {
            o.Name = "Changed in Method";
            return o;
        }
    }

    class oObject
    {
        public string Name { get; set; }
    }
}


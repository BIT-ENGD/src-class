class Program
    {
        static void Main(string[] args)
        {
            var d = new Data("Data Source=(LOCAL);Initial Catalog=Database1;Integrated Security=true;");

            var d1 = new Data("Data Source=(LOCAL);Initial Catalog=Database2;Integrated Security=true;");

            Console.ReadLine();
        }
    }

    internal class Data
    {
        public Data(string connection)
        {

            using (var ctx = new DataClassDataContext(connection))
            {
                var query = from c in ctx.MyTable select c;
                try
                {
                    Console.WriteLine(query.Count());
                }
                catch (Exception ex)
                {
                    Console.WriteLine(ex.Message);
                }



            }
        }
    }

class oConnection
    {
        public string Server { get; set; }
        public string Database { get; set; }
        public bool IntegratedSecurity { get; set; }
        public string UserName { get; set; }
        public string Password { get; set; }
    }

    class Program
    {
        static void Main(string[] args)
        {
            var d = new Data(new oConnection
                                 {
                                     Database = "Database1",
                                     Server = "(Local)",
                                     IntegratedSecurity = true
                                 });

            var d1 = new Data(new oConnection
                                  {
                                      Database = "Database2",
                                      Server = "(Local)",
                                      IntegratedSecurity = true
                                  });
            Console.ReadLine();
        }
    }

    internal class Data
    {
        private static string BuildConnection(oConnection connection)
        {
            var sb = new StringBuilder();
            sb.Append("Data Source=" + connection.Server + ";Initial Catalog=" + connection.Database + ";");
            if(connection.IntegratedSecurity)
            {
                sb.Append("Integrated Security=true;");
            }
            else
            {
                sb.Append("user id=" + connection.UserName + ";password=" + connection.Password);
            }
            return sb.ToString();
        }

        public Data(oConnection connection)
        {

            using (var ctx = new DataClassDataContext(BuildConnection(connection)))
            {
                var query = from c in ctx.MyTable select c;
                try
                {
                    Console.WriteLine(query.Count());
                }
                catch (Exception ex)
                {
                    Console.WriteLine(ex.Message);
                }
            }
        }
    }


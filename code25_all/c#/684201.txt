protected override void CreateChildControls()
{
  Controls.Clear();

  this.Page.RegisterClientJavaScript("~/Resources/Script/SideNav.js");
  _ClientObject = this.GetClientJavaScriptObject("SideNav", this.ClientID);

  Controls.Add(_BaseContainer);

  HtmlGenericControl innerContents = this.BuildBaseContainer();
  this.BuildList(innerContents);

  _ClientObject.AddParameter("BaseContainerID", _BaseContainer.ClientID, true);
  _ClientObject.AddParameter("ImgId", _SideBarTabImg.ClientID, true);
  _ClientObject.AddParameter("SideBarContentsId", _SideBarContents.ClientID, true);

  base.CreateChildControls();
}

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Text;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.HtmlControls;

namespace AthletesCafe.Web.WebControls.SideNav
{
  [ToolboxData("<{0}:NavItem runat=server></{0}:NavItem>")]
  public class NavItem : ExtendedWebControl
  {
    private string _Text;
    private string _Value;
    private IList<NavItem> _ChildItems = new List<NavItem>();

private HtmlGenericControl _ListItem = new HtmlGenericControl("LI");
private HtmlAnchor _Link = new HtmlAnchor();
private HtmlGenericControl _SubList = new HtmlGenericControl("UL");

public string Text
{
  get
  {
    EnsureChildControls();
    return _Text;
  }

  set
  {
    EnsureChildControls();
    _Text = value;
    _Link.InnerText = _Text;
  }
}

public string Value
{
  get
  {
    EnsureChildControls();
    return _Value;
  }

  set
  {
    EnsureChildControls();
    _Value = value;
    _Link.HRef = _Value;
  }
}

protected override void CreateChildControls()
{
  Controls.Clear();
  Controls.Add(_ListItem);

  _ListItem.Controls.Add(_Link);

  base.CreateChildControls();
}

public NavItem AddChildItem(string text, string url)
{
  EnsureChildControls();

  NavItem newItem = new NavItem();
  newItem.Text = text;
  newItem.Value = url;

  _ChildItems.Add(newItem);
  this.BuildSubList();
  return newItem;
}

private void BuildSubList()
{
  _SubList.Controls.Clear();

  if (_ChildItems.Count > 0)
  {
    if (!_ListItem.Controls.Contains(_SubList))
      _ListItem.Controls.Add(_SubList);

    foreach (NavItem item in _ChildItems)
      _SubList.Controls.Add(item);
  }
}

protected override void Render(HtmlTextWriter writer)
{
  RenderContents(writer);
}

protected override void RenderContents(HtmlTextWriter writer)
{
  _ListItem.RenderControl(writer);
  //base.RenderContents(writer);
}

    public override string ToString()
    {
      EnsureChildControls();
      return _Text + " - " + _Value;
    }
  }
}

HtmlGenericControl list = new HtmlGenericControl("UL");
innerContents.Controls.Add(list);
foreach (NavItem item in _Items)
{
  list.Controls.Add(item);
}


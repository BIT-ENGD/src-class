


class TripleDESEncryption
{
    private readonly TripleDESCryptoServiceProvider engine;

    public TripleDESEncryption () : this (256) { }

    public TripleDESEncryption (int keySizeInBits) {
        engine = new TripleDESCryptoServiceProvider { KeySize = keySizeInBits };
        engine.GenerateKey ();
    }

    public byte[] Encrypt (byte[] plain) {
        return engine.CreateEncryptor ().TransformFinalBlock (plain, 0, plain.Length);
    }

    public byte[] Decrypt (byte[] encrypted) {
        return engine.CreateDecryptor ().TransformFinalBlock (encrypted, 0, encrypted.Length);
    }
}

class Program
{
    static readonly int MAX_TEXT_LENGTH = 128;

    static void Main (string[] args) {
        Console.WriteLine ("{0,10}{1,10}{2,10}{3,10}", "Algo", "Key Size", "Input Size", "Encrypted Size");

        var tripleDES = new TripleDESEncryption ();
        var input = new List<byte> ();

        for (int i = 0; i <= MAX_TEXT_LENGTH; i++) {
            var plain = input.ToArray ();
            var encrypted = tripleDES.Encrypt (plain);
            Console.WriteLine ("{0,10}{1,10}{2,10}{3,10}", "Triple DES", keySize, input.Count, encrypted.Length);
            input.Add (0x65);
        }

        Console.ReadLine ();
    }
}



class TripleDESEncryption
{
    private readonly TripleDESCryptoServiceProvider engine;

    public TripleDESEncryption () : this (256) { }

    public TripleDESEncryption (int keySizeInBits) {
        engine = new TripleDESCryptoServiceProvider { KeySize = keySizeInBits };
        engine.GenerateKey ();
    }

    public byte[] Encrypt (byte[] plain) {
        return engine.CreateEncryptor ().TransformFinalBlock (plain, 0, plain.Length);
    }

    public byte[] Decrypt (byte[] encrypted) {
        return engine.CreateDecryptor ().TransformFinalBlock (encrypted, 0, encrypted.Length);
    }
}

class Program
{
    static readonly int MAX_TEXT_LENGTH = 128;

    static void Main (string[] args) {
        Console.WriteLine ("{0,10}{1,10}{2,10}{3,10}", "Algo", "Key Size", "Input Size", "Encrypted Size");

        var tripleDES = new TripleDESEncryption ();
        var input = new List<byte> ();

        for (int i = 0; i <= MAX_TEXT_LENGTH; i++) {
            var plain = input.ToArray ();
            var encrypted = tripleDES.Encrypt (plain);
            Console.WriteLine ("{0,10}{1,10}{2,10}{3,10}", "Triple DES", keySize, input.Count, encrypted.Length);
            input.Add (0x65);
        }

        Console.ReadLine ();
    }
}



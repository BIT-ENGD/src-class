<TextBlock Text="{Binding Source={x:Static local:DeviceManager.Instance},
 Path=Player.CurrentArtist}"></TextBlock>

Player
IPlayer
Player.CurrentArtist
CurrentArtist
DeviceManager
IPlayer
INotifyPropertyChanged
DeviceManager
public sealed class DeviceManager : INotifyPropertyChanged
{
    // Singleton members omitted

    public IPlayer Player
    {
        get { return player; }
        set
        {
            this.player = value;
            player.PropertyChanged += new PropertyChangedEventHandler(device_PropertyChanged);
        }
    }

    #region INotifyPropertyChanged Members

    public event PropertyChangedEventHandler PropertyChanged;

    private void device_PropertyChanged(object sender, PropertyChangedEventArgs e)
    {
        PropertyChangedEventHandler handler = PropertyChanged;
        if (handler != null)
        {
            handler(sender, e);
        }
    }

    #endregion
}

class MediaPlayer : IPlayer
{
    private string artist;
    private string title;

    public event PropertyChangedEventHandler PropertyChanged;

    public void Play(string artist, string title)
    {
        this.artist = artist;
        this.title = title;
        OnPropertyChanged("Player:Song");
    }

    private void OnPropertyChanged(string p)
    {
        PropertyChangedEventHandler handler = PropertyChanged;
        if (handler != null)
        {
            handler(this, new PropertyChangedEventArgs(p));
        }
    }

    public string CurrentTitle
    {
        get { return title; }
    }

    public string CurrentArtist
    {
        get { return artist; }
    }

}


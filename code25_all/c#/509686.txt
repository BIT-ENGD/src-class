<class lazy="false" name="EntityPropertyName" table="entity_property_name" >
<id name="ID" column="id" type="Int32" unsaved-value="-1">
  <generator class="increment" />
</id>
<property name="Name" column="name"/>

<class lazy="false" name="EntityPropertyName" table="entity_property_name" >
<id name="ID" column="id" type="Int32" unsaved-value="-1">
  <generator class="native">
  </generator>
</id>
<property name="Name" column="name"/>

NHibernate.Cfg.Configuration cfg = new NHibernate.Cfg.Configuration();

            if (newDBType == CompanyName.AppName.Data.Enum.DatabaseType.MsSqlServer)
            {
                cfg.Properties["dialect"] = "NHibernate.Dialect.MsSql2000Dialect";
                cfg.Properties["connection.driver_class"] = "NHibernate.Driver.SqlClientDriver";
                cfg.AddFile("DataTypes\\MSSQLTypes.hbm.xml");
            }
            else
            {
                cfg.Properties["dialect"] = "NHibernate.Dialect.Oracle9Dialect";
                cfg.Properties["connection.driver_class"] = "NHibernate.Driver.OracleClientDriver";
                cfg.AddFile("DataTypes\\OracleTypes.hbm.xml");
            }

            cfg.Properties["connection.provider"] = "NHibernate.Connection.DriverConnectionProvider";

            cfg.Properties["connection.connection_string"] = connectionString;

            cfg.AddAssembly("CompanyName.AppName.Data");

            Sessions = cfg.BuildSessionFactory();

NHibernate.Cfg.Configuration cfg = new NHibernate.Cfg.Configuration();

            if (newDBType == CompanyName.AppName.Data.Enum.DatabaseType.MsSqlServer)
            {
                cfg.Properties["dialect"] = "NHibernate.Dialect.MsSql2000Dialect";
                cfg.Properties["connection.driver_class"] = "NHibernate.Driver.SqlClientDriver";
                cfg.AddInputStream(Assembly.GetExecutingAssembly().GetManifestResourceStream("CompanyName.AppName.Data.DataTypes.MSSQLTypes.hbm.xml"));
            }
            else
            {
                cfg.Properties["dialect"] = "NHibernate.Dialect.Oracle9Dialect";
                cfg.Properties["connection.driver_class"] = "NHibernate.Driver.OracleClientDriver";
                cfg.AddInputStream(Assembly.GetExecutingAssembly().GetManifestResourceStream("CompanyName.AppName.Data.DataTypes.OracleTypes.hbm.xml"));
            }

            cfg.Properties["connection.provider"] = "NHibernate.Connection.DriverConnectionProvider";

            cfg.Properties["connection.connection_string"] = connectionString;

            cfg.AddInputStream(Assembly.GetExecutingAssembly().GetManifestResourceStream("CompanyName.AppName.Data.DataTypes.Types.hbm.xml"));

            Sessions = cfg.BuildSessionFactory();


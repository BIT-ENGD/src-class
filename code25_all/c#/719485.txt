A for ... do:
{
    B for do:
      { something}

something that evaluates all "for"s in B loop
}

 for (int i = 0; i < max; i++) //Pre Vsetky retazce ..
       {
           prefix = 0;
           tempsame.Clear();
           bool spracovane = true;
           int dlzkaI = Items[i, 1].Length;

           if (Items[i, 2] != "1") { spracovane = false; } 

           if (spracovane == false)
         //  Parallel.For(0, max, delegate(int j)
         //    {
                  for (int j = 0; j < max; j++) //Pre kazdy dalsi
                  {

                       int dlzkaJ = Items[j, 1].Length;

                       if (dlzkaJ >= dlzkaI)
                       {

                           CompareInfo myComp = CultureInfo.InvariantCulture.CompareInfo;
                           bool isprefix = myComp.IsPrefix(Items[j, 1], Items[i, 1]);


                           bool issame = false;

                           if (dlzkaJ.Equals(dlzkaI)) issame = true;

                           if (isprefix == true && issame == false)
                           {
                               prefix++;
                           }

                           else if (isprefix == true && issame == true && prefix == 0) 
                           {
                               tempsame.Add(Items[j, 0]);

                           }
                       }
                } 





   if ((prefix==0) && (spracovane==false))
   {
       Items = UpdateUnique(tempsame.ToArray(typeof(string)) as string[], Items);
       unique++;

   }
   }

> Car - unique Car - unique Cafeteria -
> unique Automobile - unique Auto - not
> unique - it's prefix of Automobile
> Auto - not unique


public class Authenticator
{
        public event EventHandler AuthenticationFailed = delegate { };
        protected virtual void OnAuthenticationFailed()
        {
            var handler = AuthenticationFailed;
            handler(this, EventArgs.Empty);
        }

        public void IsAuthenticated()
        {
            // Some logic...
            // ...
            // Woops authentication failed
            OnAuthenticationFailed();
        }


        // Is this a better option?
        public void SendEmailOnAuthenticationFailed()
        {
            SendEmailOnAuthenticationFailed(EmailSender);
        }

        // Or is this?
        public void SendEmailOnAuthenticationFailed(EventHandler emailSender)
        {
            AuthenticationFailed += emailSender;
        }

        private void EmailSender(object sender, EventArgs e)
        {
            Console.WriteLine("Send email: EmailSender");
        }
    }

public class Authenticator
{
    private readonly IEmailResponder _EmailResponder;

    public Authenticator(IEmailResponder emailResponder)
    {
        _EmailResponder = emailResponder;
    }

    public void IsAuthenticated()
    {
        // Some logic...
        // ...

        // Woops authentication failed
        SendEmailForAuthenticationFailure();
    }

    private void SendEmailForAuthenticationFailure()
    {
        _EmailResponder.SendEmail(...);
    }
}


var _pool = new Dictionary<Type, Dictionary<EntityIdType, Object>>();

public IEnumerable<EntityType> GetItems<EntityType>()
{
    Type myType = typeof(EntityType);

    if (!_pool.ContainsKey(myType))
        return new EntityType[0];

    //does not work, always returns null
    // return _pool[myType].Values; as IEnumerable<EntityType>;

    //hack: cannot cast Values to IEnumarable directly
    List<EntityType> foundItems = new List<EntityType>();
    foreach (EntityType entity in _pool[myType].Values)
    {
        foundItems.Add(entity);
    }
    return foundItems as IEnumerable<EntityType>;

}


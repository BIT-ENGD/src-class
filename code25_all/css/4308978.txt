public final class HyperlinkCell extends AbstractCell<HyperlinkCellData> {

    // TODO
    private interface MyCss extends CssResource {
        String red();
    }

    // TODO
    private interface MyResources extends ClientBundle {
        @Source("HyperlinkCell.css")
        MyCss css();
    }

    // TODO
    private static MyResources resources = GWT.create(MyResources.class);

    HyperlinkCell() {
        super("click");
    }

    @Override
    public void onBrowserEvent(Element parent, HyperlinkCellData value,
            Object key, NativeEvent event,
            ValueUpdater<HyperlinkCellData> valueUpdater) {
        // handle click event
        History.newItem(value.targetHistoryToken, true);
    }

    @Override
    public void render(HyperlinkCellData value, Object key, SafeHtmlBuilder sb) {
        String childGroupObfuscatedClass = resources.css().red();
        sb.append(SafeHtmlUtils.fromTrustedString("<a class=\""))
                .append(SafeHtmlUtils
                        .fromTrustedString(childGroupObfuscatedClass))
                .append(SafeHtmlUtils.fromTrustedString("\""))
                .append(SafeHtmlUtils.fromTrustedString(" href=\"#"))
                .append(SafeHtmlUtils.fromString(value.targetHistoryToken))
                .append(SafeHtmlUtils.fromTrustedString("\">"))
                .append(SafeHtmlUtils.fromString(value.text))
                .append(SafeHtmlUtils.fromTrustedString("</a>"));
    }
}

.red {
    color: red;
}

<a href="#target" class="GPGOA3-B">text</a>


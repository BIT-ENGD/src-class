class IncludeEvent extends Event {
   protected $File = '';
   public $Contents;
        ....
   public function Begin() {
        ....
        // this is the ONLY time $Contents is modified:
        $this->Contents = ob_get_contents();
        ob_end_clean();
        ....
   }
        ....
   if ($this->Notify(new IncludeObject($this->File,'OBOutput', $this)) !== false) {
        print $this->Contents;
   }
}

$Contents
Notify()
$this
$Content
IncludeObject()
public function __construct($F= '', $M= -1, &$IV = null) {
    $this->File = $F;
    $this->Func = $M;
    $this->IncEv = $IV;
}

public function OBOutput($IncObj){
    print $IncObj->IncEv->Contents;
    return false;
}

final public function Notify($EvObj = null) {
        foreach ($this->listen_list as $z) {
            $d = call_user_func(array($z, $EvObj->Func), $EvObj);
            if ($d == true || is_null($d)) {
                return true;
            }
        }
        return false;
    }


::
class A {
  function horse() {
    echo "horse";
  }
}

class B {
  function jump() {
    // $A = new A; ... don't want to add this in each method.
    $A->horse();  // Fails - $A is out of scope ($A = new A;).
    // A::horse();  // Old code style - works.
    // $this->horse();  // Works if you extend A - not self-documenting.
    // $this->A->horse();  // Fails - out of scope.
  }
}

$A = new A;
$B = new B; // Better to use "$B = new B($A);" ?
$B->jump(); // fails - the horse is sleeping.

class url {
    function anchor($url,$name) {
        return "<a href="{$url}\">{$name}</a>";
    }
}

class someclass {
    function text($str,$url) {
        return "{$str}. " . $url->anchor($url,"Read more...");
    }
}


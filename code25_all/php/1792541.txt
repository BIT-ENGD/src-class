  function SaySig() {

  $privKeyFilePath = "c:\temp\myrsakey.pem";

  $data = "sign this string";
  $fp = fopen($privKeyFilePath, "r");
  $priv_key = fread($fp, 8192);
  fclose($fp);
  $privatekeyid = openssl_get_privatekey($priv_key);
  openssl_sign($data, $signature, $privatekeyid, OPENSSL_ALGO_SHA1);
  openssl_free_key($privatekeyid);
  $sig = base64_encode($signature);
  echo "<br>";
  echo "Signature:".$sig."<br><br>";
  }

function TMainWeb.sign(mstring: String): string;
var
  mPrivateKey: TLbRSAKey;
  LbRSASSA1: TLbRSASSA;
begin
  LbRSASSA1:= TLbRSASSA.create(nil);
  LbRSASSA1.PrivateKey.LoadFromFile('C:\temp\myrsakey.der');
  LbRSASSA1.HashMethod := TRSAHashMethod(hmSHA1);
  LbRSASSA1.SignString(mString);
  result := LbRSASSA1.Signature.IntStr;
end;

function TMainWeb.sign1(mstring: String): string;
var
  LbDSA1: TLbDSA;
  mPrivateKey: TLbRSAKey;
begin
  mPrivateKey := TLbRSAKey.Create(aks1024);
  mPrivateKey.LoadFromFile('C:\temp\myrsakey.der');
  LbDSA1 := TLbDSA.create(application);
  lbDSA1.PrivateKey.Assign(mPrivateKey);
  LbDSA1.SignString(mString);
end;

function TMainWeb.Sign2(mString: String): string;
var
  signer: TMessageSigner;
begin
  signer := TMessageSigner.Create;
  signer.LoadPrivateKey('C:\temp\myrsakey.pem');
  signer.PlainMessage := mString;
  signer.MIMESign;
  result := signer.SignedMessage;
end;


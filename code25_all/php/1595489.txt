 /**
this function checks for existing tags and creates new tags
@params string (of comma separated tags)
@return array (of IDs)
**/
function saveAndCreateTags($tags){
    $tags = explode(",", $tags); //create array of tags
    $idArray = array();
    foreach($tags as $tag) {
        $count = $this->find('count', array('conditions' => array('name' => $tag)));
        if($count === 0) {
            $this->create();
            if($this->save($tag)) {
            $idArray[] = $this->getInsertID();
            }
        }
        else {
            $idArray[] = $this->getID();
        }
    }
    return $idArray;
}

/**
this function updates the relational table
@params array (this array is returned by saveAndCreateTags function
@params int (id of the contact)
**/
function updateContactTagsTable($idArray, $contactId){
    foreach($idArray as $tagId) {
        $count = $this->ContactTag->hasAny(array('tag_id' => $tagId, 'contact_id' => $contactId));
        if($count === 0) {
            ();
            $this->ContactTag->save(array('contact_id' => $contactId, 'tag_id' => $tagId));
        }
    }       
}


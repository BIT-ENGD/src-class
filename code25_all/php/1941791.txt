class Model extends db_pdo_adapter{
    public function __construct($name)
    {
        $name = strtolower($name);
        $this->dbh = parent::connect(Model::ATTR_HOST, Model::ATTR_USR, Model::ATTR_PASSWD, Model::ATTR_DB);
        $this->name = $name.'s';
        //$this->ATTR_TBL = $this->name;

    }

    public function __call($name,$values)
    {
        $string = preg_replace('/^get/','',$name);
        $string = strtolower($string);
        $by = preg_split('/by/',$string);
        $by = strtolower($by[1]);
        return $this->get($string, $by, $values); // when I remove this part no empty file is served.
    }

    public function get($item, $by, $conditions) // single item if is_no_array
    {
        if($item = preg_replace('/$s/','',$this->name))
        {
            $item = '*';
        }
        //if(count($conditions) <= 1)
        //{
            $query = 'SELECT ' . $item . ' FROM ' . $this->name . ' WHERE ' . $by . ' = :' . $by . '';
            $pname = ':'.$by;
        //}

        $this->dbh->getStatement($query);
        $this->dbh->bindParam($pname,$conditions[0]); // ->dbh-> also was missing
        $this->dbh->exec();
        return ($this->dbh->fetchAll());

    }
}

 header('Content-Type: text/html;');
$time_start = microtime(true);



 include_once('db/model.php');
 //include_once('village.php');
 //include_once('player.php');
 include_once('building.php');

//$village = Village::getVillage('12');
//$player = Player::getPlayer('423');
//$data = array('name' => 'peter','password' => 'nopasswd','email' => 'peter@hasnomail.org');
//$player->newPlayer($data);
//print_r($village->attr);
//print_r($player->playerObj);
//include('interface.phtml');
//var_dump($_SERVER);
//print_r($village);
//print_r($player);
echo '<br />';
var_dump(Building::getBuilding('321'));

class Building{
    private function __construct($id,$village = NULL)
    {
        $this->model = new Model(__CLASS__);
        $model = $this->model;

        $this->buildingObj = $model->getBuildingById($id);
    }

    public function getBuilding($id,$village = NULL)
    {
        return (new Building($id));
    }
}


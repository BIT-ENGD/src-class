<!-- a string array req param, used as a return for the getAvailable cars method -->
<message name="response">
<part name="resParam" type="tns:strArray"/>
</message>

<!-- just a string message -->
<message name="request">
  <part name="reqParam" type="xsd:string"/>
</message>

<!-- Methods published, together with there inputs and outputs -->
<portType name="testPortType">
<!-- Method 0. Takes nothing returns a string array -->
    <operation name="getCountries">
    <output message="tns:response"/>
</operation>
<!-- Method 1. Takes a string param and returns nothing -->
<operation name="registerCustomer">
    <input message="tns:request"/>
</operation>
<!-- Method 2. Takes a string param and returns nothing  -->
<operation name="">
    <input message="tns:request"/>
</operation>
</portType>

<!-- define the transport and protocol -->
<binding name="testBinding" type="tns:testPortType">
 <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
  <operation name="getCountries">
     <soap:operation soapAction=""/>
<output>
<soap:body use="encoded"  encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:mymyInputNamespace"/>
    </output>

</operation>
<operation name="registerCustomer">
    <soap:operation soapAction=""/>
    <input>
    <soap:body use="encoded"  encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:mymyInputNamespace"/>
</input>
</operation>
</binding>

<!-- who implements these services ? -->
   <service name="testService">
    <port name="testPort" binding="tns:testBinding">
        <soap:address location="http://localhost/dataobjects/dataclass.php"/>

Fatal error: Call to undefined method SoapServer::getCountries() in C:\Program Files\xampplite\htdocs\testingpage.php on $dataset = $dataobj->getCountries();
$dataobj = new SoapServer("http://localhost/dataobjects/myWebservice.wsdl", array('soap_version' => SOAP_1_2,'trace' => 1 ));
$dataset = $dataobj->getCountries();
    echo("<h2>Available Countries (".count($dataset)."):</h2><br />");

    foreach($dataset as $c) {
    echo($c.", ");


/**
 * Include a pattern of reserved word based on a filename, 
 * and it's replacement.
 * @author Vinicius Mendes
 * @return null
 * @param $default String
 */
function _includeDefaultReplacement($default){
    $replacements = $this->replacements;
    list($newPattern, $ext) = $this->splitFilenameAndExt($default);
    if(!in_array($newPattern, $this->patterns)){
        $this->patterns[] = $newPattern;
        $newReplacement = $newPattern;
        if(isset($newReplacement[1])){ // <--- ???
            if($newReplacement[1] != '_'){
                $newReplacement[1] = '_';
            } else {
                $newReplacement[1] = 'a';
            }
        } elseif($newReplacement != '_') {
            $newReplacement = '_';
        } else {
            $newReplacement = 'a';
        }
        $this->replacements[] = $newReplacement;
    }
}

function splitFilenameAndExt($filename){
    $parts = explode('.',$filename);
    $ext = $parts[count($parts)-1];
    unset($parts[count($parts)-1]);
    $filename = implode('.',$parts);
    return array($filename,$ext);
}


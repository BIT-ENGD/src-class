class XMLDB {

    private $file = null;
    private $xml = null;
    private $defs = array();
    private $recs = array();

    // private members above, public members below

    public function __construct($xmlfile) {
        if (!file_exists($xmlfile)) {
            die('XML file does not exist.');
        }
        $this -> file = $xmlfile;
        $this -> xml = simplexml_load_file($this -> file);
        $this -> iniVocab();
        $this -> iniData();
    }

    public function commit() {
        $xmlfile = fopen($this -> file, 'w'); // this is causing the warning
        $doc = new DOMDocument('1.0');
        $doc -> preserveWhiteSpace = false;
        $doc -> loadXML($this -> xml -> asXML());
        $doc -> formatOutput = true;
        fwrite($xmlfile, $doc->saveXML());
    }

    public function __destruct() {
        $this -> commit();
        /* comment this line out and there won't be any warnings, 
        /* therefore it should trace back to here. So I found out that
        /* it's when I use die() that eventually calls __destruct()
        /* which in turn calls commit() to trigger this fopen warning. */
    }
}


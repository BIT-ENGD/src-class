class Base
{
    public $Text = null;

    public function __construct()
    {
        $this->Text = new Base_Text();
    }
}

class Base_Text extends Base
{
    public $Is = null;

    public function __construct()
    {
        $this->Is = new Base_Text_Is();
    }

    public function CammelCase($string)
    {
        return trim(str_replace(' ', '', ucwords($string)));
    }
}

class Base_Text_Is extends Base_Text
{
    public function CammelCase($string)
    {
        return ($string === $this->CammelCase($string)); // doesn't work
    }
}

Base_Text_Is::CammelCase()
parent::
Base_Text::
function Base()
{
    static $instance = null;

    if (is_null($instance) === true)
    {
        $instance = new Base();
    }

    return $instance;
}

Base_Text_Is::CammelCase()
return ($string === Base()->Text->CammelCase($string));

$base = new Base();
$base->Text->Is->CammelCase('MethodOverloading'); // true

Base()->Text->Is->CammelCase('MethodOverloading'); // true


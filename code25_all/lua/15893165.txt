locker.so
load_so.lua
locker = require("locker")
print(type(locker))
for k, v in pairs(locker) do
    print(k, v)
end

int main(int argc, const char *argv[])
{
    lua_State * L = luaL_newstate();
    luaL_openlibs(L);

    if (luaL_dofile(L, "load_so.lua") != 0) {
        fprintf(stderr, "luaL_dofile error: %s\n", lua_tostring(L, -1));
        lua_pop(L, 1);
    }
    lua_close(L);
    return 0;
}

luaL_dofile error: error loading module 'locker' from file './locker.so':
    ./locker.so: undefined symbol: lua_pushstring

static int elock_get(lua_State * L) {...}

static int elock_set(lua_State * L) {...}

static const struct luaL_Reg lockerlib[] = {
    {"get", elock_get},
    {"set", elock_set},
    {NULL, NULL}
};

int luaopen_locker(lua_State *L)
{
    //luaL_newlib(L, lockerlib);
    //lua_pushvalue(L, -1);
    //lua_setglobal(L, LOCKER_LIBNAME);
    //set_info(L);
    luaL_newlibtable(L, lockerlib);
    luaL_setfuncs(L, lockerlib, 0);
    return 1;
}

luaL_requiref(L, "locker", luaopen_locker, 1)

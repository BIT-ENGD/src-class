first layer
all the others
torch.save
first layer
all the other layers
local function split_model(network)
    -- for some reason all the models when saved have the same size
    -- if not splitted calling 'getParameters()' first.
    first_layer = nn.Sequential()
    all_the_rest = nn.Sequential()
    for i = 1, network:size() do
        local l = network:get(i)
        local l_params, _ = l:getParameters()
        if i == 1 then  
            first_layer:add(l)
        else
            all_the_rest:add(l)
        end
    end
    return first_layer, all_the_rest
end

local first_layer, all_the_rest = split_model(network)
torch.save("checkpoints/mlp.t7", .network)
torch.save("checkpoints/first_layer.t7", first_layer)
torch.save("checkpoints/all_the_rest.t7", all_the_rest)


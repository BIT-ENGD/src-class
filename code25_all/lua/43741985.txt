[1] = {
    [1] = {
        category = "WORD",
        cursor = <filtered>,
        ptype = "STATEMENT",
        ttype = "SERVICE",
        value = "service",
        <metatable> = <filtered>
    },
    [2] = {
        category = "VARIABLE",
        cursor = <filtered>,
        ptype = "STATEMENT",
        ttype = "IDENTIFIER",
        value = "TestService",
        <metatable> = <filtered>
    },
    [3] = {
        ttype = "BRACE_BLOCK",
        value = {
            [1] = { ...
...
[2] = {
    [1] = {
        category = "WORD",
        cursor = <filtered>,
        ptype = "STATEMENT",
        ttype = "SERVICE",
        value = "service",
        <metatable> = <filtered>
    },
    [2] = {
        category = "VARIABLE",
        cursor = <filtered>,
        ptype = "STATEMENT",
        ttype = "IDENTIFIER",
        value = "HelloWorld",
        <metatable> = <filtered>
    },

 local found_service = 0
 if found_service == 0 then
 for k1, v1 in pairs (parse_tree) do
      for i=1,#v1 do
            if v1[i].ttype == "SERVICE"  then
            --Store wanted data in an object
             found_service = 1
             end  
            if (found_service == 1 and v1[i].ttype ~= "SERVICE") then
            -- ->assign the rest to last found service
            end
            if found_service == 1 and v1[i].ttype == "SERVICE" then
            -- ->Found the next service -->starting over
            found_service = 0
            end
        end    
   end
 end


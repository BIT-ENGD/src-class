#include <THC/THC.h>
void LowerTriangular(
    THCState *state, 
    THCudaTensor *alpha, 
    THCudaIntTensor *position, 
    THCudaTensor *memory) {
}

TORCH_DIR =$(HOME)/torch/install

LIBOPTS = \
    -I$(TORCH_DIR)/include/TH \
    -I$(TORCH_DIR)/include \
    -L$(TORCH_DIR)/lib \
    -lTHC

NVCC_FLAGS = -shared -arch sm_35 --compiler-options '-fPIC' 
NVCC = nvcc

libfofe.so : fofe.cu
    $(NVCC) $< $(LIBOPTS) $(NVCC_FLAGS) -o $@

clean :
   rm *.so

require 'cutorch'

local ffi = require 'ffi'
ffi.cdef[[
void LowerTriangular(
    THCState *state, 
    THCudaTensor *alpha, 
    THCudaIntTensor *position, 
    THCudaTensor *memory)
]]

local C = ffi.load(paths.cwd() .. '/libfofe.so')
local THCState_ptr = ffi.typeof('THCState*')

local nExample = 16
local alpha = torch.range(1, nExample):cuda()
local position = torch.range(1, nExample):cudaInt()
local memory = torch.Tensor(nExample, nExample):zero():cuda()

C.Lowertriangular(
    THCState_ptr(cutorch.getState()),
    alpha:cdata(),
    position:cdata(),
    memory:cdata()
)

undefined symbol: LowerTriangular


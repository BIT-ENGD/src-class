#include <stdio.h>
#include "lua/src/lua.h"
#include "lua/src/lauxlib.h"
static void stackDump(lua_State *L){
    int i;
    int top = lua_gettop(L);
    for(i = 1; i<= top; i++) {
        int t = lua_type(L, i);
        switch(t){
        case LUA_TSTRING:
            printf("'%s'", lua_tostring(L, i));
            break;
        case LUA_TBOOLEAN:
            printf(lua_toboolean(L, i) ?"true":"false");
            break;
        case LUA_TNUMBER:
            printf("%g", lua_tonumber(L, i));
            break;
        default:
            printf("%s", lua_typename(L, t));
            break;
        }
        printf(" ");
    }
    printf("\n");
}

static int divide(struct lua_State *L){

    double a = lua_tonumber(L, 1);
    double b = lua_tonumber(L, 2);
    printf("%p\n", L);

    stackDump(L);

    int quot = (int)a / (int)b;
    int rem = (int)a % (int)b;

    lua_pushnumber(L, quot);
    lua_pushnumber(L, rem);

    stackDump(L);
    printf("---end div---\n");

    return 2;
}

int main(void){
    struct lua_State *L = lua_open();
    lua_pushboolean(L, 1);
    lua_pushnumber(L, 10);
    lua_pushnil(L);
    lua_pushstring(L, "hello");

    printf("%p\n", L);

    stackDump(L);

    lua_register(L, "div", divide);
    luaL_dofile(L, "div.lua");

    stackDump(L);
    lua_close(L);
    return 0;
}

local c = div(20, 10)
lua_State
divide
main

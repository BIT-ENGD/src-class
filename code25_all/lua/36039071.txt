lua_pcall
  lua_getglobal(L, "debug");
  lua_getfield(L, -1, "traceback");
  lua_replace(L, -2);
  lua_rawgeti(L, LUA_REGISTRYINDEX, my_func_index);
  // now push n_in number of values on the stack
  luaT_stackdump(L);
  int pcall_ret = lua_pcall(L, n_in, n_out, -n_in - 2);
  // lua_pcall will consume n_in+1 values from the stack.
  if(pcall_ret != 0) {
    const char* errmsg = lua_tostring(L, -1);
    if(!errmsg) {
      errmsg = "(No Lua error message.)";
      printf("Unexpected Lua stack:\n");
      luaT_stackdump(L);
    }
    printf("Lua error code %i: %s\n", pcall_ret, errmsg);
    lua_pop(L, 2);  // remove error and debug.traceback from the stack
    return ...;
  }
  // now we got n_out values on the stack

    function (x, W, b, index)
        print "hi from Lua func"
        A = torch.rand(15, 12)
        B = torch.rand(12, 23)
        C = torch.dot(A, B)
    end

torch.dot
  1. Lua object type: function
  2. Lua object type: function
  3. userdata 4165a368 [torch.FloatTensor]
  4. userdata 4165a390 [torch.FloatTensor]
  5. userdata 4165a230 [torch.FloatTensor]
  6. userdata 4165a258 [torch.CharTensor]
---------------------------------------------
hi from Lua func
Unexpected Lua stack:
  1. Lua object type: function
  2. userdata 40ea1230 [torch.DoubleTensor]
---------------------------------------------
Lua error code 2: (No Lua error message.)

torch.dot

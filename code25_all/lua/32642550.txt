totalNoiseMap = {}

function simplex_noise(width, height)
   simplexnoise = {}
   for i = 1,512 do
       simplexnoise[i] = {}
       for j = 1, 512 do
           simplexnoise[i][j] = 0
       end
   end
   frequency = 5.0 / width

   for x = 1, width do
       for y = 1, height do
           simplexnoise[x][y] = noise(x * frequency,y * frequency)
           simplexnoise[x][y] = (simplexnoise[x][y] + 1) / 2
       end
   end

   return simplexnoise
end

function noise(x, y, frequency)
    return simplex_noise(x / frequency, y / frequency)
end

function generateOctavedSimplexNoise(width,height,octaves,roughness,scale)
    totalnoise = {}
    for i = 1,512 do
        totalnoise[i] = {}
        for j = 1, 512 do
            totalnoise[i][j] = 0
        end
    end
    layerFrequency = scale
    layerWeight = 1
    weightSum = 0

    for octave = 1, octaves do
        for x = 1, width do
            for y = 1, height do
            totalnoise[x][y] = (totalnoise[x][y] + noise(x * layerFrequency,y * layerFrequency, 2) * layerWeight)

            end
        end

        --Increase variables with each incrementing octave
        layerFrequency = layerFrequency * 2
        weightSum = weightSum + layerWeight
        layerWeight = layerWeight * roughness

    end
    return totalnoise
end

totalNoiseMap = generateOctavedSimplexNoise(512, 512, 3, 0.4, 0.005)


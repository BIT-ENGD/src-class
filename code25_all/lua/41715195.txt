fibaro:call
print
function movementHandler(movementSendorId,onTable)
    local offTable = offTable or {};
    local onTable = onTable or {};
    if (fibaro or {}).call then 
       function callFunc(...) ;
          return fibaro:call(...);
       end;
    else
        function callFunc(...)
            print(unpack(arg));
       end;       
    end;
    if onTable ~= {} then
        for i,command in pairs(onTable) do
            callFunc(unpack(command));
        end;
    end;
end;

> c= {}
> c[1] = {1,"turnOn"}
> c[2] = {1,"setValue",10}
> movementHandler(10,c,c) 

stdin:10: bad argument #1 to 'unpack' (table expected, got nil)
stack traceback:
    [C]: in function 'unpack'
    stdin:10: in function 'callFunc'
    stdin:15: in function 'movementHandler'
    stdin:1: in main chunk
    [C]: in ?

unpack

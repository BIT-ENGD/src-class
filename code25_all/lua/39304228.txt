local str = "The mouse walked by the blue cheese"

local pre = "The mouse walked by the "    
local matched = "blue"    
local post = " cheese"

function split(string, delimiter)
  local result = { }
  local from = 1
  local delim_from, delim_to = string.find( string, delimiter, from )
  while delim_from do
    table.insert( result, string.sub( string, from , delim_from-1 ) )
    from = delim_to + 1
    delim_from, delim_to = string.find( string, delimiter, from )
  end
  table.insert( result, string.sub( string, from ) )
  return result
end

local myStr = "The mouse walked by the blue cheese"

sep = split(myStr, "blue")
print("part1 1: "..sep[1])
print("part2 2: "..sep[2])

local myStr = "the mouse ate the cheese, the mouse ate the cheese!, lot of cheese there !"

function split4(pString, pPattern)

    local didFind = 0

    if string.find(pString,".") then
        pString = string.gsub(pString,"%.","'.'")
    end

    if pPattern == "." then
        pPattern = "'.'"
    end

    local Table = {}  -- NOTE: use {n = 0} in Lua-5.0
    local FinalTable = {}
    local fpat = "(.-)" .. pPattern
    local last_end = 1
    local s, e, cap = pString:find(fpat, 1)
    while s do
        if s ~= 1 or cap ~= "" then
            print("Found")
            table.insert(Table,cap)
            didFind = didFind + 1
        end
        last_end = e+1
        s, e, cap = pString:find(fpat, last_end)
    end
    if last_end <= #pString then
        print("Found NOT")
        cap = pString:sub(last_end)
        table.insert(Table, cap)
    end
    print(#Table)
    print("totalDidFind "..didFind)


    FinalTable[1] = Table[1]

    if (didFind > 2) then
      local endString = ""
      for z = 2 , didFind do 
        endString = endString..Table[z]..pPattern
      end
      FinalTable[2] = endString

    end

    totalDidFind = 0
    return FinalTable
end


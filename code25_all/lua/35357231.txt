var redis = ConnectionMultiplexer.Connect("localhost");
var db = redis.GetDatabase();

//PART ONE OF THE SCRIPT

            var doesExist1 = (string)db.ScriptEvaluate(@" 
 local function isDateInRange(DateStart, DateEnd, GivenDate)
    if (GivenDate > DateStart and GivenDate < DateEnd)
    then
        return(true)
    else
        return(false)
    end
end

--Fetch User's Category's StartDate and EndDate
local function IsCategoryDateValid()
local givenDate, DateStart, DateEnd

GivenDate = '2017-01-09'
StartDate = '2015-01-01'
EndDate = '2018-01-01'

local isDateValid
isDateValid = isDateInRange(StartDate, EndDate, GivenDate)
return(isDateValid)
end

-- Pass User, UserCategory and UserCategoryItem as parameters
local userNameKey = 'UserDetails:DummyName'
local userCategoryKey = 'UserCategories:Book'
local userCategoryItemKey = 'UserCategoryItems:Harry-Potter'

local userNameKeySplit = {}
local a = 1
for i in string.gmatch(userNameKey, '([^'..':'..']+)') do
  userNameKeySplit[a] = i
  a = a + 1
end
local userName = userNameKeySplit[2]


local userCategoryKeySplit = {}
local b = 1
for j in string.gmatch(userCategoryKey, '([^'..':'..']+)') do
  userCategoryKeySplit[b] = j
  b = b + 1
end
local userCategory = userCategoryKeySplit[2]



local userCategoryItemKeySplit = {}
local c = 1
for k in string.gmatch(userCategoryItemKey, '([^'..':'..']+)') do
  userCategoryItemKeySplit[c] = k
  c = c + 1
end
local userCategoryItem = userCategoryItemKeySplit[2]

return(userName..' '..userCategory..' '..userCategoryItem)

",

                new RedisKey[] { "UserCategoryItemNames:" + userModel.UserId });


//PART TWO OF THE SCRIPT

            var doesExist2 = (bool)db.ScriptEvaluate(@" 
local userName = 'DummyName'
local userCategory = 'Book'
local userCategoryItem = 'Harry-Potter'

-- Fetch Users, UserCategories and UserCategoryItems from the Redis DB
local userData = {'DummyName', 'User1', 'User2', 'User3'}
local userCategoryData = {'Book', 'Movie', 'Journals'}
local userCategoryItemData = {'Hardy-Boys', 'Harry-Potter', 'Shawshank-Redemption', 'The-Terminal'}

local msg
-- Loop through the fetched values and compare them with parameters; if all the parameters are found return true else return false
for i=1,#userData,1
        do
            if(userData[i] == userName)
            then
                for i=1,#userCategoryData,1
                do
                    if(userCategoryData[i] == userCategory)
                    then
                        for i=1,#userCategoryItemData,1
                        do
                            if(userCategoryItemData[i] == userCategoryItem)
                            then
                                msg = true
                            break
                            else
                                msg = false
                            end
                        end
                    break
                    else
                        msg = false
                    end
                end
            break
            else
                msg = false
                break
            end
        end



return(msg)

//PART ONE & TWO COMBINED OF THE SCRIPT

                                        ",

                new RedisKey[] { "UserDetails:" + "DummyName", "UserCategories:" + "Book", "UserCategoryItems:" + "Harry-Potter" });

            var doesExist3 = (bool)db.ScriptEvaluate(@" 

local function isDateInRange(DateStart, DateEnd, GivenDate)
    if (GivenDate > DateStart and GivenDate < DateEnd)
    then
        return(true)
    else
        return(false)
    end
end

--Fetch User's Category's StartDate and EndDate
local function IsCategoryDateValid()
local givenDate, DateStart, DateEnd

GivenDate = '2017-01-09'
StartDate = '2015-01-01'
EndDate = '2018-01-01'

local isDateValid
isDateValid = isDateInRange(StartDate, EndDate, GivenDate)
return(isDateValid)
end

-- Pass User, UserCategory and UserCategoryItem as parameters
local userNameKey = 'UserDetails:DummyName'
local userCategoryKey = 'UserCategories:Book'
local userCategoryItemKey = 'UserCategoryItems:Harry-Potter'

local userNameKeySplit = {}
local a = 1
for i in string.gmatch(userNameKey, '([^'..':'..']+)') do
  userNameKeySplit[a] = i
  a = a + 1
end
local userName = userNameKeySplit[2]


local userCategoryKeySplit = {}
local b = 1
for j in string.gmatch(userCategoryKey, '([^'..':'..']+)') do
  userCategoryKeySplit[b] = j
  b = b + 1
end
local userCategory = userCategoryKeySplit[2]



local userCategoryItemKeySplit = {}
local c = 1
for k in string.gmatch(userCategoryItemKey, '([^'..':'..']+)') do
  userCategoryItemKeySplit[c] = k
  c = c + 1
end
local userCategoryItem = userCategoryItemKeySplit[2]

-- Fetch Users, UserCategories and UserCategoryItems from the Redis DB
local userData = {'DummyName', 'User1', 'User2', 'User3'}
local userCategoryData = {'Book', 'Movie', 'Journals'}
local userCategoryItemData = {'Hardy-Boys', 'Harry-Potter', 'Shawshank-Redemption', 'The-Terminal'}

local msg
-- Loop through the fetched values and compare them with parameters; if all the parameters are found return true else return false
for i=1,#userData,1
        do
            if(userData[i] == userName)
            then
                for i=1,#userCategoryData,1
                do
                    if(userCategoryData[i] == userCategory)
                    then
                        for i=1,#userCategoryItemData,1
                        do
                            if(userCategoryItemData[i] == userCategoryItem)
                            then
                                msg = true
                            break
                            else
                                msg = false
                            end
                        end
                    break
                    else
                        msg = false
                    end
                end
            break
            else
                msg = false
                break
            end
        end



return(msg)

                                        ",

                new RedisKey[] { "UserDetails:" + "DummyName", "UserCategories:" + "Book", "UserCategoryItems:" + "Harry-Potter" });


subscribeToService()
unsubscribeToService()
local subscriptionSignals_AudioMixerManager = {"volumeLevel", "muteStatus", "fadeLevel", "balanceLevel", "bassLevel", "trebleLevel", "midLevel", "AVCLevel", "activeAudioSrc", "interruptSrc"}
local signalHandlers_AudioMixerManager = {["volumeLevel"] = OnSignal, ["muteStatus"] = OnSignal, ["fadeLevel"] = onSignal, ["balanceLevel"] = OnSignal, ["bassLevel"] = OnSignal, ["trebleLevel"] = OnSignal, ["midLevel"] = OnSignal, ["AVCLevel"] = OnSignal, ["activeAudioSrc"] = OnSignal, ["interruptSrc"] = OnSignal}
local subscriptionHandles_AudioMixerManager = {}

local subscriptionSignals_AudioManager = {"targetSource"}
local signalHandlers_AudioManager = {["targetSource"] = onAudioSourceChange}
local subscriptionHandles_AudioManager = {}

local function subscribeToService(objectPath, signalNames, signalHandlers, subscriptionHandles)
    print("Subscribing...")
    for i,v in ipairs(signalNames) do
            subscriptionHandles[v] = service.subscribe(objectPath, v, signalHandlers[v]);
            print(v .. " handle: ")
            print(subscriptionHandles[v])
        end
    print("Done subscribing")
end

local function unsubscribeFromService(subscriptionHandles)
    print("Unsubscribing...")
    for i,v in ipairs(subscriptionHandles) do
            print("Entered for loop")
            service.unsubscribe(v)
            print(v)
            subscriptionHandles[i] = nil
        end
    print("Done unsubscribing")
end

local function subscribe()
    subscribeToService(AudioMixerManager, subscriptionSignals_AudioMixerManager, signalHandlers_AudioMixerManager, subscriptionHandles_AudioMixerManager)
    subscribeToService(AudioManager, subscriptionSignals_AudioManager, signalHandlers_AudioManager, subscriptionHandles_AudioManager)

    local result, error = service.invoke(AudioMixerManager, "registerMuteClient", {serviceName="audioSettings-interrupt"})
    muteClientID = result.id
    result, error = service.invoke(AudioMixerManager, "registerMuteClient", {serviceName="audioSettings-modechange"})
    muteClientID2 = result.id
end

local function unsubscribe()
    unsubscribeFromService(subscriptionHandles_AudioMixerManager);
    unsubscribeFromService(subscriptionHandles_AudioManager);
end

subscribe()
unsubscribe()
Subscribing...
volumeLevel handle:
userdata: 18f418
muteStatus handle:
userdata: 18f490
fadeLevel handle:
userdata: 18f508
balanceLevel handle:
userdata: 18f580
bassLevel handle:
userdata: 18f5f8
trebleLevel handle:
userdata: 18f670
midLevel handle:
userdata: 18f6e8
AVCLevel handle:
userdata: 18f760
activeAudioSrc handle:
userdata: 18f7d8
interruptSrc handle:
userdata: 18f850
Done subscribing
Subscribing...
targetSource handle:
userdata: 18f8c8
Done subscribing

Unsubscribing...
Done unsubscribing
Unsubscribing...
Done unsubscribing

unsubscribeFromService()

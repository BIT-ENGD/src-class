-- Get screen dimensions in easier to reference variables
maxXValue = display.contentWidth;
maxYValue = display.contentHeight;

-- Set up table of boxes to play game with
-- May have a better way to do this...
gameBoard = {}
for i = 1, 16 do
   if i == 1 then boxNum = display.newRect(0, 0, (0.25*maxXValue-5), 
    (0.25*maxYValue-5));
    table.insert(gameBoard, boxNum);
   elseif i == 2 then boxNum = display.newRect((0.25*maxXValue), 0, 
    (0.25*maxXValue-5), (0.25*maxYValue-5));
    table.insert(gameBoard, boxNum);
   elseif i == 3 then boxNum = display.newRect((0.5*maxXValue), 0, 
    (0.25*maxXValue-5), (0.25*maxYValue-5));
    table.insert(gameBoard, boxNum);
   elseif i == 4 then boxNum = display.newRect((0.75*maxXValue), 0, 
    (0.25*maxXValue-5), (0.25*maxYValue-5));
    table.insert(gameBoard, boxNum);
   elseif i == 5 then boxNum = display.newRect(0, (0.25*maxYValue), 
    (0.25*maxXValue-5), (0.25*maxYValue-5));
    table.insert(gameBoard, boxNum);
   elseif i == 6 then boxNum = display.newRect((0.25*maxXValue), (0.25*maxYValue), 
    (0.25*maxXValue-5), (0.25*maxYValue-5));
    table.insert(gameBoard, boxNum);
   elseif i == 7 then boxNum = display.newRect((0.5*maxXValue), (0.25*maxYValue), 
    (0.25*maxXValue-5), (0.25*maxYValue-5));
    table.insert(gameBoard, boxNum);
   elseif i == 8 then boxNum = display.newRect((0.75*maxXValue), ((0.25*maxYValue)), 
    (0.25*maxXValue-5), (0.25*maxYValue-5));
    table.insert(gameBoard, boxNum);
   elseif i == 9 then boxNum = display.newRect(0, (0.5*maxYValue), 
    (0.25*maxXValue-5), (0.25*maxYValue-5));
    table.insert(gameBoard, boxNum);
   elseif i == 10 then boxNum = display.newRect((0.25*maxXValue), (0.5*maxYValue), 
    (0.25*maxXValue-5), (0.25*maxYValue-5));
    table.insert(gameBoard, boxNum);
   elseif i == 11 then boxNum = display.newRect((0.5*maxXValue), (0.5*maxYValue), 
    (0.25*maxXValue-5), (0.25*maxYValue-5));
    table.insert(gameBoard, boxNum);
   elseif i == 12 then boxNum = display.newRect((0.75*maxXValue), (0.5*maxYValue), 
    (0.25*maxXValue-5), (0.25*maxYValue-5));
    table.insert(gameBoard, boxNum);
   elseif i == 13 then boxNum = display.newRect(0, (0.75*maxYValue), 
    (0.25*maxXValue-5), (0.25*maxYValue-5));
    table.insert(gameBoard, boxNum);
   elseif i == 14 then boxNum = display.newRect((0.25*maxXValue), (0.75*maxYValue), 
    (0.25*maxXValue-5), (0.25*maxYValue-5));
    table.insert(gameBoard, boxNum);
   elseif i == 15 then boxNum = display.newRect((0.5*maxXValue), (0.75*maxYValue), 
    (0.25*maxXValue-5), (0.25*maxYValue-5));
    table.insert(gameBoard, boxNum);
   elseif i == 16 then boxNum = display.newRect((0.75*maxXValue), (0.75*maxYValue), 
    (0.25*maxXValue-5), (0.25*maxYValue-5));
    table.insert(gameBoard, boxNum);
    end
end

--Irrelevant code here

local selected = {};

local function toucher (event)
   local red, green, blue = unpack(self.fillColor); -- ERROR APPEARS HERE
   table.insert(selected, self, red, green, blue)
   event.target:scale(1.1, 1.1)
   event.target:toFront();
   if selected[2] == event.target then
    if (selected[1].red == selected[2].red and selected[1].green == selected[2].green 
        and selected[1].blue == selected[2].blue) then
        selected[1]:removeSelf();
        selected[2]:removeSelf();
    end
    selected[1] = selected[2];
    selected[2] = nil;
   end
--[[Code to go here will tell the program to restart. Want to get a single iteration before
moving to this.]]
end
for i = 1, 16 do gameBoard[i]:addEventListener("touch", toucher);
end


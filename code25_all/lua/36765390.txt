n
local function resize(array, elements, free)
    local size = array.n

    if elements < size then     -- Decrease Size
        array.n = elements
        if free then
            size = math.max(size, #array)   -- In case of multiple resizes
            local base = elements + 1
            for idx = base, 2*size do       -- Force a rehash -> free extra unneeded memory
                array[idx] = nil
            end
        end
    elseif elements > size then -- Increase Size
        array.n = elements
        for idx = size + 1, elements do
            array[idx] = 0
        end
    end
end

local mem = {n=0};
resize(mem, 50000)
print(mem.n, #mem)              -- 50000 50000
print(collectgarbage("count"))  -- relatively large number

resize(mem, 10000, true)
print(mem.n, #mem)              -- 10000 10000
print(collectgarbage("count"))  -- smaller number

resize(mem, 20, true)
print(mem.n, #mem)              -- 20 20
print(collectgarbage("count"))  -- same number as above, but it should be a smaller number

true

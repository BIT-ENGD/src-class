-- Fills the list of Filters available to be used in the Addon.
function WatcherEx:FillFiltersList()
    if self.wndMain == nil then
        return 
    end

    local filtersList = self.wndMain:FindChild("filters_list")
    filtersList:DestroyChildren()

    for i, filterClass in ipairs(self.tFilters) do
        local filterItem = Apollo.LoadForm(self.xmlDoc, "filter_item", filtersList, self)
        filterItem:SetData({ filter = filterClass })
        filterItem:FindChild("name"):SetText(filterClass.name)
    end

    return filtersList:ArrangeChildrenVert()
end

function WatcherEx:new(tObject)
    tObject = tObject or {}
    setmetatable(tObject, self)
    self.__index = self

    -- Initialization
    self.tSettings = {}
    self.tDefaults = {}
    self.tAbilities = {}
    self.tInnates = {}
    self.tEngineerSpells = {}
    self.tActiveRules = {}

    local tClass = setmetatable({
        __init = function(self)         
            self.tActiveRules = { }
            self.bUnlockAll = false
            self.eventsHidden = nil
            self.tFilters = {
                AvailabilityFilter,
                TimeFilter,
                CombatFilter,
                ActionSetFilter,
                SpecialFilter,
                HPFilter,
                MPFilter,
                ShieldFilter,
                ChargeFilter,
                ResourcesFilter,
                BuffFilter,
                LuaFilter}
        end,
        __base = self,
        __name = "WatcherEx"
    }, {
        __index = self,
        __call = function(cls, ...)
            local tTable = setmetatable({}, self)
            cls.__init(tTable, ...)
            return tTable
        end})

    self.__class = tClass
    return tObject
end


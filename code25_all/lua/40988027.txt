        -- Callback function to handle the upload events that are generated.
        -- There will be several events: one to indicate the start and end of the
        -- process and several to indicate the progress (depends on the file size).
        -- Always test for your error conditions!

        local function uploadListener( event )
           if ( event.isError ) then
              print( "Network Error." )

              -- This is likely a time out or server being down. In other words,
              -- It was unable to communicate with the web server. Now if the
              -- connection to the web server worked, but the request is bad, this
              -- will be false and you need to look at event.status and event.response
              -- to see why the web server failed to do what you want.
           else
              if ( event.phase == "began" ) then
                 print( "Upload started" )
              elseif ( event.phase == "progress" ) then
                 print( "Uploading... bytes transferred ", event.bytesTransferred )
              elseif ( event.phase == "ended" ) then
                 print( "Upload ended..." )
                 print( "Status:", event.status )
                 print( "Response:", event.response )
              end
           end
        end

        -- Sepcify the URL of the PHP script to upload to. Do this on your own server.
        -- Also define the method as "PUT".
        local url = "http://yourwebserver.com/somepath/upload.php"
        local method = "PUT"

        -- Set some reasonable parameters for the upload process:
        local params = {
           timeout = 60,
           progress = true,
           bodyType = "binary"
        }

        -- Specify what file to upload and where to upload it from.
        -- Also, set the MIME type of the file so that the server knows what to expect.
        local filename = "image.jpg"
        local baseDirectory = system.ResourceDirectory
        local contentType = "image/jpeg"  --another option is "text/plain"

        -- There is no standard way of using HTTP PUT to tell the remote host what
        -- to name the file. We'll make up our own header here so that our PHP script
        -- expects to look for that and provides the name of the file. Your PHP script
        -- needs to be "hardened" because this is a security risk. For example, someone
        -- could pass in a path name that might try to write arbitrary files to your
        -- server and overwrite critical system files with malicious code.
        -- Don't assume "This won't happen to me!" because it very well could.
        local headers = {}
        headers.filename = filename
        params.headers = headers

        network.upload( url , method, uploadListener, params, filename, baseDirectory, contentType )


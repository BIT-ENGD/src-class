ID#
Log Entries Received:
ID1 - 9:25AM - 10:15AM - Mike Stephens - 2/12/2015 - 111 Dynamo Dr.
ID2 - 8:07AM - 12:20PM - Gary Roberts - 1/23/2015 - 1212 Badger Way
ID3 - 11:46AM - 1:31PM - Trishia Major - 2/10/2015 - 325 March Manor
ID4 - 2:49PM - 3:13PM - Harry Davis - 12/21/2014 - 844 Anapolis Dr.
ID5 - 7:56AM - 8:47AM - Mary Hudson - 1/19/2015 - 9124 Royal Dr.
ID6 - 9:41AM - 4:16PM - Mark Harrison - 1/29/2015 - 583 Connecticut Rd.
ID7 - 10:25AM - 12:45PM - Jennifer Smith - 12/30/2014 - 42 Rodding Rd.
End of Log Entries

Order to be Sent:
ID3 - ID2 - ID5 - ID1 - ID7 - ID4 - ID6
End of Order

ID#
function iD_Order(log_queue)
function string_build(log_input)
function string_build(log_input)  -- takes input and creates strings (don't know how to build table found in this function)
    t_msg = {}
    for iD, time_In, time_Out, usr_Name, date, usr_Addr in input:gmatch("(ID%d)|(.-)|(.-)|(.-)|(.-)|(.-)") do
        finish_Str = "Operator Name: "..usr_Name.." (ID#:"..iD..") on "..date.." signed in at "..time_In.." and signed out at "..time_Out.." at "..usr_Addr.." open house location."
    end
    for k,v in pairs (t_msg) do
        t_msg.iD = finish_Str -- I strongly doubt this is correct????
    end
end

function iD_Order(log_queue) -- takes queue and puts values = order of ID#'s
    t_Queue = {}
    for iD_nmbr in log_queue:match("(ID%d)") do
        for k,v in pairs (t_Queue) do
            table.insert(t_Queue, #t_Queue, iD_nmbr)
        end
    end
end

function log(input) -- main function that receives outside input and sends it to appropriate functions
    local buffer = ""
    input = input:gsub("%s-%s", "|")
    buffer = buffer..input.."|"
    log_input = input:match("Log Entries Received:(.*)End of Log Entries")
    log_queue = input:match("Order to be Sent:(.*)End of Order")
    if log_input then
         string_build(log_input)
         buffer = buffer:sub(#log_input)
    end
    if log_queue then
         iD_Order(log_queue)
         buffer = buffer:sub(#log_queue)
    end
end

function iD_Order(log_queue)
function string_build(log_input)
iD
t_Queue
t_Queue
iD

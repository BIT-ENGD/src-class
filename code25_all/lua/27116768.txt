if ( "ended" == event.phase ) then
    print( "Button was pressed and released" )
end

-- go to levelSelect.lua scene
composer.gotoScene( "levelSelect", "fade", 500 )

return true -- indicates successful touch

-- Called when the scene's view does not exist.
-- 
-- INSERT code here to initialize the scene
-- e.g. add display objects to 'sceneGroup', add touch listeners, etc.

-- create a widget button (which will loads levelSelect.lua on release)
playBtn = widget.newButton{
    defaultFile = "startScreen/Play.png",       --the "default" image file
    overFile = "startScreen/Play-Over.png",     --the "over" image file 
    width=240, height=120,
    onRelease = onPlayBtnRelease    -- event listener function
}
playBtn.x = 300; playBtn.y = 695;

-- all display objects must be inserted into group
 sceneGroup:insert( playBtn )

if phase == "will" then
    -- Called when the scene is still off screen and is about to move on screen
elseif phase == "did" then
    -- Called when the scene is now on screen
    -- 
    -- INSERT code here to make the scene come alive
    -- e.g. start timers, begin animation, play audio, etc.
end 

if event.phase == "will" then
    -- Called when the scene is on screen and is about to move off screen
    --
    -- INSERT code here to pause the scene
    -- e.g. stop timers, stop animation, unload sounds, etc.)
elseif phase == "did" then
    -- Called when the scene is now off screen
end 

-- Called prior to the removal of scene's "view" (sceneGroup)
-- 
-- INSERT code here to cleanup the scene
-- e.g. remove display objects, remove touch listeners, save state, etc.

if playBtn then
    playBtn:removeSelf()    -- widgets must be manually removed
    playBtn = nil
end


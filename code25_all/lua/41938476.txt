  buttonTouched = function(event)
    local t = event.target 
    local id = t.id 

    if event.phase == "began" and touchEnabled == true then 
        display.getCurrentStage():setFocus( t )
        t.isFocus = true

        if id == "answer" then 
            t.alpha = 0.6
        else
            t.xScale = 0.9
            t.yScale = 0.9
        end

    elseif t.isFocus then
        if event.phase == "ended" then
            display.getCurrentStage():setFocus( nil )
            t.isFocus = false

            if id == "answer" then 
                t.alpha = 1
            else
                t.xScale = 1
                t.yScale = 1
            end

            -- Check that touch finished in the button.
            local b = t.contentBounds 
            if event.x >= b.xMin and event.x <= b.xMax and event.y >= b.yMin and event.y <= b.yMax then                 
                utils.playSound("select")

                if id == "answer" then 
                    if timer_trans ~= nil then
                        transition.cancel(timer_trans)
                        timer_trans = nil 
                    end

                    if result_trans ~= nil then
                        transition.cancel(result_trans)
                        result_trans = nil 
                    end

                    if label_result ~= nil then
                        display.remove(label_result)
                        label_result = nil 
                    end

                    -- Show some text that we can transition
                    label_result = display.newText({parent=uiGroup, text="", font=easyFont, fontSize=75})
                    label_result.anchorX = 0 
                    label_result.x = label_question.x - 540
                    label_result.y = label_question.y + 400

                    if t.index == questions[onQuestion].answer then 
                        label_result.text = "Correct!"
                        label_result:setFillColor(0,0.6,0)
                        utils.playSound("score")
                        updateScore(1)

                    else
                        label_result.text = "Incorrect..."
                        label_result:setFillColor(0.8,0,0)
                        utils.playSound("incorrect")
                    end

                    result_trans = transition.to(label_result, {time=1600, alpha=0.1, y=label_result.y-18,tag="transTag", onComplete=function()
                        display.remove(label_result)
                        label_result = nil 
                    end})

                    -- Now create the next quesiton
                    createQuestion()
                end
            end
        end
    end
    return true
end

function startTimer()
    clockTimer = timer.performWithDelay(1000,doCountUp,gameTime)
end

function doCountUp()

    currentTime = countUpText.text
    currentTime = currentTime +1
    countUpText.text = currentTime
     if(currentTime == 0) then
        countUpText.text = currentTime
        startTimer()
    end
end


lua Script.lua
lua: Script.lua:22: bad argument #1 to ´format´ (number expected, got nil)
stack traceback: [C]: in function ´string.format´ script.lua:22: in main chunk [C]: in?
local open = io.open

local function read_file(path)
    local file = open(path, "r") -- r read mode and b binary mode
    --if not file then return nil end
    local coordinates = {}

    for line in io.lines(path) do
    local coordinate_name, coordinate_x, coordinate_y, coordinate_z = line:match("%s*(.-),%s*(.-),%s*(.-),%s*(.-)")
    coordinates[#coordinates+1] = { coordinate_name=coordinate_name, coordinate_x = tonumber(coordinate_x), coordinate_y = tonumber(coordinate_y), coordinate_z = tonumber(coordinate_z) }
    end

    --file:close()
    return coordinates
end

local coordinates = read_file("data.csv")

for _, coordinate in ipairs(coordinates) do  -- use pairs or ipairs to iterate over tables
print(("X: %s, Y: %s, Z: %s"):format(coordinate.coordinate_x,
                                     coordinate.coordinate_y,
                                     coordinate.coordinate_z))
end

return 0;

X: nil, Y: nil, Z: nil
nil
After;-5;-5;0;
After;-2;-5;0;
After;5;-5;0;
After;5;-2;0;
After;5;5;0;
After;2;5;0;
After;-5;5;0;
After;-5;2;0;
After;-5;-5;0;
Intersects;5;-4;0
Intersects;-5;-4;0
Intersects;-5;-3;0
Intersects;5;-3;0
Intersects;5;-2;0
Intersects;-5;-2;0

local open = io.open

local function read_file(path)
    local file = open(path, "r") -- r read mode and b binary mode
    --if not file then return nil end
    local coordinates = {}

    for line in io.lines(path) do
     local coordinate_name,
           coordinate_x,
           coordinate_y,
           coordinate_z = line:match("%s* (.*);%s*(.*);%s*(.*);%s*(.*);%s*(.*)")
     coordinates[#coordinates+1] = { coordinate_name = coordinate_name, coordinate_x = tonumber(coordinate_x), coordinate_y = tonumber(coordinate_y), coordinate_z = tonumber(coordinate_z) }
    print(("X: %s Y: %4f Z: %s"):format(coordinates.coordinate_x,
                                     coordinates.coordinate_y,
                                     coordinates.coordinate_z))
    end

    for _, coordinate in ipairs(coordinates) do
        print(coordinates.coordinate_x, coordinates.coordinate_z, coordinates.coordinate_z)
    end

    file:close()

    return coordinates
end

local coordinates = read_file("data.csv")
    for _, coordinates in ipairs(coordinates) do  -- use pairs or ipairs to iterate over tables
        print(("X: %s, Y: %s, Z: %s"):format(coordinates.coordinate_x,
                                         coordinates.coordinate_y,
                                         coordinates.coordinate_z))
    end

 return 0;

lua Script.lua

    uart0: serial@44e09000 {
        compatible = "ti,omap3-uart";
        ti,hwmods = "uart1";
        clock-frequency = <48000000>;
        reg = <0x44e09000 0x2000>;
        interrupts = <72>;
        status = "disabled";
    };

    uart1: serial@48022000 {
        compatible = "ti,omap3-uart";
        ti,hwmods = "uart2";
        clock-frequency = <48000000>;
        reg = <0x48022000 0x2000>;
        interrupts = <73>;
        status = "disabled";
    };

    uart2: serial@48024000 {
        compatible = "ti,omap3-uart";
        ti,hwmods = "uart3";
        clock-frequency = <48000000>;
        reg = <0x48024000 0x2000>;
        interrupts = <74>;
        status = "disabled";
    };

    uart3: serial@481a6000 {
        compatible = "ti,omap3-uart";
        ti,hwmods = "uart4";
        clock-frequency = <48000000>;
        reg = <0x481a6000 0x2000>;
        interrupts = <44>;
        status = "disabled";
    };

    uart4: serial@481a8000 {
        compatible = "ti,omap3-uart";
        ti,hwmods = "uart5";
        clock-frequency = <48000000>;
        reg = <0x481a8000 0x2000>;
        interrupts = <45>;
        status = "disabled";
    };

    uart5: serial@481aa000 {
        compatible = "ti,omap3-uart";
        ti,hwmods = "uart6";
        clock-frequency = <48000000>;
        reg = <0x481aa000 0x2000>;
        interrupts = <46>;
        status = "disabled";
    };

uart0_pins: pinmux_uart0_pins {
    pinctrl-single,pins = <
        0x170 (PIN_INPUT_PULLUP | MUX_MODE0)    /* uart0_rxd.uart0_rxd */
        0x174 (PIN_OUTPUT_PULLDOWN | MUX_MODE0) /* uart0_txd.uart0_txd */
    >;
};

uart2_pins: pinmux_uart2_pins {
    pinctrl-single,pins = <
        0x150 (PIN_INPUT_PULLUP | MUX_MODE0)    /* uart0_rxd.uart0_rxd */
        0x154 (PIN_OUTPUT_PULLDOWN | MUX_MODE0) /* uart0_txd.uart0_txd */
    >;
};

  &uart2 {
    pinctrl-names = "default";
    pinctrl-0 = <&uart0_pins>;

    status = "okay";
};

local clock = os.clock

function wait(n)  -- seconds
  local t0 = clock()
  while clock() - t0 <= n do end
end


while true do
  print("Writing")
  wuar0 = io.open("/dev/ttyO0","w")
  wuar1 = io.open("/dev/ttyO1","w")
  wuar2 = io.open("/dev/ttyO2","w")
  wuar0:write("This is uart0 \n")
  wuar1:write("This is uart1 \n")
  wuar2:write("This is uart2 \n")
  wuar0:flush()
  wuar1:flush()
  wuar2:flush()
  wuar0 = io.close()
  wuar1 = io.close()
  wuar2 = io.close()
  wait(2)

  print("Reading")
  ruar0 = io.open("/dev/ttyO0","r")
  ruar1 = io.open("/dev/ttyO1","r")
  ruar2 = io.open("/dev/ttyO2","r")
  print(ruar0:read())
  print(ruar1:read())
  print(ruar2:read())
  ruar0:flush()
  ruar1:flush()
  ruar2:flush()
  ruar0 = io.close()
  ruar1 = io.close()
  ruar2 = io.close()
  wait(2)
end


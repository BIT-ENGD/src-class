-- do not care about this line :
local graphics = require( "utilities.graphics" )

local M = {}

function count(T)
  local count = 0
  for _ in pairs(T) do count = count + 1 end
  return count
end

local function displayMap( group, mapName )
    local map = require ( "maps." .. mapName )

    local max_row_num = count( map.tiles )
    local row

    local max_tile_num_in_a_row
    local tile

    for r = 1, max_row_num do
        row = map.tiles[ r ]

        max_tile_num_in_a_row = count( row )

        for t = 1, max_tile_num_in_a_row do
            local tile =  map.tiles[ r ][ t ]
            local tileSize = map.tileSize

            local j = r - 1
            local i = t - 1

            local x = i * tileSize
            local y = j * tileSize

            -- This function uses display.newImageRect :
            graphics.displayImage( group, "tiles", tile, x, y, tileSize, tileSize, false, false )
        end

    end

end

M.displayMap = displayMap

return M

local M = {}

local tiles = {
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0 }
}

local tileSize = 16

M.tiles = tiles
M.tileSize = tileSize

return M

local function fitImage( displayObject, fitWidth, fitHeight, enlarge )
    --
    -- first determine which edge is out of bounds
    --
    local scaleFactor = fitHeight / displayObject.height 
    local newWidth = displayObject.width * scaleFactor
    if newWidth > fitWidth then
        scaleFactor = fitWidth / displayObject.width 
    end
    if not enlarge and scaleFactor > 1 then
        return
    end
    displayObject:scale( scaleFactor, scaleFactor )
end

local function displayImage( sceneGroup, subfolders, imageName, x, y, width, height, centered, enlarge )
    local img

    if subfolders == nil then
        img = display.newImageRect( "assets/" .. imageName .. ".png", width, height )
    else
        img = display.newImageRect( "assets/" .. subfolders .. "/" .. imageName .. ".png", width, height )
    end

    if centered then
        img.x = display.contentCenterX
        img.y = display.contentCenterY
    else
        img.x = x
        img.y = y
    end

    if enlarge then
        fitImage( img, sceneGroup.width, sceneGroup.height, true )
    else
        fitImage( img, sceneGroup.width, sceneGroup.height, false ) end

    sceneGroup.scene:insert(img)

    return img
end


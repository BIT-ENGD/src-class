function processOCOOrder(beanTable)    
    local localTime = getLocalDateTime(beanTable);    
    local NewsDate, NextEventDateWithDelay = getDateTimeWithDelay(beanTable, -30);    
    local DateTimeAfterNthTime = getDateTimeAfterNthTime(beanTable);    
    print("localTime - " .. localTime);   
    print("NextEventDateWithDelay - " .. NextEventDateWithDelay);   
    print("DateTimeAfterNthTime - " .. DateTimeAfterNthTime);    

    if(localTime == NextEventDateWithDelay or localTime > NextEventDateWithDelay)     
    then
        printToFile(beanTable, "TRADING NOW EVENT: "..
            "[ " .. NextEvent.NEXT_NEWS_CURRENCY .. 
            "] : [EVENT TIME:: ".. ExtFormatDateFromDateTable(NextEventDateWithDelay).."]".. 
            "] : [EVENT IS:: ".. NextEvent.NEXT_NEWS_SUBJECT.."]");            
    processSpotTrade(beanTable);
    elseif(localTime == DateTimeAfterNthTime or localTime > DateTimeAfterNthTime) then
        beanTable["NextEvent"] = nil;
        DateTimeAfterNthTime = nil;
        printToFile(beanTable, "NEXT EVENT NULL :: ");
        if(CanCloseAfterNews) then
           exitAfterNews(beanTable);
        end
   end
end

require 'busted.runner'()

describe("Testing forexfactory-common.lua", function()
    local beanTable = nil;
    setup(function()
        local NextEvent = {};
        beanTable = {}; 
        NextEvent["NEXT_NEWS_DATETIME"] = "2016-01-01 12:00:00";
        beanTable["NextEvent"] = NextEvent;
        beanTable["TradeUntilInSeconds"] = 30;
    end)

    teardown(function()
             beanTable = nil
         end)
    describe("processOCOOrder() present time equal equal to the new time", function()
        it("calls getEventType with the event", function()
            stub(_G, "getLocalDateTime");
            local num = processOCOOrder(beanTable);
               assert.stub(getLocalDateTime).was.called_with(stubGetLocalDateTime());
            assert.is.equal(num, 1);--ignore assert for now     
       end)
    end)
end)

function stubGetLocalDateTime()
    local date = require('date');
    local nextEventDate = date(2016, 01, 01, 12, 00, 00);
    return nextEventDate;
end


term(A, b, c(d, "e", 7))

{term, {A, b, {c, {d, "e", 7}}}}

local pattern = re.compile[=[
  term      <- variable / function
  argument  <- variable / lowercase /number / string
  function  <- {|lowercase {|(open argument (separator (argument / function))* close)?|}|}
  variable  <- uppercase
  lowercase <- {[a-z][A-Za-z0-9]*}
  uppercase <- {[A-Z][A-Za-z0-9]*}
  string    <- '"' {~ [^"]* ~} '"'
  number    <- {[0-9]+}
  close     <- blank ")"
  open      <- "(" blank
  separator <- blank "," blank
  blank     <- " "*
]=]

{term, {} }
term(A, b, c)
{~ ~}
argument
term
A
{value = "A", type = "variable"}
{:name: :}
variable="A"

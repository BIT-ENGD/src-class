function Word2Vec:print_semantic_space()
    if self.word_vecs_norm == nil then
        self.word_vecs_norm = self:normalize(self.word_vecs.weight:double())
    end
    for word,_ in pairs(self.vocab) do
        vec=self.word_vecs_norm[self.word2index[word]]
        vec:resize(vec:size(1),1) 
        vec=vec:t()
        io.write(word," ",tostring(vec))
    end
end

usually -0.2063  0.5654  0.1447  0.2765 -0.3903  0.2646  0.2254  0.5064 -0.1009 -0.0260
[torch.DoubleTensor of size 1x10]
go -0.5896  0.1330  0.1361 -0.0193 -0.5612  0.3529  0.3683  0.0141  0.0447 -0.1963
[torch.DoubleTensor of size 1x10]

usually -0.2063  0.5654  0.1447  0.2765 -0.3903  0.2646  0.2254  0.5064 -0.1009 -0.0260
go -0.5896  0.1330  0.1361 -0.0193 -0.5612  0.3529  0.3683  0.0141  0.0447 -0.1963


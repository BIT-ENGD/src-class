CURLINFO_RESPONSE_CODE
CURLINFO_CONTENT_TYPE
curl_easy_getinfo
ffi.new("int[1]")
ffi = require "ffi"

url = [[http://static02.mediaite.com/geekosystem/uploads/2013/12/doge.jpg]]

ffi.cdef [[
    int curl_version();
    void *curl_easy_init();
    int curl_easy_setopt(void *curl, int option, ...);
    int curl_easy_perform(void *curl);
    void curl_easy_cleanup(void *curl);
    int curl_easy_getinfo(void *curl, int info, ...);
]]

function curl_callback(ptr, size, nmemb, userdata)
    print("Data callback! File-ID: ", userdata, "\n")
    return size*nmemb
end

ffi_curl_callback = ffi.cast("size_t (*)(char *ptr, size_t size, size_t nmemb, void *userdata)", curl_callback)

CURLOPT_URL = 10002
CURLOPT_WRITEFUNCTION = 20011
CURLOPT_VERBOSE = 41
CURLOPT_PROGRESSDATA = 10057
CURLOPT_NOPROGRESS = 43
CURLOPT_WRITEDATA = 10001
CURLE_OK = 0

CURLINFO_RESPONSE_CODE = 2097154
CURLINFO_CONTENT_TYPE = 1048594

libcurl = ffi.load("libcurl.dll")

-- print("cURL Version: ", libcurl.curl_version(), "\n")

curl = libcurl.curl_easy_init()

if curl then

    file = ffi.new("int", 0xabc) -- not needed

    print("Trying to download: ", url, "\n")
    libcurl.curl_easy_setopt(curl, CURLOPT_VERBOSE, ffi.new("long", 1))
    libcurl.curl_easy_setopt(curl, CURLOPT_URL, url)
    libcurl.curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, ffi_curl_callback)
    --libcurl.curl_easy_setopt(curl, CURLOPT_NOPROGRESS, 1)
    --libcurl.curl_easy_setopt(curl, CURLOPT_PROGRESSDATA, 123)
    libcurl.curl_easy_setopt(curl, CURLOPT_WRITEDATA, ffi.cast("void *", file))

    -- bug fixed, called curl_easy_getinfo before curl_easy_perform
    result = libcurl.curl_easy_perform(curl)
    if result == CURLE_OK then
        response_code = ffi.new("int[1]")
        content_type = ffi.new("char*[1]")
        libcurl.curl_easy_getinfo(curl, CURLINFO_RESPONSE_CODE, response_code)
        libcurl.curl_easy_getinfo(curl, CURLINFO_CONTENT_TYPE, content_type)
        print("RESPONSE CODE: '", tonumber(response_code[0]), "'\n")
        print("CONTENT TYPE: '", ffi.string(content_type[0]), "'\n")
    else
        print("Error! Result: ", result, "\n")
    end

    libcurl.curl_easy_cleanup(curl)
end

Data callback! File-ID:         cdata<void *>: 0x00000abc
Data callback! File-ID:         cdata<void *>: 0x00000abc
Data callback! File-ID:         cdata<void *>: 0x00000abc
Data callback! File-ID:         cdata<void *>: 0x00000abc
Data callback! File-ID:         cdata<void *>: 0x00000abc
Data callback! File-ID:         cdata<void *>: 0x00000abc
Result:         0
RESPONSE CODE: '        nil     '
CONTENT TYPE: '         '


-- Setup table that we will return to scripts that require the ModuleScript.
    local PlayerStatManager = {}

    -- Table to hold all of the player information for the current session.
    local sessionData = {}

    -- Function the other scripts in our game can call to change a player's stats. This
    -- function is stored in the returned table so external scripts can use it.
    function PlayerStatManager:ChangeStat(player, statName, changeValue)
        sessionData[player][statName] = sessionData[player][statName] + changeValue
    end

    -- Function to add player to the sessionData table.
    local function setupPlayerData(player)
        sessionData[player] = {Money = 0, Experience = 0}
    end

    -- Bind setupPlayerData to PlayerAdded to call it when player joins.
    game.Players.PlayerAdded:connect(setupPlayerData)

    -- Return the PlayerStatManager table to external scripts can access it.
    return PlayerStatManager
--------------------------------------------------------------------------------

-- Require ModuleScript so we can change player stats
local PlayerStatManager = require(game.ServerStorage.PlayerStatManager)

-- After player joins we'll periodically give the player money and experience
game.Players.PlayerAdded:connect(function(player)
    while wait(2) do
        PlayerStatManager:ChangeStat(player, 'Money', 5)
        PlayerStatManager:ChangeStat(player, 'Experience', 1)
    end
end)

print(sessionData[player][statName])
ChangeStat
game.Players.PlayerAdded:connect(setupPlayerData)
game.Players.PlayerAdded:connect(setupPlayerData)

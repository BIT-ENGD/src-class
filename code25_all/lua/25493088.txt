fields = {}

attribute = 0

local function C1Constructor( self )
    print( "C1: Constructor... " )
    self.fields = {}
end

local function C1SetName( self, name )
    self.name = name
end

local function C1Add( self, name, value )
    print( "C1: (" .. self.name .. ") :: Add: " .. name .. " = " .. value )
    self.fields[ name ] = value
end

local function C1Show( self )
    print( "C1: (" .. self.name .. ") :: Show:" )
    for name, value in pairs( self.fields ) do
        print("    " .. name .. " = " .. value )
    end
end

C1 = {
    name = "",
    constructor = C1Constructor,
    setName     = C1SetName,
    add         = C1Add,
    show        = C1Show,
    fields = {},
}

function C1.new( o )
    o = o or { }
    setmetatable( o, { __index = C1 } )
    o:constructor()
    return o;
end


c1a = C1.new()
c1b = C1.new()
c1a:setName( "Obj A" )
c1b:setName( "Obj B" )
c1a:show()
c1b:show()
c1a:add( "k1", "v1" )
c1b:add( "k2", "v2" )
c1a:show()
c1b:show()

local function C1Constructor( self )
    print( "C1: Constructor... " )
    self.fields = {}
end


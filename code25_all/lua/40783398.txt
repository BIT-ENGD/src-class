sciteLuaFunctions.lua
  -- http://scite.ruteam.ru/archive/1.59
local function encodeRGB(color)
  if string.sub(color,1,1)=="#" and string.len(color)>6 then
    return tonumber(string.sub(color,6,7)..string.sub(color,4,5)..string.sub(color,2,3), 16)
  else
    return color
  end
end

function ChangeToDarkTheme()
  -- http://www.scintilla.org/PaneAPI.html
  -- http://www.scintilla.org/SciTEFAQ.html " How do I change SciTE to use black as the background colour?"
  -- http://www.scintilla.org/SciTEDoc.html
  -- color calculation works like this:
--~   mycolorRGB = { r = 100, g = 100, b = 100 }                        -- ok
--~   mycolor = (mycolorRGB.r+(mycolorRGB.g*256)+(mycolorRGB.b*65536))  -- ok
  -- but also can use encodeRGB:
  myBackgroundColor = encodeRGB("#282C34")
  editor.StyleBack[32] = myBackgroundColor -- mods background, but where there no text
  editor.StyleBack[33] = myBackgroundColor -- mods background of line numbers
end

sciteLuaFunctions.lua
lua
cpp

editor.StyleBack[32] = myBackgroundColor -- mods background, but where there no text
editor.StyleBack[33] = myBackgroundColor -- mods background of line numbers
editor.StyleBack[0] = myBackgroundColor -- mods background of whitespace/indents
editor.StyleBack[2] = myBackgroundColor -- mods background of commented lines
editor.StyleBack[4] = myBackgroundColor -- mods background of numbers at uncommented lines
editor.StyleBack[5] = myBackgroundColor -- mods background of reserved keywords (function) at uncommented lines
editor.StyleBack[6] = myBackgroundColor -- mods background of strings ("...") at uncommented lines
editor.StyleBack[10] = myBackgroundColor -- mods background of equal signs, etc at uncommented lines
editor.StyleBack[11] = myBackgroundColor -- mods background of regular variables at uncommented lines
editor.StyleBack[14] = myBackgroundColor -- mods background of predef functions (string.sub) at uncommented lines

extern "C"
{
  static int function_1(lua_State* L)
  {
    std::cout << "[DLL]this is a custom function" << std::endl;
    lua_pushnumber(L, 10);
    return 1;
  }

  __declspec(dllexport) int __cdecl luaopen_myDLL(lua_State* L)
  { 
    L = luaL_newstate();
    luaL_openlibs(L);
    std::cout << "[DLL] being initialized!" << std::endl;

    lua_register(L, "fun1", function_1);
    luaL_dofile(L, "./run.lua");
    return 1;
  }
} 

package.loadlib("./myDLL.dll", "luaopen_myDLL")() 

require("myDLL")

f = fun1()
print("[Lua] Function_1 says", f, "\n");

attempt to call global 'fun1' (a nil value)
L = luaL_newstate();

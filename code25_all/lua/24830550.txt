local myTextObject = display.newText( "Welcome to", 320, 110, "Arial", 60)
local Btn = display.newImage( "logo-final-blackbkg-stacked-otl.png" )
Btn.x = 320; Btn.y = 530;

local myListener = function( webview )
    print( "Listener called with event of type: touch"..webview.name )
end

Runtime:addEventListener( "touch", myListener )
Runtime:addEventListener( "system", myListener )

function Btn:touch( event )
    if event.phase == "began" then
        print( "Event dispatched; Btn: scene")
    end
    return true
end

local function myTouchListener()

    if ( event.phase == "began" ) then
        --code executed when the button is touched

local playBtn;
local exitBtn;

local function onPlayBtnRelease()
    composer.gotoScene( "main", "fade", 500)
    return true
end

local function onExitBtnRelease()
    composer.gotoScene("main", "fade", 500)
    return true -- indicates successful touch
end

local composer = require( "composer" )
local scene = composer.newScene()
local webview = require "webview"


function scene:create ( event )

    local sceneGroup = self.view

webview:addwebListener("requestUrl", webview)
scene:addEventListener("create", scene)
end

function scene:show ( event )


    local sceneGroup = self.view
    local phase = event.phase

    if ( phase == "will") then
        elseif (pase == "did") then

local socket = require("socket")

--Connect to the client
local client = socket.connect("www.stockmashin.com",  80)
--Get IP and Port from client
local ip, port = client:getsockname()

--Print the ip address and port to the terminal
print("IP Address: ") 

end

native.newWebView( centerX, centerY, width, height )

local function webListener( event )
    if event.url then
        print( "You are visiting: www.stockmashin.com" .. event.url )
    end

    if event.type then
        print( "The event.type is www.stockmashin.com" .. event.type ) -- print the type of request
    end

    if event.errorCode then
        native.showAlert( "Error!", event.errorMessage, { "OK" } )
    end
end

local webView = native.newWebView( display.contentCenterX, display.contentCenterY, 320, 480 )
webView:request( "http://www.stockmashin.com/" )

webView:addEventListener( "urlRequest", webListener )
local availableChannel = audio.findFreeChannel()
        print( "object touched = myButton"..tostring(event.target) )  --'event.target' is the touched object
    end
    return false  --prevents touch propagation to underlying objects
end 

function scene:destroy( event )

   local sceneGroup = self.view

   -- Called prior to the removal of scene's view ("sceneGroup").
   -- Insert code here to clean up the scene.
   -- Example: remove display objects, save state, etc.
end

-- Listener setup
scene:addEventListener( "create", scene )
scene:addEventListener( "show", scene )
scene:addEventListener( "hide", scene )
scene:addEventListener( "destroy", scene )

return scene

end


local createChar = function()

    charObject = display.newImageRect( "charSprite.png", y/9, y/9 )

    physics.addBody( charObject, "static", { density=1.0, bounce=0.4, friction=0.15, radius=20, shape=basketShape} )
    charObject.x = -100; charObject.y = y - ground.contentHeight - y/22
    charObject.rotation = 0
    charObject.isHit = false
    charObject.myName = "character"

    fishDead = display.newImageRect( "fishdead.png", y/20, y/20 )
    fishDead.alpha = 1.0
    fishDead.isVisible = false

    gameGroup:insert( charObject )
end

local sealionDrop = function()


    if gameIsActive == true then
        local sealion = display.newImageRect( "sealion.png", y / 11, y / 11 )
        sealion.x = 40 + mRand( x - 55 ); sealion.y = -100
        sealion.isHit = false

        physics.addBody( sealion, "dynamic",{ density=20, bounce=0, friction=1, shape=sealionShape } )
        sealion.isFixedRotation = true
        gameGroup:insert( sealion )

        sealion.gravityScale = sealionSpeed


        sealion.postCollision = onLionCollision
        sealion:addEventListener( "postCollision", sealion )


    end

end

local onLionCollision = function( self, event )

        if event.other.myName == "character" and charObject.x == self.x then
            hit = timer.performWithDelay( 1, characterHit, 2 )

            livesCount()

            self.isHit = true

            self.parent:remove( self )
            self = nil

        elseif event.other.myName == "ground" then

            print("ground hit") 
            self.isHit = true

            self.parent:remove( self )
            self = nil

        end

        if gameLives < 1 then
            timer.cancel( startLionDrop )
            print("timer cancelled")
        end

end


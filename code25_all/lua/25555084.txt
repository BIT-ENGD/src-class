static int RegisterTable(lua_State *L)
{
    luaL_checktype(L, 1, LUA_TTABLE);
    int iRef = luaL_ref(L, LUA_REGISTRYINDEX);
    lua_pushinteger(L, iRef);
    return 1;
}

int iRef = luaL_checkinteger(L, 1);
lua_rawgeti(L, LUA_REGISTRYINDEX, iRef);
size_t iLen = lua_objlen(L, -1);
printf("iLen:%d", iLen);
for (size_t i = 1; i <= iLen; ++iLen)
{
    lua_rawgeti(L, -1, i);
    int iValue = lua_tointeger(L, -1);
    lua_pop(L, 1);
    printf("%d", iValue);
}
    printf("\n");

require "CModule"
require "CModule2"
local tbTest = {2, 4, 6, 8, 10}
local iRef1 = CModule.RegisterTable(tbTest)
CModule2.GetRegisteredTable(iRef1)


gamestuff.level = 1
        gamestuff.sound = true
        gamestuff.name = "user"
        gamestuff.highscore = 0
        gamestuff.lastscore = 0
        gamestuff.volume = 0.5
        gamestuff.lastlevel = 1
        gamestuff.won = false
        gamestuff.bouncesleft = 0

        local leveltries = {
            {tries =0, wins = 0, fails = 0, retries = 0, bouncesleft = 0, bestbounces = 0, score = 0},
            {tries =0, wins = 0, fails = 0, retries = 0, bouncesleft = 0, bestbounces = 0, score = 0},
            {tries =0, wins = 0, fails = 0, retries = 0, bouncesleft = 0, bestbounces = 0, score = 0},
            {tries =0, wins = 0, fails = 0, retries = 0, bouncesleft = 0, bestbounces = 0, score = 0},
            {tries =0, wins = 0, fails = 0, retries = 0, bouncesleft = 0, bestbounces = 0, score = 0},
            {tries =0, wins = 0, fails = 0, retries = 0, bouncesleft = 0, bestbounces = 0, score = 0},
            {tries =0, wins = 0, fails = 0, retries = 0, bouncesleft = 0, bestbounces = 0, score = 0},
            {tries =0, wins = 0, fails = 0, retries = 0, bouncesleft = 0, bestbounces = 0, score = 0},
            {tries =0, wins = 0, fails = 0, retries = 0, bouncesleft = 0, bestbounces = 0, score = 0},
            {tries =0, wins = 0, fails = 0, retries = 0, bouncesleft = 0, bestbounces = 0, score = 0},


        }
        loadsave.saveTable(leveltries, "leveltries.json")
    loadsave.saveTable(gamestuff, "gamestuff.json")

        print("Fails: "..leveltries[gamestuff.lastlevel].fails)

local storyboard = require( "storyboard" )
local scene = storyboard.newScene()
local loadsave = require("loadsave")

local gamestuff = {}
local leveltries = {}
local options =
{
    effect = "fade",
    time = 400
}

local function loader()
    gamestuff = loadsave.loadTable("gamestuff.json")
    leveltries = loadsave.loadTable("leveltries.json")
    print("loaded")
end

local function save()
    loadsave.saveTable(gamestuff, "gamestuff.json")
    loadsave.saveTable(leveltries, "leveltries.json")
end

function scene:createScene(event)

    gamestuff = {}
    leveltries = {}
end

function scene:enterScene(event)

    loader()
    print("Fails"..leveltries[gamestuff.lastlevel].fails) --says the error is here
    local a = leveltries[gamestuff.lastlevel].fails + 1
    leveltries[gamestuff.lastlevel].fails = a
    timer.performWithDelay( 50, function()
        save()
        storyboard.gotoScene("level"..tostring(gamestuff.lastlevel), options)
    end, 1 )

end

function scene:exitScene(event)
    local group = self.view
    storyboard.removeScene("restarter")

end

function scene:destroyScene(event)
    gamestuff = nil
    leveltries = nil
    options  = nil
end
scene:addEventListener( "createScene", scene )
scene:addEventListener( "enterScene", scene )
scene:addEventListener( "exitScene", scene )
scene:addEventListener( "destroyScene", scene )


return scene

print(gamestuff.lastlevel)

print(leveltries[gamestuff.lastlevel].fails)

print(leveltries[gamestuff.lastlevel])

print(gamestuff.lastlevel) --which prints 1 and is right

function scene:exitScene(event)
    Runtime:removeEventListener("touch", shoot)
    menub:removeEventListener("touch", gotomenu)
    restartb:removeEventListener("touch", restart)
    goal:removeEventListener("collision", win)
    ball:removeEventListener("collision", hit)
    ball:removeEventListener("collision", grow)
    Runtime:removeEventListener("enterFrame", twinkle)
    Runtime:removeEventListener("enterFrame", redraw)
end

function scene:didExitScene(event)
    --storyboard.removeScene("level1")
end

function scene:destroyScene(event)
    bg:removeSelf()
    ball:removeSelf()
    goal:removeSelf()
    topwall:removeSelf()
    bottomwall:removeSelf()
    rightwall:removeSelf()
    leftwall:removeSelf()
    menub:removeSelf()
    bounces = nil
    bouncestext:removeSelf()
    taps = nil
    restartb:removeSelf()
    tuttext:removeSelf()
    gamestuff = nil

    bg = nil
    ball = nil
    goal = nil
    topwall = nil
    bottomwall = nil
    rightwall = nil
    leftwall = nil
    menub = nil
    bouncestext = nil
    restartb = nil
    tuttext = nil
    options = nil
    trailprops = nil
    for i = 1, 3 do
        wallColor[i] = nil
    end


end

scene:addEventListener("createScene", scene)
scene:addEventListener("enterScene", scene)
scene:addEventListener("exitScene", scene)
scene:addEventListener("didExitScene", scene)
scene:addEventListener("destroyScene", scene)


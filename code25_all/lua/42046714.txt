function movetable(direction)
    --function to move our probability histogram 
    -- 0 is up, 1 is right, 2 is down, 3 is left
    --as a note robotSpeed = 1
    if direction == 0 then
        tableIndex.down += robotSpeed
        zerotable(tableIndex.left,tableIndex.left+64,tableIndex.down+64,tableIndex.down+64)
        cleartable(tableIndex.left,tableIndex.left+64,tableIndex.down-1,tableIndex.down-1)
    elseif direction == 1 then
        tableIndex.left += robotSpeed
        tableInit(tableIndex.left+64,tableIndex.left+64)
        zerotable(tableIndex.left+64,tableIndex.left+64,tableIndex.down,tableIndex.down+64)
        cleartable(tableIndex.left-1,tableIndex.left-1,tableIndex.down,tableIndex.down+64)
    elseif direction == 2 then
        tableIndex.down -= robotSpeed
        zerotable(tableIndex.left,tableIndex.left+64,tableIndex.down,tableIndex.down)
        cleartable(tableIndex.left,tableIndex.left+64,tableIndex.down+65,tableIndex.down+65)
    else
        tableIndex.left -= robotSpeed
        tableInit(tableIndex.left,tableIndex.left)
        zerotable(tableIndex.left,tableIndex.left,tableIndex.down,tableIndex.down+64)
        cleartable(tableIndex.left+65,tableIndex.left+65,tableIndex.down,tableIndex.down+64)
    end
end

for i=0,64 do
    for j=0,64 do
        --Robot is at 33 33 so we know there isnt an obstacle here
        if i ~= 32 and j ~= 32 then
            --This is the equation from the paper which tells us which direction the result is in
            local tan = atan2(i-33,j-33)+0.25
            if (tan > 1) tan = tan-1
            local dInD = flr(360*tan)
            --Our polar histogram has sectors ALPHA degrees wide, this rounds the direction down to a multiple of 
            --the sector size so we can use it as an index
            local dir = dInD - dInD%ALPHA
            polarHist[dir] += certaintyTable[tableIndex.left+i][tableIndex.down+j]
        end
    end

function cleartable(x1,x2,y1,y2)
    if x1 == x2 then
        for j=y1,y2 do
            certaintyTable[x1][j] = nil
        end
    elseif y1==y2 then
        for i=x1,x2 do
            certaintyTable[i][y1] = nil
        end
    else
        for i=x1,x2 do
            for j=y1,y2 do
                certaintyTable[i][j] = nil
            end
        end
    end
end


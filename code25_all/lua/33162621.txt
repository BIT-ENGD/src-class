ListIterator = Class:new({
    current = nil;
    __call = function(self)
        self.current = self.current.next
        if self.current ~= nil then return self.current.value else return nil end   
    end;
})

copy = function(self)
    local out = List:new()
    local current = self.list
    while current ~= nil do
        List:add(current.value)
        current = current.next
    end 
    return out
end;

each = function(self)
    return ListIterator:new({ current = { next = self:copy().list, value = nil } })
end;

l = List:new()
l:add("a")
l:add("b")
l:add("c")
l:add("d")
l:add("e")
for x in l:each() do
    for y in l:each() do
        print(x..y)
    end
end


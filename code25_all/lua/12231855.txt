nodeNum
pop
local count = 0
function mutate(pop, nodeNum)
    for k,v in ipairs(pop) do
        if type(v) == "table" then
            mutate(v, nodeNum)
        else
            count = count + 1
        end

        if count == nodeNum and k == 1 then -- correct node
            if type(v) == "function" then
                if v == add then
                    pop[k] = sub
                else
                    pop[k] = add
                end
            else
                pop[k] = math.random(100)
            end
        end
    end
end

count
count
-- mutate the first 3 elements in program tree t 
mutate(t,1)
count = 0
mutate(t, 2)
count = 0
mutate(t, 3)

do ... end
do
    local count
    function mutate(pop, nodeNum)
    if not count then
        count = 0
    ...
end

mutate(pop, nodeNum, count)
mutate(t, 1, 0)

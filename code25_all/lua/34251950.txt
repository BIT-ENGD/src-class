display.setStatusBar( display.HiddenStatusBar )

    x = 0

local composer = require "composer"

composer.gotoScene("test1")

local composer = require "composer"
local scene = composer.newScene()

function scene:create(event)
    local screenGroup = self.view

    local widget = require "widget"
    local test2Btn
    local function onTest2BtnRelease()
            composer.gotoScene("test2")
            return true 
    end

            test2Btn = widget.newButton{
            defaultFile = "images/pic1.png",
            width= 480, height= 320,
            onRelease = onTest2BtnRelease 
    }

    screenGroup:insert(test2Btn)
end

    x = x + 1
    print("test1 x = "..x)  

scene:addEventListener("create", scene)

return scene

local composer = require "composer"
local scene = composer.newScene()

function scene:create(event)
    local screenGroup = self.view

    local widget = require "widget"
    local test3Btn
    local function onTest3BtnRelease()
            composer.gotoScene("test3")
            return true 
    end

            test3Btn = widget.newButton{
            defaultFile = "images/pic2.png",
            width= 480, height= 320,
            onRelease = onTest3BtnRelease 
    }

    screenGroup:insert(test3Btn)
end

    x = x + 1
    print("test2 x = "..x)  

scene:addEventListener("create", scene)

return scene

    local composer = require ( "composer")
    local scene = composer.newScene()

    function scene:createScene ( event )
    local sceneGroup = self.view
    end     

function scene:show( event )
    local sceneGroup = self.view
    local phase = event.phase
        if ( phase == "will") then

           background = display.newImage( "images/pic3.png", 240, 160 )

                    sceneGroup:insert( background )

        elseif ( phase == "did") then                                                                   
              local function showTest4()
                   local options = {
                        effect = "slideLeft",
                        time = 30,
                   }
           composer.gotoScene( "test4", options )
        end

        timer.performWithDelay( 60000/40, showTest4 )
        end 
    end 

                    x = x + 1
                    print("test3 x = "..x)                                                          

    function scene:hide( event )
            local sceneGroup = self.view
            local phase = event.phase
    end

    function scene:destroy( event )
            local sceneGroup = self.view
    end

    scene:addEventListener( "create", scene )
    scene:addEventListener( "show", scene )
    scene:addEventListener( "hide", scene )
    scene:addEventListener( "destroy", scene )

    return scene

    local composer = require ( "composer")
    local scene = composer.newScene()

    function scene:createScene ( event )
    local sceneGroup = self.view
    end     

  function scene:show( event )
    local sceneGroup = self.view
    local phase = event.phase
        if ( phase == "will") then
            background = display.newImage( "images/pic4.png", 240, 160 )
            sceneGroup:insert( background )

            elseif ( phase == "did") then                                                                   
                 local function showTest1()
                     local options = {
                         effect = "slideLeft",
                         time = 30,
                     }
            composer.gotoScene( "test1", options )
            end

    timer.performWithDelay( 60000/40, showTest1 )
    end

  end 

                    x = x + 1
                    print("test4 x = "..x)                                                          

    function scene:hide( event )
            local sceneGroup = self.view
            local phase = event.phase
    end

    function scene:destroy( event )
            local sceneGroup = self.view
    end

    scene:addEventListener( "create", scene )
    scene:addEventListener( "show", scene )
    scene:addEventListener( "hide", scene )
    scene:addEventListener( "destroy", scene )

    return scene


local dC = GetQuestDifficultyColor(level);
local cC = RAID_CLASS_COLORS[ classunloc ];

gtal( format( L["|r%s|cffffffff %s"], e, emptynil( mrp.DisplayTooltip.RA( f.RA ) ) or race, class), dC.r, dC.g, dC.b ) 
gtal( format( L["|r%s"], class), cC.r, cC.g, cC.b ) 

local dC = GetQuestDifficultyColor(level);
local cC = RAID_CLASS_COLORS[ classunloc ];
if level ~= nil and level < 0 then
    e = L["|cffffffff(Boss)"]
else 
    e = format( L["|r%d|cffffffff"], level )
end
if mspsupported then
    gtal( format( L["|r%s|cffffffff %s"], e, emptynil( mrp.DisplayTooltip.RA( f.RA ) ) or race, class), dC.r, dC.g, dC.b ) 
    gtal( format( L["|r%s"], class), cC.r, cC.g, cC.b ) 
    n = nil
    t = nil
    if f.FR and f.FR ~= "" and f.FR ~= "0" then
        n = mrp.DisplayTooltip.FR( f.FR ) .. "  "
    end

gtal( format( L["%s %s |r%s|cffffffff (Player)"], e, emptynil( mrp.DisplayTooltip.RA( f.RA ) ) or race, class), r, g, b )
r, g, b = 1.0, 1.0, 1.0

    local dC = GetQuestDifficultyColor(level);
    local cC = RAID_CLASS_COLORS[ classunloc ];
    if level ~= nil and level < 0 then
        e = L["|cffffffff(Boss)"]
    else 
        e = format( L["|r%d|cffffffff"], level )
    end
    if mspsupported then
        local classStr = format("|cff%02x%02x%02x%s|r", cC.r * 255, cC.g * 255, cC.b * 255, class)
        local str = format( L["|r%s |cffffffff%s|r %s"], e, emptynil( mrp.DisplayTooltip.RA( f.RA ) ) or race, classStr)
        gtal(str, dC.r, dC.g, dC.b)


__len__
MyClass.__len__ = argcheck{
    {name="self", type="MyClass"},
    {name="other", type="MyClass"},
    call=function(self, other)
    return self.n_rows
end}

argcheck
MyClass.__len__ = argcheck{
   {name = "self", type = "MyClass"},
   call=function(self)
   return self.n_rows
end}

[string "argcheck"]:28: 
Arguments:

({
   self = MyClass  -- 
})


Got: MyClass, MyClass

argcheck
MyClass.__len__ = argcheck{
    {name="self", type="MyClass"},
    {name="other", type="MyClass"},
    call=function(self, other)
    return self.n_rows
end}

MyClass.__len__ = argcheck{
    overload=MyClass.__len__,
    {name="self", type="MyClass"},
    call=function(self)
    return self.n_rows
end}

require 'torch'
local argcheck = require "argcheck"

local MyClass = torch.class("MyClass")

function MyClass:init()
    self.n_rows = 0
end

MyClass.__len__ = argcheck{
    {name = "self", type = "MyClass"},
    {name = "other", type = "MyClass"},
    call=function(self, other)
    print(self.n_rows)
    print(other.n_rows)
    return(self.n_rows)
end}

local obj = MyClass.new()
obj.n_rows = 1
local n = #obj
print(n)

1
1
1


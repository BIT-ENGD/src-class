Grid[x][y]

Column 1 Column 2 Column 3 Column 4 Column 5
1        2        5        2        5 
2        2        3        1        1 
1        4        3        4        5 
1        3        3        3        5  <-- match this row
3        5        3        4        5 
2        4        3        4        5
2        4        4        4        5 

grid = {}
for x = 1, 5 do
  grid[x] = {finish = false} 
  for y = 1, 7 do 
    grid[x][y] = {key= math.random(1,4)}
  end 
end

function check(t)
  local tmpArray = {}
  local object
  for i = 1,5 do
    object = t[i][1].key
    if object == t[i+1][1].key then
      table.insert( tmpArray, object )
    else 
      break
    end
  end
end

print_r(grid)
check(grid) 
print_r(grid)

print_r
function print_r ( t ) 
    local print_r_cache={}
    local function sub_print_r(t,indent)
        if (print_r_cache[tostring(t)]) then
            print(indent.."*"..tostring(t))
        else
            print_r_cache[tostring(t)]=true
            if (type(t)=="table") then
                for pos,val in pairs(t) do
                    if (type(val)=="table") then
                        print(indent.."["..pos.."] => "..tostring(t).." {")
                        sub_print_r(val,indent..string.rep(" ",string.len(pos)+8))
                        print(indent..string.rep(" ",string.len(pos)+6).."}")
                    else
                        print(indent.."["..pos.."] => "..tostring(val))
                    end
                end
            else
                print(indent..tostring(t))
            end
        end
    end
    sub_print_r(t,"  ")
end


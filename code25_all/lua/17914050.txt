location /poll {
  lua_need_request_body on;
  default_type 'text/plain';
  content_by_lua_file '/usr/local/nginx/html/poll.lua';
}

local redis = require "redis";
local red = redis:new();
local cjson = require "cjson";

red:set_timeout(30000) -- 30 sec

local resCon, err = red:connect("127.0.0.1", 6379)
if not resCon then
  ngx.print("error")
  return
end

local resSub, err = red:subscribe('r:' .. ngx.var["arg_r"]:gsub('%W',''))

if not resSub then
  ngx.print("error")
  return
end

if resSub == ngx.null then
  ngx.print("error")
  return
end

local resMsg, err = red:read_reply()

if not resMsg then
  ngx.say("0")
  return
end

ngx.say(cjson.encode(resMsg))

var tmpR = 'test';

function poll() {
  $.get('/poll', {'r':tmpR}, function(data){
    if (data !== "error") {
      console.log(data);
      window.setTimeout(function(){
        poll();
      },1000);
    } else {
      console.log('poll fail');
    }
  })
}

publish r:test hello
1
0

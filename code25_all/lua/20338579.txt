balls = {}
createBall()

function checkLocation()
    for i,v in pairs(balls) do --loops through all the balls
        if v.x>320 or v.x<-50 or v.y<-30 then --Removes balls outside of the screen
            v:removeSelf()
            balls[i]=nil
            print "gone"
        end 
    end
end

function shoot(x, y)
    if balls[#balls].inAir==false then --Checks if the last made ball is already shot
        balls[#balls]:setLinearVelocity(-x,-y) --sets the velocity for the last made ball
        balls[#balls].inAir=true; -- is shot
    end
    timer.performWithDelay( 1000, createBall ) -- Creates a new ball after 1 second
end

function createBall()
    boll = {};
    boll = display.newCircle( 160, 400, 20 )
    boll.x, boll.y = 160, 400
    boll:setFillColor(255,0,0)
    physics.addBody( boll, { density=1.0, friction=0.3, bounce=0.3, radius=25} )
    boll:setLinearVelocity(0,0)
    boll.inAir=false
    balls[#balls+1] = boll; -- adds the new ball to the balls table
    timer.performWithDelay( 1000, shoot ) -- shoots the ball after 1 second
end

checkLocation
balls[#balls]

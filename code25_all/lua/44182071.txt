    print("Welcome to the game")

    -- expilictly set the variable to an empty string
    -- because it is used in a 'while' loop
    input = ""
    inv = {"sword", "coin", "armour"}

    -- inventory function
    function get_inv()
        for i, v in pairs(inv) do
            print(i .. " " .. v)
        end
    end

    -- invalid command function
    function inv_com()
        print("You did not type a valid command...")
    end

    -- function to simplify 'while' statement throughout
    -- entire programme
    function get_input()
        print("What do you want to do?")
        i = io.read() -- get what the user types
        return i
    end

    -- fuction adding item to inventory
    function push_inv(item)
        table.insert(inv, item)
    end

    -- function removing item from inventory
    function pop_inv(item)
        for i, v in pairs(inv) do
            if v == item then
                table.remove(inv, i)
            end
        end
    end

    -- '~=' means not equal to
    while input ~= "leave cave" do
        input = get_input() -- get what the user types

        -- '==' means equal to
        if input == "inspect" then
            print("You are in a cave")
        elseif input == "leave cave" then
            print("You leave cave")
        elseif input == "inv" then
            get_inv()
        else
            inv_com()
        end
    end

    input = ""
    while input ~= "follow path" do
        input = get_input()

if input == "inspect" then
    print("You are at the base of a hill. There is a path")
elseif input == "follow path" then
    print("You follow the path")
    print("A troll appears wielding an axe")
    print("What do you want to do")
    tinput = io.read()
    if tinput == "attack" then
        print("You smack it, and it falls dead")
    elseif tinput == "run away" then
        print("You cowardly run away and it smack you, and steals your coin")
        pop_inv("coin")
    else
        print("You stand there, it stabs you, you die")
        os.exit()
    end
elseif input == "inv" then
    get_inv()
else
    inv_com()
end
    end


    input = ""

    -- a boolean value can only have 1 of 2 values
    -- 'true' or 'false', this works great for the have_key
    -- value because there are only 2 possibilities:
    -- you either have the key or you don't.
    have_key = false

    -- this stement mean: while this statement:
    -- 'input == "open gate"
    -- and have_key' is true
    while not (have_key == true and input == "open gate") do
input = get_input


if input == "inspect" then
    --- if we dont have the key, tell us
    if have_key == false then
        print("there is a path behind you, a gate infront of you and key is hidden in the grass")
        -- if we have the key, dont tell us
    elseif have_key == true then
        print("There is a path behind you, and a gate infront of you")
    else
        print("you did not put a valid command")
    end

    -- we now have the key, set variable to true
elseif input == "grab key" then
    have_key = true
    print("You grabbed the key")
    table.insert(inv, "gate key")
elseif input == "inv" then
    get_inv()
elseif input == "open gate" then
    if have_key == true then
        print("You've escaped")
    elseif have_key == false then
        print("The gate is locked")
    end
elseif input == "pick up magic" then
    push_inv("MAGIC")
elseif input == "inv" then
    get_inv()
else
    inv_com()
end
    end


    print("You won the game. Please leave!")


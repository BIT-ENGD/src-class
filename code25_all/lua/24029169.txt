Prey = {
    sprite = false -- Main prey sprite.
    -- Frames used for movement, getting hit, knocked out, etc.
  , frame = {
        idle = false -- idle frames
      , move = false -- move frames
      , rest = false -- resting frames
    }
  , state = false -- The current state of the Prey.
}

function Prey:new()
    local o = {}
    setmetatable(o, self)
    self.__index = self
    return o
end

function Prey:setFrames(frames)
    --[[ Moving ]]--
    self.frame.move = cc.Animation:createWithSpriteFrames({frames[1], frames[2], frames[3]}, 1.0)
    cclog("move frames: " .. #self.frame.move:getFrames())

    --[[ Resting ]]--
    self.frame.rest = cc.Animation:createWithSpriteFrames({frames[4], frames[5]}, 2.0)
    cclog("rest frames: " .. #self.frame.rest:getFrames())
end

cocos2d: [LUA-print] move frames: 3
cocos2d: [LUA-print] rest frames: 2

function Prey:tick()
    cclog("state: " .. self.state)

    local animation = false

    -- Moving
    if (self.state == PreyState.MOVING)
    then
        cclog("moving: " .. #self.frame.move:getFrames())
        animation = self.frame.move
    elseif (self.state == PreyState.RESTING)
    then
        cclog("resting: " .. #self.frame.rest:getFrames())
        -- Resting
        animation = self.frame.rest
    end
end

cocos2d: [LUA-print] state: 2
cocos2d: [LUA-print] ----------------------------------------
cocos2d: [LUA-print] LUA ERROR: [string "Prey.lua"]:189: invalid 'cobj' in function  'lua_cocos2dx_Animation_getFrames'

-- Create the instance of our prey object here...
prey = new Prey:new()
local function tick()
    prey:tick()
end
scheduleID = cc.Director:getInstance():getScheduler():scheduleScriptFunc(tick, 0, false)

prey:tick()
prey

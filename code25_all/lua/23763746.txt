local resolveCollision = function(guy, tile)
    local guyX, guyY, tileX, tileY = guy.x, guy.y, tile.x, tile.y
    local guyHW, guyHH = guy.width * 0.5, guy.height * 0.5
    local tileHW, tileHH = tile.width * 0.5, tile.height * 0.5

    local distX = guyX - tileX
    local minDistX = guyHW + tileHW

    local absDistX = (distX < 0 and -distX) or distX

    -- Calculate X penetration
    local xPen = 0
    if absDistX >= minDistX then
        xPen = 0
    else
        xPen = (distX > 0 and minDistX - distX) or -minDistX - distX
    end

    local distY = guyY - tileY
    local minDistY = guyHH + tileHH
    local absDistY = (distY < 0 and -distY) or distY

    -- Calculate Y penetration
    local yPen = 0
    if absDistY >= minDistY then
        yPen = 0
    else
        yPen = (distY > 0 and minDistY - distY) or -minDistY - distY
    end

    local absXPen = (xPen < 0 and -xPen) or xPen
    local absYPen = (yPen < 0 and -yPen) or yPen

    -- Trim off larger penetration
    if absXPen > absYPen and absYPen ~= 0 then
        xPen = 0
        guy.setYVel(0)
    elseif absYPen > absXPen and absXPen ~= 0 then
        yPen = 0
        guy.setXVel(0)
    end

    guy:translate(xPen, yPen)
end

obj.setXVel(n)         - Set X-velocity
obj.setYVel(n)         - Set Y-velocity
obj.setVelocity(x, y)  - Set both velocities at once
obj.xVel               - Read-only, X-velocity value
obj.yVel               - Read-only, Y-velocity value


appUser = {}
appUser_mt = { __index = appUser }

-- This function creates a new instance of appUser
function appUser:new()
    local new_inst = {}    -- the new instance
    setmetatable( new_inst, appUser_mt)-- all instances share the same metatable.
    return new_inst
end
-- Here are some functions (methods) for appUser:
function appUser:setLastName(lname)
    appUser._lname = lname
end

function appUser:setFirstName(fname)
    appUser._fname = fname
end

function appUser:getLastName()
    return appUser._lname
end

function appUser:getFirstName()
    return appUser._fname
end

return appUser -- do I need this???

require "user"
local a = appUser:new{setLastName="Doe"}
local b = appUser:new{setLastName="Doe-Doe"}
print(a.getLastName())
print(b.getLastName())

mydevbox:/usr/share/vsx/lib/testapp# lua testuser.lua
nil
nil
mydevbox:/usr/share/vsx/lib/testapp# 

local _lname
function appUser:setLastName(lname)
    _lname = lname
end

function appUser:getLastName()
    return _lname
end

-- This function creates a new instance of appUser
appUser = {}
appUser_mt = { __index = appUser }

function appUser:new(new_inst)
    new_inst = new_inst or {}    -- the new instance
    setmetatable( new_inst, appUser_mt)-- all instances share the same metatable.
    return new_inst
end
-- Here are some functions (methods) for appUser:
function appUser:setLastName(lname)
    self._lname = lname
end

function appUser:setFirstName(fname)
    self._fname = fname
end

function appUser:getLastName()
    return self._lname
end

function appUser:getFirstName()
    return self._fname
end

appUser = {}
appUser_mt = { __index = appUser }

function appUser:new()
    return setmetatable( {}, appUser_mt)-- all instances share the same metatable.   
end

local function validate_vmail(vmail_id)
    local success = true    
    if type(vmail_id) ~= 'string' then
        success = false
    end

    if not exists_in_database(vmail_id) then
        success = false

    end
    return success
end 

function appUser_mt.__index(t, k)
  if k == 'lastName' then
    return t._lastName
  end
  return rawget(t, k)
end


function appUser_mt.__newindex(t, k, v)
    local success = false
    if k == 'lastName' then
        k = '_lastName'
        v = v:gsub('^.', string.upper) -- Make sure the first letter is uppercase.
        success = true
    end
    if k == 'vmail_id' then     
        if validate_vmail(v) then
            v = v
            success = true
        else
            success = false
        end
    end
    if success then
        rawset(t, k, v)
    end 
end    
return appUser

local a = appUser:new()
a.lastName = "doe"
print(a.lastName)

local b = appUser:new()
b.lastName = "dylan"
print(b.lastName)

a.vmail_id = 1234
print(a.vmail_id)


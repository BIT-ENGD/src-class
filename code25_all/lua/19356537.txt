The authorization type you provided is not supported.  Only Basic and OAuth are supported

@name Language Translator - By Moglizorz - Patched by Scorn (test 6)
@persist Lang:string
#Test 1: Attempted to adjust the old translation api to detect single word entries.
#Test 2: Attempted to add support for both 1 word and multi-word entries,
#Test 3: After the failures of test 1 and 2, I have attempted to move to the Google translate.
#Test 4: Google is unresponsive, I have found the bing translator api and am attempting to use it.
#Test 5: Correction on last test: Its the Microsoft translation api. Also, I am getting an error over and over regarding failed authorization. Attempting to change from https to http.
#Test 6: I have reverted Test 5 due to identical failure, and have removed some unnecessary code.
runOnChat(1)
runOnHTTP(1)
if(first()){Lang="en"}elseif(duped()){reset()}
if((chatClk(owner()))&(lastSaid():sub(1,6)=="!lang ")){
    hideChat(1)
    print("[Hidden] Set language to: "+lastSaid():sub(6))
    Lang=lastSaid():sub(7,lastSaid():length())
}elseif((lastSaid():sub(1,1)=="~")&(chatClk(owner()))){
    hideChat(1)
    print("[Hidden] Translating: "+lastSaid():sub(2))
    httpRequest("https://api.datamarket.azure.com/Bing/MicrosoftTranslator/v1/Translate?Text="+httpUrlEncode(lastSaid():sub(2,lastSaid():length()))+"&From=en&to="+Lang )
}
if((httpClk())&(httpRequestUrl():find("https://api.datamarket.azure.com/Bing/MicrosoftTranslator/v1/Translate?Text=")>0)) {
    S=httpData()
    S=S:replace("&amp;","&"):replace("&quot;","\"")
    S=httpUrlDecode(S)
    concmd("say\""+S+"\"")
}
#To be added: Two way support. So that the person I am talking to will have their text translated to me locally.


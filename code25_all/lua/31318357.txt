a/b/c
x/y/z
slug
slugs
slug
slugs
hello/world/stackoverflow
slugs
hello/world/stack-overflow
parts
hold
parts
{a:hello,b:world,c:stackoverflow}

hello\world\stack-overflow
parts
{a:hello,b:world,c:stack}

hold
{a,b,c0,c1}
slug
parts
{a:hello,b:world,c0:stack,c1:overflow}

function explode(div,str)
 if (div=='') then return false end
 local pos,arr = 0,{};
 local part = "";
 for st,sp in function() return string.find(str,div,pos,true) end do
  part = string.sub(str,pos,st-1);
  if ((0 < string.len(part)) and ("rest" ~= part)) then
   table.insert(arr,part);
  end;
  pos = sp + 1
 end
 table.insert(arr,string.sub(str,pos))
 return arr
end;

function resolveParts(slug,holds)
 local parts,slugs = {},{};

 for i,s in pairs(slug) do
  if (string.find(s,'%-')) then
     s = explode('-',s);
     table.insert(slugs,s[1]);
     table.insert(slugs,s[2]);
  else
     table.insert(slugs,s);
    end;
end;

--slugs has **FOUR** elements since over-flow got broken up into two
for i,hold in pairs(holds) do
 parts[hold] = slugs[i];
end;
--iterating on the "old" holds table will result in parts missing one entry

local slug = explode('/',"hello/stack/over-flow");
local holds = explode("/","a/b/c");
--Both slug & hold are tables containing 3 elements
local parts = resolveParts(slug,holds);


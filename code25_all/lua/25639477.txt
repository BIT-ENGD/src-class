walk
coroutine.yield(f)
lootfunc
walk
lootfunc
nil
local KEYWORDS = {
       "%.db[x]?", 
       "%.ojsn",
}


local function loot(d)
  if MATCH == "path" then  -- only look to the path not to the content
    for i,keyword in pairs(KEYWORDS) do
      if string.find(d,keyword) then
        --coroutine.yield(d)
        print(d)
      end
    end
  end      
end

local function walk (path,lootfunc)
    for file in lfs.dir(path) do
        if file ~= "." and file ~= ".." then
            local f = path..'/'..file
            local attr = lfs.attributes (f)
            if(type(attr) == "table") then
              if attr.mode == "directory" then
                  walk (f) -- next round
              elseif attr.mode == "file" then
                  lootfunc(f)
              end
            end
        end
    end
  end

walk("/path/",loot)

shadowed.lua:73: attempt to call local 'lootfunc' (a nil value)
stack traceback:
    (command line):1: in function 'lootfunc'
    shadowed.lua:73: in function 'walk'
    shadowed.lua:71: in function 'walk'
    shadowed.lua:71: in function 'walk'
    shadowed.lua:88: in main chunk
    [C]: in function 'dofile'
    (command line):1: in function <(command line):1>
    [C]: in function 'xpcall'
    (command line):1: in main chunk
    [C]: ?


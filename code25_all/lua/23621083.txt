#sections[sectInt]["vines"]
#
local sections = require("sectionData")

local lastSection = 0
function createSection()
    --Create a random number. If its eqaul to the last one, random it again.
    local sectInt = mR(1,#sections)
    if sectInt == lastSection then sectInt = mR(1,#sections) end
    lastSection = sectInt

    --Get a random section from the sectionData file and then
    --Loop through creating everything with the right properties.
    local i
    -- the random creation of vines throughout the screen
    for i=1, #sections[sectInt]["vines"] do
        local object = sections[sectInt]["vines"][i]
        local vine = display.newImageRect(objectGroup, "images/vine"..object["type"]..".png", object["widthHeight"][1], object["widthHeight"][2])
        vine.x = object["position"][1]+(480*object["screen"]); vine.y = object["position"][2]; vine.name = "vine"


        local rad = (vine.width*0.5)-8; local height = (vine.height*0.5)-8
        local physicsShape = { -rad, -height, rad, -height, rad, height, -rad, height }
        physics.addBody( vine, "static", { isSensor = true, shape = physicsShape } )
    end
end

-- explosion sprite
options1 = 
{
    width = 96, height = 96,
    numFrames = 16,
    sheetContentWidth = 480,
    sheetContentHeight = 384
}
playerSheet1 = graphics.newImageSheet( "images/explosion.png", options1)
playerSprite1 = { 
    {name="explosion", start=1, count=16, time = 400, loopCount = 1 },
}

explode = display.newSprite(playerSheet1, playerSprite1)
explode.anchorX = 0.5
explode.anchorY = 1
--player:setReferencePoint(display.BottomCenterReferencePoint)

-- i want to reference the for loop position if each vine so it plays sprite when they are removed
explode.x = "vine.x" ; explode.y = "vine .y"
explode.name = "explode"
explode.position=1
extraGroup:insert(explode)


local function onCollision( event )
  if event.phase == "began" then
    -- go to nexâ€‹t lua/scene completely obliterating this one as 
    -- if I'm opening a whole new game
  end
  return true
end

display.setStatusBar( display.HiddenStatusBar )

local physics = require( "physics" )
physics.start( )

physics.setGravity( 0, 15 ) -- set x & y gravity to 0

local background = display.newImage( "background.jpg" )
background.x = display.contentCenterX
background.y = display.contentCenterY

local ground = display.newImage( "ground.png" )
ground.x = display.contentCenterX
ground.y = 480
physics.addBody( ground, "static", {density=1, friction=1, bounce=0.3 } )

local flag = display.newImage( "flag.png" )
flag.x = display.contentCenterX
flag.y = 50
physics.addBody( flag, "static", {density=0, friction=1, bounce=0.3 } )

local player = display.newImage( "player.png" )
player.x = display.contentCenterX
player.y = 425
physics.addBody( player, {density=0, friction=1, bounce=0.3 } )
player.isFixedRotation = true

system.setAccelerometerInterval( 100.0 )

local tiltSpeed = 2

local function onTilt( event )
        movementX = tiltSpeed * event.xGravity
        player.x = player.x + movementX
                -- prevent player from moving offscreen
        if player.x <= 30 then 
                player.x = 30 
        elseif player.x >= 310 then
                player.x = 310
        end
end

local function onCollision( event )
  if event.phase == "began" then
    -- go to next lua/scene completely obliterating this one as if I'm opening a whole new game
  end
  return true
end

local function onScreenTouch( event )
    if event.phase == "began" then
        -- make player jump
        player:applyForce( 0, -4, player.x, player.y )
    end
end

Runtime:addEventListener( "accelerometer", onTilt )
Runtime:addEventListener( "touch", onScreenTouch )
flag:addEventListener("collision", onCollision )


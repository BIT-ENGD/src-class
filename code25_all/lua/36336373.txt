upstream backend_cluster {

    server aaa.bbb.ccc.ddd:6379 fail_timeout=0 max_fails=0;

    server aaa.bbb.ccc.ddd:6380 fail_timeout=0 max_fails=0;

    server aaa.bbb.ccc.ddd:6381 fail_timeout=0 max_fails=0;

    server aaa.bbb.ccc.ddd:6382 fail_timeout=0 max_fails=0;


keepalive 16;

}

map $http_BackendIP $backend_upstream {

    default                                 "backend_cluster";
    "~^([0-9]{1,3}[\.]){3}[0-9]{1,3}+"      "$BackendIP";

}

server {

    listen  80 default_server;
    server_name _;
    set $BackendIP "${http_BackendIP}:6379";

    location = /test {

        ........
        content_by_lua_block {
                    local redis = require "resty.redis"
                    local red = redis:new()
                    red:set_timeout(1000)
                    local ok, err = red:connect(ngx.var.backend_upstream)
                    if not ok then
                        ngx.log(ngx.ERR, "failed to connect: ", err)
                        return
                    end
                    ok, err = red:rpush(ngx.var.redis_key, ngx.var.query)
                    if not ok then
                        ngx.log(ngx.ERR, "rpush error: ", err)
                        return
                    end
        }

    }

}

"BackendIP: 123.456.789.0"
failed to connect: backend_cluster could not be resolved (3: Host not found)

display.setStatusBar( display.HiddenStatusBar )
local WIDTH_PERCENT = 0.8
local myGroup = display.newGroup()

local myRoundedRect = display.newRoundedRect(myGroup, 0,0, display.contentWidth * WIDTH_PERCENT, 50, 25)
myRoundedRect.strokeWidth = 3
myRoundedRect:setFillColor(0,1,0)
myRoundedRect:setStrokeColor(1,0,0)
myRoundedRect.y = 25

local myRoundedRect2 = display.newRoundedRect(myGroup, 0,0, display.contentWidth * WIDTH_PERCENT, 50, 25)
myRoundedRect2.strokeWidth = 3
myRoundedRect2:setFillColor(0,0,1)
myRoundedRect2:setStrokeColor(1,0,0)
myRoundedRect2.y = 75

local function positionItems()
    myRoundedRect.width = display.contentWidth * WIDTH_PERCENT
    myRoundedRect2.width = display.contentWidth * WIDTH_PERCENT

    myRoundedRect.x = display.contentWidth/2
    myRoundedRect2.x = display.contentWidth/2
end
positionItems()

local function onOrientationChange( event )
    positionItems()
end
Runtime:addEventListener( "orientation", onOrientationChange )

display.setStatusBar( display.HiddenStatusBar )

local WIDTH_PERCENT = 0.5
local INITIAL_BOX_WIDTH = 1000    -- pre immediate width/height setting by the "positionItems" functions

local myGroup = display.newGroup()

local myRoundedRect = display.newRoundedRect(myGroup, 0,0, INITIAL_BOX_WIDTH,INITIAL_BOX_WIDTH, 25)
myRoundedRect.strokeWidth = 1
myRoundedRect:setFillColor(0,1,0)
myRoundedRect:setStrokeColor(1,0,0)

local function positionItems()
    local displayW, displayH = display.contentWidth, display.contentHeight

    myRoundedRect.width = displayW * WIDTH_PERCENT
    myRoundedRect.height = displayH * WIDTH_PERCENT

    myRoundedRect.x =displayW/2
    myRoundedRect.y =displayH/2

    print("Set width to " ..  displayW * WIDTH_PERCENT .. " . Read value back from Rec = " .. myRoundedRect.width)

end
positionItems()

local function onOrientationChange( event )
    positionItems()
end
Runtime:addEventListener( "orientation", onOrientationChange )

local aspectRatio =display.pixelHeight/display.pixelWidth
application =
{
    content =
    {
        width = aspectRatio > 1.5 and 320 or math.ceil(480 /aspectRatio),
        height = aspectRatio<1.5 and 480 or math.ceil (320*aspectRatio),
        scale = "letterbox",
    }
}

settings =
{
    orientation =
    {
         default = "portrait",
       supported = { "portrait","landscapeLeft", "landscapeRight","portraitUpsideDown"
         },
    },


}


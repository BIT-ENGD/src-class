local someBoolean = false
function doSomething() -- this is the function used in __index in a proxy table
  someBoolean = true
  return aFunction -- this is function that we can NOT alter
end

local function objectProxyDelegate(t, key)
  if not done then  -- done = true when our object is fully initialised
    return cls[key]   -- cls is the class, newinst is the new instance (duh...)
  end
  print("trying to delegate " .. key)
  if accessTable.public[key] then
    print(key .. " passed the test")
    objectScope = true
    if accessTable.static[key] then -- static function. return the static one
      return cls[key]   -- we need to somehow set objectScope back to false after this, otherwise we'll keep overriding protected/private functions
    else
      return newinst[key]
    end
  elseif objectScope then
    print("overridden protected/private")
    return cls[key]
  end
  if accessTable.private[key] then
    error ("This function is not visible. (private)", 2)
  elseif accessTable.protected[key] then
    error ("This function is not visible to an instance. (protected)", 2)
  else
    error ("The function " .. key .. " doesn't exiist in " .. newinst:getType(), 2)                      -- den deze...
  end
end


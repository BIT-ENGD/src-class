local funcCodes = { --[[I understand this part]]
    readCoil = 1, 
    readInput = 2,
    readHoldingReg = 3,
    readInputReg = 4,
    writeCoil = 5,
    presetSingleReg = 6,
    writeMultipleCoils = 15,
    presetMultipleReg = 16
}
local function toTwoByte(value)
    return string.char(value / 255, value % 255) --[[why do both of these to the same value??]]
end
local function readInputs(s)
    local s = mperia.net.connect(host, port)
    s:set_timeout(0.1)
    local req = string.char(0,0,0,0,0,6,unitId,2,0,0,0,6)
    local req = toTwoByte(0) .. toTwoByte(0) .. toTwoByte(6) ..
    string.char(unitId, funcCodes.readInput)..toTwoByte(0) ..toTwoByte(8)
    s:write(req)
    local res = s:read(10)
    s:close()
    if res:byte(10) then
        local out = {}
        for i = 1,8 do
            local statusBit = bit32.rshift(res:byte(10), i - 1) --[[What is bit32.rshift actually doing to the string?  and the same is true for the next line with bit32.band.
            out[#out + 1] = bit32.band(statusBit, 1)
        end
        for i = 1,5 do
            tDT.value["return_low"] = tostring(out[1])
            tDT.value["return_high"] = tostring(out[2])
            tDT.value["sensor1_on"] = tostring(out[3])
            tDT.value["sensor2_on"] = tostring(out[4])
            tDT.value["sensor3_on"] = tostring(out[5])
            tDT.value["sensor4_on"] = tostring(out[6])
            tDT.value["sensor5_on"] = tostring(out[7])
            tDT.value[""] = tostring(out[8])
            end
        end
        return tDT
    end


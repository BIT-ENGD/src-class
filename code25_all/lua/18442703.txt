function event()
    print("Event started")
    --simply as it can be
    for i = 1,1000 do
        coroutine.yield()
    end
    --[[ wait
    local wait = 0.0
    print("Waiting 5 sec")
    while wait < 5.0 do
        wait = wait + coroutine.yield()
    end
    --]]
    --[[ then play sound
    local alarmSound = SoundsManager.getSound("sounds/alarm.ogg")
    alarmSound:play()
    while alarmSound:isPlaying() do
          coroutine.yield()
    end
    --]]
    print("Event ended")
end

local FPS = 
{
   fps = 0,
   lastFPS = 0,
   framesTime = 0.0
}

function FPS.render(frameDelta)
    FPS.fps = FPS.fps + 1
    FPS.framesTime = FPS.framesTime + frameDelta
    if FPS.framesTime >= 1.0 then
       if FPS.fps ~= FPS.lastFPS then
          print("[FPS] ".. FPS.fps)
          FPS.lastFPS = FPS.fps
       end
       FPS.framesTime = 0.0
       FPS.fps = 0
    end    
end

return FPS

require "event"
local EventsManager = {}

function EventsManager.init()
   EventsManager.event = coroutine.create(event) 
end

function EventsManager.update(frameDelta)
    if coroutine.status(EventsManager.event) ~= 'dead' then
       coroutine.resume(EventsManager.event, frameDelta)
    end
end

return EventsManager

EventsManager = require "EventsManager"
FPS = require "FPS"

EventsManager.init()

while true do
local frameDelta = getFrameDelta() --getting frameDelta somehow
EventsManager.update(frameDelta)-- comment this and fps will be ok
--render scene 
FPS.render(frameDelta)
end


    public static string Decompress(byte[] value, Encoding Encoding = null)
    {
        if (value == null) return null;
        Encoding = Encoding ?? System.Text.Encoding.Unicode;
        using (var inputStream = new MemoryStream(value)) 
        using (var outputStream = new MemoryStream())                              
        {
            using (var zip = new GZipStream(inputStream, CompressionMode.Decompress))  
            {
                byte[] bytes = new byte[4096];
                int n;
                while ((n = zip.Read(bytes, 0, bytes.Length)) != 0)
                {
                    outputStream.Write(bytes, 0, n);
                }
                zip.Close();
            }
            return Encoding.GetString(outputStream.ToArray());    
        }
    }

    static void Main(string[] args)
    {
        const string encodedText = "H4sIAAAAAAAEAHMNCvIPUlRwzS0oqVQoLinKzEtXyC9SyCvNyYFxM/OAqKC0RKEgsSgxN7UktQgAwOaxgjUAAAA=";

        byte[] decodedBytes = Convert.FromBase64String(encodedText);

        var decodedString = Decompress(decodedBytes, Encoding.UTF8);

        Console.WriteLine(decodedString);

    }

local byte_table={};
base64.base64_decode(res_string):gsub(".", function(c){
 table.insert(byte_table, string.byte(c))
})


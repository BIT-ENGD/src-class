11.4
S = R, { ',', R }
R = N, [ '-', N ]
N = digit+, [ '.', digit+ ]

1-9,10.1-11,12
local L = require "lpeg"
local LV, LP, LC, LR, floor = L.V, L.P, L.C, L.R, math.floor
local version = "7.25"

local function check(a, op, b)
    if op and a+0 <= version and version <= b+0 then
        return a..op..b -- range
    elseif not op and floor(version) == floor(a+0) then
        return a        -- single item
    end
end
local grammar = LP({ "S",
    S = LV"R" * (LP"," * LV"R")^0,
    R = LV"V" * (LC(LP"-") * LV"V")^-1 / check,
    V = LC(LV"D" * (LP"." * LV"D")^-1),
    D = (LR("09")^1),
})
function checkversion(str)
    return grammar:match(str)
end

checkversion("1-7,8.1,8.3,9")
nil
check
grammar:match(...)
checkversion
nil
false
string:match
false
nil
check
nil, "1", nil, nil

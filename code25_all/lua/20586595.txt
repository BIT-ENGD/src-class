paramMap.insert(std::make_pair(hash64("vehicleId"), std::string("004")));
resourceManager.createResource(ResourceType("Car"), paramMap);

function findBike(carId)
   bikeParam = { vehicleId = carId }
   return ResourceManager.findResource('car', bikeParam)
end

hashkey ('vehicleId')
int64
int64
void pushUInt64(lua_State *L, GEM::GUInt64 v)
{
  Int64Ref::Handle handle = Int64Ref::getInstance().allocateSlot(v);
  lua_pushlightuserdata(L, reinterpret_cast<void*>(handle));
  luaL_setmetatable(L, s_UInt64LuaName);
}

a = createLightUserDataType1()
b = createLightUserDataType2()
a:someFunction()

b

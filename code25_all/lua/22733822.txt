function checkCollision(val, axis, oldPos)
    if axis == "x" and char.tX then
        local tileX = math.ceil(val/absoluteTileSize)
        local tileY = math.floor(oldPos/absoluteTileSize)

        local tl, tr, bl ,br = getTouchingTiles(tileX, tileY)
        local isOnFlatSurface = math.abs(oldPos/absoluteTileSize-tileY) <= .00001--might not be a good i

        if isOnFlatSurface then
            if tr.canCollide then
                char.tX = nil
                char.x = tileX * absoluteTileSize - absoluteTileSize
            end
        else
            if br.canCollide then
                char.tX = nil
                char.x = tileX * absoluteTileSize - absoluteTileSize
            end
        end
    elseif axis == "y" then
        local tileX = math.ceil(oldPos/absoluteTileSize)
        local tileY = math.floor(val/absoluteTileSize)

        local tl, tr, bl ,br = getTouchingTiles(tileX, tileY)

        if bl.canCollide or br.canCollide then
            char.tY = nil
            char.y = tileY * absoluteTileSize --// - absoluteTileSize
            --/////////////idk why i don't need to subtract that but it works
        elseif not char.tY then--start falling if walk off something
            char.tY = love.timer.getTime()
            char.yi = char.y
            char.vyi = 0
        end
    end
end


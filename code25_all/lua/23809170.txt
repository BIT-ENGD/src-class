local type, pairs, table, tostring, io, os, print = type, pairs, table, tostring, io, os, print
local file
LEVELS = {}
LEVELS ["ERROR"] = 0
LEVELS ["WARN"] = 1
LEVELS ["INFO"] = 2
LEVELS ["DEBUG"] = 3
print (LEVELS.WARN)
local level

function init (outputFile, debugLevel)
  level = debugLevel
  file = io.open(outputFile, "a")
  local ret
  if (file == nil) then ret = false else ret = true end
  return ret
end

function warn (message)
   if level ~= nil and level >= LEVELS.WARN and file ~= nil then
     log(message)
   end
end
function log (message)
   local timestamp = os.date()

    file:write(timestamp..' - '..message..'\n')
    file:flush()
end

function deInit ()
   file:close()
end

init ("testInsideLogger.lua", 3)
warn("HI")
deInit()


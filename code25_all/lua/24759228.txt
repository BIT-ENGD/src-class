            currentXLocObstacleBird = currentXLocObstacleBird - SCREEN_WIDTH      
    while (currentXLocObstacleBird < SCREEN_WIDTH) do
        obstacleType = math.random(4)
        local  birdHeight = math.random(display.topStatusBarContentHeight + 200, display.contentHeight - 200)
        if (obstacleType % 2 == 0) then  -- one in two chance of displaying a each of the snake
            obstacleType = mathDiv(obstacleType, 2)                
            if (obstacleType == 1) then
                obstacles_Variables.imgBirdY = display.newSprite( otherSpriteSheet , birdSequenceData2)
                obstacles_Variables.imgBirdY:play()
                if (a == 1) then  -- if it is for first screen then start from zero otherwise start from loc+screnwidth ie. second screen
                    obstacles_Variables.imgBirdY.x = currentXLocObstacleBird
                    birdYPolygon = display.newPolygon(currentXLocObstacleBird, birdHeight, {0,20, 50,0, 115,50, 50,40 })
                else
                    obstacles_Variables.imgBirdY.x = currentXLocObstacleBird + SCREEN_WIDTH
                    birdYPolygon = display.newPolygon(currentXLocObstacleBird + SCREEN_WIDTH, birdHeight, {0,20, 50,0, 115,50, 50,40 }) -- birdShape)
                    physics.addBody(birdYPolygon, "static",{density = 0, bounce = 0, friction = 0 })                        
                end 
                obstacles_Variables.imgBirdY.y = birdHeight
                obstacles_Variables.imgBirdY.name = "yelloBird1" 
                obstacles_Variables.imgBirdY.screenIndex = a     -- indicates which screen this object belongs to (from SCREENS_PER_LEVEL)
                obstacles_Variables.imgBirdY.isVisible = false
                obstacles_Variables.imgBirdY.speed = Speed_Constant_Array.SPEED_BIRD_1
                obstacles_Variables.imgBirdY:rotate(15)                    
                groupObstacles:insert(obstacles_Variables.imgBirdY)                    
--                    birdYPolygon.name = "yelloBird"
--                    birdYPolygon.screenIndex = a
--                    birdYPolygon.isVisible = false
--                    birdYPolygon.speed = Speed_Constant_Array.SPEED_BIRD_1
--                    groupObstacles:insert(birdYPolygon)
                currentXLocObstacleBird = currentXLocObstacleBird + 2 * WIDTH_YELLOW_BIRD    

            elseif(obstacleType == 2) then
                obstacles_Variables.imgBirdG = display.newSprite( otherSpriteSheet , birdSequenceData)
                obstacles_Variables.imgBirdG:play()
                if (a == 1) then  -- if it is for first screen then start from zero otherwise start from loc+screnwidth ie. second screen
                    obstacles_Variables.imgBirdG.x = currentXLocObstacleBird
                   birdGPolygon = display.newPolygon(currentXLocObstacleBird, birdHeight, {0,20, 50,0, 115,50, 50,40 }) --birdShape2)
                else
                    obstacles_Variables.imgBirdG.x = currentXLocObstacleBird + SCREEN_WIDTH 
                    birdGPolygon = display.newPolygon(currentXLocObstacleBird + SCREEN_WIDTH, birdHeight, {0,20, 50,0, 115,50, 50,40 }) --birdShape2)
                    physics.addBody(birdGPolygon, "static",{density = 0, bounce = 0, friction = 0 })                    
                end
                obstacles_Variables.imgBirdG.y = birdHeight
                obstacles_Variables.imgBirdG.name = "greenBird1"
                obstacles_Variables.imgBirdG.screenIndex = a     -- indicates which screen this object belongs to (from SCREENS_PER_LEVEL)
                obstacles_Variables.imgBirdG:rotate(15)
                obstacles_Variables.imgBirdG.speed = Speed_Constant_Array.SPEED_BIRD_2
                obstacles_Variables.imgBirdG.isVisible = false
                groupObstacles:insert(obstacles_Variables.imgBirdG)

--                    birdGPolygon.name = "greenBird"
--                    birdGPolygon.screenIndex = a     -- indicates which screen this object belongs to (from SCREENS_PER_LEVEL)
--                    birdGPolygon.isVisible = false
--                    birdGPolygon.speed = Speed_Constant_Array.SPEED_BIRD_2
--                    birdGPolygon:setFillColor(1,0,0,0)
--                    groupObstacles:insert(birdGPolygon)

                currentXLocObstacleBird = currentXLocObstacleBird + 2 *            WIDTH_GREEN_BIRD
            end                
        end
        currentXLocObstacleBird = currentXLocObstacleBird + math.random(500, 700)  -- add some spacing for the next decor
        end  


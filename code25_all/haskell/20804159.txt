wC <- getiCount
SC
Snap.Core
log/error.log
runGH
wFile
logError
iCount
Application.hs
runGH :: ConnectionManager b conn => DbPersist conn (NoLoggingT IO) a -> Handler b v a
runGH f = do 
  liftIO $ wFile "runGH"
  withTop' id $ do
    cm <- ask
    SC.logError "runGH2" 
    liftIO $ wFile "runGH2"
    liftIO $ runNoLoggingT (withConn (runDbPersist f) cm)

wFile txt = withFile "fmsg.txt" AppendMode $ \h -> hPutStrLn h ("log msg: " ++ txt)

Site.hs
initDBP :: (MonadIO m, MonadBaseControl IO m) => m (Pool Sqlite)
initDBP = withSqlitePool "mydb.sqlite" 5 $ \pconn -> return pconn

handleCntPage :: Handler App ({- AuthManager -} App) ()
handleCntPage = do 
    SC.logError "handleCntPage, 1st line"
    writeText $ T.pack ("Soon we count number of db-items. " )
    wC <- getiCount
    SC.logError "handleCntPage, almost last line"
    writeText $ T.pack ("we count number of db-items." ++ (show wC))

getiCount :: (ConnectionManager b conn, PersistBackend (DbPersist conn (NoLoggingT IO))) => Handler b v Int
getiCount = do
  liftIO $ wFile "getiCount"
  SC.logError "getiCount, 1st line"
  i <- runGH $ iCount -- this does not work
  liftIO $ wFile "getiCount2"
  -- let i = 10 -- this works
  SC.logError "getiCount, after call"
  return i

iCount
iCount :: (PersistBackend m) => m Int
iCount = do
   liftIO $ wFile "iCount"
   i <- countAll (undefined :: Items)
   liftIO $ wFile "iCount2"
   -- let i = 10 -- commenting the above line and using this one still crashes
   return i


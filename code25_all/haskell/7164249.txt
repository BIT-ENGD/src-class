Cont
Identity
Cont
ghc --make Test.hs -o test && ./test
sum0 n = if n==0  then  0  else n + sum0 (n-1)
sum1 n = if  n==0  then return 0 else sum1 (n-1) >>= \ v ->  seq v (return (n+v))
sum2 n k = if n == 0 then k 0 else sum2 n (\v -> k (n + v))
sum3 n k = if n == 0 then k 0 else sum3 n (\ !v -> k (n + v))
sum4 n k = if n == 0 then k 0 else sum4 n (\ v -> seq v ( k (n + v)))
sum5 n = if  n==0  then return 0 else sum5 (n-1) >>= \ v ->   (return (n+v)) 

main = print (sum0 3000000)
main = print (flip runCont id (sum1 3000000))
seq
n
main = print (flip runCont id (sum5 3000000))
main = print (flip runCont (const 0) (sum1 3000000))
main = print (flip runCont (const 0) (sum5 3000000))
main = print (sum2 3000000 (const 0))
sum2
sum5
sum5
Cont
main = print (sum3 3000000 (const 0))
sum3
sum1
Cont
main = print (runIdentity (sum1 3000000))
main = print (sum3 3000000 id)
sum1
main = print (sum4 3000000 id)
main = print (sum [1 .. 3000000])
sum = foldl (+) 0
main = print (foldl' (+) 0 [1 .. 3000000])

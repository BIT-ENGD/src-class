data Tree a = Empty | Node a (Tree a) (Tree a)

(-<)
1-<(2,3)      1-<(2-<(3,4),5)      1-<(Empty,2-<(4,5))
  1                 1                        1
 / \               / \                        \
2   3             2   5                        2
                 / \                          / \
                3   4                        4   5

a -> (a, a) -> Tree a)
a
Tree b
b
a
f :: a -> Int
f (Just _) = 1
f _ = 0

Maybe a
Just
Maybe a -> Int
(Right 2 -<(Right 3, Left (Right 4 -<(Right 1, Right 5)))

run2D
oneR
Prelude.read: no parse
run2D :: [String] -> IO()
run2D [file,r] = do
    thefile <- readFile file
    let [v,e,f] = lines thefile
    print(pullChi(eg2D (verticesMake (read v)) (read e) (read f) (read r)) (read r))

oneR :: [String] -> IO()
oneR [file] = do
    thefile <- readFile file
    let [v,e,f] = lines thefile
    print(oneRobot (read v) (read e) (read f))

7
[[0,1],[1,2],[0,2],[1,3],[2,3],[1,4],[2,4],[0,6],[1,6],[1,5],[5,6],[4,5]]
[[0,1,2],[1,2,3],[1,2,4],[0,1,6],[1,5,6],[1,4,5]]

oneRobot :: Integer -> [Integer] -> [Integer] -> Integer -- Takes #vertices, list of edges and robots and returns the euler characteristic where number of robots = 1
oneRobot v e f = v - genericLength(e) + genericLength(f)


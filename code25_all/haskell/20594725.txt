data Tree = Leaf String | Node Tree String Tree

subTree :: Tree -> Tree -> Bool
subTree (Leaf s) t = inTree s t
subTree (Node t1 s1 t2) (Leaf s2) = False
subTree (Node t1 s1 t2) (Node t3 s2 t4) = 
   ((s1 == s2) && (subTree t1 t3) && (subTree t2 t4)) ||
   subTree (Node t1 s1 t2) t3 ||
   subTree (Node t1 s1 t2) t4

inTree :: String -> Tree -> Bool
inTree s1 (Leaf s2) = (s1 == s2)
inTree s1 (Node t1 s2 t2) = (s1 == s2) || inTree s1 t1 || inTree s1 t2


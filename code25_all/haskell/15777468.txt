invFib :: Integer -> Maybe Integer

fibs :: [Integer]
fibs = 0:1:(zipWith (+) fibs (tail fibs)) 

invFib 0
Just 0
invFib 1
Just 1
Just 2
map invFib [54, 55, 56]
[Nothing,Just 10,Nothing]
invFib (fibs !! 99)
Just 99
findNum :: [Integer] -> Integer -> Integer -> Integer
findNum x:xs y z = if x == y
                then z
                else findNum xs y (z+1)

invFib :: Integer -> Maybe Integer
invFib n = if n < 0
        then Nothing
        else fmap fromIntegral (elemIndex n fibs)


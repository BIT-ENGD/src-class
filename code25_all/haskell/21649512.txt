data Foobar x =
  Foo1 {field1 :: x, field2 :: String} |
  Foo2 {field1 :: x, field3 :: Int} |
  Foo3 {             field4 :: Bool} |
  Foo4 {             field2 :: String, field4 :: Bool}

x
fmap
transform :: (x -> y) -> Foobar x -> Foobar y
transform fn foobar =
  case foobar of
    Foo1 {} -> foobar {field1 = fn (field1 foobar)}
    Foo2 {} -> foobar {field1 = fn (field1 foobar)}
    _       -> foobar

fn
fn

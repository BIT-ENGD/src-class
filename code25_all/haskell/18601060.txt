getUserStudentsR :: UserId -> Handler TypedContent
getUserStudentsR userId = 
      getStudentEntitiesForCoach userId 
      >>= returnTypedContent . map toUserStudentResponse 

getStudentEntitiesForCoach :: UserId -> HandlerT App IO [Entity Student]
getStudentEntitiesForCoach coachId = 
    runDB $ selectList [StudentPrimaryCoachId ==. Just(coachId)] [] 

data UserStudentResponse = StudentResponse (Key Student) Student

instance ToJSON UserStudentResponse where
    toJSON (StudentResponse studentId student) = 
          object
                  [
                      "login" .= studentLogin student
                      , "studentId" .= studentId
                      , "firstName" .= studentFirstname student
                      , "lastName" .= studentLastname student

                  ]

toUserStudentResponse :: (Entity Student) -> UserStudentResponse
toUserStudentResponse (Entity studentId student) 
    = StudentResponse studentId student

returnTypedContent x = selectRep $ do 
                          provideJson x

returnTypedContent x = selectRep $ do 
                         -- if ToJSON x -- 
                            provideJSON x
                         -- if ToHTML x -- -- note this is not an either or
                            provideRep $ return $ toHtml $ a


worldHandler :: ProcessState -> JobCount -> IO ()
worldHandler world jCount = do
   putStrLn "Entered worldHandler"
   jcount <- takeMVar jCount
   if jcount > 0
      then incrementThenDone jcount
      else doJobProcessing jcount
      where incrementThenDone jcount = do
                putMVar jCount (jcount+1)


            doJobProcessing jcount = do
                putMVar jCount (jcount+1)
                preProcess world
                initiateJob world
                makeChart world

main
main :: IO ()
main = do
    world <- (newEmptyMVar :: IO ProcessState)
    jCount <- (newMVar 0 :: IO JobCount)
    installHandler userDefinedSignal1 (Catch $ worldHandler world jCount) Nothing
    forever (threadDelay 10000)

preProcess
initiateJob
makeChart
jCount
logError
jCount > 0
jCount == 0
readProcessWithExitCode
[preProcess, initiateJob, makeChart]
jobProcessor

type MonadNumState a m = (MonadState a m, Num a)

MonadNumState
MonadNumState a m
class Iterator t where
  type MonadIter t a m :: Constraint
  next :: (MonadIter t a m) => m t
  ...

instance Iterator Foo where
  type MonadIter Foo a m = (MonadState a m, Num a)
  ...

instance Iterator Bar where
  type MonadIter Bar a m = (MonadRandom m, MonadSplit a m, RandomGen a)
  ...

a
next
a
MonadState
instance (MonadState s m) => MonadStateFamily m where
  type St m = s
  get' = get
  ...

instance (MonadStateFamily m) => MonadState (St m) m where
  get = get'
  ...

Foo.hs:25:3:
The RHS of an associated type declaration mentions type variable `s'
  All such variables must be bound on the LHS

s

f4 :: Int -> (forall a.a->a)

f4' :: forall a. Int -> a -> a

f5 :: Int -> (forall a. (forall b. b -> a) -> a)
f5' :: forall a. Int -> (forall b. b -> a) -> a

type Lens' s a = forall f. Functor f => (a -> f a) -> s -> f s

Prelude> let f5 :: Int -> (forall a. (forall b. b -> a) -> a); f5 i f = f i
Prelude> :t f5
f5 :: Int -> (forall b. b -> a) -> a
Prelude> 


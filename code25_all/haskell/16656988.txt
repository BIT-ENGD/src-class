{-# LANGUAGE DeriveDataTypeable #-}
import Data.Typeable
import Data.Fixed

data E18 = E18 deriving (Typeable)
instance HasResolution E18 where resolution _ = 10^18
type MyDouble = Fixed E18

--myRound :: MyDouble > MyDouble 
--myRound x  = round x

Prelude Data.Fixed> :load myfile.hs
Prelude Data.Fixed> round (3.1::MyDouble)
3
Prelude Data.Fixed>

myRound :: MyDouble -> MyDouble 
myRound x  = round x

Prelude Data.Fixed> :load myfile.hs
No instance for (Integral MyDouble)
  arising from a use of round


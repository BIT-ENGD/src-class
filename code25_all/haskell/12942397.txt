let zero = (\f z -> z)
let one = (\f z -> f z)
let two = (\f z -> f (f z))
let iszero = (\n -> n (\x -> (\x y -> y)) (\x y -> x))
let mult = (\m n -> (\s z -> m (\x -> n s x) z))

:t (\n -> (iszero n) one (mult one one))

:t (\n -> (iszero n) one (mult n one))

iszero
mult

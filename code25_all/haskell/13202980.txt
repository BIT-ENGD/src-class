mb
model
attribute
value
attribute
dmiattr
rev
attribute
model
attribute
rev
dmiattr
import Text.XML
import Text.XML.Cursor
import qualified Data.Text as T



getProfiles :: AdviseConf -> IO () -- AdviseResult
getProfiles  (AdviseConf model mb) = do
   doc <- Text.XML.readFile def xmlFile
   let cursor = fromDocument doc
   _ <- Prelude.writeFile "test.txt" $
        show                         $
        cursor                       $//
        check findNode               &.// -- &//
        attributeIs "model" "460"    &.//
        check findMB                 &.//
        followingSibling             &.//
        attributeIs "value" "GF615M-P33  (MS-7597)" &.//
        attribute "rev"
   return ()

findNode :: Cursor -> Bool
findNode c = case (attribute "rev" c) of
              []  -> False
              otherwise -> True

findMB :: Cursor -> Bool
findMB c = case ( attribute "value"  c) of
            [] -> False
            otherwise -> True


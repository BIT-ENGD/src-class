srdetectcolour' :: Scene -> Ray -> Maybe (Surface, Scalar) -> Colour
srdetectcolour' scene (Ray rx rv) (Just (s,d)) = zipWith (+) lightadded (surface_colour s)
where lightsvisible :: [Light]
      lightsvisible = lightsvisiblefrom intersectpoint scene
      lightadded :: Colour
      lightadded = (foldr (zipWith (+)) black . map effectivelight) lightsvisible
      effectivelight :: Light -> Colour
      effectivelight (v,c) = map (round . (*10000.0) . (/ (vector_sum ((intersectpoint - v) * (intersectpoint - v)))) . fromInteger) c
      intersectpoint = (rx + (mult d rv))

lightadded
foldr
effectivelight
foldr

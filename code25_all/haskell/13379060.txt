f 0 acc = return (reverse acc)
f n acc = do
    v  <- getLine
    f (n-1) (v : acc)

do
f 0 acc = return (reverse acc)
f n acc = getLine >>= \v -> f (n-1) (v : acc)

f n acc = (>>=) getLine (\v -> f (n-1) (v : acc))

f
>>=
IO
>>=
do
f = do
    ...
    f ...

f ...  =  (...) >>= \x -> f ...

[]
f 0 acc = acc
f n acc = do
    r <- acc
    f (n - 1) (map (r +) acc)

f n acc = acc >>= \r -> f (n - 1) (map (r +) acc)
        = (flip concatMap) acc (\r -> f (n - 1) (map (r +) acc))


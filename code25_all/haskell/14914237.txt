import cmath

def secondgrade(a,b,c):
     d=b**2-4*a*c
     return ((-b+cmath.sqrt(d))/2*a,(-b-cmath.sqrt(d))/2*a)

import Data.Complex

csqrt :: Double->Complex Double
csqrt a = if a<0 then 0.0 :+ sqrt(abs(a)) else sqrt(a) :+ 0.0

secondgrade :: Double->Double->Double->(Complex Double,Complex Double)
secondgrade a b c = let d = b^2 - 4*a*c
                    denominator=2*a :+ 0
                    b'=(-b) :+ 0
                    solution1=b'+(csqrt d)
                    solution2=b'-(csqrt d)
                 in (solution1/denominator,solution2/denominator)


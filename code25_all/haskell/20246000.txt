module Timeit (timeit, timeCatch) where
import Data.Time.Clock

timeit::IO ()->IO (Float)
timeit io=do
    (time,())<-timeCatch io
    return time

timeCatch::IO (a)->IO (Float,a)
timeCatch io=do
    start  <-getCurrentTime
    result <-io
    end    <-getCurrentTime
    return $! (realToFrac (diffUTCTime end start), result)

test=do
    putStrLn "What is your name?"
    name <- getLine
    putStrLn $ "Your name is "++name++"."

theking@ChrisLaptopUbuntu1304:~/Desktop/Haskell$ cd ~/Desktop/Haskell/; ghci
GHCi, version 7.6.3: http://www.haskell.org/ghc/  :? for help
Loading package ghc-prim ... linking ... done.
Loading package integer-gmp ... linking ... done.
Loading package base ... linking ... done.
Prelude> import Timeit

<no location info>:
    Could not find module `Timeit'
    Perhaps you meant Time (needs flag -package haskell98-2.0.0.2)


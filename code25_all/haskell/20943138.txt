runFormPost
myForm :: ModelId -> Model -> Html -> MForm Handler (FormResult MyData, Widget)
myForm rid rec extra = do
     -- whamlet code here

forM
widgets <- forM rs' $ \(Entity rid rec) ->
          runFormPost $ myForm rid rec

widgets
widgets <- forM rs' $ \(Entity rid rec) ->
          return ("Test", runFormPost $ myForm rid rec)

x
$forall (x,((res,widget), enctype)) <- widgets
     <div>
        <form method=post action=@{HandlerR hId} enctype=#{enctype}>
           ^{widget}

Couldn't match expected type `((t0, a1), a0)'
            with actual type `Handler ((FormResult MyData, Widget), Enctype)'
Expected type: [(t1, ((t0, a1), a0))]
  Actual type: [(t1,
                 Handler ((FormResult MyData, Widget), Enctype))]
In the second argument of `Data.Foldable.mapM_', namely `widgets'

fmap
liftM
forM or map
Handler
Handler

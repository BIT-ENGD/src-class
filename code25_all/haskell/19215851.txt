-- Finite State Machine M = (Q, q0, F, d)

type FSM = ([Int], Int, [Int], [(Int,Char,Int)])

testFSM :: FSM

testFSM = ( [ 1, 2, 3 ], 1, [ 3 ], [ ( 1, 'a', 2 ), ( 2, 'b', 3 ), ( 1, 'b', 1 ) ] )

fsmGetQ fsm = [ q | ( q, q0, f, d ) <- fsm ]

<interactive>:102:9:
    Couldn't match type `([Int], Int, [Int], [(Int, Char, Int)])'
                  with `[(t0, t10, t20, t30)]'
    Expected type: [(t0, t10, t20, t30)]
      Actual type: FSM
    In the first argument of `fsmGetQ', namely `testFSM'
    In the expression: fsmGetQ testFSM
    In an equation for `it': it = fsmGetQ testFSM


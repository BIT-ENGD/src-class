myFilter p xs = foldr step [] xs
    where step x ys | p x       = x : ys
                    | otherwise = ys

myFilter odd [1,2,3,4]

foldr step [] [1,2,3,4]

step 1 (foldr step [] [2,3,4])

step 1 (step 2 (foldr step [] [3,4]))

step 1 (step 2 (step 3 (foldr step [] [4])))

step 1 (step 2 (step 3 (step 4 (foldr step [] []))))

foldr step [] []
[]
step 1 (step 2 (step 3 (step 4 [])))

step
step
myFilter
step x ys | p x       = x : ys
          | otherwise = ys

p
odd
step 1 (step 2 (step 3 (step 4 [])))

x = 4
step
4
ys
[]
step 1 (step 2 (step 3 []))

step
x = 3
3
x:ys
3 : []
[3]
step 1 (step 2 [3])

step
x = 2
2
ys
[3]
step 1 [3]

x = 1
1
x : ys
1 : [3]
[1,3]
myFilter

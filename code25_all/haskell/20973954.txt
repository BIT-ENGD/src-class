keywords :: String -> [String]
keywords = words . map (\x -> if isAlpha x then x else ' ')

count :: Ord a => [a] -> [(a,Int)]
count = map (head &&& length) . group . sort

wordcount = count . keywords 

wordcou :: IO ()
wordcou  = 
   do
    putStr "Please text file name :"
    textfile <- getLine
    text <- readFile textfile
    let result = wordcount text
    putStr result

ERROR file:.\project.hs:194 - Type error in application
*** Expression     : putStr result
*** Term           : result
*** Type           : [([Char],Int)]
*** Does not match : [Char]


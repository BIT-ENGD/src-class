f :: Int -> [a] -> a
f idx str = last $ (take . succ) idx str

f :: Int -> [a] -> a
f = last $ (take . succ)

Couldn't match expected type `[a]'
       against inferred type `Int -> [a1] -> [a1]'
In the second argument of `($)', namely `(take . succ)'
In the expression: last $ (take . succ)
In the definition of `f': f = last $ (take . succ)


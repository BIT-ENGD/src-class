lift
ask :: m r
m
MonadReader r m
(Monoid w, MonadState s m) => MonadState s (WriterT w m)
  MonadWriter w m => MonadWriter w (StateT s m)
data
Functor
ProgramT
operational
minioperational
instance (Monad m, Operational ILang m) => Operational ILang (ProgramT SLang m) where
instance (Monad m, Operational f m) => Operational f (ProgramT g m) where

tell :: (Show a) => [a] -> String  
tell [] = "The list is empty"  

(Show a)
a
a
tell :: (Show a) =>a->String

a
pm :: (Show a) =>a->String
pm 'g'="wow"

 Could not deduce (a ~ Char)
from the context (Show a)
  bound by the type signature for pm :: Show a => a -> String
  at facto.hs:31:7-26
  `a' is a rigid type variable bound by
      the type signature for pm :: Show a => a -> String at facto.hs:31:7
In the pattern: 'g'
In an equation for `pm': pm 'g' = "wow"

a
Show
pmn :: Char->String
pmn 'g'="wow"

Show

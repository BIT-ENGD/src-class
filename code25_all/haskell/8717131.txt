multien :: [(Integer , Integer)] -> Integer
multien [] = 1
multien ((x,y):z) = y* multien z

enchelper2 :: [(Integer, Integer)] -> Integer -> Integer

(z:((mod x y),y))
Couldn't match expected type (Integer , Integer) with actual Type [(Integer, Integer)]

enchelper :: Integer -> [Integer] -> [(Integer, Integer)] -> [(Integer, Integer)]
enchelper x (y:ys) z = if((enchelper2 (z:((mod x y),y)) (multien z:((mod x y),y))) == x) then z:[] else (z:((mod x y),y):(enchelper x ys z:((mod x y),y)))


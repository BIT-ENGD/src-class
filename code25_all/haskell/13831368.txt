conjGrad :: (Floating a, Ord a, Show a) => a -> SpMCR a -> SpVCR a -> SpVCR a -> (SpVCR a, Int)
conjGrad tol mA b x0 = loop x0 r0 r0 rs0 1
  where r0  = b - (mulMV mA x0)        
        rs0 = dot r0 r0
        loop x r p rs i
          | (varLog "residual = " $ sqrt rs') < tol = (x',i)          
          | otherwise                               = loop x' r' p' rs' (i+1)
          where mAp = mulMV mA p
                alpha = rs / (dot p mAp)
                x' = x + (alpha .* p)
                r' = r - (alpha .* mAp)
                rs' = dot r' r'
                beta = rs' / rs
                p'  = r' + (beta .* p)



(.*) :: (Num a) => a -> SpVCR a -> SpVCR a
(.*) s v = fmap (s *) v 


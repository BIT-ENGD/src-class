primes = 2 : [ x | x <- [3..], all (\p -> (mod x p) /= 0) primes]

>take 2 primes
[2ERROR - C stack overflow

take 2 primes
primes = 2 : [ 3 | all (\p -> (mod 3 p) /= 0) [2] ]

mod 3 2 == True
all (\p -> (mod 3 p) /= 0) == True
take 2 primes == [2, 3]
primes = 2 : [ x | x <- [3..], all (\p -> (mod x p) /= 0) (takeWhile (<= (ceiling (sqrt (fromIntegral x)))) primes)]

test: <<loop>>

Monad m
Monad n
m (n a)
n (m a)
(>>=)
return
(>>=)
m
Maybe
reorder :: (Monad n) => Maybe (n a) -> n (Maybe a)
reorder Nothing = return Nothing
reorder (Just x) = do
    x' <- x
    return $ Just x'

reorder :: (Monad n) => [n a] -> n [a]
reorder [] = return []
reorder (x:xs) = do
    x'  <- x
    xs' <- reorder xs
    return (x':xs')

Applicative
reorder (Just x) = Just <$> x
reorder (x:xs) = (:) <$> x <*> (reorder xs)


monadiccp
cabal install Monatron
cabal unpack monadiccp
ghci Control/CP/ComposableTransformers.hs
Control/CP/ComposableTransformers.hs:246:31:
    Couldn't match expected type `Tree solver0 a1 -> Tree solver0 a1'
                with actual type `forall a2. Tree solver a2 -> Tree solver a2'
    Expected type: Tree solver0 a1 -> Tree solver0 a1
      Actual type: Bound solver
    In the second argument of `BBP', namely `bound''
    In the second argument of `($)', namely `BBP (v + 1) bound''
Failed, modules loaded: Control.CP.Transformers, Control.CP.SearchTree, Control.CP.Solver, Control.CP.Queue, Control.CP.Debug, Control.CP.PriorityQueue, Control.Mixin.Mixin.

   continue $ BBP (v + 1) bound' 

   continue $ BBP (v + 1) (undefined :: Tree solver0 a1 -> Tree solver0 a1)

   let x = (undefined :: Tree solver0 a1 -> Tree solver0 a1)
   continue $ BBP (v + 1) x

Control/CP/ComposableTransformers.hs:247:19:
    Couldn't match type `a10' with `a1'
      because type variable `a1' would escape its scope
    This (rigid, skolem) type variable is bound by
      a type expected by the context: Tree solver a1 -> Tree solver a1
    The following variables have types that mention a10
      x :: Tree solver a10 -> Tree solver a10
        (bound at Control/CP/ComposableTransformers.hs:246:12)
    In the second argument of `BBP', namely `x'
    In the second argument of `($)', namely `BBP (v + 1) x'
    In the expression: continue $ BBP (v + 1) x


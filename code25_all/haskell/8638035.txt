{-# LANGUAGE TypeOperators #-}

data True
data False

-- List
data Nil
data Cons x xs

-- Type-level infix operator must begin with ':'
data x ::: xs
infixr 5 ::: -- set precedence level to 5 (tight)

:t (undefined :: True:::Nil)

undefined
True:::Nil
Illegal operator `:::' in type `True ::: Nil'
  Use -XTypeOperators to allow operators in types

-XTypeOperators

(undefined :: True ::: Nil) :: True ::: Nil

{-# LANGUAGE TypeOperators #-}

class And b1 b2 b | b1 b2 -> b where
    andf :: b1 -> b2 -> b

-- truth table
instance And True True True where andf = undefined
instance And True False False where andf = undefined
instance And False True False where andf = undefined
instance And False False False where andf = undefined

{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE FunctionalDependencies #-}

*Main> :t andf (undefined::True) (undefined::False)
          andf (undefined::True) (undefined::False) :: False

:::

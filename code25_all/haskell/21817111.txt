type Parser a = [(a, String)]

return :: a -> Parser a
return v = \inp -> [(v,inp)]

Couldn't match expected type `t0 -> [(a, t0)]'
    with actual type `[(a, String)]'
The lambda expression `\ inp -> ...' has one argument,
but its type `Parser a' has none
In the expression: \ inp -> [(v, inp)]
In an equation for `return': return v = \ inp -> [(v, inp)]
Failed, modules loaded: none.

type Parser a = [(a, String)]

return :: a -> String -> Parser a
return v inp = [(v,inp)]


data Object = Object { logic :: Logic, picture :: Picture }
data Logic = Logic { geometry :: Geometry, someAttributes :: SomeAttributes }
data Geometry = Geometry { coords :: Point, size :: Point }
data SomeAttributes = SomeAttributes { life :: Int, hasGravity :: Bool }

hero position = Object
    (Logic
        (Geometry position (Point 25 55))
        (SomeAttributes 100 True))
    PictureConstructor1

enemy position = Object
    (Logic
        (Geometry position (Point 25 25))
        (SomeAttributes 3 True))
    PictureConstructor2

bullet position = Object
    (Logic
        (Geometry position (Point 5 5))
        (SomeAttributes 0 False))
    PictureConstructor3

--etc. for blocks and everything else

[hero (Point 0 0), enemy (Point 50 0), enemy (Point 100 0), block (Point 0 (negate 30)), block (Point 50 (negate 30)), block (Point 100 (negate 30))]

advance
[Object] -> [Object]
Object
coords
life
size
hasGravity
class Object a where
    size :: Point
    baseLife :: Point
    hasGravity :: Bool
    picture :: Picture

data Hero = Hero { coords :: Point, currentLife :: Int }

instance Object Hero where
    size = Point 25 55
    baseLife = 100
    hasGravity = True
    picture = PictureConstructor1

setHero a@(Hero xy _) = Hero xy (baseLife a)


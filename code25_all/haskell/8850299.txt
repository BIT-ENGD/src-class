string2int :: String -> Int
string2int str = read str::Int

import qualified Control.Exception as E

eVal <- try (print (string2int "a")) :: IO (Either E.SomeException ())
   case eVal of
      Left e -> do { putStrLn "exception"; }
      Right n -> do { putStrLn "good"; }

couldn't match expected type 'E.SomeException()'
with actual type E.IOException
loadfunction = do
{
   x <- string2int getLine
   if( failed parsing int ) call somefunction
   y <- string2int getLine
  if( failed parsing int ) call somefunction

  otherfunction x y
}


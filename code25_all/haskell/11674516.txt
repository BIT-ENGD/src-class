bind :: (a → StdGen → (b,StdGen)) → (StdGen → (a,StdGen)) → (StdGen → (b,StdGen))

a → StdGen -> (b,StdGen)

bind f x seed = let (x',seed') = x seed in f x' seed'

StdGen
bind :: (a → StdGen → (b,StdGen)) → (StdGen → (a,StdGen)) → (b,StdGen)

f:: a -> StdGen -> (b,StdGen)
StdGen -> (a,StdGen)
f
a
StdGen
f
(b, StdGen)
f::a -> StdGen -> (b,StdGen)

f
x'
seed'
StdGen
 bind f x seed = let (x',seed') = x seed in f x' seed'

bind
flip . >>=

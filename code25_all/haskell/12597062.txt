class ScottyString a where
  toContent :: a -> Content
  toText :: a -> T.Text
  fromScotty :: T.Text -> a

instance ScottyString B.ByteString where
  toContent bs = ContentBuilder (fromByteString bs)
  toText bs = toText $ BL.fromChunks [bs]
  fromScotty = B.concat . BL.toChunks . fromScotty

instance ScottyString BL.ByteString where
  toContent bs = ContentBuilder (fromLazyByteString bs)
  toText = decodeUtf8
  fromScotty = encodeUtf8

instance ScottyString T.Text where
  toContent = toContent . encodeUtf8
  toText = id
  fromScotty = id

instance ScottyString String where
  toContent = toContent . T.pack
  toText = T.pack
  fromScotty = T.unpack


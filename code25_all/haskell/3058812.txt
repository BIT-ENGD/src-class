writeFile
invest :: ([Char]->Int->Int->([Char], Int) ) 
 -> [Char]->Int->Int->([Char], Int)
invest myinvest x y = myinvest x y

myinvest :: [Char]->Int->Int->([Char], Int)
myinvest w x y 
 | y > 0 = (w, x + y)
 | otherwise = error "Invest amount must greater than zero"
 where 

maximuminvest :: (Ord a) => [a] -> a
maximuminvest [] = error "Empty Invest Amount List"
maximuminvest [x] = x

maximuminvest (x:xs)   
     | x > maxTail = x  
     | otherwise = maxTail  
     where maxTail = maximuminvest xs

invest :: ( [Char]->Int->Int->([Char], Int) ) -> [Char]->Int->Int-> ([Char], Int)
invest theinvest x y = theinvest x y

theinvest :: [Char]->Int->Int-> ([Char], Int)
theinvest w x y | y > 0 = (w, x + y)
                | otherwise = error "Invest amount must greater than zero"

savefile :: ([Char], Int) -> IO()
savefile (x, y) = do
  let name = fst (x, y)
  let temp = snd(x, y)
  let amount = show temp

  writeFile "C:\\Invest.txt" (name ++ " " ++ amount)

test = savefile . theinvest "asd" 1234 234

 ERROR - Type error in application
 * Expression : savefile . invest theinvest "234" 234 234 
         Term : invest theinvest "234" 234 234 
         Type : ([Char],Int)
 * Does not match : a -> b

([Char],Int)
a -> b

data Sudoku = Sudoku { getSudoku :: [[Maybe Int]] } deriving (Show, Eq)

rows :: Sudoku -> [[Maybe Int]]
rows (Sudoku rs) = rs

columns :: Sudoku -> [[Maybe Int]]
columns = transpose . rows

boxes :: Sudoku -> [[Maybe Int]]
boxes s = a ++ b ++ c
    where a = map (concat . take 3) s1
          b = map (concat . take 3 . drop 3) s1
          c = map (concat . drop 6) s1
          s1 = transpose . map (\xs -> [take 3 xs,take 3 (drop 3 xs), drop 6 xs]) $ rows s


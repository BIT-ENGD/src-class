isSortedUp x y z = if x>y && y>z then True else False

isSortedDown x y z = if x<y && y<z then True else False

import System.Environment
import Up
import Down
main = do
  args<-getArgs
  let a = args !! 0
  let b = args !! 1
  let c = args !! 2
  if (isSortedUp a b c) || (isSortedDown a b c) then return (True) else return(False)

import System.Environment
import Up
import Down  
main = do
  args<-getArgs
  let a = args !! 0
  let b = args !! 1
  let c = args !! 2
  if (isSortedUp a b c) || (isSortedDown a b c) then return(True) else return(False)

module Up (isSortedUp) where
isSortedUp x y z = if x>y && y>z then return(True) else return(False)

module Down (isSortedDown) where
isSortedDown x y z = if x<y && y<z then return(True) else return(False)


textureBinding $ Texture2D $= Just *mytexture*

    -- imports --
import Graphics.Rendering.OpenGL
import Graphics.UI.GLUT
import Data.IORef
import Display
import Bindings
import Control.Monad
import Textures

-- main --
main = do
    (program, _) <- getArgsAndInitialize         -- convenience, return program name and non-GLUT commands
    initialDisplayMode $= [DoubleBuffered, WithDepthBuffer] -- inital display mode
    initialWindowSize $= Size 600 600
    createWindow "OpenGL Basics"
    reshapeCallback $= Just reshape
    angle <- newIORef (0.1::GLfloat) -- linked to angle of rotation (speed?)
    delta <- newIORef (0.1::GLfloat)
    position <- newIORef (0.0::GLfloat, 0.0) -- position, pass to display
    texture Texture2D $= Enabled
    tex <- getAndCreateTextures ["goldblock","pumpkintop"]
    keyboardMouseCallback $= Just (keyboardMouse delta position) --require keys, delta, and position
    idleCallback $= Just (idle angle delta) --ref idle angle and delta
    displayCallback $= (display angle position tex) --ref display angle and delta
    cullFace $= Just Front 
    mainLoop    -- runs forever until a hard exit is called

    -- display (main) --
display angle position tex = do
    clear [ColorBuffer, DepthBuffer]
    loadIdentity --modelview
    shadeModel $= Smooth
    (x,z) <- get position --get current position from init or keys
    translate $ Vector3 x 0 z -- move to the position before drawing stuff
--    DO STUFF HERE
--    texture $ Texture2D $= Just wtfgoeshere
    preservingMatrix $ do
        a <- get angle
        rotate a $ Vector3 (1::GLfloat) 0 0
--        rotate a $ Vector3 0 0 (1::GLfloat)
        rotate a $ Vector3 0 (1::GLfloat) 0
--        scale 0.7 0.7 (0.7::GLfloat)
--        color $ Color3 (0.5::GLfloat) (0.1::GLfloat) (0.1::GLfloat)
        cubeTexture (0.1::GLfloat)
    swapBuffers

--idle (main)
idle angle delta = do
    a <- get angle      -- get existing angle
    d <- get delta      -- get delta
    angle $= a + d      -- new angle is old angle plus plus delta
    postRedisplay Nothing


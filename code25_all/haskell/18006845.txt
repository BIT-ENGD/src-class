f :: [Maybe a] -> Maybe [a]

f [Just 3, Just 5] == Just [3, 5]
f [Just 3, Nothing] == Nothing
f [] == Just []

catMaybes :: [Maybe a] -> [a]
Data.Maybe
catMaybes
Nothing
f
Nothing
f
f :: [Maybe a] -> Maybe [a]
f xs = let ys = catMaybes xs
        in if length ys == length xs 
           then Just ys
           else Nothing

f :: [Maybe a] -> Maybe [a]
f xs = if all isJust xs
        then catMaybes xs
        else Nothing


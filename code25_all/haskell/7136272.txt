chainQuery :: (Enum a, Integral a, Ord b) => a -> b -> [c]
chainQuery n min = map length $ filter beatingLength $ map chain [1..n]
  where
    beatingLength :: [a] -> Bool
    beatingLength xs = length xs > min
    chain :: (Integral a) => a -> [a]
    chain n
      | n <= 1 = [n]
      | even n = n:(chain $ div n 2)
      | otherwise = n:(chain $ n * 3 + 1)


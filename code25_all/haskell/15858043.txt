sumAgent :: [Interaction] -> Agent -> Int
sumAgent xs agent = foldr (\x acc -> acc + sumInteraction agent x) 0 xs

-- Use this in a map call of sumAgent to return the sums of a specific agent
sumInteraction :: Agent -> Interaction  -> Int
sumInteraction agent (Interaction a1 a2 xs )
    | (==) agent a1 = sum $ map fst scores
    | (==) agent a2 = sum $ map snd scores
    | otherwise = 0
    where scores = map score xs

  data Agent = Agent {
                function::[(Bool,Bool)] -> Bool,
                name::String,
                position::(Int,Int),
                dna::DNA
               }
 instance Eq Agent where
        (==) a1 a2 = position a1 == position a2


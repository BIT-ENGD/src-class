ST
data STLike s a = STLike a
class Box box where
  runBox :: box a -> a

run :: Box box => (forall s. box (STLike s a)) -> a
run box = let STLike a = runBox box in a

box (STLike s a)
data STLike s a = STLike a
class Box box where
  runBox :: box a -> a

run :: Box box => (forall s. Eq (box (STLike s a)) => box (STLike s a)) -> a
run box = let STLike a = runBox box in a

Could not deduce (Eq (box (STLike t0 a)))
    arising from a use of `box'
  from the context (Box box)
    bound by the type signature for
               run :: Box box =>
                      (forall s. Eq (box (STLike s a)) => box (STLike s a)) -> a
    at src/TPM/GraphDB/Event.hs:36:8-76
  The type variable `t0' is ambiguous


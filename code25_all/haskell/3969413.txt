{-# LANGUAGE NoImplicitPrelude #-}

import Prelude (Integer, Bool)
import qualified Prelude

class Discrete a where
    (==) :: a -> a -> Bool

instance Discrete Integer where
    (==) = (Prelude.==)

class Monoid a where
    one :: a
    (*) :: a -> a -> a

    fromInteger :: Integer -> a
    fromInteger 1 = one

1' at fromInteger.hs:17:16
     Possible fix: add an instance declaration for (Monoid Integer)
     In the pattern: 1
     In the definition of
one
Prelude.undefined
(Monoid a) => fromInteger

import Data.List
linearRecurrence coef base | n /= (length base) = []
                           | otherwise = base ++ map (sum . (zipWith (*) coef)) (map (take n) (tails a))
  where a     = linearRecurrence coef base
        n     = (length coef)

linearRecurrence [1,1] [0,1] = fibs

fibs!!2000
(linearRecurrence [1,1] [0,1])!!2000
(sum . (zipWith (*) coef))
(id $! (sum . (zipWith (*) coef)))

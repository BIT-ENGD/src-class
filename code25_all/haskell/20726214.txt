t (ErrorT String IO) a
t IO a
module Sample where

import System.IO
import Control.Monad.Reader
import Control.Monad.Error

type Env = String

inner :: ReaderT Env (ErrorT String IO) ()
inner = do
    s <- ask
    fail s

outer :: ReaderT Env IO ()
outer = do
    env <- ask
    res <- lift $ runErrorT $ runReaderT inner env
    case res of
        Left err -> liftIO $ hPutStrLn stderr err
        Right _ -> return ()
    outer

outer :: ReaderT Env IO ()
outer = do
    res <- (hoist runErrorT) inner
    ...

hoist
StateT
ErrorT
outer

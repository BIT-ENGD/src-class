
[("LDPNLNDQQFHUKIWZII",2191.12),("NLNDQQFHUKIWZIIXDC",2195.0696),("NZRAIEUALDPNLNDQQFH",2192.0503)]

writeJSON [("LDPNLNDQQFHUKIWZII",2191.12),("NLNDQQFHUKIWZIIXDC",2195.0696),("NZRAIEUALDPNLNDQQFH",2192.0503)]

    No instance for (MonadSnap m0) arising from a use of `writeJSON'
    The type variable `m0' is ambiguous
    Possible fix: add a type signature that fixes these type variable(s)
    Note: there are several potential instances:
      instance MonadSnap m =>
               MonadSnap (Control.Monad.Trans.Cont.ContT c m)
        -- Defined in `snap-core-0.9.5.0:Snap.Internal.Instances'
      instance (MonadSnap m, Control.Monad.Trans.Error.Error e) =>
               MonadSnap (Control.Monad.Trans.Error.ErrorT e m)
        -- Defined in `snap-core-0.9.5.0:Snap.Internal.Instances'
      instance MonadSnap m =>
               MonadSnap (Control.Monad.Trans.List.ListT m)
        -- Defined in `snap-core-0.9.5.0:Snap.Internal.Instances'
      ...plus 8 others
    In the expression: writeJSON x
    In an equation for `it': it = writeJSON x


{ "LDPNLNDQQFHUKIWZII":2191.12, "NLNDQQFHUKIWZIIXDC":2195.0696, "NZRAIEUALDPNLNDQQFH":2192.0503 }

[("LDPNLNDQQFHUKIWZII",2191.12),("NLNDQQFHUKIWZIIXDC",2195.0696),("NZRAIEUALDPNLNDQQFH",2192.0503)]
snap init barebones
writeJSON result
possibleMatches :: Snap ()
possibleMatches = do
  peptideSequence <- getParam "peptide_sequence"
  weight          <- getParam "weight"
  let sequence = "V(3D)NK(3F)NKEXCNZRAIEUALDPNLNDQQFHUKIWZIIXDC"
  let weight = 2194.9
  let results = calculationResults weight sequence
  let result = take 1 [ seq | (seq,wt) <- results ]
  maybe (writeBS "must specify params in URL")
         writeJSON result

Couldn't match expected type `Maybe a0'
                with actual type `[([Char], Float)]'


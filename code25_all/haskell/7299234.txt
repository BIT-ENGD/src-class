module Main where

import Graphics.UI.SDL as SDL
import Graphics.UI.SDL.Image as SDLi

main = do
    SDL.init [SDL.InitVideo]
    screen <- SDL.setVideoMode 500 500 32 []
    SDL.fillRect screen Nothing (SDL.Pixel 0x00FFFFFF) 

    ball <- SDLi.load "30ball.png"

    SDL.blitSurface ball Nothing screen Nothing

    SDL.flip screen

    delay 2000
    SDL.quit

ball.Transparent<-true
ball.TransparentColor<-Color.FromArgb (0, 255, 0)

module Main where

import Graphics.UI.SDL as SDL
import Graphics.UI.SDL.Image as SDLi

main = do
    SDL.init [SDL.InitVideo]
    screen <- SDL.setVideoMode 500 500 32 []
    SDL.fillRect screen Nothing (SDL.Pixel 0x00FFFFFF) 

    ball <- SDLi.load "30ball.bmp"
    b2 <- convertSurface ball (surfaceGetPixelFormat screen) []

    t <- mapRGB (surfaceGetPixelFormat b2) 0 255 0 

    setColorKey b2 [SrcColorKey, RLEAccel] t 

    SDL.blitSurface b2 Nothing screen Nothing

    SDL.flip screen

    delay 2000
    SDL.quit


reverse
reverse :: [a] -> [a]
reverse [] = []
reverse (x:xs) = (Main.reverse xs) ++ [x]

(xs:x)
x
rotate :: [a] -> [a]
rotate [] = []
rotate (xs:x) = [x] ++ xs

Occurs check: cannot construct the infinite type: a = [a]
When generalising the type(s) for `rotate'


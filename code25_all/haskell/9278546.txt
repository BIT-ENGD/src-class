[[v1]][[v2]]

xyz[[v1]][[v2]]

[[v1]]xyz[[v2]]

import Text.ParserCombinators.Parsec

quantifiedVars = sepEndBy var (string "]]")
var = between (string "[[") (string "") (many (noneOf "]]"))

parseSL :: String -> Either ParseError [String]
parseSL input = parse quantifiedVars "(unknown)" input

main = do {
   c <- getContents;
   case parse quantifiedVars "(stdin)" c of {
      Left e -> do { putStrLn "Error parsing input:"; print e; };
      Right r -> do{ putStrLn "ok"; mapM_ print r; };
   }
}

"[[v1]][[v2]]"
"v1"

"v2"

"xyz[[v1]][[v2]]"
[[...]]
"xyz"
[[...]]

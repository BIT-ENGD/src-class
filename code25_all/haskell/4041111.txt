class Foo a where
    foo :: a

data Type a = Type a

instance (Foo a) => Foo (Type a) where
    foo = Type foo

Type a
Show
a
Foo
Show
Show
Type a
Show
instance (Foo a, Show a) => Show (Type a) where
    show (Type x) = show x

instance (Foo a, Show a) => Show (Type a) where
    show (Type x) = "Blabla " ++ (show x)

show
foo :: a
instance (Foo a, Show a) => Show (Type a) where
    show _ = show foo

foo
foo :: Type a
foo :: a
instance (Foo a, Show a) => Show (Type a) where
    show _ = show (foo :: a)


foldl'
foldl' f z []     = z
foldl' f z (x:xs) = let z' = z `f` x 
                    in seq z' $ foldl' f z' xs

fold'
seq
fold'
seq
deepseq
NFData
foldl_strict f z []     = z
foldl_strict f z (x:xs) = let z' = z `f` x 
                          in deepseq z' $ foldl_strict f z' xs

deepseq
foldl_stricter  f z l      = deepseq z $ foldl_stricter' f z l
foldl_stricter' f z []     = z
foldl_stricter' f z (x:xs) = let z' = deepseq x $ z `f` x 
                             in seq z' $ foldl_stricter' f z' xs

foldl_stricter (\x y -> x + head y) 0 [[1..],[2..]]

fold_stricter
fold_stricter
fold_strict
deepseq
n
O(n)
O(n)
O(1)

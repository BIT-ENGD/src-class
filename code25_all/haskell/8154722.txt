    data SomeData = Number Integer | String String | Bool Bool
                  deriving Eq

    instance Num SomeData where
            (Number x) + (Number y) = Number $ x + y -- It's Ok.
            (Number x) - (Number y) = Number $ x - y -- It's Ok.
            (Number x) * (Number y) = Number $ x * y -- It's ok.
    instance Integral SomeData Where
            (Number x) `div` (Number y) = Number $ x `div` y

main.hs:105:10:
    No instance for (Real SomeData)
      arising from the superclasses of an instance declaration
    Possible fix: add an instance declaration for (Real SomeData)
    In the instance declaration for `Integral SomeData'

main.hs:105:10:
    No instance for (Enum SomeData)
      arising from the superclasses of an instance declaration
    Possible fix: add an instance declaration for (Enum SomeData)
    In the instance declaration for `Integral SomeData'

div
Real Instance
Enum Instance

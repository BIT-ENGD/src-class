findAnagrams :: [String] -> [(String, [String])]
findAnagrams d =
  [x | x <- map (\s -> (s, [if reverse s == t then t ++ "*" else t | t <- d, s /= t && null (t \\ s)])) d, not (null (snd x))]

abase: babes, bases
abased: debase
abasement: basements
abasements: abatements
abases: basses

Prelude Data.List> null ("abatements" \\ "abasements")
False


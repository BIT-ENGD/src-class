State
do
State
State
newtype State s a = State { runState :: s -> (a,s) }

s -> (a,s)
State
pop :: Ord a => State (Heap a) a
pop = State pop'
pop' :: Ord a => Heap a -> (a, Heap a)
-- implementation of pop' goes here

push :: Ord a => a -> State (Heap a) ()
push item = State $ push' item
push' :: Ord a => a -> Heap a -> ((), Heap a)
-- implementation of push' goes here

Not in scope: data constructor `State'
Perhaps you meant `StateT' (imported from Control.Monad.State)

Control.Monad.State
State
State

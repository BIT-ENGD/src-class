import Network (listenOn, accept, PortID(..))  
import Network.Socket (Socket, isSupportedSocketOption, SocketOption(..))
import System.IO (hSetBuffering, hGetLine, hPutStrLn, BufferMode(..), Handle)                                                                        
import Control.Concurrent (forkIO)                                        

echoImpl :: Handle -> IO ()                                               
echoImpl client = do                                                      
    line <- hGetLine client                                                
    hPutStrLn client line                                                  
    echoImpl client                                                        

clientHandler :: Socket -> IO ()                                          
clientHandler socket = do                                                        
    (client, _, _) <- accept socket                                          
    hSetBuffering client NoBuffering                                       
    forkIO $ echoImpl client                                               
    clientHandler socket                                                     

felix :: IO () 
felix = do
    let reuseAddrSupported = isSupportedSocketOption ReuseAddr
    putStrLn $ "ReuseAddr: " ++ show reuseAddrSupported
    socket <- listenOn $ PortNumber 5002
    putStrLn $ "Echo server started .."
    clientHandler socket


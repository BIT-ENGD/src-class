Fix
newtype Fix f = Fx { unFix :: f (Fix f) }

cata :: Functor f => (f a -> a) -> Fix f -> a
cata alg = alg . fmap (cata alg) . unFix

data NatF a = Zero | Succ a   deriving Eq
type Nat    = Fix NatF

Eq
deriving
instance ??? => Eq (Fix f) where
  (==) = ???

???

data TypeData = TypeA Int | TypeB String | TypeC Char deriving (Eq, Show)

[TypeData]
-- Returns a tuple containing (TypeC elements, non-TypeC elements)
partitionTypeCs :: [TypeData] -> ([TypeData],[TypeData])

partition
-- Attempt:
partitionTypeCs data = partition (TypeData -> Bool) data

TypeData -> Bool
isTypeC (TypeC _) = True

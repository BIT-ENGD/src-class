import Data.Sequence ((|>), empty, viewl, EmptyL, length, index)

isprime primes n = let 
        factors = viewl primes
        inner EmptyL = True
        inner (factor :< others) = if n `mod` factor == 0 then False else inner others
        in inner primes

nextPrime primes = let
        findPrime n = if isPrime primes n then n else findPrime (n + 1)
        in primes |> (findPrime $ primes `index` (length primes + 1))


result = head $ foldr (.) id (replicate 1000 nextPrime) [2]

main = putStr $ show result

Data.Sequence' does not export

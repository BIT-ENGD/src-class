Applicative
Control.Applicative
pure ::    x              -> f x
<*>  :: f (x -> y) -> f x -> f y
 *>  :: f  x       -> f y -> f y
<*   :: f  x       -> f y -> f x
<$>  ::   (x -> y) -> f x -> f y
<$   ::    x       -> f y -> f x

Functor
fmap
<$>
x
y
f x
f y
Applicative
pure
return
<*>
foo <$> abc <*> def <*> ghi

*>
<*
<$
<* = const
*> = flip const
<$
entity = do
  var1 <- parser1
  var2 <- parser2
  var3 <- parser3
  ...
  return $ foo var1 var2 var3...


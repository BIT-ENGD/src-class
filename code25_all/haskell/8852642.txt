data MySnaplet = MySnaplet { subSnaplet :: Snaplet SubSnaplet }

data MySnaplet = MySnaplet { _subSnaplet :: Snaplet SubSnaplet }

subSnaplet :: Lens MySnaplet SubSnaplet
subSnaplet = lens _subSnaplet $ \ a b -> a { _subSnaplet = b }

MonadState
MonadState
Snaplet
instance HasSubSnaplet MySnaplet
MySnaplet
MySnaplet
MonadState
MySnaplet -> Snaplet SubSnaplet
Lens MySnaplet (Snaplet SubSnaplet)
Lens (Snaplet MySnaplet) (Snaplet SubSnaplet)
MySnaplet
MySnaplet
b
MonadSnaplet
MySnaplet
SubSnaplet
Snaplet
snap

Warning: Pattern match(es) are overlapped
             In a case alternative: "/" -> ...
Ok, modules loaded: Main.

{-# LANGUAGE OverloadedStrings #-}
import Network.Wai
import Network.Wai.Handler.Warp (run)
import Network.Wai.Middleware.Debug (debug)
import Network.HTTP.Types (statusOK, status404)
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as L
import Data.ByteString.Char8 (unpack)
import Data.ByteString.Lazy.Char8 (pack)
import qualified Data.Text.Lazy as T
import Control.Monad.IO.Class (liftIO, MonadIO)

application req = do
  case unpack $ rawPathInfo req of
    "/items" -> itemsJSON 
    "/" -> indexPage
    _ ->  return $ responseLBS status404 [("Content-Type", "text/plain")]
          "Not found"

indexPage = do
  page <- liftIO $ L.readFile "templates/index.html"
  return $ responseLBS statusOK [("Content-Type", "text/html; charset=utf-8")] page

itemsJSON  =
  return $ responseLBS statusOK 
    [("Content-Type", "application/json; charset=utf-8")] "hi"

main =  do
  run 3000 $ debug $ application

$ ghc -V
The Glorious Glasgow Haskell Compilation System, version 6.12.1


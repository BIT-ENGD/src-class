data FullName {
  first_name :: String,
  middle_name :: String,
  last_name :: String
} deriving Show

newtype UID = UID Integer deriving Show

go :: [(String, String)] -> Maybe FullName
go fvs = do
  first  <- lookup "first_name" fvs
  middle <- lookup "middle_name" fvs
  last   <- lookup "last_name" fvs
  return $ FullName first middle last

go :: [(String, String)] -> Maybe UID
go fvs = do
  uid <- lookup "uid" fvs
  return $ UID (read uid)

go RealName ["first_name","middle_name","last_name"] fvs
go UID ["uid"] fvs


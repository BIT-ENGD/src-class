data F = F Float Int, Int

func :: F -> F-> Q  

myfunc :: F -> [F] -> Q
myfunc y [] = func y y -- func deals with the same data element calls
myfunc y (x:xs) = foldl func y (x:xs)

"Couldn't match expected type 'F' against inferred type 'Q'. 
In the first argument of 'foldl', namely 'myfunc'
In the expression: foldl func y (x:xs)


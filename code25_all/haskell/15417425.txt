import Data.List (groupBy)

makeGroups xs = 
  map concat $ groupBy (\a b -> head b == last a + 1) (groupBy mGroups0 xs)
    where mGroups0 = \a b -> a == length xs && elem b [1,2] 
                             || b /= length xs && b == a + 1

*Main> makeGroups [3,4,5,6,7,8,1,9,10,2]
[[3,4,5,6],[7,8],[1],[9,10,2]]

the possible groups [length xs] [1] [2] [1,2] [length xs,1] [length xs,2] 
must be separated, but [length xs, 1, 2] should join any larger sequence.


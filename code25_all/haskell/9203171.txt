Couldn't match expected type `Char' with actual type `[Char]'
    Expected type: Map.Map ([Char], Integer) [Char]
      Actual type: Map.Map ([Char], Integer) [[Char]]

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE FlexibleInstances #-}

import Data.Time
import Data.Time.Clock.POSIX
import qualified Data.PSQueue as PSQ
import qualified Data.Map as Map
import Data.Maybe
import Control.Category
import Control.Concurrent
import Control.Concurrent.MVar
import Control.Monad

key = ("192.168.1.1", 4711)
messages = ["aaa", "bbbb", "ccccc"]

newRq = do
      time <- getPOSIXTime
      let q = PSQ.singleton key time
      let m = Map.singleton key messages
      return (q, m)

appendMsg :: String -> (String, Integer) -> Map.Map ([Char], Integer) [Char] -> Map.Map ([Char], Integer) [Char]
appendMsg  a (b, c) m = m2
      where 
          f x = x ++ a
          m2 = Map.adjust f (b, c) m

main :: IO()
main = do
     (q, m) <- newRq
     let m2 = appendMsg "first" key m
     print (m2)


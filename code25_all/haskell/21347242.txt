/topbooks/bookcategory/#BookCategoryId

/topbooks/bookcategory/1
/topbooks/bookcategory/2
#BookCategoryId
/topbooks/fiction
/topbooks/non-fiction
/topbooks/#Text
Key
#BookCategoryId
getBy
Slug
IDs
PathPiece
 data BookCategories = FICTION | NONFICTION 

 instance PathPiece BookCategories where
    toPathPiece (FICTION)    = T.pack "fiction" 
    toPathPiece (NONFICTION) = T.pack "nonfiction"

    fromPathPiece s =
       let ups = map toUpper $ T.unpack s
       in  
        case reads ups of
         [(FICTION, "")]    -> Just $ Key $ PersistInt64 1
         [(NONFICTION, "")] -> Just $ Key $ PersistInt64 
         [] -> Nothing
         otherwise -> Nothing

Just FICTION
Text -> BookCategoryId
getBookCategoryR :: BookCategoryId -> Handler Html
getBookCategoryR bcId = do
     -- Normal use case when IDs are used in the URL
     books <- runDB $ selectList [ModelBookCategory ==. bcId] []

getBookCategoryR :: Text -> Handler Html
getBookCategoryR bc = do
     bcId = convertToId (bc) -- This is the line I am trying to avoid everywhere 
     books <- runDB $ selectList [ModelBookCategory ==. bcId] []

PathPiece

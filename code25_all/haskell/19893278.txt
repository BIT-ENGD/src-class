module Main where

import           Foreign.Marshal.Alloc
import           Foreign.Storable
import           System.Win32.Registry
import           System.Win32.Types

number :: TCHAR
number = 42

getKey :: IO HKEY
getKey = regOpenKey hKEY_CURRENT_USER "test"

importFromTCHAR :: IO ()
importFromTCHAR = alloca $ \ptr -> do
                  poke ptr number
                  key <- getKey
                  regSetValueEx key "tchar" rEG_DWORD ptr (sizeOf (undefined::DWORD))

main :: IO ()
main = importFromTCHAR

module Main where

import           Foreign.Marshal.Alloc
import           Foreign.Ptr
import           Foreign.Storable
import           System.Win32.Registry
import           System.Win32.Types

number :: DWORD
number = 42

getKey :: IO HKEY
getKey = regOpenKey hKEY_CURRENT_USER "test"

importFromDWORD :: IO ()
importFromDWORD = alloca $ \ptr -> do
                  poke ptr number
                  key <- getKey
                  regSetValueEx key "dword" rEG_DWORD (castPtr ptr) (sizeOf number)

main :: IO ()
main = importFromDWORD


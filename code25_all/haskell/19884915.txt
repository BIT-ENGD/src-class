test :: Bounded a => Maybe a -> a
test (Just x) = x
test Nothing  = (maxBound :: a)

maxBound
Bounded
Bounded
a
Bounded a
temp.hs:4:18:
    Could not deduce (Bounded a1) arising from a use of `maxBound'
    from the context (Bounded a)
      bound by the type signature for test :: Bounded a => Maybe a -> a
      at temp.hs:2:9-33
    Possible fix:
      add (Bounded a1) to the context of
        an expression type signature: a1
        or the type signature for test :: Bounded a => Maybe a -> a
    In the expression: (maxBound :: a)
    In an equation for `test': test Nothing = (maxBound :: a)

a
maxBound :: a
a
a1
a
a
maxBound :: a
a
maxBound :: a
a
maxBound

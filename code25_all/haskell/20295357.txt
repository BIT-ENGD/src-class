runCmd :: FilePath -> ErrorT String IO ()
runCmd cmd = do
  Left e <- liftIO $ tryIOError $ do
    (inp, outp, errp, pid) <- runInteractiveProcess cmd [] Nothing Nothing
    mapM_ (`hSetBuffering` LineBuffering) [inp, outp, errp]
    forever (hGetLine outp >>= putStrLn) -- IO error when process ends
  unless (isEOFError e) $ throwError $ "IO Error: " ++ ioeGetErrorString e

cmd
tryIOError
ErrorT
catch
handle
IO
handle :: Exception e => (e -> IO a) -> IO a -> IO a
catch  :: Exception e => IO a -> (e -> IO a) -> IO a

ErrorT

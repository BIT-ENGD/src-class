appInit
data App = App { _mongoDB :: Pipe -- connection
               }

appInit :: SnapletInit App App
appInit = makeSnaplet "site" "My Site" Nothing $ do
    db <- liftIO $ do
        pipe <- runIOE $ connect (host "127.0.0.1")
        return pipe
    return $ App db

_mongoDB
watchHandler :: Handler App App ()
watchHandler = do
    res <- liftIO $ do
        pipe <- gets _mongoDB -- type error
        results <- access pipe master "db" (find $ select [] "movies")
        return results

    writeBS "test"

No instance for (MonadState App IO)
  arising from a use of `gets'
Possible fix: add an instance declaration for (MonadState App IO)
In a stmt of a 'do' block: pipe <- gets _mongoDB
In the second argument of `($)', namely
  `do { pipe <- gets _mongoDB;
        results <- access pipe master "db" (find $ select [] "movies");
        return results }'
In a stmt of a 'do' block:
  res <- liftIO
         $ do { pipe <- gets _mongoDB;
                results <- access pipe master "db" (find $ select [] "movies");
                return results }


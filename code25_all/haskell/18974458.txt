MonadFix
Monad
timemachine :: [a] -> (a -> Int -> b -> b) -> b -> b
timemachine al f b = result where
    ~(total, result) = foldr app (0,b) al
    app a (i,b1) = (i+1, f a (total - i) b1)

main :: IO ()
main = print $ timemachine "ddfdfeef" (\x i y -> (x,i):y) []

[('d',1),('d',2),('f',3),('d',4),('f',5),('e',6),('e',7),('f',8)]

[('d',8),('d',7),('f',6),('d',5),('f',4),('e',3),('e',2),('f',1)]


Distribution.PackageDescription.FlagName
Text.JSON
json
instance JSON FlagName where
    showJSON (FlagName n) = makeObj [ ("FlagName", showJSON n) ]
    readJSON object = do
        obj <- readJSON object
        flag <- valFromObj "FlagName" obj
        return flag

> showJSON (FlagName "foo")  
JSObject (JSONObject {fromJSObject = [("FlagName",JSString (JSONString {fromJSString = "foo"}))]})  
> readJSON (showJSON (FlagName "foo")) :: Result FlagName  
Error "Unable to read JSObject"

obj <- readJSON object
readJSON
JSON String
instance JSON FlagName where
    showJSON (FlagName n) = makeObj [ ("FlagName", showJSON n) ]

    readJSON object = do
        obj <- readJSON (showJSON (FlagName "foo")) :: Result (JSObject JSValue)
        let maybeFlagName = lookup "FlagName" $ fromJSObject obj
        maybe (fail "Not a FlagName object") (\jsn -> liftM FlagName $ (readJSON jsn :: Result String)) maybeFlagName


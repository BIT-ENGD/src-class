ByteString
Vector
Vector
ByteArray#
ByteString
ForeignPtr
caseBStoVector :: ByteString -> Vector a
caseBStoVector (BS fptr off len) =
    withForeignPtr fptr $ \ptr -> do
        let ptr' = plusPtr ptr off
            p = alignPtr ptr' (alignment (undefined :: a))
            barr = ptrToByteArray# p len  -- I want this function, or something similar 
            barr' = ByteArray barr
            alignI = minusPtr p ptr
            size = (len-alignI) `div` sizeOf (undefined :: a)
        return (Vector 0 size barr')

ptrToByteArray#
ptr
withForeignPtr
ByteArray#
ByteArray#
ByteArray#
ForeignPtr
Vector
= ByteArray !Int !Int
= Location !Int !Int
data Location = LocBA ByteArray | LocFPtr ForeignPtr
ForeignPtr
ForeignPtr
ByteString
Storable
Primitive

class MonadRun outer args inner | outer -> args, args outer -> inner where
    monadRun :: outer -> args -> inner

-- Base instances: The Identity monad can be removed, while other monads, in general, cannot
instance MonadRun (Identity a) () a where
    monadRun a _ = runIdentity a

instance (Monad m, ma ~ (m a), ma' ~ (m a), u ~ ()) => MonadRun ma u ma' where
    monadRun a _ = a

instance (MonadRun (m a) r' m') => MonadRun (ReaderT r m a) (r, r') m' where
    monadRun outer (r, r') = monadRun (runReaderT outer r) r' 

ReaderT
> type Test = StateT Int (ReaderT Bool IO)
>:t monadRun (undefined :: Test ())
monadRun (undefined :: Test ()) :: (Int, (Bool, ())) -> IO ((), Int)

()
(Int, Bool) -> IO ((), Int)
()
instance (MonadRun (m a) r' m', r'' ~ (r, r')) => MonadRun (ReaderT r m a) r'' m' where
    monadRun outer (r, r') = monadRun (runReaderT outer r) r'

instance (MonadRun (m a) () m') => MonadRun (ReaderT r m a) r m' where
    monadRun outer r = monadRun (runReaderT outer r) ()

()
()
class Tuple a b c | a b -> c where fst' :: c -> a; snd' :: c -> b;
instance Tuple a () a ....
instance Tuple () a a ....
instance Tuple a b (a,b) ....


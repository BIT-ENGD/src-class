{-# LANGUAGE PolyKinds , MultiParamTypeClasses , FlexibleInstances , OverlappingInstances #-}

data Proxy a = Proxy

class Test pt t where
    test :: pt -> t -> IO ()

instance Test (Proxy t) t where
    test _ _ = putStrLn "MATCHES"

-- I would like to combine these:
instance Test (Proxy t) (t a) where
    test _ _ = putStrLn "MATCHES2"
instance Test (Proxy t) (t a b) where
    test _ _ = putStrLn "MATCHES3"
--etc.

instance Test (Proxy t) x where
    test _ _ = putStrLn "FAIL"

PolyKinds
t
Proxy t
* -> *
* -> * -> *
t
t
k

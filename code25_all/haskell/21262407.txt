(forall m. (MonadCo r m, MonadReader Int m) => m ())
    -> (forall m. (MonadCo r m, MonadReader Int m) => m ())

MonadCo
MonadError e m
(Equals k (MonadCo r, MonadReader Int))
    => (Constrain k ()) -> (Constrain k ())

:-
:=>
Forall1
m
forall m. (MonadCo r m, MonadReader Int m)
Data.Constraint

data DOrd  = Infix | Praefix | Postfix | GInfix | GPraefix | GPostfix
data BTree =    Nil | BNode Int BTree BTree deriving (Eq,Ord,Show)

flatten :: BTree -> DOrd -> [Int]
flatten Nil             _       = []
flatten (BNode n b1 b2) Infix   = flatten b1 Infix ++ [n] ++ flatten b2 Infix
flatten (BNode n b1 b2) Praefix = [n] ++ flatten b1 Praefix ++ flatten b2 Praefix
---6 times basically the same for all the elements in DOrd


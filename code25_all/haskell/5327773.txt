data Environment = ...
data MyState = ...
data Report  = ...

updateState :: Environment -> MyState -> MyState
updateState = ...

report :: MyState -> Report
report = ...

foo :: ReaderT Environment (State MyState) Report 
foo = do env   <- ask
         state <- lift get
         let newState = updateState env state
         lift $ put newState
         return $ report newState

Environment
MyState
Report
ReaderT
 foo :: Enviroment -> State MyState Report

 manySteps :: Int -> Enviroment -> State MyState [Report]
 manySteps n env = replicate n $ (foo env) 

lift
replicateM
State MyState
ReaderT Environment (State MyState) Report
ReaderT Environment (StateT MyState (Rand StdGen)) Report
ReaderT Environment (State MyState) Report

import Text.XML.Generator
import Data.ByteString.Lazy as BSL
import Prelude as P

genXml' :: Xml Doc
genXml' =
  let people = [("Stefan", "32"), ("Judith", "4")]
  in doc defaultDocInfo $
       xelem "people" $
         xelems $ P.map (\(name, age) -> xelem "person" (xattr "age" age <#> xtext name)) people

outputXml :: IO ()
outputXml = BSL.putStr (xrender genXml')

$ ghc --make prog.hs
[1 of 1] Compiling Main             ( prog.hs, prog.o )

prog.hs:13:25:
    No instance for (XmlOutput ByteString)
      arising from a use of `xrender'
    Possible fix:
      add an instance declaration for (XmlOutput ByteString)
    In the first argument of `BSL.putStr', namely `(xrender genXml')'
    In the expression: BSL.putStr (xrender genXml')
    In an equation for `outputXml':
        outputXml = BSL.putStr (xrender genXml')


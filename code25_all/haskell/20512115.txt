getMapList :: Handler [Text]
getMapList = runDB $ do
  dbList <- selectList [] []
  return (map getMapName dbList)
  where getMapName (Entity (Key (PersistText mapName)) _)  = mapName

Handler/Create.hs:101:13:
Couldn't match type `PersistEntityBackend t0'
              with `persistent-1.2.3.0:Database.Persist.Sql.Types.SqlBackend'
The type variable `t0' is ambiguous
Possible fix: add a type signature that fixes these type variable(s)
Expected type: PersistMonadBackend (SqlPersistT (HandlerT App IO))
  Actual type: PersistEntityBackend t0
In a stmt of a 'do' block: dbList <- selectList [] []
In the second argument of `($)', namely
  `do { dbList <- selectList [] [];
        return (map getMapName dbList) }'
In the expression:
  runDB
  $ do { dbList <- selectList [] [];
         return (map getMapName dbList) }

GameMap
    mapName Text
    mapCode Text
    UniqueGameMap mapName
    deriving Typeable


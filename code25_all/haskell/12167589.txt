myPoints :: [(GLfloat,GLfloat,GLfloat)]
Coord
data Coord = Coord {x :: Int, y :: Int} deriving (Show, Eq)
renderPrimitive Points $ mapM_ (\(x, y, z)->vertex$Vertex3 x y z) myPoints
myPoints
GLfloat
renderPrimitive Points $ mapM_ (\(Coord x y)->vertex$Vertex2 x y) myCoords
No instance for (VertexComponent Int)
  arising from a use of `vertex'
Possible fix: add an instance declaration for (VertexComponent Int)

fromIntegral x
:: GLfloat
GLint
Coord = Coord {x :: GLfloat, y :: GLfloat}
Num
Int
module Main
where

import Graphics.Rendering.OpenGL
import Graphics.UI.GLUT

data Coord = Coord {x :: Int, y :: Int} deriving (Show, Eq)

someCoords = [Coord 1 1, Coord 1 2, Coord 42 7]

main = do
  (progName, _) <- getArgsAndInitialize
  createWindow "Please compile."
  displayCallback $= display
  mainLoop

display = do
  clear [ColorBuffer]
  renderPrimitive Points $ mapM_ (\(Coord x y) -> vertex $ Vertex2 x y) someCoords


data Tree k a = Branch (Tree k a) (k, a) (Tree k a) | Leaf (k, a)

Tree k a -> b

f :: a -> a
a
k
k -> a
f :: Tree Int Int -> Map Int Int -> (Int, Map Int Int)
f (Branch l (k, x) r) m | (Just r) <- lookup k m = r
                        | otherwise = (max rl rr, m'')
     where 
       (rl, m') = (f l m) 
       (rr, m'') = (f r m') 


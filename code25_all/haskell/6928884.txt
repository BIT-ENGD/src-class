Data.Enumerator.List.map
Iteratee
Enumerator
Stream
import Data.Enumerator
test :: Monad m => (ao -> ai) -> Iteratee ai m b -> Iteratee ao m b
test f iter = go $$ iter
   where go (Continue k) = continue $
            \stream -> go $$ k (fmap f stream)
         go (Yield res _) = yield res EOF

go
go :: Monad m => Step ai m b -> Iteratee ao m b
go

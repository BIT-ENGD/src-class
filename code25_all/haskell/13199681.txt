data Circle = Circle { radius :: Integer, origin :: Point }
data Square = Square { side  :: Integer }

circle = Circle 3 (Point 0 0)
square = Square 5

circle.origin
square.side

origin . circle
side . square

data Expr a = IntegerE (a -> Integer)
            | PointE (a -> Point)

lookupF2I "side"   = Just $ IntegerE side
lookupF2I "radius" = Just $ IntegerE radius
lookupF2I _        = Nothing

lookupF2P "origin" = Just $ PointE origin
lookupF2P _ = Nothing

"circle"
"square"
circle
square
instance Lookup Circle where
    lookupF2I "radius" = Just $ IntegerE radius
    lookupF2I _        = Nothing
    lookupF2P "origin" = Just $ PointE origin
    lookupF2P _        = Nothing

Circle
Square

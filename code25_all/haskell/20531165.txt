module Main(main) where

import Database.HDBC.Sqlite3
import Database.HDBC
import Database.HDBC.Types
import Database.HDBC.SqlValue
import Data.Convertible.Base

type Link = [Char]
type Description = String
type HrefLinktDes = [HrefInfo]

data HrefInfo = HrefInfo { link :: Link
                     , description :: Description 
                     } deriving (Eq, Show, Read)

createDB :: IO ()
createDB = do {conn <- connectSqlite3 "ld.db";
               run conn "CREATE TABLE ld (url TEXT, des TEXT)" [];
               commit conn;}

storeMany :: [[String]] -> IO ()
storeMany xs =
      do conn <- connectSqlite3 "ld.db"
         stmt <- prepare conn "INSERT INTO ld (url, des) VALUES (?,?)"
         executeMany stmt $ map (map toSql) xs
         commit conn

main = do storeMany [["a","b"],["c","d"],["e","f"]]


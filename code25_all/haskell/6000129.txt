vGenerate :: [a]                 -- generator set for monoid B* (Kleene star of B)
          -> (a, (a -> a -> a)) -- (identity element, generating function)
          -> (a -> Bool)        -- filter
          -> [a]                -- B* filtered
vGenerate [] (g0,_) _ = [g0]
vGenerate (e:es) (g0,g) c = 
    let coEs = vGenerate es (g0,g) c
        coE  = takeWhile (c) $ iterate (g e) g0
    in concatMap (\m -> takeWhile (c) $ map (g m) coE) coEs

gen threshold =
     let b = map (\x -> (x,[x])) $ takeWhile (<= threshold) primes
         condition = (<= threshold) . fst
         g0 = (1,[])
         g = \(n,nl)(m,ml) -> ((n*m), nl ++ ml)
     in vGenerate b (g0,g) condition

primes = [2,3,5,7,11,.. ] -- pseudo code


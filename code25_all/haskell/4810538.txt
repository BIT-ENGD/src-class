data Predicate = Pred Name Arity Arguments

type Name      = String
type Arity     = Int
type Arguments = [Entity]
type Entity    = String

Pred "divides" 2 ["1", "2"]
Pred "between" 3 ["2", "1", "3"]

Pred "divides" 2 ["1"]
Pred "between" 3 ["2", "3"]

makePred :: Name -> Arity -> Arguments -> Maybe Predicate
makePred n a args | a == length args = Just (Pred n a args)
                  | otherwise = Nothing


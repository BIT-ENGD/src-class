type SqlM a = SqlPersist (ResourceT IO) a) 

testFun :: T.Text -> SqlM ()
testFun someId = ...

entity <- selectFirst [SomeField ==. someId]

entity <- get $ Key { unKey = PersistInt64 (read $ T.unpack someId) }

Couldn't match type `PersistEntityBackend
                       (Entity (DBTableGeneric backend0))'
              with `Database.Persist.GenericSql.Raw.SqlBackend'
The type variable `backend0' is ambiguous
Possible fix: add a type signature that fixes these type variable(s)
Expected type: Key (Entity (DBTableGeneric backend0))
  Actual type: KeyBackend
                 Database.Persist.GenericSql.Raw.SqlBackend
                 (Entity (DBTableGeneric backend0))
In the second argument of `($)', namely
  `Key {unKey = PersistInt64 (read $ T.unpack someId)}'


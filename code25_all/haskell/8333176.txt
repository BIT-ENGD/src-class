Part A SHEF Nov/14/2011 (10:52)
       -------------------
       Portfolio Valuation
       -------------------

       FOREIGN COMMON STOCK                            6,087,152.65
       FOREIGN COMMON STOCK - USA                      7,803,858.84
       RIGHTS                                                  0.00

type Sector = String
type Amount = Double
type FundCode = String

data SectorAmount = SectorAmount (Sector,Amount) deriving (Show, Eq)

data FundSectors = FundSectors {
      fund             :: FundCode
    , sectorAmounts    :: [SectorAmount]
      } deriving (Show, Eq)

fail
allocationParser :: String -> Either ParseError [FundSectors]
allocationParser input = do
                 runParser allocationFile "" "" input


allocationFile :: GenParser Char FundCode [FundSectors]
allocationFile = do
        secAmt <- many line
        return secAmt


line :: GenParser Char FundCode FundSectors
line = try (do fund <- try fundValue
               eol
               fail "")
       <|> do result <- try tag
              eol
              f <- getState
              return $ FundSectors {fund=f, sectorAmounts = [result]}


fundValue :: GenParser Char FundCode FundCode
fundValue = do manyTill anyChar . try $ lookAhead (string "Part A ")
               string "Part A "
               fCode <- try fundCode
               setState fCode
               v <- many (noneOf "\n\r")
               eol
               return fCode


fundCode :: GenParser Char FundCode String
fundCode = try (string "SHSF")
         <|> try (string "SHIF")
         <|> try (string "SHFF")
         <|> try (string "SHEF")
         <|> try (string "SHGE")
         <|> try (string "SHSE")
         <|> fail "Couldn't match fundCode"


tag :: GenParser Char FundCode SectorAmount
tag = do manyTill anyChar . try $ lookAhead tagName 
         name <- tagName 
         v <- many (noneOf "\n\r")
         let value = read ([x | x <- v, x /= ',']) :: Double -- remove commas from currency
         return $ SectorAmount (name,value)

eol :: GenParser Char FundCode String
eol = try (string "\n\r")
    <|> try (string "\r\n")
    <|> string "\n"
    <|> string "\r"
    <|> fail "Couldn't find EOL"


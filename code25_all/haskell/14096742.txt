getRandomInts :: Seq Int -> PureMT -> ((Seq Int, Int), PureMT)
getRandomInts ints gen = sampleState (fromJust $ choiceExtractSeq ints) gen

Overlapping instances for Data.Random.Lift.Lift
      transformers-0.3.0.0:Data.Functor.Identity.Identity
      (StateT PureMT transformers-0.3.0.0:Data.Functor.Identity.Identity)
  arising from a use of `sampleState'
Matching instances:
  instance [incoherent] (Monad m, MonadTrans t) =>
                        Data.Random.Lift.Lift m (t m)
    -- Defined in `Data.Random.Lift'
  instance [incoherent] Monad m =>
                        Data.Random.Lift.Lift
                          transformers-0.3.0.0:Data.Functor.Identity.Identity m
    -- Defined in `Data.Random.Lift'
In the expression:
  sampleState (fromJust $ choiceExtractSeq ints) gen
In an equation for `getRandomInt':
    getRandomInt ints gen
      = sampleState (fromJust $ choiceExtractSeq ints) gen


Couldn't match expected type `Integer' against inferred type `Value'
(IVal (eval c x)) + (IVal (eval c (Prim IntAddOp xs)))).
     type Env = GenEnv Value

    data Value
         = IVal Integer
         | BVal Bool

    -------------------------------------------------- 
     eval :: Env -> Exp -> Value
     eval _ (Num n) = IVal n
     eval _ (Prim IntAddOp ((Num x) : (Num y):[])) = IVal (x+y)
     eval c (Prim IntAddOp (x: xs)) =  IVal  ((IVal (eval c x)) + (IVal (eval c 
                                        (Prim IntAddOp xs))))


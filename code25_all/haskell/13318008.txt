shift :: Subst a -> Subst a
shift (S s) = [(x, (subst s' d)) | (x,d) <- s] where 
      s' = [(x,d) | (x,d) <- s, null (vars d)]

data Subst a = S [(String,a)]
subst
subst :: Subst a -> a -> a
vars
vars :: a -> [String]

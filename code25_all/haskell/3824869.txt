type DocName = FilePath
type Line = (Int,String)
type Document = [Line]

splitLines :: String -> Document
splitLines [] = []
splitLines str = zip [0..(length listStr)] listStr
                                    where 
                                        listStr = [getLine] ++ map snd (splitLines getRest)
                                        getLine = (takeWhile (/='\n') str)
                                        getRest =  (dropWhile (=='\n') (dropWhile (/='\n') str))

splitLines "test\nthis\nstring\n" should be
[(0,"test"),(1,"this"),(2,"string"),(3,"")]

splitLines :: String -> Document
splitLines "" = [(0,"")]
splitLines str = zip [0..(length listStr)] listStr
                                    where 
                                        listStr = [getLine] ++ map snd (splitLines getRest)
                                        getLine = takeWhile (/='\n') str
                                        getRest = tail (dropWhile (/='\n') str)


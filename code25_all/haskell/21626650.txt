data MyUser = MyUser {id :: Int,
                      name :: String,
                      reputation :: Int}
                      deriving (Show)

    instance FromJSON MyUser where
        parseJSON (Object v) = MyUser <$>
                               v .: "id" <*>
                               v .: "name" <*>
                               v .: "reputation"
        -- A non-Object value is of the wrong type, so fail.
        parseJSON _ = error "Can't parse MyUser from YAML/JSON"

    go :: Bool -> String -> IO()
    go pl force = do
        ymlData <- (</> "sync.yml")
            <$> takeDirectory 
            <$> getExecutablePath >>= \yml -> 
                doesFileExist yml >>= \isCfgEx ->
                    if isCfgEx then BS.readFile yml
                               else ...

        let users = Data.Yaml.decode ymlData :: Maybe [MyUser]
        print $ fromJust users

users:
  - test:
      id: 1
      name: 'zz'
      reputation: 5


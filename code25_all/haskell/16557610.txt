smallCheck
Test.SmallCheck.Series
Serial
data Person = SnowWhite | Dwarf Int
instance Serial Person where ...

Serial
{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}
import Test.SmallCheck
import Test.SmallCheck.Series
import Control.Monad.Identity

data Person = SnowWhite | Dwarf Int

instance Serial Identity Person where
        series = generate (\d -> SnowWhite : take (d-1) (map Dwarf [1..7]))

Identity
Test.Series.list
list :: Depth -> Series Identity a -> [a]

Identity
Serial m Integer => Serial m Person
FlexibleContexts
UndecidableInstances
m
Serial m n

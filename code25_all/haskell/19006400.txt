addPoly :: (Num a)=>[[a]]->[a]
addPoly  x = map sum $ transpose x

addPoly :: (Num a)=>[[a]]->[a]
addPoly  = map sum $ transpose 

Couldn't match expected type `[[Integer]] -> [Integer]'
            with actual type `[Integer]'
In the expression: map sum $ transpose
In an equation for `addPoly': addPoly = map sum $ transpose

Couldn't match expected type `[[Integer]]'
            with actual type `[[a0]] -> [[a0]]'
In the second argument of `($)', namely `transpose'
In the expression: map sum $ transpose
In an equation for `addPoly': addPoly = map sum $ transpose


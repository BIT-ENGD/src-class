.hs
module M where
module Main where

import SrcLoc
import FastString
import Outputable (showSDoc)
import Parser (parseModule)
import Lexer (unP, mkPState, ParseResult(..))
import StringBuffer (hGetStringBuffer)
import DynFlags (defaultDynFlags)
import System.Environment (getArgs)

parseMod src_filename = do 
  buf <- hGetStringBuffer src_filename
  let loc = mkSrcLoc (mkFastString src_filename) 1 0
      dflags = defaultDynFlags
  case unP Parser.parseModule (mkPState dflags buf loc) of
    POk pst rdr_module -> return rdr_module
    PFailed srcspan message -> error $ showSDoc message

main = do 
  args <- getArgs
  case args of
    [src_filename] -> parseMod src_filename
    _ -> error "Usage: parse-test filename.hs"

foo = 1

module M where

foo = 1 
bar = 2

foo = 1
bar = 2

*** Exception: parse error on input `='

haskell-src

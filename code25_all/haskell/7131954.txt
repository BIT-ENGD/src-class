module Temp where

import Data.Map

data TrieSet a = Nonterminal (Data.Map a (TrieSet a)) | Terminal (Data.Map a (TrieSet a))

insert :: Ord a => [a] -> TrieSet a -> TrieSet a
insert [] (_ m) = Terminal m
insert (a:as) (c m) = c $ insertWith (insert as . flip const) a (insert as $ Nonterminal empty) m

% ghc -c Temp.hs
Temp.hs:8:11: Parse error in pattern

module Temp2 where

extract :: Either String String -> String
extract (_ s) = s

% ghc -c Temp2.hs
Temp2.hs:4:9: Parse error in pattern


s
s'
t
t'
-- s, s', t, t' are of type Data.Set a
-- foo x y returns a Just a or Nothing 
foo :: a -> a -> Just a

-- Initialize t and t' to s and s'
t = s
t = s'

foreach x in s
  foreach y in s'
      if (foo x y) == Just z
        insert z into t
        delete x from t
        delete y from t'

return (t, t')

mergeSets :: S.Set -> S.Set -> (S.Set, S.Set)
mergeSets s s' = ...

S
Data.Set
t
t'
t
t'

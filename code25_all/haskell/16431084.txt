Network.HTTP.Conduit
applyBasicAuth :: ByteString -> ByteString -> Request m -> Request mSource

import Data.ByteString as B

import Network.HTTP.Conduit
import Network.Socket

main :: IO ()
main = withSocketsDo $ do
  req <- applyBasicAuth user pass $ fromJust $ parseUrl "http://www.oracle.com"
  response <- withManager $ httpLbs req
  B.putStrLn $ responseBody response
  where
    user = B.pack "scott"
    pass = B.pack "tiger"

make fromJust.exe && ./fromJust.exe
ghc --make fromJust.hs
[1 of 1] Compiling Main             ( fromJust.hs, fromJust.o )

fromJust.hs:16:37: Not in scope: `fromJust'


fulfilledTaskInList :: [Task] -> Int -> Int -> [Task]
fulfilledTaskInList [ ]    check_ID pk_task = []
fulfilledTaskInList (x:xs) check_ID pk_task = if getId x == check_ID then 
                                        if getRepeatT x /= 0 then let help = remakeTask x pk_task in
                                        (setFulfill x):help:xs
                                        else (setFulfill x):xs
                                      else x: fulfilledTaskInList xs check_ID pk_task  

remakeTask x pk_task = do
                (in_year, in_month, in_day) <- remakeDate (getYear x) (getMonth x) (getDay x) (getRepeatT x)
                (Tas {id_Task = pk_task , name = showName x , descr = showDescr x, day = in_day, month = in_month, year = in_year, hour = getHour x, minute = getMinute x, fulfill = 0, repeatT = getRepeatT x})

Task.hs:94:18:
    Couldn't match expected type `IO b0' with actual type `Task'
    In a stmt of a 'do' block:
      (Tas
         {id_Task = pk_task, name = showName x, descr = showDescr x,
          day = in_day, month = in_month, year = in_year, hour = getHour x,
          minute = getMinute x, fulfill = 0, repeatT = getRepeatT x})
    In the expression:
      do { (in_year, in_month, in_day) <- remakeDate
                                            (getYear x) (getMonth x) (getDay x)
(getRepeatT x);
           (Tas
              {id_Task = pk_task, name = showName x, descr = showDescr x,
               day = in_day, month = in_month, year = in_year, hour = getHour x,

               minute = getMinute x, fulfill = 0, repeatT = getRepeatT x}) }
    In an equation for `remakeTask':
        remakeTask x pk_task
          = do { (in_year, in_month, in_day) <- remakeDate
                                                  (getYear x)
                                                  (getMonth x)
                                                  (getDay x)
                                                  (getRepeatT x);
                 (Tas
                    {id_Task = pk_task, name = showName x, descr = showDescr x,
                     day = in_day, month = in_month, year = in_year, hour = getH
our x,
                     minute = getMinute x, fulfill = 0, repeatT = getRepeatT x})
 }
Failed, modules loaded: Functions.


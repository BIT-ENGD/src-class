data ListOfInts = ListOfInts {value :: [Int]}
data ListOfDoubles = ListOfDoubles {value :: [Double]}

class Incrementable a where
    increment :: a -> a

instance Incrementable ListOfInts where
    increment ints = map (\x -> x + 1) ints

instance Incrementable ListOfDoubles where
    increment doubles = map (\x -> x + 1) doubles

value
ListOfInts
ListOfDoubles
type ListOfInts = [Int]
type ListOfDoubles = [Double]

ListOfDoubles
newtype ListOfInts = ListOfInts [Int]
ListOfDoubles
a
value
increment
Int
Double

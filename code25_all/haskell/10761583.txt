sizeof(T)
T
T[e]
e
data Type = TypeInt Id
          | TypePointer Id Type -- target type
          | TypeArray Id Type Expr -- elt type, elt count
          | TypeStruct Id [(String, Type)] -- [(field name, field type)]
          | TypeOf Id Expr
          | TypeDef Id Type

data Expr = ExprInt Int -- literal int
          | ExprVar Var -- variable
          | ExprSizeof Type
          | ExprUnop Unop Expr
          | ExprBinop Binop Expr Expr
          | ExprField Bool Expr String -- Bool gives true=>s.field, false=>p->field

Unop
&
*
Binop
+
*
Id
ExprField
ExprSizeof
ExprField
TypeDef
TypeOf
data Type' = TypeInt Id
           | TypePointer Id Type'
           | TypeArray Id Type' Int -- constant expression has been eval'd
           | TypeStruct Id [(String, Int, Type')] -- field offset has been determined

data Expr' = ExprInt Type' Int
           | ExprVar Type' Var
           | ExprUnop Type' Unop Expr'
           | ExprBinop Type' Binop Expr' Expr'

Type'
Expr'
Expr'
Type'
foldConstants :: Expr -> Either String Expr'

Expr'
Expr'
foldConstants' :: Expr' -> Either String Expr'

undefined
error "*hole*"
NULL
Maybe
Nothing
NULL
Maybe
Just

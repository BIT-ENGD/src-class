integerTostring :: Integer -> String

unfoldr :: (b-> Maybe(a,b))->b->[a])

unfoldr f b=
            case f b of
                  Nothing -> []
                  Just (a,b) -> a : unfoldr f b



where
**data Maybe a = Nothing| Just a deriving (Eq, Ord, Read, Show)**

intToDigit :: Int -> Char

fromEnum :: (Enum a) => a -> Int

   import List, Char
    integerToString :: Integer -> String
    integerToString = reverse.unfoldr(\a -> if a>0 then Just(IntToDigit$fromEnum$a'mod'10,a'div'10)else Nothing


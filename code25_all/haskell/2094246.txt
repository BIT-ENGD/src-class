

myIsInfixOf :: (Eq a) => [a] -> [a] -> Bool
myIsInfixOf [] []   = True
myIsInfixOf [] list = True
myIsInfixOf list [] = False
myIsInfixOf listA listB | helpFunction listA listB == True = True
                        | otherwise =  myIsInfixOf listA (tail listB)


helpFunction :: (Eq a) => [a] -> [a] -> Bool
helpFunction [] []      = True
helpFunction [] list    = True
helpFunction list []    = False
helpFunction (x:xs)(y:ys) | x == y = helpFunction xs ys
                          | otherwise = False

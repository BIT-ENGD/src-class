[Card]
Card
data Rank = Ace
          | Two
          | Three
          | Four
          | Five
          | Six
          | Seven
          | Eight
          | Nine
          | Ten
          | Jack
          | Queen
          | King
          deriving (Bounded, Enum, Eq, Ord)

data Suit = Clubs
          | Diamonds
          | Hearts
          | Spades
          deriving (Bounded, Enum, Eq, Ord)

data Card = Card
  { rank   :: Rank
  , suit   :: Suit
  , faceUp :: Bool
  } deriving (Bounded, Eq, Ord)

-- I omitted the instance Show ... implementations

[(Card King suit True)]
Int
Vector
[Card]

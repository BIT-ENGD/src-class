IO (CInt)
Prelude> let f x = print x >> return x
Prelude> mapM_ f [0..5]
0
1
2
3
4
5
Prelude>

Prelude> takeWhile (<4) $ mapM f [0..5]

MonadPlus
f
f
mapM_ f (takeWhile (<4) [0..5])
do {
    result = function_with_side_effects(input_list[index++]);
} while (result == success && index < max_index);

dropWhileM_
takeWhileM_

foldMap . foldMap
(.)
(.) :: (b -> c) -> (a -> b) -> (a -> c)

a
b
c
foldMap
foldMap :: (Foldable t, Monoid m) => (a -> m) -> t a -> m

(.)
ghci
Prelude Data.Foldable> :t foldMap . foldMap 
foldMap . foldMap
  :: (Foldable t, Foldable t1, Data.Monoid.Monoid m) =>
     (a -> m) -> t (t1 a) -> m

foldMap
(.)
t (t1 a)
foldMap
foldMap . foldMap

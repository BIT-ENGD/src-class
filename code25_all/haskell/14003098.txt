type Signal = [ (Time, Notes->Notes) ]

input :: Signal
input = [ ..., (1, noteOn 42), (2, noteOff 42), ... ]

notesAt :: Signal -> Time -> Notes
notesAt = notesAt' noNotes where
    notesAt' n ((st,sf):ss) t
            | st > t = n
            | otherwise = notesAt' (sf n) ss t

bar :: LazyNumber
bar = 1 + bar

foo :: Bool
foo = bar > 100

data LazyNumber = MoreThan Double | Exactly Double


{-# LANGUAGE OverloadedStrings #-}
import Data.Char (isPunctuation, isSpace)
import Data.Monoid (mappend)
import Data.Text (Text)
import Control.Exception (fromException)
import Control.Monad (forM_, forever)
import Control.Concurrent (MVar, newMVar, modifyMVar_, readMVar)
import Control.Monad.IO.Class (liftIO)
import Control.Monad
import qualified Data.Text as T
import qualified Data.Text.IO as T
import qualified Network.WebSockets as WS
import System.ZMQ3.Monadic
import Data.ByteString.Char8 (pack, unpack)
import Control.Concurrent (threadDelay)
import Data.Text.Encoding
import Data.ByteString.Internal

main :: IO ()
main = do
        liftIO $ putStrLn "starting main..."
        WS.runServer "0.0.0.0" 9160 $ application

application :: WS.Request -> WS.WebSockets WS.Hybi00 ()
application rq = do
        liftIO $ putStrLn "starting..."
        WS.acceptRequest rq
        sink <- WS.getSink
        WS.getVersion >>= liftIO . putStrLn . ("Client version: " ++)
        msg <- WS.receiveData
        liftIO $ putStrLn $ show $ (msg:: Text)

        WS.sendTextData (msg :: Text)
        runZMQ $ do
                repSocket<- socket Rep
                s<-return $bind repSocket "tcp://*:6555"

                msg2 <- receive repSocket
                let quote = msg2
                --msg2 <- WS.receiveData
                --liftIO $ putStrLn $ quote
                WS.sendTextData $ ("test"::Text)

WS.sendTextData $ ("test"::Text)
websocket_server.hs:42:17:
    Couldn't match expected type `ZMQ z a0'
                with actual type `WS.WebSockets p0 ()'
    In a stmt of a 'do' block: WS.sendTextData $ ("test" :: Text)
    In the second argument of `($)', namely
      `do { repSocket <- socket Rep;
            s <- return $ bind repSocket "tcp://*:6555";
            msg2 <- receive repSocket;
            let quote = msg2;
            .... }'
    In a stmt of a 'do' block:
      runZMQ
      $ do { repSocket <- socket Rep;
             s <- return $ bind repSocket "tcp://*:6555";
             msg2 <- receive repSocket;
             let quote = msg2;
             .... }


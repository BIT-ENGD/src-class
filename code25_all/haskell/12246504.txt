ghc -package PKG-VER  --make Test.hs -v
import           Control.Exception
import           Control.Monad
import           Control.Monad.State
import           DynFlags
import           Exception
import           GHC
import           GHC.Paths           (libdir)
typecheck :: MonadIO m => [FilePath] -> FilePath -> m ()
typecheck otherincludes fp =
  liftIO . defaultErrorHandler defaultLogAction . runGhc (Just libdir) $ do
    dynflags <- getSessionDynFlags
    void $ setSessionDynFlags dynflags { includePaths = otherIncludes ++ includePaths dynflags }
    target <- guessTarget fp Nothing
    setTargets [target]
    void $ load LoadAllTargets
    deps <- depanal [] False
    forM_ deps $ \ms -> parseModule ms >>= typecheckModule


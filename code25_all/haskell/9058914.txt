"x(y,a(,b))" => Branch 'x' (Branch 'y' Empty Empty) (Branch 'a' Empty (Branch 'b' Empty Empty))
Parsec
import Text.Parsec.String
import Text.Parsec hiding (Empty)

pTree :: Parser (Tree Char)
pTree = do
   pBranch <|> pEmpty

pBranch = do
  a <- letter
  char '('
  t0 <- pTree 
  char ','
  t1 <- pTree
  char ')'
  return $ Branch a t0 t1

pEmpty =
  return Empty

stringToTree str =
  case parse pTree "" str of
     Right t -> t
     Left e  -> error (show e)

Text.Parsec.String
Text.Parsec

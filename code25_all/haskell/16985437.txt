combs []     r = [r]
combs (x:xs) r = combs xs (x:r) ++ combs xs r

answer = minimumBy (\a b -> compare (length . compress $ a) 
                                    (length . compress $ b)) list 

  where compress = 
           ...something complicated involving values external to the list.


*Main> combs "ABCD" [] --Imagine a larger list of larger combinations.
["DCBA","CBA","DBA","BA","DCA","CA","DA","A",
 "DCB","CB","DB","B","DC","C","D",""]

x
loop = do c <- nextComb
       if c > r then c else r
       loop

answer

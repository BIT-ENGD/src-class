data N a = N a [N a]

instance Applicative N where
 pure a = N a (repeat (pure a))
 (N f xs) <*> (N a ys) = N (f a) (zipWith (<*>) xs ys)

pure f <*> pure a = pure (f a)

zipWith (<*>) (repeat (pure f)) (repeat (pure a)) = repeat (pure (f a))

approx (n + 1) (zipWith (<*>) (repeat (pure f)) (repeat (pure a))

(pure f <*> pure a) : approx n (repeat (pure (f a)))


sequence $ map return [1..]::[[Int]]
sequence $ map return [1..]::Maybe [Int]

sequence' []     = return []
sequence' (m:ms) = do {x<-m; xs<-sequence' ms; return (x:xs)}

sequence' $ map return [1..]::[[Int]]
sequence' $ map return [1..]::Maybe [Int]

sequence' $ map return [1..]::Maybe [Int]

Just [1,2,3,4..]
iterateM:: Monad m => (a -> m a) -> a -> m [a]
iterateM f x = (f x) >>= iterateM0 f >>= return.(x:)

iterateM (>>=(+1)) 0


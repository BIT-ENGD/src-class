data VirtualHelicopter = VirtualHelicopter { getOrders :: TVar [(Option, Int)] }

run :: VirtualHelicopter -> IO ()
run h = do
  forever ( (putStrLn . show =<< (atomRead orders))
            >> clearOrders orders
            >> milliSleep 2000)
  where
    orders = getOrders h
    atomRead = atomically . readTVar
    clearOrders x = atomically $ writeTVar x []
    milliSleep = threadDelay . (*) 1000

runGUI :: VirtualHelicopter -> IO ()
runGUI flyer = do
  Gtk.initGUI
  ~ GUI set up stuff, some key listeners that write to the TVar inside flyer ~
  forkIO $ run flyer
  Gtk.mainGUI


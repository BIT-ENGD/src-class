import Data.Vector.Generic as V
import Control.Monad.ST
import qualified Data.Vector.Mutable as M

test :: (Vector v r) => v r -> v r
test v = runST $ do
  x <- V.thaw v
  -- modify the mutable vector x, code elided
  let s = V.sum x
  M.write x 0 s
  -- continue to modify the mutable vector x, code elided
  V.unsafeFreeze x

(Vector (Mutable v s) r)
runST
runST :: (forall s. ST s a) -> a

test
test

(define (sqrt-stream x)
  (cons-stream 1.0
  (stream-map (lambda (guess)
  (sqrt-improve guess x))
    (sqrt-stream x))))

(lambda () <exp>)
(sqrt-stream x)
(sqrt-stream x)
(define (sqrt-stream x)
   (define guesses
     (cons-stream 1.0
       (stream-map (lambda (guess)
            (sqrt-improve guess x))
                  guesses)))
   guesses)
(display-stream (sqrt-stream 2))

module Main
where
guess = 1:: Double
x=0
do
 if ((guess*guess) = x)
  then y = (x + guess) / x
  guess = y
 else
  sqrt x = guess


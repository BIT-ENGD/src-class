{
 "id": 123,
 "name": "Test1"
}

{-# LANGUAGE OverloadedStrings #-}

import Data.Aeson
import Data.Aeson.Types
import Control.Applicative ((<$>), (<*>))
import Control.Monad
import qualified Data.ByteString.Lazy.Char8 as BS

data Test = Test { id       ∷ Integer
                 , name     ∷ String
                 } deriving (Show)


process v = Test <$>
                 (v .: "id")       <*>
                 (v .: "name")


instance FromJSON Test where
  parseJSON (Object o) = process o
  parseJSON (Array  a)  = mzero
  parseJSON _ = mzero

main = do
    src ← readFile "kk"
    let t = decode (BS.pack src) ∷ Maybe Test
    print t

[{
 "id": 1,
 "name": "Test1"
},
{
 "id": 2,
 "name": "Test2"
}]


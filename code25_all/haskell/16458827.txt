class Foo f a where
  foo :: f a

a
instance Foo Maybe a where
  foo = Nothing

Maybe a
a
specialize :: (forall a. f a) -> f Int
specialize x = x

fooMaybe :: Maybe Int
fooMaybe = specialize foo

fooMaybe
fooAll :: (Foo f a) => f Int
fooAll = specialize foo

Foo.hs:18:21:
    Could not deduce (Foo * f a1) arising from a use of `foo'
    from the context (Foo * f a)
      bound by the type signature for fooAll :: Foo * f a => f Int
      at Foo.hs:17:11-28

fooAll
fooMaybe

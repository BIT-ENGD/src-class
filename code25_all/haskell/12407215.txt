{-# LANGUAGE MultiParamTypeClasses,FlexibleInstances,FunctionalDependencies,UndecidableInstances,FlexibleContexts  #-}
class Foo a c | a -> c
instance Foo Int Float 
f :: (Foo Int a) => Int -> a 
f = undefined

> :t f
> f :: Int -> Float

g :: Int -> Float 
g = undefined 

h :: (Foo Int a) => Int -> a 
h = g

Could not deduce (a ~ Float)

Foo Int a
h
Int -> Float
f
Int -> a
(Foo Int a) => Int -> a
Int -> Float
Int -> Float
Int -> a
Foo Int a
a ~
  Float

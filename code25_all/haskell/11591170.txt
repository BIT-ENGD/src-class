getSpareBuffer :: Handle__ -> IO (BufferMode, CharBuffer)
getSpareBuffer Handle__{haCharBuffer=ref, 
                    haBuffers=spare_ref,
                    haBufferMode=mode}
 = do
case mode of
 NoBuffering -> return (mode, error "no buffer!")
 _ -> do
      bufs <- readIORef spare_ref
      buf  <- readIORef ref
      case bufs of
        BufferListCons b rest -> do
            writeIORef spare_ref rest
            return ( mode, emptyBuffer b (bufSize buf) WriteBuffer)
        BufferListNil -> do
            new_buf <- newCharBuffer (bufSize buf) WriteBuffer
            return (mode, new_buf)

flushByteWriteBuffer :: Handle__ -> IO ()
flushByteWriteBuffer h_@Handle__{..} = do
  bbuf <- readIORef haByteBuffer
  when (not (isEmptyBuffer bbuf)) $ do
    bbuf' <- Buffered.flushWriteBuffer haDevice bbuf
    writeIORef haByteBuffer bbuf'


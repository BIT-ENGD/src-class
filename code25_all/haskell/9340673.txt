data TestType = A | B | C deriving (Ord, Eq, Show) 

List1 :: [TestType]
List1 = [A,B,C,B,C,A,B,C,C,C]

appears :: TestType -> [TestType] -> Int
appears _ [] = 0
appears x (y:ys) | x==y = 1 + (appears x ys)
                 | otherwise = appears x ys


Config line values 2 2
data Config = Config {
                     line :: Line,
                    nums :: [Nums],
                    indent :: Indent,
                       run :: Run
}  deriving (Eq, Show)

class (Result f) => Test f where 
          start :: Line -> [Nums] -> f

 instance Test Config where 
      start line nums = Config line nums 0 0 

 > start 2 [0,0,0]

 > Config 2 [0,0,0] 0 0

 Ambiguous type variable `f0' in the constraint:
  (Test f0) arising from a use of `start'
Probable fix: add a type signature that fixes these type variable(s)

> :t Config 2 [0,0,0] 0 0 

> Config 2 [0,0,0] 0 0 :: Config 


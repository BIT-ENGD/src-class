module Main where

import qualified Text.XML.HaXml.SAX as SAX
import Text.XML.HaXml
import Data.Maybe
import Text.XML.HaXml.Namespaces

main = let inputFilename = "/path/to/file.xml" in
    do content <- readFile inputFilename
       let (elements, error) = SAX.saxParse inputFilename content
       mapM_ putStrLn (summarizeElements elements)

summarizeElements :: [SAX.SaxElement] -> [String]
summarizeElements elements = filter (\s -> length s > 0) $ map summarizeElement elements

summarizeElement :: SAX.SaxElement -> String
summarizeElement element = case element of
    (SAX.SaxElementOpen name attrs)  -> myProcessElem name attrs
    (SAX.SaxCharData charData)       -> myProcessCharData charData 
    (SAX.SaxElementTag name attrs)  -> myProcessElem name attrs
    _ -> ""


{-# LANGUAGE TypeSynonymInstances, FlexibleInstances  #-}

module Function where

import qualified Data.Vector.Unboxed as V
import Control.Monad

type Function = V.Vector Double

instance Num Function where
  (+) = liftM2 (+)
  (*) = liftM2 (*)
  negate = fmap negate

No instance for (Monad V.Vector)
  arising from a use of `liftM2'

Vector

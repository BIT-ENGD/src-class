sequenceIO :: [IO a] -> IO [a]
sequenceIO [] = return []
sequenceIO (a:as) = do {v <-a ; vs <- (sequenceIO as) ; return (v : vs)}

sequenceIO xs = return (foldl get [] xs)
  where get ys act = do y <- act
                        ys ++ [y]

gett :: [a] -> IO a -> [a]
gett ys act = do y <- act
                 ys ++ y

v <-a

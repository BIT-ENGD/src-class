data RegEx
instance Show a => Show RegEx a
showAtom :: Show a => RegEx a -> String
showAtom (Lit x) = show x
showAtom r       = "(" ++ (show r) ++ ")"

instance Show a => Show (RegEx a) where
    show (Lit x)   = show [x]
    show (Opt r)   = (showAtom r) ++ "?"
    show (Alt p q) = (showAtom p) ++ "|" ++ (showAtom q)
    show (Seq p q) = (show p) ++ (show q)
    show (Rep r)   = (showAtom r) ++ "*"

showAtom
instance
show

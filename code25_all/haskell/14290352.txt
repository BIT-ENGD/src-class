import IO

readLines :: Handle -> [String] -> [String]
readLines handler list = do
    eof <- hIsEOF handler
    if eof then list
        else do
            line <- hGetLine handler
            readLines handler (list ++ [line])

writeLines :: Handle -> [String] -> [String]
writeLines handler list = if length list == 0 then list
    else do
        line <- head list
        hPutStrLn handler line
        writeLines tail list

fileToList :: FilePath -> [String]
fileToList filename = do
    handler <- openFile filename ReadMode
    list <- (readLines handler [])
    hClose handler
    list

invLines :: FilePath -> FilePath -> IO ()
invLines input output = do
    handler <- openFile output WriteMode
    inverted <- reverse (fileToList input)
    writeLines handler inverted
    hClose handler

main = invLines "in.txt" "out.txt"


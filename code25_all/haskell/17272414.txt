combinations pre suf letters = prefixed ++ suffixed
  where
    perms = permutation letters
    prefixed = map (\x -> pre ++ x)  $ perms
    suffixed = map (\x -> x ++ suf)  $ perms

main = do
        ls1 <- fmap lines (readFile "dictionary.txt")
        let ls2 = combinations "Apple" "Citrus" "Banana"

Apple
Strawberry
Clown
.....

combinations "a" "b" "ded"

["acd","adc","cdb","dcb"]

["Apple","Strawberry","Clown".....]

["Clwno","Clonw","Clown"..]

["Apple","Strawberry","Clown","Clwno","Clonw","Clown"]

["Clown"]


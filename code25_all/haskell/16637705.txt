  flip :: (a->b->c) ->b->a->c
  const ::d->e->d

  a=d,b=e,c=d

  b->a->c

  e->d->d

  [Int]->[[a]]->[[a]]

  :t flip const 


it would return b->c->c

 map :: (a->b)->[a]->[b]
 take :: Int->[c]->[c]

  [Int]->[[a]->[a]]


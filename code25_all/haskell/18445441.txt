--count number of an item in a list
count :: (Eq a) => a -> [a] -> Double
count x []     = 0.0
count x (y:ys) = (is x y) + count x ys

--returns 1 if items match, else 0
is :: (Eq a) => a -> a -> Double
is x y
    | x == y    = 1.0
    | otherwise = 0.0

--compute length of the list
len :: [a] -> Double
len []     = 0.0
len [x]    = 1.0
len (x:xs) = 1.0 + len xs

--generates frequency of item in list
ncount :: (Eq a) => a -> [a] -> Double
ncount x [] = 0.0
ncount x y  = norm * (count x y)
    where
    norm = 1.0 / len y

count
(Eq a) => a -> [a] -> Double
ncount
a
Eq
ncount
count
ncount
is
len

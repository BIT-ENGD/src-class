type Line      = String
type Paragraph = [String]

parify :: [Line] -> [Paragraph]
parify [] = []
parify ls 
  | null first = parify rest          
  | otherwise  = first : parify rest
  where first = takeWhile (/= "") ls  
    rest  = dropWhile (== "") . drop (length first) $ ls

lineWordCount :: Line -> Int
lineWordCount = length . words

singleParagraphCount :: Paragraph -> Int
singleParagraphCount = sum . map lineWordCount



wordsPerParagraph :: [String]-> [Int]
wordsPerParagraph = map (singleParagraphCount) . parify . lines

[12, 20, 8]

*** Term           : wordsPerParagraph
*** Type           : [Char] -> [Int]
*** Does not match : [String] -> [Int]


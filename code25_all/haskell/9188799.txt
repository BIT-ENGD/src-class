{--------------------- BINARY TO DECIMAL MENU ---------------}

functionBinToDecimal:: IO()
functionBinToDecimal= do 
    putStrLn("\n\tConvert Binary To Decimal\n")
    putStrLn("----------------------------------------------------------\n")
    putStrLn("\t\tEnter a binary number : ") 
    input<-getLine
    let n=(read (reverse input))::String
    let result = convertionFrom binaryToDec n
    putStrLn(show result)

{----------------BINARY TO DECIMAL---------------------}

binaryToDec :: String -> Int
binaryToDec = foldr (\x s -> s * 2 + x) 0 . reverse . map charToInt 
    where charToInt x = if x == '0' then 0 else 1

conversionFrom :: (String -> Int) -> String -> Int
conversionFrom _ [] = 0
conversionFrom f (x:xs) = f x ++ conversionFrom f xs

test.hs:28:27:
    Couldn't match expected type `Int' with actual type `[a0]'
    In the expression: f x ++ conversionFrom f xs
    In an equation for `conversionFrom':
        conversionFrom f (x : xs) = f x ++ conversionFrom f xs


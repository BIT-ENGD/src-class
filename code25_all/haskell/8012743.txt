removeDuplicates a u = [if a == [] then u else removeDuplicates newA newU
                       | let newU = (head a):u 
                       | let newA = tail a]

Illegal parallel list comprehension: use -XParallelListComp

removeDuplicates a u = [if a == [] then u else removeDuplicates (tail a) newU
                       | let newU = (head a):u]

Occurs check: cannot construct the infinite type: a0 = [a0]
    Expected type: [a0]
      Actual type: [[a0]]
    In the return type of a call of `removeDuplicates'
    In the expression: removeDuplicates (tail a) newU


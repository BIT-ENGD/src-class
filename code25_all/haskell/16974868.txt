data ManyFields a b c d .. = MF { f1 :: a, f2 :: b, f3 :: c .. }

map
-- | Note I am explicitly constructing ManyField after mapping a function onto the field
-- | This looks bad
mapf1 :: (a -> a1) -> ManyFields a b c ..  -> ManyFields a1 b c ..
mapf1 g mf = MF (g . f1 $ mf) (f2 mf) ..

-- | Repeat for each field
mapf2 :: (b -> b1) -> ManyFields a b c .. -> ManyFields a b1 c ...

constructor . (mapfunction f)
(==) `mapFunction` mf1 `pairWiseZipField` mf2 

fmap

buildGraph :: Ord a => [(a, a, Float)] -> Map a [(a, Float)]

let g =  buildGraph [('a','c',2), ('a','d',6), ('b','a',3)
                         ,('b','d',8), ('c','d',7), ('c','e',5)
                         ,('d','e',10)]

main = do
    contents <- readFile "input.txt"

     print . map readInt . words $ contents


readInt :: String -> Int
readInt = read

Type Edge = (Char, Char, Float)
readGraphFile :: FilePath -> IO Edge
readGraphFile path = do
                    alldata <- readFile path
                    return (Char,Char,Float)


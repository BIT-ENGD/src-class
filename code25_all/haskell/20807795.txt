data Cameras = Ortographic | Pinhole {
    d :: Float,
    zoom :: Float,
    eye, lookAt, up :: Vector,
    cu, cv, cw :: Vector
} deriving (Show)

class Camera a where
    renderPixel :: a -> (Float, Float) -> [Object] -> Float -> Vector
    rayDirection :: a -> Vector -> Vector

instance Camera Cameras where
    --Ortographic
    renderPixel (Ortographic) (x, y) scene numSamples = ...

    --Pinhole
    rayDirection (Pinhole d _ _ _ _ cu cv cw) (Vector2 u v) =
        normalize ((cu<*>u) <+> (cv<*>v) <-> (cw<*>d))

    renderPixel (Pinhole d _ _ _ _ cu cv cw) (x, y) scene numSamples = ...


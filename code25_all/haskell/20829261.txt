import Control.Monad
import Data.List
time_spent h1 h2 = max (abs (fst h1 - fst h2)) (abs (snd h1 - snd h2))
meeting_point xs = foldl' (find_min_time) maxBound xs
where
    time_to_point p = foldl' (\tacc p' -> tacc + (time_spent p p')) 0 xs
    find_min_time min_time p = let x = time_to_point p in if x < min_time  then x else min_time

main = do
  n <- readLn :: IO Int
  points <- fmap (map (\[x,y] -> (x,y)) . map (map (read :: String->Int)) . map words . lines) getContents
  putStrLn $ show $ meeting_point points


has_empty_string :: [String] -> Bool
has_empty_string col =
  not foldl (\acc now -> if and [acc == True, now == ""] then False else True) True col

let
module Main where
import System.Cmd
import System.Directory
import System.Environment
import System.IO
import System.Process
import Text.Regex.Posix
import Data.CSV.Enumerator
import Data.Spreadsheet

import Data.Char (isSpace)

--------------------------------------------------
slurp :: String -> IO String
slurp path = do
  withFile path ReadMode (\handle -> do
                             contents <- hGetContents handle
                             last contents `seq` return contents )

--------------------------------------------------
has_empty_string :: [String] -> Bool
has_empty_string col =
  any null

main :: IO ()
main = do
  [filename] <- getArgs
  raw_data <- slurp filename
  let csv_data = fromString '"' ',' raw_data
  -- checking to see if the 5th column is an empty string
  content_hashes = get_hashrow csv_data
                   where get_hashrow = map (\row -> row !! 5) csv_data
  is_good_csv = has_empty_hash content_hashes
  putStrLn $ show csv_data


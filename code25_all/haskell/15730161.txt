func1 :: Integer -> (Integer,Integer) -> [[String]] -> ([Char],[Char],[Char],[Char]) -> (Integer,Integer)

func1 distance agent mymap moves = func5 (func3 agent (func2 distance agent mymap) moves)


func2 :: Integer -> (Integer,Integer) -> [[String]] -> [(Integer,Integer)]

func3 :: (Ord a, Ord b) => (b,a) -> [(b,a)] -> ([Char],[Char],[Char],[Char]) -> [(b,a)]

func4 :: (Int,Int) -> (Int,Int) -> ([Char],[Char],[Char],a) -> ([Char],[Char],[Char],[Char]) -> [[[Char]]] -> [[[Char]]]
func5 [(a,b)] = (a,b) 

func6 agent distance mymap moves moves2 = func4 agent (func1 distance agent mymap moves) moves moves2 mymap

*ERROR "play.hs":176 - Type error in application
* * * Expression     : moveWithFood agent (giveNearestCorrect distance agent mymap moves) moves moves2 mymap
* * * Term           : giveNearestCorrect distance agent mymap moves
* * * Type           : (Integer,Integer)
* * * Does not match : (Int,Int)*

play.hs:176:93:
    Couldn't match expected type `Integer' against inferred type `Int'
      Expected type: (Integer, Integer)
      Inferred type: (Int, Int)
    In the second argument of `giveNearestCorrect', namely `agent'
    In the second argument of `moveWithFood', namely
        `(giveNearestCorrect distance agent mymap moves)'
Failed, modules loaded: none.*


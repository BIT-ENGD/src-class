main = withSocketsDo $ do
     s <- socket AF_INET Datagram defaultProtocol
     (q, m) <- newRq
     let m2 = appendMsg "first" key m
         _ = case m2 of        
                   val | m2 == m -> do let Just messages = Map.lookup ("192.168.1.1", 4711) m in sendq s (B.pack $ unwords messages) "192.168.1.1" 4711
         (q4, m4) = case m2 of 
                   val | m2 == m -> deleteRec key q m2
                       | otherwise -> (q, m2)
     --let Just messages = Map.lookup ("192.168.1.1", 4711) m
     --sendq s (B.pack $ unwords messages) "192.168.1.1" 4711

IO ()
| otherwise ->

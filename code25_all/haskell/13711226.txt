f
f
xs
xs
prop x =
    printTestCase ("Failed for value " ++ show failure) $ isNothing failure
  where
    failure = fmap fst $ find (not . snd) $ map (\n -> (n, f x n == n)) [10..20]

f = (+)

quickcheck prop
*** Failed! Falsifiable (after 2 tests):                  
1
Failed for value Just 10

f
f = undefined

quickcheck prop
*** Failed! Exception: 'Prelude.undefined' (after 1 test): 
()
Failed for value Exception thrown by generator: 'Prelude.undefined'

whenFail
whenFail'

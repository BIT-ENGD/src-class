test :: Int -> [Int] -> [Int]
test _ [] = []
test offset (xs) = move offset [] xs
                   where
                       move offset subList (x:xs) | offset == 0 = subList ++ rotate (last (x:xs)) (x:xs)
                                                  | otherwise   = move (offset-1) (saveList subList (x:xs)) xs

                       saveList save (x:xs) = save ++ [x]

                       rotate _ [] = []
                       rotate item (x:xs) = item : (move x xs)

                       last (x:[]) = x
                       last (x:xs) = last xs


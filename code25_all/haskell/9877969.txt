randomList :: (Random a) => (a,a) -> Int -> StdGen -> [a]
randomList bnds n = take n . randomRs bnds

randomise :: [Int] -> [Card] -> [Card]
randomise [] p = p
randomise (x : xs) p = do
                    randomise xs ((drop x p) ++ (take x p))

shuffle :: Int -> [Card] -> [Card]
shuffle r p = do
          let g = mkStdGen r
          randomise(randomList (1, (length p)-1) 500 g :: [Int]) p


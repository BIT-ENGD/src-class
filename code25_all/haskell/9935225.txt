cat.txt | ./scramble A123456A123456 (in compiler)

The cat was very sad   ...etc.
++++++++++++++++++++
A123456A123456A123456 ...etc.

module Main where
import System
import Data.Char (chr, ord, isLower)
import Data.Bits

let2int                       :: Char -> Int
let2int c                     =  ord c - ord 'a'

int2let                       :: Int -> Char
int2let n                     =  chr (ord 'a' + n)

shift                         :: Int -> Char -> Char
    shift n c | isLower c     =  int2let ((let2int c + n) `mod` 26)
              | otherwise     =  c

main = do 
arg1 <- getArgs
txt <- getContents
putStr (scramble txt arg1)


scramble :: Int -> String -> String  
scramble shift msg = 
let ords = map ord msg  
    shifted = map (+ shift) ords  
 in  map chr shifted  

redact.hs:19:26:
Couldn't match expected type 'Int' with actual type '[Char]'
Expected type: Int
 Actual type: [String]
In the second argument of 'scramble', namely 'txt'
In the first of 'putStr', namely '<redact txt arg1>' 
Failed, module loaded: none.

putStr (scramble txt arg1)

arg1:_ <- getArgs


"1,2,-5,-23,15" ->  [2,3,-4,-22,16]
import Data.List

main :: IO ()
main = do
  n <- return 1
  putStrLn . show . map (+1) . map toInt . splitByDelimiter delimiter
    $ getList n

getList :: Int -> String
getList n = foldr (++) [] . intersperse [delimiter] $ replicate n inputStr

delimiter = ','

inputStr = "1,2,-5,-23,15"

splitByDelimiter :: Char -> String -> [String]
splitByDelimiter _ "" = []
splitByDelimiter delimiter list =
  map (takeWhile (/= delimiter) . tail)
    (filter (isPrefixOf [delimiter])
       (tails
           (delimiter : list)))

toInt :: String -> Int
toInt = read

splitByDelimiter
"1,2,-5,-23,15" ->  ["1","2","-5","-23","15"]
",1,2,-5,-23,15"
[",1,2,-5,-23,15", "1,2,-5,-23,15", ",2,-5,-23,15", .... ]
[",1,2,-5,-23,15", ",2,-5,-23,15", .... ]
["1", "2", .... ]
splitByDelimiter

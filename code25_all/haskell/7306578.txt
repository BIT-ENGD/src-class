module R001 (run) where run = <do-...>
module R002 (run) where run = <do-...>

main = do
         runWith $ read $ getLine
       where
         runWith :: Int -> IO ()
         runWith n = R<n-padded-with-0>.run

run
[Maybe (IO())]
runWith n = case Rs !! (read $ getLine) of 
              Just run -> run
              Nothing -> undefined

n
import R1 (run1)
import R2 (run2)

test = $(functionExtractor "^run")

main :: IO ()
main = do
         putStrLn $ show $ length $ test
         run1 -- remove on second attempt
         run2 -- remove on second attempt

run1
run2

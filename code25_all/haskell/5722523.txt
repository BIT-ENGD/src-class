data Fred = Fred
module Keyword (keyword) where

import Language.Haskell.TH.Syntax
keyword name = [d| data $(name) = $(name) |]

Prelude> :l Keyword.hs
[1 of 1] Compiling Keyword          ( Keyword.hs, interpreted )

Keyword.hs:6:24: parse error on input `$('

NameS
let v = mkName "T" in [| data $v = $v |]

Name
 module Example where
 import Language.Haskell.TH
 let v = mkName "T" in [| data $v = $v |]

 % ghc -XTemplateHaskell -c Example.hs

 Example.hs:3:25: parse error on input `data'

d
 let v = mkName "T" in [d| data $v = $v |]

 Example.hs:3:31: parse error on input `$v'


Codec.Archive.Tar
map
entryPath
Entries
a.txt, b.txt, c.txt
foo.tar.gz
import qualified Codec.Archive.Tar as Tar
import qualified Data.ByteString.Lazy as BS
import qualified Codec.Compression.GZip as GZip

foldEntryToPath :: Tar.Entry -> [String] -> [String]
foldEntryToPath entry list = list ++ [show $ Tar.entryPath entry]

-- Converts TAR errors to a string.
entryFailMapper :: String -> [String]
entryFailMapper err = [err]

main = do
        fileContent <- fmap GZip.decompress $ BS.readFile "foo.tar.gz"
        entries <- fmap Tar.read fileContent :: Tar.Entries
        -- Here I don't know how to correctly apply fmap
        entryPaths <- Tar.foldEntries foldEntryToPath [] entryFailMapper entries :: [String]
        -- This should print ["a.txt", "b.txt", "c.txt"]
        print entryPaths

runghc
readtar.hs:14:49:
Expecting one more argument to `Tar.Entries'
In an expression type signature: Tar.Entries
In a stmt of a 'do' block:
  entries <- fmap Tar.read fileContent :: Tar.Entries
In the expression:
  do { fileContent <- fmap GZip.decompress
                      $ BS.readFile "foo.tar.gz";
       entries <- fmap Tar.read fileContent :: Tar.Entries;
       entryPaths <- Tar.foldEntries
                       foldEntryToPath [] (\ x -> [...]) entries ::
                       [String];
       print entryPaths }

Tar.Entries
expecting n more arguments to <type>

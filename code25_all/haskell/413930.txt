f :: (Ord a) => a -> a -> Bool
f a b = a > b

g :: (Ord a) => a -> a -> Bool
g a b = not $ f a b

n f = (\a -> \b -> not $ f a b)

*Main> let n f = (\a -> \b -> not $ f a b)
n :: (t -> t1 -> Bool) -> t -> t1 -> Bool
Main> :t n f
n f :: (Ord t) => t -> t -> Bool
*Main> let g = n f
g :: () -> () -> Bool

t -> Bool
t -> t1 -> Bool
t -> t1 -> t2 -> Bool
t -> t1 -> t2 -> t3 -> Bool


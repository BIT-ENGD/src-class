map fromEnum $ zipWith (==) "aaaa" "abaa"
-- [1,0,1,1]

zipWith (\x y -> fromEnum (x == y)) "aaaa" "abaa"

y
zipWith (\x -> fromEnum.(x ==)) "aaaa" "abaa"

x
zipWith (curry (fromEnum . uncurry (==))) "aaaa" "abaa"

Data.Function.on

module Main where

import System
import Data.Char
import Data.List

lowercase :: String -> String
lowercase = map toLower

main = do 
arg1 <- getArgs
txt <- getContents
putStr (redact txt arg1)

redact :: String ->[String] -> String
redact input xWords = unlines [ work line | line <- lines input ]
where work line = unwords [ foo word | word <- words line ]
      foo w | lowercase(w) == lowercase(xWords) = convertWord w 1
        | otherwise                         = w

convertWord :: Eq a => [a] -> [a]
convertWord :: map (const '*') 

convertWord :: map (const '*') 


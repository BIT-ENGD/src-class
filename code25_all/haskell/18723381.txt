import Numeric;

digs :: Integral x => x -> [x] <br>
digs 0 = [] <br>
digs x = digs (x `div` 10) ++ [x `mod` 10]

roundTo x t = let d = length $ digs $ round x <br>
                  roundToMachine x t = (fromInteger $ round $ x * 10^^t) * 10^^(-t)
              in roundToMachine x (t - d)

digs
1.234
0.1234 * 10^1
roundTo
roundTo 1.0014 4
1.0010000000000001
1.001
1001 * 1.0e-3
1.0010000000000001

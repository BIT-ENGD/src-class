data Nested a = Elem a | List [Nested a]
            deriving (Show)

List [Elem 1, Elem 2, List [Elem 3, Elem 4], List [Elem 5], Elem 6]
appendn                 :: Nested a -> Nested a -> Either String (Nested a)
appendn (Elem a) (List x)       = Left "error: wrong argument"
appendn (List x) (Elem a)       = Left "error: wrong argument"
appendn (List []) (List x)      = Right (List x)
appendn (List (x:xs)) (List y)  = Right (List (x:appendn (List xs) (List y))

:
List

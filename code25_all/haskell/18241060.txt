data Expression = 
  PInt Int
  | PFloat Double
  | PString String
  | PChar Char
  | PBool Bool
  | Var String
  | Unbound String String
  | Unary String Expression
  | Binary String Expression Expression
  | Call Expression [Expression]
  | Lambda Expression
  | Assign String Expression Expression
  | Conditional Expression Expression Expression
  deriving Eq

instance Num Expression where
   PInt a + PInt b = PInt $ a + b
   PInt a + PFloat b = PFloat $ a + b
   PFloat a + PInt b = PFloat $ a + b
   PFloat a + PFloat b = PFloat $ a + b
   _ + _ = undefined
   PInt a - PInt b = PInt $ a - b
   PInt a - PFloat b = PFloat $ a - b
   PFloat a - PInt b = PFloat $ a - b
   PFloat a - PFloat b = PFloat $ a - b
   _ - _ = undefined
   PInt a * PInt b = PInt $ a * b
   PInt a * PFloat b = PFloat $ a * b
   PFloat a * PInt b = PFloat $ a * b
   PFloat a * PFloat b = PFloat $ a * b
   _ * _ = undefined
   negate (PInt a) = PInt (-a)
   negate (PFloat a) = PFloat (-a)
   negate _ = undefined
   abs (PInt a) = PInt $ abs a
   abs (PFloat a) = PFloat $ abs a
   abs _ = undefined
   signum (PInt a) = PInt $ signum a
   signum (PFloat a) = PFloat $ signum a
   signum _ = undefined
   fromInteger i = (PInt $ fromInteger i)

Prelude> :load AST.hs
[1 of 1] Compiling AST          ( AST.hs, interpreted )

AST.hs:38:36:
    Couldn't match expected type `Double' with actual type `Int'
    In the first argument of `(+)', namely `a'
    In the first argument of `PFloat', namely `(a + b)'
    In the expression: PFloat (a + b)

AST.hs:39:37:
    Couldn't match expected type `Double' with actual type `Int'
    In the second argument of `(+)', namely `b'
    In the second argument of `($)', namely `a + b'
    In the expression: PFloat $ a + b

AST.hs:43:33:
    Couldn't match expected type `Double' with actual type `Int'
    In the first argument of `(-)', namely `a'
    In the second argument of `($)', namely `a - b'
    In the expression: PFloat $ a - b

AST.hs:44:37:
    Couldn't match expected type `Double' with actual type `Int'
    In the second argument of `(-)', namely `b'
    In the second argument of `($)', namely `a - b'
    In the expression: PFloat $ a - b

AST.hs:48:33:
    Couldn't match expected type `Double' with actual type `Int'
    In the first argument of `(*)', namely `a'
    In the second argument of `($)', namely `a * b'
    In the expression: PFloat $ a * b

AST.hs:49:37:
    Couldn't match expected type `Double' with actual type `Int'
    In the second argument of `(*)', namely `b'
    In the second argument of `($)', namely `a * b'
    In the expression: PFloat $ a * b
Failed, modules loaded: none.

fromIntegral
Int

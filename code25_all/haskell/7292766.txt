MyM
StateT
{-# LANGUAGE TypeFamilies #-}

import Control.Monad.State
import Control.Monad.Reader

type MyS = Int
type MyM = StateT MyS

MyM
MyS
f1 :: (MonadState m, StateType m ~ MyS) => m ()
f1 = modify (+1)

MyS
MonadReader
MonadState
f2 :: (MonadReader m, EnvType m ~ MyS) => m Int
f2 = liftM (+1) ask

f3 :: (MonadState m, StateType m ~ MyS) => m Int
f3 = f1 >> f2

MonadState
MonadReader
instance MonadState m => MonadReader where
  type EnvType m = StateType m
  ...

MonadState
MonadReader

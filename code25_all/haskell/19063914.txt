isSquare :: Int -> Bool
isSquare n = truncate(sqrt(x)) * truncate(sqrt(x)) == n
         where x = fromIntegral n


squareTriSemi = filter (isSquare) triSeries

triSeries 0 = [0]
triSeries n = map triangular $take n $iterate (+1) 1
where triangular x = x * (x + 1) `div` 2

Couldn't match expected type `[Int]' with actual type `Int -> [t0]'
    In the second argument of `filter', namely `triSeries'
    In the expression: filter (isSquare) triSeries
    In an equation for `squareTriSemi':
        squareTriSemi = filter (isSquare) triSeries


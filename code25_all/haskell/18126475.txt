Compile
Mode
{-# LANGUAGE TypeFamilies, MultiParamTypeClasses, FlexibleInstances #-}
class Compile a where
  comp :: a -> String

-- common elements in all languages
data ElemA l m = ElemA (ElemB l m)
data ElemB l m = ElemB

class Lang l where
  -- language-specific elements
  data Instructions l :: * -> *

-- common modes for all languages
class Mode l m where
  type MElemA l m :: *
  type MElemB l m :: *

-- mode with normal program elements
data SimpleMode
instance Mode l SimpleMode where
  type MElemA l SimpleMode = ElemA l SimpleMode
  type MElemB l SimpleMode = ElemB l SimpleMode

-- a mode where each program element can be replaced with a string
data NamedMode
instance Mode l NamedMode where
  type MElemA l NamedMode = Either String (ElemA l NamedMode)
  type MElemB l NamedMode = Either String (ElemB l NamedMode)

-- definition of Lang1 language
data Lang1
instance Lang Lang1 where
  data Instructions Lang1 m 
    = Add (MElemA Lang1 m) (MElemA Lang1 m) (MElemA Lang1 m)
    | Mul (MElemA Lang1 m) (MElemA Lang1 m) (MElemA Lang1 m)
    -- | ...

-- dumping the source code of Lang1 langauge

-- ILLEGAL TYPE SYNONYM FAMILY APPLICATION HERE
instance Compile (MElemA Lang1 m) where  
  comp _ = "A"
-- AND HERE
instance Compile (MElemB Lang1 m) where  
  comp _ = "B"

comp
NamedMode

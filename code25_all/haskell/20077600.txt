data Btree a = Tip a | Bin (Btree a) (Btree a) deriving Show

foldbtree :: (a->a->a) -> Btree a-> a
foldbtree f (Tip x) = x
foldbtree f (Bin t1 t2) = (foldbtree f t1) f (foldbtree f t2)

 Occurs check: cannot construct the infinite type:
      t2 = t0 -> t1 -> t2
    In the return type of a call of `foldbtree'
    Probable cause: `foldbtree' is applied to too many arguments
    In the expression: (foldbtree f t1) f (foldbtree f t2)
    In an equation for `foldbtree':
        foldbtree f (Bin t1 t2) = (foldbtree f t1) f (foldbtree f t2)

bird_exercise.hs:206:47:
    Occurs check: cannot construct the infinite type:
      t1 = t0 -> t1 -> t2
    In the return type of a call of `foldbtree'
    Probable cause: `foldbtree' is applied to too few arguments
    In the fourth argument of `foldbtree', namely `(foldbtree f t2)'
    In the expression: (foldbtree f t1) f (foldbtree f t2)


isPrime :: Integer -> Bool

isPrime x = prime x 2
            where
            prime :: Integer -> Integer -> Bool
            prime x y | ((y*y) < x) and ((x `mod` y) /= 0) = prime x (y+1)
                      | ((y*y) >= x) = True
                      | otherwise = False

isPrime
isPrime
prime
x
x
prime
| ((y*y) < x) and ((x `mod` y) == 0) = prime x (y+1)

((y*y) < x)
x
y
((x
y) /= 0)
| ((y*y) >= x) = True

| otherwise = False

((y*y) < x)

The function `(y * y) < x' is applied to two arguments, but its type `Bool' has none

<
| ((y*y) >= x) = True

| ((y*y) > x) = True


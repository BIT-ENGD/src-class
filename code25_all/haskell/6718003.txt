makeTuple :: Int -> a -> (Int, a)
makeTuple n x = (n, x)

makeTupleList :: Int -> [a] -> [ (Int, a) ]
makeTupleList n x = map (makeTuple n) x

makeTuple2 :: a -> Int -> (Int, a)
makeTuple2 x n = (n, x)

makeTupleList2 :: Int -> [a] -> [ (Int, a) ]
makeTupleList2 n x = map (makeTuple2 n) x -- boolshit

makeTupleList2 :: Int -> [a] -> [ (Int, a) ]
makeTupleList2 n x = map (\x -> makeTuple2 x n) x


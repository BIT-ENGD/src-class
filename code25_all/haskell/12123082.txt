myPutStrLn = putStrLn . (++) "log: "
main = do myPutStrLn "hello"

printf
myPutStrLn $ printf "test %d" (23 :: Int)

printf
myPrintf = logger . printf
  where
    -- note, this is just an example. should be
    -- replaceable with any function with this
    -- typesignature
    logger :: String -> IO ()
    logger = putStrLn . (++) "log: "

main = myPrintf "test %d" (23 :: Int)

The function `myPrintf' is applied to two arguments,
but its type `String -> IO ()' has only one
In a stmt of a 'do' block: myPrintf "test %d" (23 :: Int)
In the expression: do { myPrintf "test %d" (23 :: Int) }
In an equation for `main':
    main = do { myPrintf "test %d" (23 :: Int) }

myPrintf :: String -> IO ()

module Main where

import Data.Maybe
import Data.Aeson
import Data.Map as Map
import Data.Functor
import qualified Data.ByteString.Lazy as LBS

main = do
  jsonContent <- LBS.readFile "templates/test.json"
  print (decode jsonContent :: Maybe TemplateConfig)

newtype TemplateConfig = TemplateConfig (Map String String)
                         deriving Show

instance FromJSON TemplateConfig where
         parseJSON val = TemplateConfig <$> parseJSON val

$ ghc test.hs
[1 of 1] Compiling Main             ( test.hs, test.o )

test.hs:17:45:
    No instance for (FromJSON (Map String String))
      arising from a use of `parseJSON'
    Possible fix:
      add an instance declaration for (FromJSON (Map String String))
    In the second argument of `(<$>)', namely `parseJSON val'
    In the expression: TemplateConfig <$> parseJSON val
    In an equation for `parseJSON':
        parseJSON val = TemplateConfig <$> parseJSON val

FromJSON v =>  FromJSON (Map String v)

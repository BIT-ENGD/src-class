eval
type Env = IORef [(String, IORef LispVal)]

eval
eval :: Env -> LispVal -> IOThrowsError LispVal

primitiveBindings :: IO Env

eval
eval
baseFun :: [(String, [LispVal] -> IOThrowsError LispVal)]
baseFun = [("eval", unaryOp (eval (liftIO $ readIORef primitiveBindings)))]

unaryOp
unaryOp :: (LispVal -> ThrowsError LispVal) -> [LispVal] -> ThrowsError LispVal
unaryOp f [v] = f v

Couldn't match expected type `IORef a'
       against inferred type `IO Env'
In the first argument of `readIORef', namely `primitiveBindings'
In the second argument of `($)', namely `readIORef primitiveBindings'
In the first argument of `eval', namely
    `(liftIO $ readIORef primitiveBindings)'

readIORef env

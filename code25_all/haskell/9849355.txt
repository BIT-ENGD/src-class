data Tree a = Empty | Branch a (Tree a) (Tree a)
              deriving (Show, Eq)

internals :: Tree a -> [a]

internals (Branch a Empty Empty) = []

internals (Branch a b c) = [a]++(internals b)++(internals c)

internals (Branch a b Empty) = [a]++(internals b)

internals (Branch a Empty c) = [a]++(internals c)

a
a
> let tree4 = Branch 1 (Branch 2 Empty (Branch 4 Empty Empty)) (Branch 2 Empty Empty)
> internals tree4

[1,2*** Exception: Untitled.hs:(6,1)-(12,49): Non-exhaustive patterns in function internals

data Tree a = Empty | Branch a (Tree a) (Tree a)
              deriving (Show, Eq)

internals :: Tree a -> [a]

internals (Branch a Empty Empty) = []

internals (Branch a b Empty) = [a]++(internals b)

internals (Branch a Empty c) = [a]++(internals c)

internals (Branch a b c) = [a]++(internals b)++(internals c)


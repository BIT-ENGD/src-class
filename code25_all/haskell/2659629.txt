class MonadState s m where
    get :: m s
    put :: s -> m ()

State
State $ \s -> (s+1, s-1)
 do s <- get
    put (s-1)
    return (s+1)

Reader
ask
return
(>>=)
Reader f == ask >>= return . f
Cont r a
callCC
MonadCont
Cont (\c -> ...)

data Rose a = Node a [Rose a] deriving (Eq, Show, Ord)

data Btree a = Empty | Fork a (Btree a) (Btree a) deriving (Eq, Show, Ord)

Btree a = Leaf a | Fork (Btree a) (Btree a)

toB :: Rose a -> Btree a
toB (Node x xts) = foldl Fork (Leaf x) (map toB xts)
toB (Node x []) = foldl Fork (Leaf x) []

Btree

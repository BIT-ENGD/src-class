data Foo =
  FooString String
  â€¦

class Fooable a where --(is this a good way to name this?)
  toFoo :: a -> Foo

String
Fooable
instance Fooable String where
  toFoo = FooString

Illegal instance declaration for `Fooable String'
    (All instance types must be of the form (T t1 ... tn)
     where T is not a synonym.
     Use -XTypeSynonymInstances if you want to disable this.)
In the instance declaration for `Fooable String'

[Char]
instance Fooable [Char] where
  toFoo = FooString

Illegal instance declaration for `Fooable [Char]'
   (All instance types must be of the form (T a1 ... an)
    where a1 ... an are type *variables*,
    and each type variable appears at most once in the instance head.
    Use -XFlexibleInstances if you want to disable this.)
In the instance declaration for `Fooable [Char]'


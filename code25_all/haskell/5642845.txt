MonadError GenError m
MonadError e m, CanContainGenError e
ErrorT SomeError m
GenError
SomeError
CanContainGenError
GenError
ContainedType
CanContainType
ContainsType
class CanContainType cont orig where
    toCont   :: orig -> cont
    fromCont :: cont -> Maybe orig

class ContainsType orig sub where
    toContainer :: orig -> cont
    fromContainer :: cont -> orig

-- edit fixed example instance to reflect what I want, sorry for the misleading code
data IntOrFloatOrDouble= I Int | F Float | D Double
instance CanContainType IntOrFloatOrDouble Int where
    toCont   = I
    fromCont (I a) = Just a
    fromCont _ = Nothing


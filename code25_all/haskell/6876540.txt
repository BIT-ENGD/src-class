module StackQuestion where

import Data.Map (Map, insert, fromList)

type Name = String
type Value = String

readValue :: Name -> IO String
readValue name = do     putStrLn name
                        value <- getLine
                        return value

addPair :: Name -> Value -> Map Name Value -> Map Name Value
addPair = insert

names = map show [1..5]
values = map (\char -> [char]) ['a'..'d']
initialMap = fromList (zip names values)

String
readValue
type Value = String
type Value = IO String
Map String (IO String)
Map String (IO String)
IO
func :: (a->b) -> IO a -> b
IO String
String
func
map :: Map String (IO String)
...
func (==) (map ! "key")

IO

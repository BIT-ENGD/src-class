[[" W"," "],[" "," W"],[" "," "],
 [" W","P"],[" ","PW"],[" ","P"],
 ["PW"," "],["P"," W"],["P"," "],
 ["PW","P"],["P","PW"],["P","P"]]

p 0 = [[]]
p n = [x:xs | x <- [" ","P"], xs <- p (n-1)]

p n = mapM (\x -> [" ","P"]) [1..n]

p n = replicateM n [" ","P"]

insertw :: Int -> [String] -> [String]
insertw n xs 
    | n < 0     = xs
    | n >= lgth = xs
    | otherwise = (take (n) xs) ++ [xs!!n++"W"] ++ (drop (n+1) xs)
    where lgth  = length xs

duplicate :: Int -> [String] -> [[String]]
duplicate i squares 
    | i > lgth   = []
    | otherwise  = (insertw i squares) : duplicate (i+1) squares
    where lgth   = length squares

worlds :: Int -> [[String]]
worlds n = concat . map (duplicate 0) . p $ n


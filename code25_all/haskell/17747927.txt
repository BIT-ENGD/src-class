data Task = TaskTypeA Int | TaskTypeB (Float,Float)

genericTasks :: StateLikeMonad s
genericTasks = do
   want (TaskTypeA 5)

   TaskTypeA #> \input -> do 
       want (TaskTypeB (1.2,4.3))
       runTaskTypeA input

   TaskTypeB #> \(x,y) -> runTaskTypeB x y

main = runTask genericTasks

genericTasks
want
(#>)
runTask
TaskTypeA,B
:t TaskTypeA
Int -> Task
(#>)
Shake
(#>)
(*>)
(*>)

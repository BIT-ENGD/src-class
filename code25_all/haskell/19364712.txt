import Data.Char

maxWord word = maxWord_h word 0 0

maxWord_h word currVal maxx
    | word == [] = maxOf (currVal maxx)
    | isAlpha (head word) = maxWord_h ((tail word) (currVal + 1) maxx)
    | otherwise = maxWord_h (tail word) 0 (maxOf (currVal maxx))

maxOf a b
    | a > b = a
    | otherwise = b

  Couldn't match expected type `((a0 -> a0) -> a0)
                                  -> (a0 -> a0) -> [Char]'
                with actual type `[Char]'
    The function `tail' is applied to three arguments,
    but its type `[Char] -> [Char]' has only one
    In the first argument of `maxord_h', namely
      `((tail ord) (currVal + 1) maxx)'
    In the expression: maxord_h ((tail ord) (currVal + 1) maxx)


Trip
Tour
direction
distance
price
type Trip = (String, Integer, Float)
type Tour = [Trip]

trip1 :: Trip
trip1 = ("NY", 50, 100)
trip2 :: Trip
trip2 = ("Paris", 150, 100)
trip3 :: Trip
trip3 = ("London", 60, 100)
...
...
tripN :: Trip
tripN = ("Rome", 90, 100)

tour :: Tour
tour = [trip1, trip2, trip3,..., tripN]

Tour
from
to
Trip
from
to
Trip
from
Tour
shortenTour :: Tour -> String -> String -> Trip -> Tour
shortenTour tour "NY" "London" ("NY-London", 260, 200)

[("NY", 50, 100), ("NY-London", 260, 200), ... , ("Rome", 90, 100)]

Tour
Trip
from
to
from
distance
price
shortenTour [("DC", _, _), ("NY", _, _), ("NY", _, _), ("Sofia", _, _), ("London", _, _)] "NY" "London" ("NY-London", 260, 200) 

[("DC", _, _), ("NY", _, _), ("NY-London", 260, 200)]  


find_first_occurrence :: (Eq a) => a -> [a] -> Int
find_first_occurrence elem list = (snd . head) [x | x <- zip list [0..], fst x == elem]

'X' "abcdXkjdkljklfjdlfksjdljjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj"

[('a',0), ('b',1), ]
find_first_occurrence 10 [1..]

9
let f n = 100 - n
find_first_occurrence 10 (map f [1..])


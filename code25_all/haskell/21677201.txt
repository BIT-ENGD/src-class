Suggester
buildQuery :: Query -> Query
postQueryFilter :: [Record] -> [Record]
scorer :: [Record] -> [(Record, Int)]

// No state, so a singleton `object` instead of a class is ok
object Rule1 extends Rule {
  def buildQuery ...
  def postQueryFilter ...
  def scorer ...
}

object Rule2 extends Rule { .... }

val suggester = new Suggester( List(Rule1, Rule2, Rule3) );

No parameters for class `Rule`

data Rule = Rule { buildQuery :: Query -> Query, .... etc }


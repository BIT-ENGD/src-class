{-# LANGUAGE OverloadedStrings, DeriveDataTypeable #-}
import Data.Typeable
import Data.Data
import qualified Data.HashMap.Strict as HM

data Bar = Bar { bar :: String } deriving(Data, Typeable)
data Foo = Foo { foo :: HM.HashMap String Bar } deriving(Data, Typeable)

deriving-hm-fail.hs:7:58:
  No instance for (Data (HM.HashMap String Bar))
    arising from the 'deriving' clause of a data type declaration
  Possible fix:
    add an instance declaration for (Data (HM.HashMap String Bar))
    or use a standalone 'deriving instance' declaration,
         so you can specify the instance context yourself
  When deriving the instance for (Data Foo)


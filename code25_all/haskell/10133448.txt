ipc
JSON
Yesod
buildManager :: Phase -> IO ()
buildManager phase = do
  let buildSeq = findSeq phase
      jid = JobID $ pack "8"
      config = MkConfig $ Just jid
  flip C.catch exceptionHandler $ 
  runReaderT (sequence_ $ buildSeq <*> stages) config
  -- ^^ I would really like to keep the above line of code, or something like it.
  return ()

foo :: Stage -> ReaderT Config IO ()

data Config = MkConfig (Either JobID Product) BaseDir JobMap

JobMap
TMVar Map
foo :: Handler RepJson

foo
JSON
foo
Either
buildSeq
exceptionHandler
JobMap
App
getYesod
JobMap
foo
Handler RepJson
build
stop
report

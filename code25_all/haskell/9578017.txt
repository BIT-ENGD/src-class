module Main where

import System.IO
import System.Random
import Data.List

diceColor = [("Black",1),("Green",2),("Purple",3),("Red",4),("White",5),("Yellow",6)]

{-
randomList :: (RandomGen g) -> Int -> g -> [Integer]
random 0 _ = []
randomList n generator = r : randomList (n-1) newGenerator
        where (r, newGenerator) = randomR (1, 6) generator
-}

rand :: Int -> [Int] -> IO ()
rand n rlst = do
    num <- randomRIO (1::Int, 6)
    if n == 0
        then doSomething rlst
        else rand (n-1) (num:rlst)

doSomething x = putStrLn (show (sort x))

main :: IO ()
main = do
    --hSetBuffering stdin LineBuffering
    putStrLn "roll, keep, score?"
    cmd <- getLine
    doYahtzee cmd
    --rand (read cmd) []

doYahtzee :: String -> IO ()
doYahtzee cmd = do
if cmd == "roll" 
    then rand 5 []
        else do print "You won"


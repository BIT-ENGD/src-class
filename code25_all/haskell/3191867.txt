elemNum :: (Eq a, Num b) => a -> [a] -> b
elemNum e l = f e l
  where  f _ [] = []  -- this was my typo, supposed to read 0
         f e (x:xs)
             | x == e = 1 + f e xs
             | otherwise = f e xs

elemNum :: (Num [a], Eq t) => t -> [t] -> [a]

Num [a]
(Num a) => [a]

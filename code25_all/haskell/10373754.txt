(foldr (+) 0) . (foldr ((:) . length . (swap (:) [] )) [])

length [] = 0

length (x:xs) = 1 + length xs

swap f x y = f y x

length :: [*] -> num.

swap :: (* -> ** -> ***) -> ** -> [*] -> ***

foldr :: (* -> ** -> **) -> ** -> [*] -> **)


type IsTall = Bool
type IsAlive = Bool

is_short_alive_person is_tall is_alive = (not is_tall) && is_alive

a :: IsAlive
a = False

b :: IsTall
b = True

is_short_alive_person a b

newtype IsAlive = IsAlive Bool
newtype IsTall = IsTall Bool

switch_height :: IsTall -> IsTall
switch_height h = not h

not
IsTall
Bool
Bool
IsTall
IsTall
Bool
Bool
IsAlive
{-# LANGUAGE GeneralizedNewtypeDeriving #-}

newtype UserID = UserID Int deriving (Eq, Ord, Num)
newtype GroupID = GroupID Int deriving (Eq, Ord, Num)

Bool

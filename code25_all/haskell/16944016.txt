No instance for (MonadException Ti)
  arising from a use of `getInputLine'

module Foo where
import System.Console.Haskeline
import System.Console.Haskeline.MonadException
import Control.Monad.State
import Control.Monad.IO.Class

type Ti = StateT Int IO

action :: String -> Ti ()
action s = do
    n <- get
    lift $ putStrLn $ show n ++ ": " ++ s

repl :: InputT Ti ()
repl = do
    minput <- getInputLine "?"
    case minput of
        Nothing    -> return ()
        Just input -> lift (action input) >> repl

System.Console.Haskeline.MonadException
MonadException IO
(MonadIO (StateT s m), MonadException m) => MonadException (StateT s m)

Control.Monad.IO.Class
MonadIO IO
MonadIO m => MonadIO (StateT s m)

Ti

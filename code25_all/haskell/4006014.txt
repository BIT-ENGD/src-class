type Parse a b = [a] -> [(b,[a])]
build :: Parse a b -> ( b -> c ) -> Parse a c
build p f inp = [ (f x, rem) | (x, rem) <- p inp ]

p
Parse a b
f
(b -> c)
inp
Parse a b
[a] -> [(b,[a])]
build :: [a] -> [(b,[a])] -> ( b -> c ) -> [a] -> [(c,[a])]

build p f inp = [ (f x, rem) | (x, rem) <- p inp ]


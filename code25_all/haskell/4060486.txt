dreiNplusEins :: Integer -> [Integer]
dreiNplusEins n = if n == 1 then [1] else if n `mod` 2 == 0 then
                        [n] ++ dreiNplusEins (n `div` 2)
                                        else
                        [n] ++ dreiNplusEins (n * 3 + 1)

maxZyklus :: UntereGrenze -> ObereGrenze -> (UntereGrenze,ObereGrenze,MaxZyklaenge)
maxZyklus m n = if m > n then (m,n,0) else if m == n then 
                         (m,n,length(dreiNplusEins m))
                         else 
                         (m,n,0)
type UntereGrenze = Integer
type ObereGrenze  = Integer
type MaxZykLaenge = Integer


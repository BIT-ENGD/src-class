1/1 1/2 1/3 1/4 1/5 ...
2/1 2/2 2/3 2/4
3/1 3/2 3/3
4/1 4/2
5/1

stepOver = do [left num den dir]
   count <- getLine
   let left =  count' -1
   if left == 0
    then putStrLn [num den]
    let newleft = left -1
        case (stepOver num) of
            1 -> if dir == up
                stepOver = [newleft 1 (den + 1) down]
                stepOver = [newleft 2 (den - 1) down]
        case (stepOver den) of
            1 -> if dir == down
                stepOver = [newleft (num + 1) 1 down]
                stepOver = [newleft (num - 1) 2 down]
        case (stepOver dir) of
            up -> stepOver = [newleft (num - 1) (den + 1) dir]
        case (stepOver dir) of
            down -> stepOver = [newleft (num + 1) (den - 1) dir]


Int
f :: (Monad m) => m Int -- Pretend this isn't Int but something complicated
f = return 42

Maybe
f
g :: Maybe a -> Maybe a
g = id

main = print $ (g f)

g
f
Maybe
main = print $ (f :: Maybe a)

Couldn't match expected type `a' against inferred type `Int'
  `a' is a rigid type variable bound by
      the polymorphic type `forall a. Maybe a' at prog.hs:7:16
  Expected type: Maybe a
  Inferred type: Maybe Int
In the second argument of `($)', namely `(f :: Maybe a)'
In the expression: print $ (f :: Maybe a)

g
f :: Maybe Int

collapse
Maybe (Maybe (... a)...)
Maybe a
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE IncoherentInstances #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE NoOverlappingInstances #-}
{-# LANGUAGE TypeFamilies #-}

module MaybeCollapsable where

class M a b where
  collapse :: Maybe a -> Maybe b

instance (a ~ b) => M a b where
  collapse = id

instance M a b => M (Maybe a) b where
  collapse Nothing = Nothing
  collapse (Just a) = collapse a

> collapse (Just (Just (Just 1)))
Just 1

a ~ Maybe x
b ~ Maybe x
Overlapping Instances
-XNoOverlappingInstances
Maybe

read
read :: (Read a) => String -> a

read "1" :: Int
readOne :: (Read a) => [String] -> (a, [String])
readOne (x:xs) = (read x,xs)

readOne ["1","foo"]

Ambiguous type variable 'a' in the constraint: 
'Read a' arising from a use of 'readOne' at :1:0-18 
Probable fix: add a type signature that fixes these type variable(s)

readOne ["1","foo"] :: Int
readOneInt :: [String] -> (Int, [String])
readOneInt = readOne

> readOneInt ["1", "foo"]
(1,["foo"])

readOne
readOneInt

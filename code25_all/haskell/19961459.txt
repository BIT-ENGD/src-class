{-# LANGUAGE DataKinds, GADTs, KindSignatures, FlexibleInstances, IncoherentInstances #-}

import GHC.TypeLits

data Object:: Symbol -> * where
    Object :: Object sy

instance Show (Object "dog") where
    show _ = "dog"

instance Show (Object x) where
    show _ = "other"

main = do
    let name = "dog"
    print (undefined :: Object "dog") -- outputs "dog", as expected
    print (undefined :: Object "cat") -- outputs "other", as expected
    print (undefined :: Object name) -- outputs "other", I expected "dog"


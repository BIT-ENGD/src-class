import Database.MongoDB
import System.IO
import System.Environment
import Data.UString

data Project = Project { name :: String , desc :: String
                       , category :: String , priority :: Int
                       , repeating :: Bool , done :: Bool } deriving (Show)

data Command m = Save ((DbAccess m) => (Collection -> Document -> m ()))

main = do
  pool <- newConnPool 1 $ host "127.0.0.1"
  (command:args) <- getArgs
  let add = Save $ save (u "projects") [(u "name") =: (u $ Prelude.concat args)]
--  let remove = delete (select [(u "name") =: (u $ Prelude.concat args)] (u "projects"))
  let update = Save $ save (u "projects") [(u "name") =: (u $ Prelude.concat args)]
  let commands = [("add", add),("update", update)]
  let (Just (Save action)) = Prelude.lookup command commands
  db <- access safe Master pool $ use (Database (u "test")) action
  print db


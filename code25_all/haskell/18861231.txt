-XDeriveFunctor
-XDeriveFoldable
-XDeriveTraversable
Applicative
a
data SimpleRecord a = Simple a a a

Applicative
instance Applicative SimpleRecord where
    pure x = Simple x x x
    Simple a1 b1 c1 <*> Simple a2 b2 c2 = Simple (a1 a2) (b1 b2) (c1 c2)

a
data MyRecord f a = MyRecord (f a) a

instance (Applicative f) => Applicative (MyRecord f) where
    pure x = MyRecord (pure x) x
    MyRecord a1 b1 <*> MyRecord a2 b2 = MyRecord (a1 <*> a2) (b1 b1)

-XDeriveApplicative
derive
generic-derive
Applicative
Functor
Foldable
Traversable

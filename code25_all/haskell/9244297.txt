import Control.Monad.State
import Data.Array.ST

data Board = Board {
          x :: Int
        , y :: Int
        ,board :: STUArray (Int,Int) Int
} deriving Show


b = Board {
         x = 5
        ,y = 5
        ,board = newArray ((1,1),(10,10)) 37 :: STUArray (Int,Int) Int
}

growBoard :: State Board Int
growBoard = do s <- get
               let xo = x s
                   yo = y s in
                       put s{x=xo*2, y=yo*2}
               return (1)

main = print $ runState growBoard b

   `STUArray (Int, Int) Int' is not applied to enough type arguments
    Expected kind `?', but `STUArray (Int, Int) Int' has kind `* -> *'
    In the type `STUArray (Int, Int) Int'
    In the definition of data constructor `Board'
    In the data type declaration for `Board'


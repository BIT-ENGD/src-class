    import Data.Char

    data AST = Leaf Int | Sum AST AST | Min AST | Mult AST AST

    parseCharacter :: String -> [String]
    parseCharacter [] = []
    parseCharacter (' ':xs) = parseCharacter xs
    parseCharacter ('(':xs) = "(": parseCharacter xs
    parseCharacter (')':xs) = ")": parseCharacter xs
    parseCharacter ('+':xs) = "+": parseCharacter xs
    parseCharacter ('-':xs) = "-": parseCharacter xs
    parseCharacter ('*':xs) = "*": parseCharacter xs
    parseCharacter (x:xs) = if isDigit x then (takeWhile isDigit (x:xs)) : parseCharacter (dropWhile isDigit xs) else parseCharacter xs


import Control.Monad.Writer
import Data.Monoid

foo :: Integer -> Writer (Sum Integer) Integer
foo 0 = return 0
foo x = tell (Sum x) >> foo (pred x)

main = print $ runWriter $ foo 1000000

Stack space overflow: current size 8388608 bytes.
Use `+RTS -Ksize -RTS' to increase it.

bar :: Integer -> (Integer, Integer)
bar x = bar' 0 x
    where bar' c 0 = (0, c)
          bar' c x = bar' (c + x) (pred x)

seq
bar' c x = c `seq` bar' (c + x) (pred x)

seq
foo
Control.Monad.Writer.Strict
Sum
foo
-O2
seq
bar
-fno-full-laziness

module Main where

import System
import Data.Char
import Data.Bits

convertWord :: Eq a=> [a] -> String
convertWord = map (const '*')

lowercase :: [Char]->[Char]
lowercase ch = map toLower ch

redact :: String -> String -> String
redact text keywords = unlines(map unwords redactedtext)
         where redactedtext = map processed text1
               text1        = map words (lines text)
               processed    = map tobeconverted
               keywords1    = words keywords
               tobeconverted x | lowercase x `elem` map lowercase keywords1     =   convertWord x
                               | otherwise                                      = x


main = do
   text <- getContents
   (key:_) <- getArgs
   let   
          result = redact text key




   putStr (result)


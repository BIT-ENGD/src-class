{-# LANGUAGE TemplateHaskell #-}

import Control.Lens

data Book = Book {
  _author :: String,
  _title :: String
} deriving (Show)

makeLenses ''Book

data Location = Location {
  _city :: String,
  _state :: String
} deriving (Show)

makeLenses ''Location

data Library = Library {
  _location :: Location,
  _books :: [Book]
} deriving (Show)

makeLenses ''Library

lib :: Library
lib = Library (Location "Baltimore" "MD") [Book "Plato" "Republic", Book "Aristotle" "Ethics"]

-- returns "Baltimore"
lib ^. location . city

-- returns a copy of lib with the city replaced
set (location . city) "Silver Spring" lib

map
!! 2
books
title
map
!!
books . (!! 2) . title
-- or
books . map . title


{-# LANGUAGE EmptyDataDecls    #-}
{-# LANGUAGE FlexibleContexts  #-}
{-# LANGUAGE GADTs             #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE QuasiQuotes       #-}
{-# LANGUAGE TemplateHaskell   #-}
{-# LANGUAGE TypeFamilies      #-}
{-# LANGUAGE RecordWildCards   #-}
{-# LANGUAGE DeriveGeneric     #-}

module Handler.Points where

import Import

mkPersist sqlSettings [persistLowerCase|
Point
    name String
    deriving Show
|]

$(deriveToJSON defaultOptions ''PointGeneric)

getPointsR :: String -> Handler Value
getPointsR pId = do
    pts <- runDB $ selectList [PointName ==. pId] []
    returnJson (pts :: [Entity Point])

Handler\Points.hs:25:20:
    Couldn't match type `Database.Persist.MongoDB.MongoBackend'
                   with `persistent-1.2.3.0:Database.Persist.Sql.Types.SqlBackend'
    In the second argument of `($)', namely
      `selectList [PointName ==. pId] []'
    In a stmt of a 'do' block:
      pts <- runDB $ selectList [PointName ==. pId] []
    In the expression:
      do { pts <- runDB $ selectList [PointName ==. pId] [];
           returnJson (pts :: [Entity Point]) }
Build failure, pausing...


prelude> let m = map
prelude> let r = read
*Main> let r = read

<interactive>:122:9:
    No instance for (Read a0) arising from a use of `read'
    The type variable `a0' is ambiguous
    Possible fix: add a type signature that fixes these type variable(s)
    Note: there are several potential instances:
      instance Read IOMode -- Defined in `GHC.IO.IOMode'
      instance Read BufferMode -- Defined in `GHC.IO.Handle.Types'
      instance Read Newline -- Defined in `GHC.IO.Handle.Types'
      ...plus 30 others
    In the expression: read
    In an equation for `r': r = read

prelude> let r = read :: Read a => String -> a
*Main> let r = read :: Read a => String -> a

<interactive>:123:9:
    No instance for (Read a0) arising from an expression type signature
    The type variable `a0' is ambiguous
    Possible fix: add a type signature that fixes these type variable(s)
    Note: there are several potential instances:
      instance Read IOMode -- Defined in `GHC.IO.IOMode'
      instance Read BufferMode -- Defined in `GHC.IO.Handle.Types'
      instance Read Newline -- Defined in `GHC.IO.Handle.Types'
      ...plus 30 others
    In the expression: read :: Read a => String -> a
    In an equation for `r': r = read :: Read a => String -> a
*Main> 


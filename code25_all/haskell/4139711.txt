#haskell
sortBy (\(x:y) (x':y') -> let { a = x `compare` x'; b = y `compare` y' } in if a == EQ then b else a ) $ let f (a,b) = a++b in f ( [("a", "b"), ("e", "b"), ("x", "b"), ("x", "g")], [("b", "c"),("b", "d"), ("g", "a"), ("g", "c")] )

sortBy (\(x:y) (x':y') -> undefined) $ [("a","b"),("e","b"),("x","b"),("x","g"),("b","c"),("b","d"),("g","a"),("g","c")]

<interactive>:1:67:
    Couldn't match expected type `[t]'
           against inferred type `([Char], [Char])'
    In the expression: ("a", "b")
    In the expression: [("a", "b"), ("e", "b"), ("x", "b"), ("x", "g")]
    In the first argument of `f', namely
        `([("a", "b"), ("e", "b"), ("x", "b"), ("x", "g")], 
          [("b", "c"), ("b", "d"), ("g", "a"), ("g", "c")])'

sortBy :: (a -> a -> Ordering) -> [a] -> [a]
[([Char], [Char])]
a
([Char], [Char])
sortBy :: (([Char], [Char]) -> ([Char], [Char]) -> Ordering) -> [([Char], [Char])] -> [([Char], [Char])]`


{-# LANGUAGE TemplateHaskell #-}

import Language.Haskell.TH
import Control.Lens

data Point = P { _x :: Double, _y :: Double } deriving (Show)
$( makeLenses ''Point )

point.set( "x", g (point.get("x") ) )

mapF f p g = let v = g (p ^. f) in set f v p 

Couldn't match expected type `Mutator b0'
            with actual type `Accessor a0 a0'
Expected type: ASetter s1 t0 a0 b0
  Actual type: Getting a0 s0 a0

mapX p g = let v = g (p^.x) in set x v p


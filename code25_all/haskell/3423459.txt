Illegal instance declaration for `Board [Box]'
    (All instance types must be of the form (T a1 ... an)
     where a1 ... an are type *variables*,
     and each type variable appears at most once in the instance head.
     Use -XFlexibleInstances if you want to disable this.)
In the instance declaration for `Board [Box]'

Couldn't match expected type `t' against inferred type `Box'
  `t' is a rigid type variable bound by
      the type signature for `!!' at <no location info>

class Tile a where
  tilePosition :: a -> (Int, Int)
  tileStatus   :: a -> Status

class Board b where
  surroundingTiles :: Tile t => b -> (Int, Int) -> [t]
  startingPosition :: b -> Maybe (Int, Int)
  targetPosition   :: b -> Maybe (Int, Int)
  (!!)             :: Tile t => b -> (Int, Int) -> Maybe t

instance Board [Box] where
  boxes !! pos  = foldl (\acc b -> if boardPos b == pos then Just b else acc) Nothing boxes
  ...


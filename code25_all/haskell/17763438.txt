Type Class
record selectors
type classes
type class
add
repr
data type
import qualified Data.Graph.Inductive     as DG

class Graph gr a b where
    empty :: DG.Gr a b
    empty = DG.empty

    repr :: gr -> DG.Gr a b

    -- following function declaration does NOT work:
    add :: a -> gr -> gr
    add el g = g{repr = DG.insNode el $ repr g}

repr is not a record selector
In the expression: g {repr = DG.insNode el $ repr g}
In an equation for add:
    add el g = g {repr = DG.insNode el $ repr g}

data types
A
B
C
data types
repr :: DG.Gr a b
a
b
A
B
C
A
B
C
add
delete
repr
type class
type class
data type
data types
B
add
instance
type class
B

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.net.*;
import java.util.*;
import org.jdom.*;
import org.jdom.input.*;
import org.jdom.output.*;

public class COS extends JPanel implements ActionListener{
    static JFrame f=new JFrame();
    static Image bgImage=null;
    static String message="";
    JButton chbg=new JButton("change background");
    public COS(){
        chbg.setBounds(10,10,150,25);
        chbg.addActionListener(this);
        add(chbg);
    }
    public void paintComponent(Graphics g){
        if(bgImage!=null){
            g.drawImage(bgImage,0,0,this);
        }
        else{
            g.drawString(message,40,40);
        }
    }
    public static void loadbg(){
        try{
            String xmlpath="background.xml";
            SAXBuilder builder=new SAXBuilder();
            Document xdoc=builder.build(xmlpath);
            String fimg="";
            fimg=xdoc.getRootElement().getChild("bgimage").getText();
            getFileImage(fimg);
        } catch(Exception e){
            message="File load failed: "+e.getMessage();
        }
    }
    public static void getFileImage(String filein) throws IOException, InterruptedException{
        FileInputStream in=new FileInputStream(filein);
        byte[] b=new byte[in.available()];
        in.read(b);
        in.close();
        bgImage=Toolkit.getDefaultToolkit().createImage(b);
    }
    public void actionPerformed(ActionEvent e){
        Object source=e.getSource();
        JFileChooser jfc=new JFileChooser();
        if(source==chbg){
            int returnVal=jfc.showOpenDialog(null);
            if(returnVal==JFileChooser.APPROVE_OPTION){
                File file=jfc.getSelectedFile();
                String fileone=file.getName();
                changebg(fileone);
            }
        }
    }
    public void changebg(String filein){
        try{
            getFileImage(filein);
            saveDefaultImage(filein);
            repaint();
        } catch(IOException e){
        } catch(InterruptedException ie){
        }
    }
    public void saveDefaultImage(String filein){
        try{
            String xmlpath="background.xml";
            SAXBuilder builder=new SAXBuilder();
            Document xdoc=builder.build(xmlpath);
            xdoc.getRootElement().removeChild("bgimage");
            xdoc.getRootElement().addContent(new Element("bgimage").setText(filein));
            FileOutputStream fos=new FileOutputStream(xmlpath);
            XMLOutputter out=new XMLOutputter();
            out.output(xdoc, fos);
            fos.flush();
            fos.close();
        } catch(Exception e){
        }
    }
    public static void main(String[] args){
        COS newcos=new COS();
        COSmp cmp=new COSmp();
        cmp.setBounds(720,0,25,600);
        cmp.setLayout(null);
        loadbg();
        f.setSize(825,640);
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.getContentPane().setLayout(null);
        f.setLayout(null);
        newcos.setBounds(5,5,800,600);
        newcos.setOpaque(false);
        newcos.setLayout(null);
        f.setLocation(10,5);
        f.getContentPane().add(newcos);
        f.add(cmp);
        f.setVisible(true);
    }
}
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import org.jdom.*;
import org.jdom.input.*;
import org.jdom.output.*;

public class COSmp extends JPanel implements ActionListener{
    public COSmp(){
        JLabel whatisthis=new JLabel("I am going to be a start menu i think");
        add(whatisthis);
    }
    public void actionPerformed(ActionEvent e){
    }
}



background2.png


Cloneable
public interface Copiable<T> {
    T copy();
}

public class Foo implements Copiable<Foo> {
    Foo copy() { return new Foo(); }
}

Class<?>
Copiable
register
<T extends Copiable<T>> register(Class<T> clazz);

Class<?> candidateClass = ...
if (Copiable.class.isAssignableFrom(candidateClass)) {
    register(candidateClass.asSubclass(Copiable.class));
}


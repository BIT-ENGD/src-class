public interface Extendable {

    /**
     * Asks the object if it provides the extension.
     * 
     * @param extensionInterface
     *            requested extension
     * @return object implementing the requested extension, or {@code null} if
     *         not available.
     */
    <T> T queryExtension(Class<T> extensionInterface);
}

public interface ControlSurfaces {
    String getAilerons();
    String getElevator();
    String getRudder();
}

ControlSurfaces
public class FixedWingAircraft extends Vehicle {

    @SuppressWarnings("unchecked")
    public <T> T queryExtension(Class<T> extensionInterface) {
        if (ControlSurfaces.class.equals(extensionInterface)) {
            return (T) new ControlSurfacesImpl();
        }
        return null;
    }
}

public class VehicleServiceImpl {

    private VehicleDao vehicleDao;
    private ControlSurfacesDao controlSurfacesDao;

    public void save(Vehicle vehicle) {
        vehicleDao.save(vehicle);

        ControlSurfaces controlSurfaces = vehicle.queryExtension(ControlSurfaces.class);
        if (controlSurfaces != null) {
            controlSurfacesDao.save(vehicle, controlSurfaces);
        }
    }
}


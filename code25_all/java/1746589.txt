abstract class A {
  abstract Object get();
  abstract Object do();
  Object action();
}

class B extends A {
  B(B obj) {
      super(obj.getName()...)
   }
  Object get() { ... }
  Object do() { ... }
}

C<T> extends <T extends A> {
   C(<T extends A> obj) {
      super(obj)
   }

   Object do() { ... }

   Object whatever() {
      return action();
   }
}

C aC = new aC(new B());
aC.get() -> B.get()
aC.do() -> C.do()
aC.action() -> A.action()


class Model {
  final private DefaultBoundedRangeModel progress
    = new DefaultBoundedRangeModel();

  public void getProgressModel() { return progress; }
  public void setProgressCount(int i) { progress.setValue(i); }
}

class Controller {
  Model model;
  int progressCount;
  void doSomething()
  {
     model.setProgressCount(++progressCount);
  }
}

class View {
  void setup(Model m)
  {
    JProgressBar progressBar = /* get or create progress bar */  ;
    progressBar.setModel(m.getProgressModel());
  }
}

/* dilemma: Model allows progress to be exported so technically
 all of the progress state could be set by someone else; should it be put
 into a read-only wrapper? */

class Model {
  private int progress;

  public void getProgressCount() { return progress; }
  public void setProgressCount(int i) { progress = i; }
}

class View {
  void setup(Model m)
  {
    ProgressBar progressBar = /* get or create progress bar */  ;
    CallSomeMagicMethodToConnect(m, "progressCount", progressBar, "value");
    // is there something that works like the above?
    // how do I get it to automatically update???
  }
}


<set name="communicationCountries" inverse="true" cascade="all,delete-orphan">
       <key column="COM_ID" not-null="true" on-delete="cascade" />
       <one-to-many class="com.fmr.fc.portlet.communications.vo.CommunicationCountry"/>
</set>

<many-to-one name="communication" column="COM_ID" not-null="true" class="com.fmr.fc.portlet.communications.vo.Communication" cascade="all"/>

public void deleteCommunication(Communication comm) throws DataAccessException 
{
    getHibernateTemplate().delete(comm);
}

public void saveCommunication(Communication comm) throws DataAccessException
{       
    Communication existing = (Communication)getHibernateTemplate().load(Communication.class, comm.getComId());
    existing.getCommunicationCountries().clear();

    getHibernateTemplate().saveOrUpdate(existing);      
}

public void deleteCommunication(Integer id) throws DataAccessException 
    { 
        HibernateTemplate hibernate = getHibernateTemplate();
        Communication existing = (Communication)hibernate.get(Communication.class, id);
        hibernate.initialize( existing.getCommunicationCountries());
        hibernate.delete(existing);
    }

    public void updateCommunication(Communication comm) throws DataAccessException
    {       
        HibernateTemplate hibernate = getHibernateTemplate();
        Communication existing = (Communication)hibernate.get(Communication.class, comm.getComId());
        hibernate.initialize( existing.getCommunicationCountries());
        existing.getCommunicationCountries().clear();
        hibernate.saveOrUpdate(existing);       
    }


public interface DistanceMetric {
    public double distance(AbstractTree<String> t1, AbstractTree<String> t2);
}

public class concreteDistanceAlgorithmV1 implements DistanceMetric{

    public double distance(AbstractTree<String> t1, AbstractTree<String> t2){
        // algorithm methods
        return distance; 
    }
}

public interface DistanceMetricType2 {
    public double distance(AbstractTree<String> t);
}

public class concreteDistanceAlgorithmV2 implements DistanceMetricType2{

    private Object transformation1;

    public concreteDistanceAlgorithmV2(AbstractTree<String> t1){
        transformation1 = process(t1);
    }

    public double distance(AbstractTree<String> t2){

        Object transformation2 = process(t2);
        //algorithm involving both transformations
        return distance;
    }
}


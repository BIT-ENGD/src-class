public interface FooInterface {
        public void someMethod();
    }

public class FooClass implements FooInterface {
        public void someMethod() {
            //do cool things
        }
        public void someOtherMethod() {
            //do other cool things
        }
    }

public boolean isMethodEquality(Method meth1, Method meth2) {

  //Check declaring classes for equality
  boolean isAssignable;
  isAssignable = meth1.getDeclaringClass().isAssignableFrom(
    meth2.getDeclaringClass();
  isAssignable |= meth2.getDeclaringClass().isAssignableFrom(
    meth1.getDeclaringClass());
  if (!isAssignable) {
      return false;
  }
  //check the names for equality
  if (!meth1.getName().equals(meth2.getName())) {
    return false;
  }
  //check the parameters for equality
  if (meth1.getParameterTypes().length != meth2.getParameterTypes().length) {
    return false;
  }
  for (int i = 0; i < meth1.getParameterTypes().length; i++) {
    if (!meth1.getParameterTypes()[i].equals(meth2.getParameterTypes()[i])) {
      return false;
    }
  }
  return true;
}


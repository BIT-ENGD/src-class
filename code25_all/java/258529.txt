public interface Foo<T> extends Comparable<Foo<T>>  {
   ...
}

public class Bar extends Something implements Foo<Something> {
    public Vector<Foo<Bar>> giveBar() {
        ...
    }
}

public class Boo extends SomethingElse implements Foo<SomethingElse> {
    public Vector<Foo<Boo>> giveBoo() {
        ...
    }
}

Bar bar = new Bar();
Boo boo = new Boo();
Vector<Foo<?>> vector;
if (...) 
   vector = bar.giveBar();
else
   vector = boo.giveBoo();

Type mismatch: cannot convert from Vector<Foo<SomethingElse>> to Vector<Foo<?>>

Vector<Foo> vector;
if (...) 
   vector = giveBar();
else
   vector = giveBoo();


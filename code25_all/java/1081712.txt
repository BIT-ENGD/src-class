package newrmiclient;

import java.rmi.*;
import java.rmi.registry.*;

public class RMIClient
{
    static public void main(String args[])
    {
       RemoteInterface rmiServer;
       Registry registry;
       String serverAddress="192.169.4.11";
       String serverPort="3232";
       String text="hello";
       System.out.println("sending "+text+" to "+serverAddress+":"+serverPort);

        System.setProperty("java.security.policy","file:/F:/PolicyFiles/rules.policy");

        if(System.getSecurityManager() == null)
        {
           System.setSecurityManager(new RMISecurityManager());
        }

       try{
           // get the “registry”
           registry=LocateRegistry.getRegistry(serverAddress,(new Integer(serverPort)).intValue());
           // look up the remote object
           rmiServer=(RemoteInterface)(registry.lookup("MessagePath"));
           // call the remote method
           rmiServer.sendMessageFilePath(text);
       }
       catch(RemoteException e){
           e.printStackTrace();
       }
       catch(NotBoundException e){
           e.printStackTrace();
       }
    }
}

 package rmiproj;

import java.rmi.Remote;
import java.rmi.RemoteException;

public interface RemoteInterface extends Remote
{
    void sendMessageFilePath(String messagePath) throws RemoteException;
}

package rmiproj;

import java.rmi.RMISecurityManager;
import java.rmi.server.UnicastRemoteObject;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;

public class RmiServer extends UnicastRemoteObject implements RemoteInterface
{
    int      thisPort = 3232;

    Registry registry;    // rmi registry for lookup the remote objects.

    public RmiServer() throws RemoteException
    {
        try
        {
            System.setProperty("java.rmi.server.codebase","file:/F:/RMIProj/");
            System.setProperty("java.rmi.server.hostname","RMIServer");
            System.setProperty("java.security.policy","file:/F:/PolicyFiles/rules.policy");

            if(System.getSecurityManager() == null)
            {
                System.setSecurityManager(new RMISecurityManager());
            }

            // create the registry and bind the name and object.
            registry = LocateRegistry.createRegistry( thisPort );
            registry.rebind("MessagePath", this);
        }
        catch(RemoteException re)
        {
            re.printStackTrace();
        }
    }

    // This method is called from the remote client by the RMI.
    // This is the implementation of the “RemoteInterface”.
    public void sendMessageFilePath(String messageFilePath) throws RemoteException
    {
        System.out.println(messageFilePath);
    }

    public static void main(String args[]) throws RemoteException
    {
         RmiServer s=new RmiServer();
     }
}

sending hello to 192.169.4.11:3232
java.rmi.UnmarshalException: error unmarshalling return; nested exception is: 
        java.lang.ClassNotFoundException: rmiproj.RemoteInterface
        at sun.rmi.registry.RegistryImpl_Stub.lookup(Unknown Source)
        at newrmiclient.RMIClient.main(RMIClient.java:28)
Caused by: java.lang.ClassNotFoundException: rmiproj.RemoteInterface
        at java.net.URLClassLoader$1.run(URLClassLoader.java:200)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)
        at java.lang.Class.forName0(Native Method)
        at java.lang.Class.forName(Class.java:247)
        at sun.rmi.server.LoaderHandler.loadProxyInterfaces(LoaderHandler.java:711)
        at sun.rmi.server.LoaderHandler.loadProxyClass(LoaderHandler.java:655)
        at sun.rmi.server.LoaderHandler.loadProxyClass(LoaderHandler.java:592)
        at java.rmi.server.RMIClassLoader$2.loadProxyClass(RMIClassLoader.java:628)
        at java.rmi.server.RMIClassLoader.loadProxyClass(RMIClassLoader.java:294)
        at sun.rmi.server.MarshalInputStream.resolveProxyClass(MarshalInputStream.java:238)
        at java.io.ObjectInputStream.readProxyDesc(ObjectInputStream.java:1531)
        at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1493)
        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1732)
        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1329)
        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)


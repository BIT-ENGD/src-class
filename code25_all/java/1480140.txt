public interface PostProcessor<T> {
    public void process( T t );
}

public class ListPostProcessor implements PostProcessor<List<?>> {
    public void process(List<?> t) {
        final PostProcessor<?> p = ...;

        for( Object o : t )
            if(p!=null) 
                p.process(o); // BUG can't pass type Object to process()
    }

}

p
...
process(o)
o
Object
?
o
process()
ListPostProcessor
<? extends Object>
public class ListPostProcessor implements PostProcessor<List<? extends Object>> {
    public void process(List<? extends Object> list) {
        final PostProcessor<? extends Object> p = ... ;

        if( p!=null )
            for( Object o : list )
                p.process(o);  // BUG still a problem
    }
}

The method process(capture#3-of ? extends Object) in the type PostProcessor<capture#3-of ? extends Object> is not applicable for the arguments (Object)

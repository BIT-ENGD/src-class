class Resource {

    public Integer value = 42;
}

public class DeadLockRisk implements Runnable {

    private Resource resourceA = new Resource();
    private Resource resourceB = new Resource();

    public void write(int a, int b) {

        System.out.println(Thread.currentThread().getName() + " try write Lock A");

        synchronized(resourceA) {

            System.out.println(Thread.currentThread().getName() + " write Lock A");
            System.out.println(Thread.currentThread().getName() + " try write Lock B");

            synchronized(resourceB) {

                System.out.println(Thread.currentThread().getName() + " write Lock B");

                resourceA.value = a;
                resourceB.value = b;
        //sit on it!
        //try { Thread.sleep(5000); } catch (Exception e) {}

        System.out.println(Thread.currentThread().getName() + " release write B");
        }
        System.out.println(Thread.currentThread().getName() + " release write A");
    }
    }

    public int read() {

    Integer retVal;
        System.out.println(Thread.currentThread().getName() + " try read Lock B");

        synchronized(resourceB) {

            System.out.println(Thread.currentThread().getName() + " read Lock B");
            System.out.println(Thread.currentThread().getName() + " try read Lock A");

            synchronized(resourceA) {

                System.out.println(Thread.currentThread().getName() + " read Lock A");
                retVal = resourceB.value + resourceA.value;
        System.out.println(Thread.currentThread().getName() + " release read A");
            }
        System.out.println(Thread.currentThread().getName() + " release read B");
        }
    return retVal;
    }

    public void run() {


    if (Thread.currentThread().getName().equals("Thread-1")) {
        write(1,2);
    }

    System.out.println(read());
    }

    public static void main(String[] args) {

        Thread ta = new Thread(new DeadLockRisk());
        Thread tb = new Thread(new DeadLockRisk());
        ta.start(); tb.start();
    }
}


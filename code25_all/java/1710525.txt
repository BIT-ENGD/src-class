public void sendMessage(EntradaPrecomven entrada){

    try{

        Hashtable env = new Hashtable();

        env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.fscontext.RefFSContextFactory");
        env.put(Context.PROVIDER_URL, "file:///C:/mqteste");

        // Create the initial context.
        Context ctx = new InitialContext(env);

        // Look up the connection factory object in the JNDI object store.
        autenticisFactory = (ConnectionFactory) ctx.lookup(CF_LOOKUP_NAME);

        mdbConn = autenticisFactory.createConnection();
        mdbSession = mdbConn.createSession(false, Session.AUTO_ACKNOWLEDGE);

        Destination destination = (Destination) ctx.lookup(DEST_LOOKUP_NAME);

        MessageProducer myProducer = mdbSession.createProducer(destination);
        ObjectMessage outMsg = mdbSession.createObjectMessage(entrada);
        outMsg.setJMSRedelivered(Boolean.TRUE);
        myProducer.send(outMsg);

        consumidor = mdbSession.createConsumer(destination);
        MessageMDB myListener = new MessageMDB();
        consumidor.setMessageListener(myListener);
        mdbConn.start();
        mdbConn.close();

    }catch(Exception e){
        try {
            mdbSession.rollback();
        } catch (JMSException e1) {}
    }
}

@Override
    public void onMessage(Message msg) {

        ObjectMessage objMessage = (ObjectMessage) msg;

        try {

            System.out.println("Received Phone Call:" + objMessage.getJMSRedelivered());
            throw new JMSException("TESTE");

        } catch (JMSException e) {
            e.printStackTrace();
        }
    }


public Main()
{
    //Creating JFrame and setting properties
    frame = new JFrame();
    frame.setResizable(false);
    frame.setTitle("Address Book");
    frame.setSize(800,600);
    frame.setDefaultCloseOperation(frame.EXIT_ON_CLOSE);

    //Creating JPanel and setting properties
    panel = new JPanel();
    panel.setLayout(null);
    panel.setBackground(new Color(77,81,84));

    //Setting the table and Scroll Bars
    this.table_model = new DefaultTableModel(addressData, new String[]{"First Name", "Surname", "Home Number", "Mobile Number", "Address", "Postcode"});
    JTable table = new JTable(this.table_model);
    table.setBounds(130, 40, 200, 200);
    panel.add(new JScrollPane(table, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS));

    //Load Data button, reading file in and adding data to ArrayList then Array of Arrays
    loadData = new JButton("Load File");
    loadData.setBounds(10, 10, 100, 20);
    loadData.addActionListener(new ActionListener()
    {
        public void actionPerformed(ActionEvent e)
        {
            try
            {
                BufferedReader reader = new BufferedReader(new FileReader("file/address.buab"));
                while ((thisLine = reader.readLine()) !=null)
                {
                    if (row >= 4)
                    {
                        index++;
                        row = 0;
                        People.add(thisLine);
                        addressData[index][row] = People.get(count);
                        count++;
                        row++;
                    }
                    else
                    {
                    People.add(thisLine);
                    addressData[index][row] = People.get(count);
                    count++;
                    row++;
                    }
                }
                reader.close();
            }
            catch (IOException ex)
            {
                System.err.println("Input Exception, Check address.buab File");
            }
        }
    });
    panel.add(loadData);

    //Auto sort on table fields
    TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(this.table_model);
    sorter.setComparator(1, new Comparator<Integer>()
    {
        public int compare(Integer o1, Integer o2)
        {
            return o1.compareTo(o2);
        }

        public boolean equals(Object obj)
        {
            return obj.equals(this);
        }
    });

    table.setRowSorter(sorter);

    frame.getContentPane().add(panel);
    frame.setVisible(true);
}

public static void main(String[] args)
{
    new Main();
}


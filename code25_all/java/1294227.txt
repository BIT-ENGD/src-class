Pair<T1, T2>
Pair<String, String> pair = Pair.of("Hello", "World");

of
public static <T1, T2> Pair<T1, T2> of(T1 first, T2 second) {
    return new Pair<T1, T2>(first, second);
}

Pair<Class<?>, String> pair = Pair.of((Class<?>) List.class, "hello");

List.class
TestClass.Pair<Class<capture#1-of ?>,String>
TestClass.Pair<Class<?>,String>
Pair<Class<?>, String> pair =
    new Pair<Class<?>, String>((Class<?>) List.class, "hello");

Class<List>
Pair<Class<?>, String>
Pair<Class<List>, String>
Pair
public final class Pair<T1, T2> {
    public final T1 first;
    public final T2 second;

    public Pair(T1 first, T2 second) {
        this.first = first;
        this.second = second;
    }

    public static <T1, T2> Pair<T1, T2> of(T1 first, T2 second) {
        return new Pair<T1, T2>(first, second);
    }
}


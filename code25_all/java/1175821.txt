// A cannot have B as a class/field variable.

public class A {
    public void method(){
        // B.get() returns a instance of B, but this instance is not the 
        // instance that spring created, it is the static "instance" in B.

        B.get().doSomething();// ofcourse it throws out a nullpointer exception
    }
}

class B{
    @Resource(name = "c")
    private C c;

    private static B instance;


    public static B get() {
         return instance==null ? (instance=new B()) : instance;
    }

    public void doSomething(){
        c.toString();       // this line will break if c is not
                            // injected to the instance of b 
    }
}

@Service("c")
class C {            
}


PanelToBeClicked
PanelMouseListener
import java.awt.*;
import javax.swing.*;

public class PanelToBeClicked extends JPanel {
    int counter;

    public PanelToBeClicked() {
     super();
     setPreferredSize(new Dimension(100,100));
     addMouseListener(new PanelMouseListener(this));
}

@Override
protected void paintComponent(Graphics g){
    super.paintComponent(g);
    g.drawString(""  + counter, 10, 10);
}

public void recursiveMethod(){
    counter++;
    repaint();     

    /*
     * Pause/wait until the panel is clicked so you proceed the recursions
     * MISSING CODE HERE. I tried thread.sleep 
     * but I had a monitor exception 
    */

    if (counter <10)recursiveMethod();
}

public static void main(String[] args) {
    final JFrame frame = new JFrame("How can i do that?");
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.add(new PanelToBeClicked());

    SwingUtilities.invokeLater(new Runnable() {
        @Override
        public void run() {
            frame.pack();
            frame.setVisible(true);
        }
    });
}
}

public class PanelMouseListener extends MouseAdapter {
   private PanelToBeClicked panelToBeClicked;

    public PanelMouseListener(PanelToBeClicked panelToBeClicked) {
            this.panelToBeClicked = panelToBeClicked;
    }

    @Override
    public void mouseClicked(MouseEvent e) {

    /*
     *  start the method PanelToBeClicked.recursiveMethod()... 
    */
    panelToBeClicked.recursiveMethod();

    /*
     *  if the method is already running  and it is not paused do nothing. 
     *  ** MISSING CODE
     *  if the method is running and is  paused then  make the method to continue the recursions 
     *   **MISSING CODE  */

    }

}


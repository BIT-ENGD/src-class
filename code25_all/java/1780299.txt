@Table(name="Policy_Root")
public class PolicyRoot extends BaseDomainModel {

    private List<Policy> policyList = new ArrayList<Policy>();

    @OneToMany(targetEntity=Policy.class, mappedBy="policyRoot", cascade=CascadeType.ALL)
    @IndexColumn(name="policy_sequence", base=0, nullable=false)
    public List<Policy> getPolicyList() {
        return policyList;
    }

    public void setPolicyList(List<Policy> policyList) {
        this.policyList = policyList;
    }

    public void addPolicy(Policy policy) {
        policyList.add(policy);
        policy.setPolicyRoot(this);
    }

    public void addPolicy(int sequence, Policy policy) {
        policyList.add(sequence, policy);
        policy.setPolicyRoot(this);
    }
}

@Entity()
@Table(name="Policy")
public class Policy extends BaseDomainModel {

    /** The position of this policy record within the list of policy's belong to the parent PolicyRoot    */
    private int policySequence;

    /** Birectional pointer to parent */
    private PolicyRoot policyRoot;

    @Column(name="policy_sequence")
    public int getPolicySequence() {
        return policySequence;
    }

    public void setPolicySequence(int policySequence) {
        this.policySequence = policySequence;
    }

    @ManyToOne
    @JoinColumn(name="policy_root_oid", nullable=false)
    public PolicyRoot getPolicyRoot() {
        return policyRoot;
    }

    public void setPolicyRoot(PolicyRoot policyRoot) {
        this.policyRoot = policyRoot;
    }
}


    @Test
    public void testCreation() {
        Policy policy1 = new Policy();
        Policy policy2 = new Policy();

        // Uncomment the following and the test case works - but I don't want to manage the sequence numbers
        //policy2.setPolicySequence(1);

        PolicyRoot policyRoot = new PolicyRoot();
        policyRoot.addPolicy(policy1);
        policyRoot.addPolicy(policy2);

        ServiceImplFacade.getPersistenceFacade().persistSingleItem(policyRoot);
        Long oid = policyRoot.getOid();
        PolicyRoot policyRootFromDB = ServiceImplFacade.getPersistenceFacade().getEntityManager().find(PolicyRoot.class, oid);

        assertEquals(2, policyRootFromDB.getPolicyList().size());
    }


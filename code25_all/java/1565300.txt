else if (myMove) {
  Point pos = gameEngine.makeMove(0, x/160, y/162);//
  if (pos.y >= 0) {
    if (!gameEngine.isWinner(0))
      if (!gameEngine.isTie()) {
        redSnd.play();
        status = new String("Their turn.");
        connection.sendMove(pos.x);  //
        myMove = false;

public void sendMove(int col) {
  String s = (new Integer(col)).toString();
  send(s);
}

public void send(String s) {
  outStream.println(s);
}

int istatus = connection.getTheirMove();

public int getTheirMove() {
  // Make sure we're still connected
  if (!isConnected()) 
    throw new NullPointerException("Attempted to read closed socket!");
  try {
    String s = receive();
    System.out.println("Received: " + s);
    if (s == null)
      return GAMEOVER;
    s = s.trim();

    try {
      return (new Integer(s)).intValue();
    } catch (NumberFormatException e) {
        // It was probably a status report error
        return getStatus(s);
    }
  } catch (IOException e) {
      System.out.println("I/O Error: " + e);
      System.exit(1);
      return 0;
    }
  }

public String receive() throws IOException {
    return inStream.readLine();
}


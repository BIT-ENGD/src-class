    public String nextUserName() {
    StringBuffer user = new StringBuffer();
    SystemManagement students = new SystemManagement();
    String name1 = students.getName();
    char char1 = name1.charAt(0);
    String family1 = students.getFamily();
    char char2 = family1.charAt(1);
    setUserName(name1 + "." + family1);
    if (user.length() != 0 && user.toString().equals(getUserName())) {
        char[] allowedCharacters1 = {char1, char2, '1', '.'};
        SecureRandom random = new SecureRandom();

        for (int i = 0; i < user.length(); i++) {
            user.append(allowedCharacters1[random.nextInt(allowedCharacters1.length)]);
        }
        setUserName(user.toString());
    }

    return getUserName();

}

public String currentUserName() {
    return getUserName();
}

public static Students getInstance() {
    if (instance == null) {
        instance = new Students();
    }
    return instance;
}

 private String userName;

 public Human(String userName) {

    this.userName = Students.getInstance().nextUserName();
}

public void setUserName(String userName) {

    this.userName = userName;
}

public String getUserName() {
    return userName;
}

public String nextUserName() {
  StringBuffer user = new StringBuffer();
  SystemManagement students = new SystemManagement();
  String name1 = students.getName();
  String family1 = students.getFamily();
  if(name1 !=null && family1 !=null ) {
    char char1 = name1.charAt(0);  
    char char2 = family1.charAt(1);
    setUserName(name1 + "." + family1);
    if (user.length() != 0 && user.toString().equals(getUserName())) {
      char[] allowedCharacters1 = {char1, char2, '1', '.'};
      SecureRandom random = new SecureRandom();
      for (int i = 0; i < user.length(); i++) {
        user.append(allowedCharacters1[random.nextInt(allowedCharacters1.length)]);
      }
      setUserName(user.toString());
    }
  }
  return getUserName();
}


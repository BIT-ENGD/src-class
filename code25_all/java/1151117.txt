public class ServicePerformanceData {

private Hashtable<String, ServiceExecutionDataCollector> serviceExecutionDataMap = new Hashtable<String, ServiceExecutionDataCollector>();
private HashMap<ServiceExecutionType, String> serviceTypeCountMap = new HashMap<ServiceExecutionType, String>();
private HashSet<String> serviceNameSet = new HashSet<String>();

private static final long DEFAULT_COUNT = 1;
private static final ServicePerformanceData INSTANCE = new ServicePerformanceData();
private Object SYNC = new Object();

private ServicePerformanceData() {
    // don't allow anyone to instantiate this class
}

// clearly this must be a singleton
public static ServicePerformanceData getInstance() {
    return INSTANCE;
}

public void add(ServiceExecutionDataCollector data) {
    // I just add some runtime information to the data structures in this INSTANCE
    synchronized (SYNC) {
        if (INSTANCE.serviceTypeCountMap.containsKey(data.getServiceType())) {
            String count = INSTANCE.serviceTypeCountMap.get(data.getServiceType());
            INSTANCE.serviceTypeCountMap.put(data.getServiceType(), Integer.toString(Integer.parseInt(count) + 1));
        } else {
            INSTANCE.serviceTypeCountMap.put(data.getServiceType(), Integer.toString(1));
        }

        INSTANCE.serviceExecutionDataMap.put(data.getServiceName(), data);
        INSTANCE.serviceNameSet.add(data.getServiceName());
    }
}

public int getServiceTypeCount(ServiceExecutionType type) {
    if (INSTANCE.serviceTypeCountMap.containsKey(type)) {
        return Integer.parseInt(INSTANCE.serviceTypeCountMap.get(type));
    }
    return 0;
}

public Set getNameList() {
    return INSTANCE.serviceNameSet;
}

// I am copying all the data just to make sure that data structures have data
public void copyAllMasterData() {
    synchronized (SYNC) {
        serviceExecutionDataMap.putAll(ServicePerformanceData.INSTANCE.serviceExecutionDataMap);
        serviceNameSet.addAll(ServicePerformanceData.INSTANCE.serviceNameSet);
        serviceTypeCountMap.putAll(ServicePerformanceData.INSTANCE.serviceTypeCountMap);
    }
}

public class PerformanceStatistics
    implements PerformanceStatisticsMBean {

public void completeExecutionDump() {
    //
}


public int getexecuteSSCount() {
    return ServicePerformanceData.getInstance().getServiceTypeCount(ServiceExecutionType.ADD);
}

public String executionInfo(String serviceName) {
    // GIVES EMPTY LIST EVEN THOUGH THE ACTUAL instance HAS THE DATA
    return ServicePerformanceData.getInstance().getExecutionInfo(serviceName.trim());
}

public String calledServicesArray() {
    // servicePerformanceData DOES NOT CONTAIN ANY DATA EVEN THOUGH THE ACTUAL instance HAS THE DATA
    ServicePerformanceData servicePerformanceData = ServicePerformanceData.getInstance();
    servicePerformanceData.copyAllMasterData();

    System.out.println("ServicePerformanceData.INSTANCE" + ServicePerformanceData.getInstance());
    System.out.println(servicePerformanceData);

// GIVES EMPTY LIST EVEN THOUGH THE ACTUAL instance HAS THE DATA
    System.out.println("Name List" + ServicePerformanceData.getInstance().getNameList());

    return ServicePerformanceData.getInstance().getNameList().toString();
}


    /************************************************************************
    Original code in Deitel book with linear search of selected Radio button in Actionlistener
    ****************************************************************************/
    import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JRadioButtonMenuItem;


public class MenuTest extends JFrame{
    private final Color colorValues[] = {Color.BLACK, Color.WHITE, Color.GREEN};
    private JRadioButtonMenuItem colorItems[];      
    private ButtonGroup colorButtonGroup;


    public MenuTest(){
        super("Menu Test");
        JMenu fileMenu = new JMenu("File");

        JMenuBar bar = new JMenuBar();
        setJMenuBar(bar);
        bar.add(fileMenu);

        String colors[] = {"Black", "White", "Green"};
        JMenu colorMenu = new JMenu("Color");
        colorItems = new JRadioButtonMenuItem[colors.length];
        colorButtonGroup = new ButtonGroup();

        ItemHandler itemHandler = new ItemHandler();

        for(int count = 0; count < colors.length; count++){
            colorItems[count] = new JRadioButtonMenuItem(colors[count]);
            colorMenu.add(colorItems[count]);
            colorButtonGroup.add(colorItems[count]);
            colorItems[count].addActionListener(itemHandler);
        }

        colorItems[0].setSelected(true);
        fileMenu.add(colorMenu);
        fileMenu.addSeparator();

    }

    private class ItemHandler implements ActionListener{
        public void actionPerformed(ActionEvent event){
            for(int count = 0; count < colorItems.length; count++){
                if(colorItems[count].isSelected()){
                    getContentPane().setBackground(colorValues[count]);
                }
            }
        }
    }


    public static void main(String args[]){
        MenuTest menuFrame = new MenuTest();
        menuFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        menuFrame.setSize(600,400);
        menuFrame.setVisible(true);
        menuFrame.getContentPane().setBackground(menuFrame.colorValues[0]);
    }
}
    /************************************************************************
    My Code redefined version of Deitel's w/o linear search in ActionListener
    ************************************************************************/

        import java.awt.Color;
        import java.awt.event.ActionEvent;
        import java.awt.event.ActionListener;

        import javax.swing.ButtonGroup;
        import javax.swing.JFrame;
        import javax.swing.JLabel;
        import javax.swing.JMenu;
        import javax.swing.JMenuBar;
        import javax.swing.JMenuItem;
        import javax.swing.JRadioButtonMenuItem;

        public class MenuTest extends JFrame{
        private final Color colorValues[] = {Color.BLACK, Color.WHITE, Color.GREEN};
        private JRadioButtonMenuItem colorItems[];      
        private ButtonGroup colorButtonGroup;


        public MenuTest(){
            super("Menu Test");
            JMenu fileMenu = new JMenu("File");

            JMenuBar bar = new JMenuBar();
            setJMenuBar(bar);
            bar.add(fileMenu);

            String colors[] = {"Black", "White", "Green"};
            JMenu colorMenu = new JMenu("Color");
            colorItems = new JRadioButtonMenuItem[colors.length];
            colorButtonGroup = new ButtonGroup();

            ItemHandler itemHandler = new ItemHandler();

            for(int count = 0; count < colors.length; count++){
                colorItems[count] = new JRadioButtonMenuItem(colors[count]);
                colorMenu.add(colorItems[count]);
                colorButtonGroup.add(colorItems[count]);
                colorItems[count].addActionListener(new ItemHandler(colorValues[count]));
            }

            colorItems[0].setSelected(true);
            fileMenu.add(colorMenu);
            fileMenu.addSeparator();

        }

        private class ItemHandler implements ActionListener{
            private Color setColor;
            public ItemHandler(Color inColor){
                super();
                setColor = inColor;
            }
            public void actionPerformed(ActionEvent event){
                getContentPane().setBackground(setColor);
                repaint();
            }
        }
        public static void main(String args[]){
            MenuTest menuFrame = new MenuTest();
            menuFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            menuFrame.setSize(600,400);
            menuFrame.setVisible(true);
            menuFrame.getContentPane().setBackground(menuFrame.colorValues[0]);
        }
    }


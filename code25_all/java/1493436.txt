public class Client { //main class
 public static volatile HashMap<Integer, Request> requests;
 public static class Request{
    String node;
    int file_id;
    long sbyte;
    int length;
    int pc_id;
    public Request(){

    }
 }

 public static synchronized void insertRequest(int req_nr, String node, int file_id, long sbyte, int length, int pc_id) {
    Request tempr = new Request();
    tempr.node = node;
    tempr.file_id = file_id;
    tempr.sbyte = sbyte;
    tempr.length = length;
    tempr.pc_id = pc_id;
    requests.put(req_nr, tempr);                       
 }

public static synchronized void doSynchronized(int req_nr, String node, int file_id, long sbyte, int length, int pc_id) {        
    reqnr++;
    String r = "P" + reqnr + "," + file_id + "," + Long.toString(sbyte) + "," + length;        
    insertRequest(Client.reqnr, node, file_id, sbyte, length, pc_id);        
}

public class ScheduledEvent implements Job {
 public synchronized boolean isRequested(long sbyte, int length, int file_id, String node) {
    Request req;
    Iterator<Integer> it = Client.requests.keySet().iterator();
    while (it.hasNext()) {
        req = Client.requests.get(it.next());
        if (req.node.equals(node) && req.file_id == file_id && hits(req.sbyte, req.length, sbyte, length)) {
            return true;
        }
    }
    return false;
 }  
}


/**
 * Generates JasperPrint object from the Template file
 * @param Template File Name (String)
 * @param Parameters (Map<String, Object>)
 * @param Collection of Value Objects (Collection, List, ArrayList)
 * @return JasperPrint
 */
private JasperPrint getJRPrint(String tmpltFileLocation, Map<String, Object> params, JRBeanCollectionDataSource dataSource) {
    JasperPrint jrPrint = null;

    log.info("ReportEngine: compiling " + tmpltFileLocation);

    try {
        JasperReport jasperReport = JasperCompileManager.compileReport(tmpltFileLocation);
        jrPrint = JasperFillManager.fillReport(jasperReport, params, dataSource);
    } catch (JRException ex) {
        ex.printStackTrace();
        return getErrorJRPrint(ex);
    }

    return jrPrint;
}

private JasperPrint getErrorJRPrint(Exception ex) {
    JasperPrint errJrPrint = null;
    Map<String, Object> errParams = new HashMap<String, Object>();
    errParams.put("errorMessage", ex.getMessage());

    try {
        JasperReport jasperReport = JasperCompileManager.compileReport(reportFolderName + "errReport.jrxml");
        errJrPrint = JasperFillManager.fillReport(jasperReport, errParams);
    } catch (Exception ex2) {
        ex2.printStackTrace();
    }

    return errJrPrint;
}


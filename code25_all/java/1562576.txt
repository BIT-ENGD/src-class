/** Returns an iterable collection of the the nodes. */
    public Iterable<Position<E>> positions();

@Override
    public Iterable<Position<E>> positions() {
        ArrayList<Posisjon<E>> liste = new ArrayList<Posisjon<E>>();
        liste = dumpings(liste,root);
        System.out.println(liste.get(0));
        return (Iterable<Position<E>>) liste.Iterator(); //PROBLEM HERE!
    }

public interface Position<E> {
  /** Return the element stored at this position. */
  E element();
}

public class Posisjon<E> implements Position<E> {
    private E element;
    private Posisjon<E> parenten;
    private Posisjon<E> rightChildren;
    private Posisjon<E> leftChildren;
    @Override
    public E element() {
        return element;
    }
    public E setElement(E ting){
        E tmpElement = element;
        this.element = ting;
        return tmpElement;
    }
    public Posisjon<E> leftChild(){
        return leftChildren;
    }
    public Posisjon<E> rightChild(){
        return rightChildren;
    }
    public Posisjon<E> parent(){
        return parenten;
    }
    public Posisjon(E element){
        this.element = element; 
    }
    public void setLeftChild(Posisjon<E> ting){
        this.leftChildren = ting; 
    }
    public void setRightChild(Posisjon<E> ting){
        this.rightChildren = ting; 
    }
}


public <T extends Element> List<T> findAll(IElementPredicate pred, Class<T> c);

Class
List<Declaration> decls = 
    scope.findAll(new DeclarationPredicate(), Declaration.class);

public <T extends Element> List<T> findAll(IElementPredicate<T> pred);

IElementPredicate
public interface IElementPredicate<T extends Element> {
    public boolean match(T e);
    public String getDescription();
    public Class<T> getGenericClass();
}

Class
findAll
List<Declaration> decls = scope.findAll(new DeclarationPredicate());

public <T extends Element> List<T> findAll(IElementPredicate<T> pred) {
    List<T> ret = new LinkedList<T>();
    Class<T> c = pred.getGenericClass();
    for(Element e: elements) {
        if (!c.isInstance(e)) continue;
        T obj = c.cast(e);
        if (pred.match(obj)) {
            ret.add(c.cast(e));
        }
    }
    return ret;
}


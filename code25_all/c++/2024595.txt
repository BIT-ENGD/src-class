template <typename T>
struct SillyBase{
   void doFunnyStuff(vector<T> vec){
        dummyField = T();
        for(int i=0; i<10; i++)
            vec.push_back(dummyField++);
    }
    T dummyField;
 };

struct A : public SillyBase<char>{};

struct B : public SillyBase<float>{};

ISillyBase* ptr;

vector<dynamic_generic_type_of(ptr)> vec;
ptr->doFunnyStuff(vec);


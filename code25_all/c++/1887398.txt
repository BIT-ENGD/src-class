class Collection
{
    CollectionBase *d_base;
public:
    Collection(CollectionBase *base);

    Iterator begin() const;
};

inline Iterator Collection::begin() const
{
    return d_base->begin();
}

class CollectionBase
{
public:
    virtual Iterator begin() const = 0;
    virtual Iterator end() const = 0;
};

class Iterator
{
    IteratorBase *d_base;
public:
    bool operator!=(Iterator const &other) const;
};

inline bool Iterator::operator!=(Iterator const &other) const
{
    return d_base->operator!=(*other.d_base);
}

class IteratorBase
{
public:
    virtual bool operator!=(IteratorBase const &other) const = 0;
};

CollectionBase
Iterator
IteratorBase
operator!=
Iterator
IteratorBase
IteratorBase
IteratorBase
IteratorBase
operator!=

Variables(const char *s)

const char *
void useful(){
    vector<int> loopsOE;
    for (unsigned int i=0;i<6;i++)
          loopsOE.push_back(i);

for (unsigned int i=0;i<loopsOE.size();i++){
    //convering int to string
    std :: ostringstream sstreamComplete;
    sstreamComplete << loopsOE[i];
    std :: string loopsOEStr=sstreamComplete.str();
    //construct the string variable "xi" 
    string varPoly("x");
    varPoly.append(loopsOEStr);
    //converting the string to char*
    const char* varPolyConverted=varPoly.c_str()
}
std::vector< polynomial_t > Vec(myEdgesIntersect.size());
Variables V(varPolyConverted);
}

void usefulModified(){
    vector<int> loopsOE;
    for (unsigned int i=0;i<6;i++)
          loopsOE.push_back(i);

for (unsigned int i=0;i<loopsOE.size();i++){
    //convering int to string
    std :: ostringstream sstreamComplete;
    sstreamComplete << loopsOE[i];
    std :: string loopsOEStr=sstreamComplete.str();
    //construct the string variable "xi" 
    string varPoly("x");
    varPoly.append(loopsOEStr);
    //converting the string to char*
    const char* varPolyConverted=varPoly.c_str()
}
std::vector< polynomial_t > Vec(myEdgesIntersect.size());
    const char * str="x0";
Variables V(str);
}


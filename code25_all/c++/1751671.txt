std::string output = (boost::format(formatter) % str1 % str2 % str3).str();

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
    <title>KP&D</title>
    <style type="text/css"> 
        html, body 
        {
            height: 100%;
            margin: 0;
            padding: 0;
        }
        img#bg 
        {
            position:fixed;
            top:0;
            left:0;
            width:100%;
            height:100%;
        }
        #content 
        {
            position:relative;
            z-index:1;
        }       
    </style>
</head>
<body>
<img src="Images/PageBackground.png" alt="background image" id="bg" />
<div id="content">
<br/>&nbsp;
<img src="Images/MyLogoReflected.png" alt="logo image"/>
<br />&nbsp;
<img src="Images/PDC_StatusPage.png" alt="remote status page image" />
<br />&nbsp;
<img src="Images/PDC_RemoteConfiguration.png" alt="remote config image" />
<br />&nbsp;
%s
<br />&nbsp;
<img src="Images/PDC_RemoteSubsystemStatus.png" alt="remote status image" />
<br />&nbsp;
%s
<br />&nbsp;
<img src="Images/PDC_RemoteConnectivityStatus.png" alt="remote status image" />
<br />&nbsp;
%s
<br />&nbsp;
</div>
</body>
</html>

#include <string>
#include <fstream>
#include <boost/algorithm/string.hpp>
#include <boost/format.hpp>

int main()
{
    std::ifstream ifs("welcome.html"); // the html is in that file

    if(!ifs.good())
      return 1;

    std::string buffer = "";

    while(!ifs.eof())
    {
      char buf[256];
      ifs.getline(buf, 256);
      buffer += buf;
    }

    buffer = boost::trim_right_copy(buffer);

    const std::string str1 = "aaa";
    const std::string str2 = "bbb";
    const std::string str3 = "ccc";
    std::string Out = "";

    try{
    Out = (boost::format(buffer)
          % str1
          % str2
          % str3
          ).str();
   } catch(std::exception &e)
   { 
      err = e.what(); 
      return 1; 
   }

    return 0;
}


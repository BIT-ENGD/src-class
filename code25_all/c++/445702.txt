class IStatMsg;

template <typename T>
class ITier
{
public:

    // Methods
    ITier(TierType oType) : o_Type(oType){};
    virtual ~ITier(){};

    typename ITier<T> ParamITier;  // line 60

    ITier* Get(T oKey)
    {
        std::map<T, ParamITier*>::iterator it = map_Tiers.find(oKey);   // line 64

        if (it != map_Tiers.end())
            return it->second;

        return NULL;
    }

    void Set(T oKey, ITier* pTier)
    {
        map_Tiers.insert(pair<T, ParamITier*>(oKey, pTier)); // line 74
    }

    TierType GetType() { return o_Type; }

protected:
    // Methods

    // Attributes
    std::map<T, ParamITier*> map_Tiers;  // line 83
    TierType o_Type;

private:
    // Methods

    // Attributes
};

ITier<T>' specified as
  declarator-id
  /home/gayanm/street/src/QueryServer_NEW/ITier.h:60:
  error:   perhaps you want
ITier<T>'
  /home/gayanm/street/src/QueryServer_NEW/ITier.h:60:
  error: expected
ParamITier' was not declared
  in this scope
  /home/gayanm/street/src/QueryServer_NEW/ITier.h:83:
  error: template argument 2 is invalid
  /home/gayanm/street/src/QueryServer_NEW/ITier.h:83:
  error: template argument 4 is invalid
  /home/gayanm/street/src/QueryServer_NEW/ITier.h:83:
  error: ISO C++ forbids declaration of
  
ITier<T>*
  ITier<T>::Get(T)':
  /home/gayanm/street/src/QueryServer_NEW/ITier.h:64:
  error:
;' before '::' token
  /home/gayanm/street/src/QueryServer_NEW/ITier.h:66:
  error:
end' in
  
int'
  /home/gayanm/street/src/QueryServer_NEW/ITier.h:
  In member function
insert' in
  
int'
  /home/gayanm/street/src/QueryServer_NEW/ITier.h:74:
  error:
ParamITier' undeclared (first
  use this function)
  /home/gayanm/street/src/QueryServer_NEW/ITier.h:74:
  error: expected primary-expression
  before '>' token
  /home/gayanm/street/src/QueryServer_NEW/ITier.h:
  At global scope:
  /home/gayanm/street/src/QueryServer_NEW/ITier.h:93:
  error: base

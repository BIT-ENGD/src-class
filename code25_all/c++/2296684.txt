#include <iostream>
#include <string>
#include <vector>

using namespace std;


vector<string> print_triangle( int max_stars)
{
 vector<string> buffer;

 if( max_stars == 1)
 {
  buffer.push_back("*");
  buffer.push_back("*");
  return buffer;
 }

 //This is the first part of the program that writes the first line of
 //asterisks
 string tmp;
 for( int i = 0; i < max_stars; i++)
 {
  tmp.push_back('*');
 }

 buffer.push_back(tmp);

 //This is the recursive part of the program, which generates the
 //remainder of the triangle pattern  - the inner part.
 vector<string> inner_part;
 inner_part = print_triangle( max_stars - 1);

 vector<string>::iterator iter = inner_part.begin();
          for( ; iter != inner_part.end(); ++iter)
          {
               buffer.push_back(*iter);
          }
 string tmp1;
 for( int i = 0; i < max_stars; i++)
 {
  tmp1.push_back('*');
 }
 buffer.push_back(tmp1);

 return buffer;
}

 for( int i = 0; i < inner_part.size(); ++i)
 {
  buffer.push_back(inner_part[i]);
 }


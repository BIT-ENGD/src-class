stack::stack(capacity) : items(new item[capacity]), front(*items), maxSize(capacity-1)
{
    top = -1;
}

bool stack::pushFront(const int nPushFront)
{     
        if ( count == maxSize ) // indicates a full array
        {
            return false;
        }
        for ( int entry_int = 0; entry_int < count; ) // loop less than however many we count.
        {
            if ( entry_int == top+1 )
            {
                front.n = items[top+1].n;
            }
            items->n = items[++entry_int].n;
            items[entry_int].n  = front.n;
            front.n = items[++entry_int].n;
            items[entry_int].n  = items->n;
        }
        ++count;
        items[top+1].n = nPushFront;
        return true;    
}


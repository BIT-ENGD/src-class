#include <boost/regex.hpp>
#include <iostream>
#include <string>
#include <fstream>
#include <sstream>
#include "time.h"
using namespace std;


class application{
private:
 //Variables
 boost::regex expression;
 boost::smatch matches;
 string line;
 string pat;
 int lineNumber;
 string replace;
 char time[9];
 char date[9];

 //Functions
 void getExpression(){
  cout << "Expression: ";
  cin >> pat;
  try{
   expression = pat;
  }
  catch(boost::bad_expression){
   cout << pat << " is not a valid regular expression\n";
   exit(1);
  }
 }

 void boostMatch(){
  //Files to open
  //Input Files
  ifstream in("files/trff292010.csv");
   if(!in) cerr << "no file\n";
  //Output Files
   ofstream out("files/ORIGtrff292010.csv");
   ofstream newFile("files/NEWtrff292010.csv");
   ofstream record("files/record.dat");
  //time
   _strdate_s(date);
   _strtime_s(time);
   lineNumber = 0;

  while(in.peek() != EOF){
   getline(in, line, '\n');
   lineNumber++;
   out << line << "\n";
   if (regex_search(line, matches, expression)){
    for (int i = 0; i<matches.size(); ++i){

     record << "Date: "<< date << "Time: " << time << "\tmatches[" << i << "]: " << matches[i] << "\n\tLine Number: "<< lineNumber<< '\n\t\t' << line << '\n';
     boost::regex_replace(line, expression, "");
     newFile << line << "\n";
    }
   }else{
    newFile << line << "\n";
   }
  }
 }

public:
 void run(){
  replace = "";
  getExpression();
  boostMatch();
 }
};


#include <map>
#include <boost/iterator/transform_iterator.hpp>

using namespace std;

template <typename K, typename V>
struct get_value
{
    const V& operator ()(std::pair<K, V> const& p) { return p.second; }
};

class test
{
    typedef map<int, float> TMap;
    TMap mymap;

public:
    typedef get_value<TMap::key_type, TMap::value_type> F;
    typedef boost::transform_iterator<F, TMap::iterator> transform_iterator;

    transform_iterator begin()
    {
        return make_transform_iterator(mymap.begin(), F());
    }
};

transform_iterator.hpp(43) : error C2039: 'result_type' : is not a member of 'get_value<K,V>'
        with
        [
            K=int,
            V=std::pair<const int,float>
        ]


template<int NRows, int NCols, typename T>
struct Mat {
    typedef Mat<NRows, NCols, T> MyType;

    typedef T value_type;
    typedef const T *const_iterator;
    typedef T *iterator;

    enum { NumRows = NRows };
    enum { NumCols = NCols };

    T m_data[NRows * NCols];

    // ... Lot's of operations and functions ...

// Some overloads
typedef Mat<2, 1, int> Vec2i;
typedef Mat<2, 1, float> Vec2f;
typedef Mat<3, 1, float> Vec3f;
typedef Mat<4, 1, unsigned char> Vec4ub;
typedef Mat<4, 4, float> Mat44f;
typedef Vec3f Vector;
typedef Vec4ub Color;
typedef Vec2f LonLat;

vector

CreateFile( "WarandPeace.txt", GENERIC_READ, FILE_SHARE_READ, 0, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, 0 )

string ParseStr( string sIn, string sDelim, int nField )
{  
    int match, LenStr, LenDelim, ePos, sPos(0), count(0);
    string sRet;

        LenDelim = sDelim.length();
        LenStr   = sIn.length();
        if( LenStr < 1 || LenDelim < 1 ) return ""; // Empty String
        if( nField < 1 ) return "";
        //=========== cout << "LenDelim=" << LenDelim << ", sIn.length=" << sIn.length() << endl;


        for( ePos=0; ePos < LenStr; ePos++ ) // iterate through the string
        { // cout << "sPos=" << sPos << ", LenStr=" << LenStr << ", ePos=" << ePos << ", sIn[ePos]=" << sIn[ePos] << endl;
            match = 1; // default = match found
            for( int k=0; k < LenDelim; k++ ) // Byte value 
            {  
                if( ePos+k > LenStr ) // end of the string
                    break;
                else if( sIn[ePos+k] != sDelim[k] ){ // match failed
                    match = 0; break; }
            }
            //===========

            if( match || (ePos == LenStr-1) )  // process line
            { 
                if( !match ) ePos = LenStr + LenDelim; // (ePos == LenStr-1) 
                count++; // cout << "sPos=" << sPos << ", ePos=" << ePos << " >" << sIn.substr(sPos, ePos-sPos) << endl;
                if( count == nField ){ sRet = sIn.substr(sPos, ePos-sPos); break; } 
                ePos = ePos+LenDelim-1; // jump over Delim
                sPos = ePos+1; // Begin after Delim
            } // cout << "Final ePos=" << ePos << ", count=" << count << ", LenStr=" << LenStr << endl;
        }// next

    return sRet;      
} 


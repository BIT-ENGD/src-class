class A
{    
    static const unsigned int Property_0 = GET_KEY_MACRO; //expands to 0
    static const unsigned int Property_1 = GET_KEY_MACRO; //expands to 1     
};
class B : public A
{    
    static const unsigned int Property_0 = GET_KEY_MACRO(A); //expands to 2
    //and so forth    
};
class C : public A
{
     static const unsigned int Property_0 = GET_KEY_MACRO(A); //expands to 2. different inheritance chain
};

objectinstance.SetValue(C::Property_0, 5)

BEGIN_PROPERTIES
    REG_PROP(Property_0, int)
    REG_PROP_G(Property_1, int, getterFunc)
    ...
END_PROPERTIES

//expands to 

virtual void registerProperties()
{
    register(blah, blah, ...)
}


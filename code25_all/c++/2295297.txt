#include <iostream>
#include <vector>

using namespace std;

int distance(vector<int>& set1, vector<int>& set2) {
    int distance = 0;

    unsigned int i1 = 0;
    unsigned int i2 = 0;
    while(i1 < set1.size() && i2 < set2.size()) {
        if(set1[i1] == set2[i2]) {
            ++i1; ++i2;
        } else {
            ++distance;
            set1[i1] < set2[i2] ? ++i1 : ++i2;
        }
    }

    unsigned int zero = 0;
    distance += std::max(set1.size() - i1, zero) + std::max(set2.size() - i2, zero);
}

int main() {
    vector<vector<int> > frequent_sets;
    vector<int> vector3;
    vector3.push_back(1);vector3.push_back(2);vector3.push_back(3);
    vector<int> vector2;
    vector2.push_back(1);vector2.push_back(2);

    frequent_sets.push_back(vector3);
    frequent_sets.push_back(vector3);
    frequent_sets.push_back(vector2);
    frequent_sets.push_back(vector3);


    for(vector<vector<int> >::iterator itouter = frequent_sets.begin(); itouter != frequent_sets.end(); ++itouter)
        for(vector<vector<int> >::iterator itinner = (itouter + 1); itinner != frequent_sets.end(); ++itinner)
            if(distance(*itinner, *itouter) == 0) {
                cout << "Hey" << endl;
            }
}

distance(*itouter, *itinner) == 0
itinner->size() == itouter->size()

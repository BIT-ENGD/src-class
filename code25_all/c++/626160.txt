        HeavyFunction::HeavyFunction^ hf;  //HeavyFunction is a class that has a time consuming function in it
        ThreadStart^ efbThreadDelegate;
        Thread^ efbThread;

        if( pEfbData->nBlockingRecall != DOEFB_BUSY ) {
            hf  = gcnew HeavyFunction::HeavyFunction;
            hf->iiStart = (int)(pEfbData->uParams[0].dw);
            hf->iiEnd = (int)(pEfbData->uParams[1].dw);
            efbThreadDelegate = gcnew ThreadStart( hf, &HeavyFunction::HeavyFunction::iGetPrime );
            efbThread = gcnew Thread( efbThreadDelegate );
            efbThread->Start();
            return DOEFB_BUSY;
        }else if ( efbThread->IsAlive ) {
            return DOEFB_BUSY;
        }else {
            uRetValue->dw = hf->iReturn;
            return 0;
        }


  const int bufSize = 4096;
  char buf[bufSize + 1];
  const string cpuInfo = "/proc/cpuinfo";
  int cpuFD = ::open(cpuInfo.c_str(), O_RDONLY);

  if (cpuFD == -1) {
    logOutputStream << "Failed attempt to open '" << cpuInfo << "': "
                    << strerror(errno) << endl;
  } else {
    assert(bufSize <= SSIZE_MAX);

    logOutputStream << "Contents of: '" << cpuInfo << "'.\n";

    for (int nRead = ::read(cpuFD, buf, bufSize); nRead != 0;) {
      if (nRead == -1) {
        logOutputStream << "Failed attempt to read '" << cpuInfo << "': "
                        << strerror(errno) << endl;
        break;
      } else {
        buf[nRead] = '\0';
        logOutputStream << buf;
      }
    }
    if (::close(cpuFD) == -1) {
      logOutputStream << "Failed attempt to close '" << cpuInfo << "': "
                      << strerror(errno) << endl;
    }
  }


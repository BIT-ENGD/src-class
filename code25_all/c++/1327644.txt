class DocumentComponent
{   
    public:
        virtual void removeComponent(int index){}
        virtual void addComponent(DocumentComponent& comp){}
        virtual void print()=0;
};

class TextBody : public DocumentComponent
{
    public:
        TextBody();
        virtual void addComponent(DocumentComponent& comp);
        virtual void print();
    private:
        vector<DocumentComponent*> container;
};

void TextBody::addComponent(DocumentComponent& comp)
{
    container.push_back(&comp);
}

void TextBody::print()
{
    if (container.size() == 0)
        return;
    for_each(container.begin(), container.end(),mem_fun_ref(&DocumentComponent::print));
}


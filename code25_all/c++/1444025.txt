namespace Graphics {
class Shape {
public:
    virtual void Render(Point point) {};
};
}

namespace Graphics {

    class Rect : public Shape {

    public:

        Rect(float x, float y);
        Rect();

        void setSize(float x, float y);

        virtual void Render(Point point);


    private:

        float sizeX;
        float sizeY;

    };

}

struct ShapePointPair {
    Shape shape;
    Point location;
};

std::vector<Graphics::ShapePointPair> theShapes = theSurface.getList();

for(int i = 0; i < theShapes.size(); i++) {

    theShapes[i].shape.Render(theShapes[i].location);

}


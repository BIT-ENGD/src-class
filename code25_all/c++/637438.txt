vector<sStruct> * loadFile(char *myTextFile)
{
    myStruct 
        sStruct; 
    vector<myStruct> 
        vectorAddress,
        *vectorData = new vector<myStruct>
    string 
        feild1, feild2, feild3, feild4;

    ifstream 
        *inFile = new ifstream;

    inFile->open( myTextFile, ios::in );


    if ( !inFile->good() )
    {
         cout << "? File Doesnt Exist! " << endl;
    }

    while ( !inFile->eof() )
    {

         getline( *inFile, feild1, ',' );
         sStruct.m_1 = field1;
         getline( *inFile, feild2, ',' );
         sStruct.m_2 = field2;
         getline( *inFile, field3, ',' );
         sStruct.m_3; = feild3
         getline( *inFile, feild4 );
         sStruct.m_4 = feield4;

    vectorData->push_back( sStruct );

    }

    inFile->clear();
    inFile->close();
    cout << vectorData->size();
    delete inFile;   // allocated obj delete to fast why bother?
    return vectorData;
}

vector<sStruct> *  addElement(vector<sStruct> *vAddElement)
{    
    sStruct addElement;  // referring to the same struct.
    cout << "Enter a String: ";
    cin  >> addElement.feild1

    vAddElement->push_back( addElement );
    cout << vAddElement->size() << endl;
    return vAddElement;
}


class Dependent
{
    protected:
        Dependent();
        /// Warning all connected \ref Dependent that the Dependent does not exist.
        ~Dependent();
        /// Connected Dependent \see connect(Dependent*, Dependent*)
        std::list<Dependent*>* dependents;
        /// Register a Dependent.
        void newDependent(Dependent*);
        /// Check if dependent on the given Dependent.
        bool listeningTo(const Dependent*) const;
        /// Used by a destructing connected Dependent to warn that it no longer exists.
        void stopListening(Dependent*);

    friend void connect(Dependent*, Dependent*);
};


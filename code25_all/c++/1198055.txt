class IInterface
{
public:

    virtual ~IInterface() {}

    virtual methodA() = 0;

    virtual methodB() = 0;

};

class AImplementation : public IInterface
{
    // etc... implementation here
}

int main()
{
    AImplementation* ai = new AIImplementation();
}

class IInterface
{
public:

    virtual ~IInterface() {}

    static std::tr1::shared_ptr<IInterface> create(); // implementation in .cpp
    virtual methodA() = 0;

    virtual methodB() = 0;

};

int main()
{
    std::tr1::shared_ptr<IInterface> test(IInterface::create());
}


LatLngBounds clusterBounds(&boundsNorthEast, &boundsSouthWest);

LatLngBounds::LatLngBounds(LatLng &newSouthWest, LatLng &newNorthEast)

std::vector<std::string> argVector;

... fill up my argVector with strings..

vector<double> boundsVector = explodeStringToDouble(argVector[i]);
LatLng boundsNorthEast(0, boundsVector[0], boundsVector[1]);
LatLng boundsSouthWest(0, boundsVector[2], boundsVector[3]);
LatLngBounds clusterBounds(&boundsNorthEast, &boundsSouthWest);

#ifndef __LATLNGBOUNDS
#define __LATLNGBOUNDS
#include "LatLng.h"
class LatLngBounds {
private:
    LatLng northEast;
    LatLng southWest;
public:
    LatLngBounds(LatLng&,LatLng&);
};
#endif

#include "LatLngBounds.h"
#include "LatLng.h"

LatLngBounds::LatLngBounds(LatLng &newSouthWest, LatLng &newNorthEast)
{
    this->southWest = newSouthWest;
    this->northEast = newNorthEast;
};

#ifndef __LATLNGDEF
#define __LATLNGDEF
class LatLng {
public:
    LatLng(int,double,double);
private:
    double lat, lng;
    int id;
};
#endif

#include "LatLng.h"
LatLng::LatLng(int newId, double newLat, double newLng)
{
    /* Grab our arguments */
    id = newId;
    lat = newLat;
    lng = newLng;
};


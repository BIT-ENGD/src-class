template <class T>
bool BST<T>::search(const T& x, int& len) const
{
    return search(BT<T>::root, x);
}


template <class T>
bool BST<T>::search(struct Node<T>*& root, const T& x)
{
   if (root == NULL)
       return false;
   else
      {
         if (root->data == x)
             return true;
         else if(root->data < x)
             search(root->left, x);
         else 
             search(root->right, x);                 
      }             
}

if(t.search(v[1], len) == true)
       cout << endl << "true";

BST.h: In member function 창bool BST<T>::search(const T&, int&) const [with T = int]창:
prog5.cc:24:   instantiated from here    
BST.h:78: error: no matching function for call to 창BST<int>::search(Node<int>* const&, const int&) const창    
BST.h:76: note: candidates are: bool BST<T>::search(const T&, int&) const [with T = int]
BST.h:83: note:                 bool BST<T>::search(Node<T>*&, const T&) [with T = int]


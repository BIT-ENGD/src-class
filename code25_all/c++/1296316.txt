// blah blah blah...
// note: here String is a defined as: typedef std::string String;

void Log::logMessage( const String& message )
    {
        logText(); // to be sure we flush the current text if any (when "composing" a message)
        addText( message ); 
        logText(); // really log the message and make the current text empty
    }

// blah blah blah...

    Log& operator<<( Log& log, const std::stringstream& message )
    {
        log.logMessage( message.str() );
        return log;
    }

    Log& operator<<( Log& log, const String& message )
    {
        log.addText( message );
        return log;
    }

gcore::Log& log = *m_log;
log << getName() << " : application created.";
log << "This is a test for " << getName();

log << getName() << " : application created."; 

log.addText( getName() );
log.addText( " : application create." );
log.logText();

log << getName() << " : application created." << std::endl; 


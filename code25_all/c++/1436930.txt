  std::vector<AvaWrapper> m_controls;

  m_controls.clear()

Train::Train() : SpriteWindowFrame(200)
{
  s_mutexProtectingTheGlobalData = new wxMutex();
  m_window_rect = NULL;
  m_thread = NULL;
  m_ok = false;
  m_accumulate_timer = new wxTimer();
  m_accumulate_timer->SetOwner(this, ACCUMULATE_TIMER_ID);

  m_autohide_timer = new wxTimer();
  m_autohide_timer->SetOwner(this, AUTOHIDE_TIMER_ID);

  m_autohide = false;
  m_autohide_period = 5000;
  m_controls.clear();
}

//This version works.
SpaceInit::SpaceInit()
{
  //Use INI config store. If you need something else, just
  //create the appropriate object.
  m_config_store = new IniConfigStore();

  //Start up config. 
  Init(); 

  m_t = new Trains();
  return;
}

SpaceInit::~SpaceInit()
{
  wxDELETE(m_config_store);
  return;
}

SpaceInit::SpaceInit():Trains()
{
  //Use INI config store. If you need something else, just
  //create the appropriate object.
  m_config_store = new IniConfigStore();

  //Start up config. 
  Init(); 
  return;
}


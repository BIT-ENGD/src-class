typedef Seq< vector<int> > MxInt2d;
typedef std::vector<int>  edge_t;
typedef std::vector< edge_t> edge2d_t;

std::vector< edge2d_t > myEdgesIntersect;

edge2d_t edge2d(2);

 //creating the vector of edges of intersections whenever an intersection is detected
for (int i=0;i<1;i++){
    edge2d[0][0]=sweepEvents[i][0];
    edge2d[0][1]=sweepEvents[i][1];
    edge2d[1][0]=sweepEvents[i+1][0];
    edge2d[1][1]=sweepEvents[i+1][1];
    std::cout<<edge2d[0][0]<<" "<<edge2d[0][1]<<endl;
    std::cout<<edge2d[1][0]<<" "<<edge2d[1][1]<<endl;
    myEdgesIntersect.push_back(edge2d);
    std::cout<<myEdgesIntersect[i][0][0]<<" "<<myEdgesIntersect[i][0][1]
            <<"    "<<myEdgesIntersect[i][1][0]<<" "<<myEdgesIntersect[i][1][1]<<endl;
}

 edge2d_t edge2d;
 edge2d[0][0]=0;
 edge2d[0][0]=0;
 edge2d[0][0]=0;
 edge2d[0][0]=0;
 edge2d[0][0]=0;
 myEdgesIntersect.push_back(edge2d);


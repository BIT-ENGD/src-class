regula::State
operator[]
operator[]
regula::State t;
t["math"]["pi"] = 3.14159;

3.14159
pi
math
t
math
pi
LObject LObject::operator[] (const std::string name);

t
operator[]
"math"
operator[]
"pi"
operator=
template <typename T>
T LObject::operator= (const T& value);

T
value
g++
../../test/regula-test.cpp:100: error: no match for ‘operator=’ in 
‘L.regula::State::operator[](std::basic_string<char, std::char_traits<char>, 
std::allocator<char> >(((const char*)"Numbers"), ((const std::allocator<char>&)((const 
std::allocator<char>*)(& std::allocator<char>()))))) = Numbers’
../../include/regula.hpp:855: note: candidates are: regula::LObject&
 regula::LObject::operator=(const regula::LObject&)

g++
operator=
operator[]
operator=
void
template <typename T>
/*T*/ void LObject::operator= (const T& value);

operator==
../../test/regula-test.cpp:153: error: no match for ‘operator==’ in ‘pi == 
L.regula::State::operator[](std::basic_string<char, std::char_traits<char>, 
std::allocator<char> >(((const char*)"pi"), ((const std::allocator<char>&)((const 
std::allocator<char>*)(& std::allocator<char>())))))’


template<typename T>
T default_construct()
{
    return T();
}

some_type x = default_construct<some_type>();

struct Base;

template<typename T>
Base* allocate()
{
    return new T; //Assume T derives from Base...
}

struct factory {
    template<typename T>
    factory()
        : func(allocate<T>)
    {}

    std::tr1::function<Base*()> func;
};

factory
T

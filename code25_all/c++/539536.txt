template <class X>
class A {
public:
    X& operator[] (int i) { ... }
    operator const X* () { ... }
};

A<B*> a;
B* b = a[i];

class A_B {
public:
    B*& operator[] (int i) { ... }
    operator B* const * () { ... }
};

// First interpretation (array-like behaviour first)
B*& b1 = a[i];
B* b2 = (B*) b1;

// Second interpretation (casting behaviour first)
B* const * b1 = (B* const *) a;
B* b2 = b1[a];


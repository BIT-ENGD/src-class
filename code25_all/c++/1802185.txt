class a {
    void fun();
};

void a::fun() {
}

#include "b.h"
#include "a.h"

int main()
{
    a aa;
    b bb;
}

#ifndef A_H
#define A_H

#include <iostream>

class a {
public:
    virtual int fun();
};


int a::fun()
{
    int t;
    std::cout << "a" << std::endl;
    return t;
}

#endif

#ifndef B_H
#define B_H

#include <iostream>
#include "a.h"

class b {
public:
    b();
};

#endif

#include "b.h"
#include "a.h"

b::b()
{
    a aa;
    aa.fun();
}

1>b.obj : error LNK2005: "public: virtual int __thiscall a::fun(void)" (?fun@a@@UAEHXZ) already defined in main.obj

#ifndef A_H
#define A_H

#include <iostream>

template <typename T>
class a {
public:
    virtual T fun();
};


template<typename T> T a<T>::fun()
{
    T t;
    std::cout << "a" << std::endl;
    return t;
}

#endif


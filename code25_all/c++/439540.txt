ThirdPartyGrab (HookFunction);

long _stdcall HookFunction (long, long, void*);

typedef long (_stdcall *HOOK_FUNCTION_PTR) (long, long, void*);

long _stdcall HookFunction (long, long, void*);

ThirdPartyGrab (..., HookFunction, ...);

static MyFrameGrabber& instance()
{
        static MyFrameGrabber _instance;
        return _instance;
}
long Hook(long, long, void*); // Implementation is in a separate cpp file

long MFTYPE call_hook(long x, MIL_ID y, void MPTYPE *z)
{
    return MyFrameGrabber::instance().Hook(x,y,z);
}
void
MyFrameGrabber::grab ()
{
    ThirdPartyGrab(..., call_hook, ...);
}

static MatroxFrameGrabber _instance;
MyFrameGrabber (void* x,
                const std::string &y, int z,
                std::string &zz);

MyFrameGrabber();

template <class A_Type> class Provider{
public:
A_Type getValue();
    void setSubProvider(ISubProvider* subProvider)
private:
A_Type m_value;
ISubProvider* m_subProvider;
};

template <class A_Type> class ISubProvider{
public:
virtual A_Type getValue() = 0;
};

class IntegerProvider : public ISubProvider{
   int getValue(){return 123;}
};

class StringProvider : public ISubProvider{
  string getValue(){return "asdf";}
};

void setSubProvider(ISubProvider* subProvider)

Provider<int> myProvider = new Provider<int>();

myProvider.setSubProvider(new IntegerProvider());

myProvider.setSubProvider(new StringProvider());


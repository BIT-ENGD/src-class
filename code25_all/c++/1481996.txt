/////// Organizer.h // Main header file that utilizes all other headers
#include <wx/wx.h>
#include <wx/datectrl.h>
#include <wininet.h>
#pragma comment(lib, "wininet.lib")
#include "Threading.h"
#include "MainDlg.h"
#include "svDialog.h"

///////// Threading.h // Please read the article given above
#include "ou_thread.h"
using namespace openutils;

extern HINTERNET hInternet; // both declared in MainDlg.cpp
extern HINTERNET hFtpSession;

class svThread : public Thread
{
private:
  char* ThreadName;
public:
  svThread(const char* szThreadName)
  {
    Thread::setName(szThreadName);
    this->ThreadName = (char* )szThreadName;
  }
  void run()
  {
    if(this->ThreadName == "Upload")
    {
    hInternet = InternetOpen(NULL, INTERNET_OPEN_TYPE_DIRECT, NULL, NULL, 0);
    hFtpSession = InternetConnect(hInternet, L"myserver.com", INTERNET_DEFAULT_FTP_PORT, L"user", L"pass", INTERNET_SERVICE_FTP, 0, 0);

    std::string filenameOnServer((char* )tb_file->GetValue().c_str()); // HERE..the tb_file..
    std::vector<std::string> filepathParts;
    __strexp(filenameOnServer, "\\", filepathParts); // this is user-defined function that will split a string (1st param) with the given delimiter (2nd param) to a vector (3rd param)
    filenameOnServer = filepathParts.at(filepathParts.size() - 1); // get only the filename

    if(FtpPutFile(hFtpSession, tb_file->GetValue().c_str(), (LPCWSTR)filenameOnServer.c_str(), FTP_TRANSFER_TYPE_BINARY, 0))
    {
        MessageBox(NULL, L"Upload Complete", L"OK", 0);
    }
    else
    {
        MessageBox(NULL, L"Upload Failed", L"OK", 0);
    }
    }
  }
};

////////// svDialog.h
class svDialog : public wxFrame
{
public:
  svDialog(const wxString &title);
  void InitializeComponent();
  void ProcessUpload(wxCommandEvent &event); // function (button event) that will start the UPLOAD THREAD
  wxTextCtrl *tb_file; // this is the textbox
  //....other codes
};

///////////svDialog.cpp
#include "Organizer.h"
Thread *UploadRoutine;

svDialog::svDialog(const wxString &title) : wxFrame(...) // case unrelated
{
  InitializeComponent();
}
void svDialog::InitializeComponent()
{
  tb_file = new wxTextCtrl(...);
  //......other codes
}
void svDialog::ProcessUpload(wxCommandEvent &event)
{
  UploadRoutine = new svThread("Upload");
  UploadRoutine->start();
  //......other codes
}

////// MainDlg.cpp // (MainDlg.h only contains the MainDlg class declaration and member function prototypes)
#include "Organizer.h"

HINTERNET hInternet;
HINTERNET hFtpSession;
IMPLEMENT_APP(MainDlg) // wxWidgets macro

bool MainDlg::OnInit() // wxWidgets window initialization function
{
  //......other codes
}


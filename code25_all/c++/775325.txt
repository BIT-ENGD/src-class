class MyType;
{
    // some stuff
}

class MySubType:MyType
{
    // some stuff
}

void foo(MyType** arr, int len)
{
    for (int i = 0;i<len;i++)
        // do something on arr[i]->
}

void bar()
{
    MySubType* arr[10];
    // initialize all MySubType*'s in arr
    foo(&arr, 10);
}

void foo(std::vector<MyType>& s)
{
    std::vector<MyType>::iterator i;
    for (i = s.begin(); i != s.end(); i++)
        // do stuff on *i
}

void bar()
{
    std::vector<MySubType> s;
    foo(s);  // compiler error
}

std::vector<MyType, std::allocator<MyType> >&
std::vector<MySubType, std::allocator<MySubType> >
std::vector<MySubType> s;
std::vector<MyType>& t = s;


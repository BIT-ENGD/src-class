typedef struct KeyC{
     char K[5];
     char C[9];
} TKeyC;

typedef struct Bin{
     char Car;
     char Cad[9];
     TKeyC *KC;
} TBin;

class Bo {
    private:
        TDoubleList<TBin> *Ent;

    public:
            ...
}

TNode<TBin> *Aux;
TKeyC *AuxKC=new TKeyC;
Aux->getObj().KC=AuxKC;

template <class T>
class TNode
{
    private:
         T TObj;
         TNode<T> *Prev,*Next;

    public:
        TNode();
        ~TNode();
        TNode(T);
        void setObj(T);
        void sPrev(TNode<T>*);
        void sNext(TNode<T>*);
        T getObj();
        TNode<T>* gPrev();
            TNode<T>* gNext();
};

template <class T>
T TNode<T>::getObj() {return(TObj);};


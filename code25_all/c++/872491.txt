char16_t
char32_t
uint16_t
uint32_t
wchar_t
class some_class {
public:
    void set(std::string); // utf8 string
    void set(std::wstring); // wchar string utf16 or utf32 according
                             // to sizeof(wchar_t)
    void set(std::basic_string<uint16_t>)
                         // wchar independent utf16 string
    void set(std::basic_string<uint32_t>);
                         // wchar independent utf32 string

#ifdef HAVE_NEW_UNICODE_CHARRECTERS
    void set(std::basic_string<char16_t>)
                         // new standard utf16 string
    void set(std::basic_string<char32_t>);
                         // new standard utf32 string
#endif
};

foo.set(U"Some utf32 String");
foo.set(u"Some utf16 string");

std::basic_string<char16_t>
std::basic_string<char32_t>
typedef basic_string<wchar_t> wstring.

typedef basic_string<char16_t> u16string;
typedef basic_string<char32_t> u32string;


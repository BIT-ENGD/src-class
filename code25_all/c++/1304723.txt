template<typename E>
E enum_cast(const int &source);

enum ConfigEnum {
    ConfigEnumOption1 = 'A'
  , ConfigEnumOption2 = 'B'
  , ConfigEnumInvalid };

ConfigEnum option = XmlNode.iAttribute("option");

template<>
ConfigEnum enum_cast(const int &source) {
   switch(source) {
   case ConfigEnumOption1 : return ConfigEnumOption1;
   case ConfigEnumOption2 : return ConfigEnumOption2;
   default return ConfigEnumInvalid;
}

ConfigEnum option = enum_cast<ConfigEnum>(XmlNode.iAttribute("option"));

InternalEnum internal = enum_cast<InternalEnum>(internal_integer);

template<typename E>
E enum_cast(const int &source) {
  E copy = source;
  return copy;
};


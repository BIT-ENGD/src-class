// my classType.h
const int ImpliedIndex = 1000;

class classType
{
private:
  char privateMember[ImpliedIndex];
  char privateMember2[ImpliedIndex];
public:
  static void myMemberCounter;
  void printMyInformation():
  void mySupplier(const char[] );
  ...
};

//classType.cpp
int globalCounter = 0;

void classType::printMyInformation()
{
   ...
   cout << privateMember << endl;
   cout << globalCounter++ << endl;
}
void classType::mySupplier( const char buff[] )
{
   strcpy( privateMember, buff );

}

// The main should clear things up a bit.
// main.cpp

int main()
{
    while ( !inFile.eof() )
    {   
        for ( int x = 0; x < 20; x++ )
        {
       // do file I/O here
       // save each line of file into an temp array
       // supply temp array with a routine defined in myClass
       // re-use temp array until we run out of file
        }
    }    
//close file

globalCounter = memberCounter;
myClass[ImpliedIndex].memberCounter

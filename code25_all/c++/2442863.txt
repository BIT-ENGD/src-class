/** Generic stack implementation.
    Accepts std::list, std::deque and std::vector
    as inner container. */
template <
typename T,
    template <
        typename Element,
        typename = std::allocator<Element>
    > class Container = std::deque
>
class stack {  
public:
    class StackEmptyException { };
    ...

    /** Returns value from the top of the stack.
        Throws StackEmptyException when the stack is empty. */
    T top() const;
   ...
}

template <typename Stack>
void testTopThrowsStackEmptyExceptionOnEmptyStack() {
    Stack stack;
    std::cout << "Testing top throws StackEmptyException on empty stack...";

    try {
        stack.top();
    } catch (Stack::StackEmptyException) {
        // as expected.
    }

    std::cout << "success." << std::endl;
}

In function ‘void testTopThrowsStackEmptyExceptionOnEmptyStack()’:
error: expected type-specifier
error: expected unqualified-id before ‘)’ token
=== Build finished: 2 errors, 0 warnings ===


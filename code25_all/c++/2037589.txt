class A
   {public:
      template <class T> int F (T arg) const;
      ....
   }

class B;
...
template <> void A::F (B arg) const //GOOD!

template <class T> class B ...
...
template <> void A::F (B<T> arg) const //error, T undeclared

template <class T> class B ...
...
template <class T> template <> void A::F (B<T> arg) const //error, too many templates

class B
   {friend template <> void A::F (B arg) const // error
     // as well as
    template <> friend void A::F (B arg) const // error
   }


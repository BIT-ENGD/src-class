void list::displayByName(ostream& out) const
{
 node *current_node  = headByName; // is  @the head of the list
 node *evil_node     = tail;

 while ( current_node != NULL )
 {
  current_node = sort( current_node );
  out << current_node->item.getName() << endl;
 }
}

list::node * const list::sort( node *given_node ) const
{ 
 node *least_found_node = NULL;
 node *current_node    = given_node->nextByName;

 while ( current_node && current_node != given_node ) // while current_node != NULL and..
 {   
  if ( strcmp( current_node->item.getName(), given_node->item.getName() ) < 0 )
  {
   if ( least_found_node == NULL ||  
      ( strcmp( least_found_node->item.getName(), current_node->item.getName() ) > 0 ) )
   {
    least_found_node = current_node;
   }
  }
  current_node = current_node->nextByName;

 }

 return least_found_node; // return that sorted node
}


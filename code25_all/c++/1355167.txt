#include <string>
#include <vector>
#include <fstream>
#include <iostream>
#include <iterator>

using namespace std;

class Purchase;

class Order {
public:
    string name;
    string address;
    vector<Purchase> items;
};

class Purchase {
public:
    string product_name;
    double unit_price;
    int count;
    Purchase() {}
    Purchase(string pn, double up, int c) :product_name(pn), unit_price(up), count(c) {}
};

istream& operator>>(istream& in, Order& o)
{
    string p_name;
    double u_price;
    int p_count;

    getline(in, o.name);
    getline(in, o.address);
    getline(in, p_name);
    in >> u_price >> p_count;

    o.items.push_back(Purchase(p_name, u_price, p_count));

    return in;
}

ostream& operator<<(ostream& out, const Purchase& p)
{
    out << p.product_name << '\n'
        << p.unit_price << '\n'
        << p.count << '\n';
    return out;
}

ostream& operator<<(ostream& out, const Order& o)
{
        out << '\n' << o.name << '\n'
            << o.address << '\n'
            << o.item << '\n';
        return out;
}

int main()
{
    cout << "Enter file to read orders from: \n";
    string file;
    cin >> file;
    ifstream is(file.c_str());

    istream_iterator<Order> ii(is);
    istream_iterator<Order> eos;
    ostream_iterator<Order> oo(cout);
    vector<Order> orders(ii, eos);

    copy(orders.begin(), orders.end(), oo);
}

John Smith
117 One Tree Hill
Trampoline
600.00
1 

//... 9 more Orders like this

John Smith
117 One Tree Hill
Trampoline
600.00
1
//... Nothing after this....


template <typename T>
bool LockerManager<T>::
  AddData(const std::string& id, T* pData)
{

  boost::intrusive_ptr<Locker<T> > lPtr(Locker<T>(pData)); // Line 359 - compiles

  mMap.insert(make_pair(id, lPtr));  // Line 361 - gives error
}

template <typename T>
Locker<T>::
  Locker(T* pData)
  : IntrusivePtrCountable(),
    mpData(pData),
    mThreadId(0),
    mDataRefCount(0)
{} 

class Clayton
{
public:
  static int count;

  Clayton()
  { mNumber = count++;}

  void GetNumber()
  { cerr<<"My number is: "<<mNumber<<endl; }

private:
  int mNumber;
};

int Clayton::count = 0;

class ClaytonManager
{
public:
  bool AddData(const std::string& id, Clayton* pData)
  { return mManager.AddData(id, pData); }

private:
  LockerManager<Clayton> mManager;
};

Compiling LockerManagerTest.cpp                             : /usr/local/lib/gcc/i686-pc-linux-gnu/3.4.6/../../../../include/c++/3.4.6/bits/stl_pair.h: In constructor `std::pair<_T1, _T2>::pair(const std::pair<_U1, _U2>&) [with _U1 = std::basic_string<char, std::char_traits<char>, std::allocator<char> >, _U2 = boost::intrusive_ptr<Locker<Clayton> > (*)(Locker<Clayton>), _T1 = const std::basic_string<char, std::char_traits<char>, std::allocator<char> >, _T2 = boost::intrusive_ptr<Locker<Clayton> >]':
../Utilities/include/LockerManager.h:361:   instantiated from `bool LockerManager<T>::AddData(const std::string&, T*) [with T = Clayton]'
src/LockerManagerTest.cpp:35:   instantiated from here
/usr/local/lib/gcc/i686-pc-linux-gnu/3.4.6/../../../../include/c++/3.4.6/bits/stl_pair.h:90: error: no matching function for call to `boost::intrusive_ptr<Locker<Clayton> >::intrusive_ptr(boost::intrusive_ptr<Locker<Clayton> > (* const&)(Locker<Clayton>))'
/usr/local/boost-1.36.0/include/boost-1_36/boost/intrusive_ptr.hpp:94: note: candidates are: boost::intrusive_ptr<T>::intrusive_ptr(const boost::intrusive_ptr<T>&) [with T = Locker<Clayton>]
/usr/local/boost-1.36.0/include/boost-1_36/boost/intrusive_ptr.hpp:70: note:                 boost::intrusive_ptr<T>::intrusive_ptr(T*, bool) [with T = Locker<Clayton>]
/usr/local/boost-1.36.0/include/boost-1_36/boost/intrusive_ptr.hpp:66: note:                 boost::intrusive_ptr<T>::intrusive_ptr() [with T = Locker<Clayton>]
Command exited with non-zero status 1
0:05.40


template <class T> class TableWithBlanks : public Table<T> {
 public:

  TableWithBlanks( const int width, const int height ) : w(width), h(height), table_contents( new t_node[width][height]
  {
   table_contents = new t_node[width][height];
   // Go through all the values and blank them.
   for( int i = 0; i < w; i++)
   {
    for( int a = 0; a < h; a++)
    {
     table_contents[i][a].value_ptr = NULL;
    }
   }
  }

  void set_value( const int width, const int height, const T* table_value_ptr)
  {
   if( width <= w && height <= h )
   {
    table_contents[w][h] = table_value_ptr;
   }
  }

  T* get_value( const int width, const int height)
  {
   if( width <= w && height <= h )
   {
    return table_contents[width][height];
   }
  }

 private:
  typedef struct node {
   T* value_ptr;
  } t_node;

  t_node** table_contents;
  int w;
  int h;

};


std::map<HWND, CMyClass*>
class CMyClass
{
    ...

private:
    HWND        m_hWnd;
    HINSTANCE   m_hInstance;
    LPCSTR      m_szClassName;

    static std::map<HWND, CMyClass*> s_mapHandles;

    ...
};

std::map<HWND, CMyClass*> CMyClass::s_mapHandles;

...
m_hWnd = ::CreateWindowEx(0, m_szClassName, "Message Window", 0, 0, 0, 0, 0, HWND_MESSAGE, 0, m_hInstance, 0);
s_mapHandles.insert(pair<HWND, CMyClass*>(m_hWnd, this));

...
s_mapHandles.insert(s_mapHandles.end(), pair<HWND, CMyClass*>(m_hWnd, this));

...
s_mapHandles[m_hWnd] = this;

_Root()
_Parent(_Myhead)
_Parent(_Myhead)
(_Nodepref)(*_Myhead)._Parent
_Myhead

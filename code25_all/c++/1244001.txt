std::vector<int> trEn;

struct enemyStruct {
    float x, y, health, mhealth, speed, turnspeed;
    double angle, tangle;
};
std::vector<enemyStruct> enemies;

for ( unsigned int i = 0; i < bullets.size(); i++ ) {
    for ( unsigned int j = 0; j < enemies.size(); j++ ) {
        if ( bullets[i].x > enemies[j].x-10 && bullets[i].x < enemies[j].x+10 && bullets[i].y > enemies[j].y-10 && bullets[i].y < enemies[j].y+10 )
        {
            enemies[j].health-=bullets[i].dmg;
            if(enemies[j].health<=0){trEn.push_back(j);break;}
        }
    }
}

std::reverse( trEn.begin(), trEn.end() );
for ( unsigned int g = 0; g < trEn.size(); g++ ) {
    unsigned int atmp = trEn.at(g);
    if(atmp<=enemies.size()&&atmp>=0)enemies.erase(enemies.begin()+atmp,enemies.begin()+atmp+1);
} trEn.clear();

int
trEn[0]

typedef vector< vector<int> > MxInt2d;
typedef vector< vector<double> > MxDouble2d;

 class QSweep{   
 public:
 ....
 static MxDouble2d myPoints_;
 MxInt2d myEdges_;
 MxInt2d sweepEvents;

 class order{
 public:
    bool operator() (const vector<int>& edge1, const vector<int>& edge2){
            return (myPoints_[edge1[0]][0]<myPoints_[edge2[0]][0])|| 
                       (myPoints_[edge1[0]][0]==myPoints_[edge2[0]][0]&& 
                        myPoints_[edge1[0]][1]<myPoints_[edge2[0]][1]) 
                   ||
                    (myPoints_[edge1[0]][0]==myPoints_[edge2[0]][0]&& 
                         myPoints_[edge1[0]][1]==myPoints_[edge2[0]][1]&& 
                     getSlope(myPoints_[edge1[0]][0],myPoints_[edge1[0][1],  
                                  myPoints_[edge1[1]][0],myPoints_[edge1[1]][1])
                     <
                         getSlope(myPoints_[edge2[0][0],myPoints_[edge2[0][1],    
                                  myPoints_[edge2[1]][0],myPoints_[edge2[1]][1]));
                    }
};
static double getSlope(double a, double b, double c, double d);
static double computeDet(double a, double b, double c, double d, double x, double y);

 QSweep::QSweep(const MxDouble2d& myPoints, const MxInt2d& myEdges){ 
....
    //code here for initializing myPoints_, myEdges_
sort(myEdges_.begin(),myEdges_.end(),order());
 }

 sort(sweepEvents.begin(),sweepEvents.end(),order1());

 class orderDet{
public:
    bool operator() (const vector<int>& edgeSW1, const vector<int>& edgeSW2   
                              ,const vector<int>& edgeC){
        return  
          (
          computeDet(myPoints_[edgeSW1[0]],myPoints_[edgeSW1[1]],myPoints_[edgeC[0]]) 
           < 
          computeDet(myPoints_[edgeSW2[0]],myPoints_[edgeSW2[1]],myPoints_[edgeC[0]])
           );
  }}

 sort(sweepEvents.begin(), sweepEvents.end(), orderDet());

 error: no match for call to '(QSweepComplete::orderDet) (std::vector<int,  
 std::allocator<int> >&, std::vector<int, std::allocator<int> >&)'
 ./QSweepComplete.h:68: note: candidates are: bool 
 QSweepComplete::orderDet::operator()(const std::vector<int, std::allocator<int>>&,   
 const std::vector<int, std::allocator<int> >&, const std::vector<int, 
 std::allocator<int> >&)


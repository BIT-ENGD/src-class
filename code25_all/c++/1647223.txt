stack::stack(int capacity) : items(new item[capacity]), maxSize(capacity),
count(0), top(-1)
{
    intFront = 0;
}


bool stack::pushFront(const int nPushFront)
{     
    if ( count == maxSize ) // indicates a full array
    {
        return false;
    }
    for ( int shift = 0; shift < count; )
    {
        if ( shift == top+1 )
        {
            intFront = items[top+1].n;
        }
        items->n = items[++shift].n;
        items[shift].n = intFront;
        if ( shift != maxSize-1 )
        {
            intFront = items[++shift].n;
            items[shift].n = items->n;
        }
    }
    ++count;
    items[top+1].n = nPushFront;

    return true;    
}


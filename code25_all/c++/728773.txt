void fileLoadThreadFunc(void *arglist)
{
    while(true)
    {
        // s_mutex keeps the list from being updated by the main thread
        s_mutex.lock();  // uses WaitForSingleObject INFINITE
        // s_filesToLoad is a list added to from the main thread
        while (s_filesToLoad.size() == 0)
        {
            s_mutex.unlock();
            Sleep(10);
            s_mutex.lock();
        }
        loadObj *obj = s_filesToLoad[0];
        s_filesToLoad.erase(s_filesToLoad.begin());
        s_mutex.unlock();

        obj->loadFileAndMemcpy();
    }
}

_beginThread(fileLoadThreadFunc, 0, NULL);

// I used the commented code to see if main thread was ever blocking
// but the PRINT never printed, so it looks like it never was waiting on the worker
//while(!s_mutex.lock(false))
//{
//  PRINT(L"blocked! ");
//}
s_mutex.lock();
s_filesToLoad.push_back(this);
s_mutex.unlock();


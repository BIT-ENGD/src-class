[StructLayout(LayoutKind.Sequential)]
        public struct DataLocater
        {
            [MarshalAs(UnmanagedType.ByValTStr, SizeConst = 256)]
            public string filename;
            [MarshalAs(UnmanagedType.I4)]
            public Int32 sizeOfData;
            public Int32 startLocation;
            public Int32 encrypted;
        }

struct DataLocater
{
    std::string filename;
    int sizeOfData;
    int startLocation;
    int encrypted;
};

#pragma once
#include "CoreArea/Singleton.h"

class FileReader : public Singleton<FileReader>
{
    friend class Singleton<FileReader>;

public:
    void* GetFileData(std::wstring fileName, int &size);

private:
    FileReader();
    ~FileReader();

    struct Header
    {
        std::string somestring;
        int numOfFiles;
    };

    struct DataLocater
    {
        char[256] filename;
        int sizeOfData;
        int startLocation;
        int encrypted;
    };
};


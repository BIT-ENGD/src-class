
  all:test
  test : A.cpp A.hh
    g++ -c A.cpp -o A
    ar cru libA.a A.o
    cp libA.a pathto/project/lib


all: test
test: test.o
  g++ -I.. -L../../lib test.o -o test -lA -lB
test.o : test.cpp
  g++ -c test.cpp -o test.o



Everything works fine...only thing that I want to solve is that final executable 'test' 
depends on objects from libA and libB, so when A.h or A.cpp or B.h or B.cpp changes, it should be made again
So, I now changed my makefile as

test: test.o ../../libA.a ../../libB.a
  g++ -I.. -L../../lib test.o -o test -lA -lB


Now, problem is how I can modify this so that it will make test again only when its 
dependencies are newer than the 'test'.
There is no direct rule to make libA and libB, which Makefile requires and complains about; 
since I am copying these libs from directory A and B into directory project/lib.

So, I guess one solution would be to call make in respective directory A and B when anything is new than 'test' but how do I exactly do that ? Or, any other better solution is appreciated.

Thanks a lot :)

EDIT

Here what I did and it solved the problem

.PHONY : libA libB

../../libA.a : libA
libA :
  cd pathtoDirA; $(MAKE)

../../libB.a : libB
libB :
  cd pathtoDirB; $(MAKE)


test: test.o ../../libA.a ../../libB.a
  g++ -I.. -L../../lib test.o -o test -lA -lB


//class C
class errorContainer{

public:
    virtual ~errorContainer(){ }
    virtual void reportError(int,char*)=0;

};

//Class A
class switchObject{
    void reportError(int,char*);
    errorContainer* errorReference;

public:
    void bindErrorContainer(errorContainer*);
};

//Class A member function definitions
void switchObject::reportError(int errorCode,char* errorMessage){
    errorReference->reportError(errorCode,errorMessage);
}

void switchObject::bindErrorContainer(errorContainer* newReference){
    errorReference=newReference; //commenting out this line fixes the problem
}

//Class B
class switchSystem: public errorContainer{
    int errorCode;
    char* errorMessage;

public:
    switchSystem(int); //MUST specify number of switches in this system.
    void reportError(int,char*);
    int errCode();
    char* errMessage();
    switchObject* switchList;
};

//Class B member function definitions
switchSystem::switchSystem(int swLimit){
    int i;
    switchList=new (nothrow) switchObject[swLimit];
    for(i=0;i<swLimit;i++){
        switchList[i].bindErrorContainer(this);
    }
    errorCode=0;
    errorMessage="No errors.";
}

void switchSystem::reportError(int reportErrorCode,char* reportErrorMessage){
    int len=0,i;    
    errorCode=reportErrorCode;
    if(errorMessage){
        delete[] errorMessage;
    }
    while(reportErrorMessage[len]!='\0'){
        len++;
    }
    errorMessage=new char[len];
    for(i=0;i<=len;i++){
        errorMessage[i]=reportErrorMessage[i];
    }   
}

int switchSystem::errCode(){
    return errorCode;   
}

char* switchSystem::errMessage(){
    return errorMessage;    
}

int main(int argc,char** argv){
   switchSystem sw (2)
   sw.switchList[0].argumentCount=2;
   sw.switchList[1].argumentCount=0;
   sw.switchList[0].identifier="a";
   sw.switchList[1].identifier="switch";
   sw.init(argc,argv);
   if(sw.errCode()>0){
      cout<< "Error "<< sw.errCode()<< ": "<< sw.errMessage()<< endl;
   }
}


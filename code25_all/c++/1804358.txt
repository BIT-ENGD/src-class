#include <vector>
#include <iostream>

template <class F>
class Counter
{
    public:
    Counter();
    void increment(int amount);
    private:
    F calc;
    int current_amount;
};

template <class F>
void Counter<F>::increment(int amount)
{
  current_amount += amount;
  std::cout << F(amount) << "\n";
}

template <class F>
class CounterBattery
{
    public:
      CounterBattery();
      void incrementAll(int amount);
    private:
      std::vector<Counter<F> > counters;
};

template <class F>
void CounterBattery<F>::incrementAll(int amount)
{
  for (std::vector<Counter<F> >::iterator it = counters.begin() ; it != counters.end() ; it++) // fails to compile here
    it->increment(amount);
}


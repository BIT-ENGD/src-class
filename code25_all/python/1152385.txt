import re
match = re.match("(\d+)g", "123g")
if match is not None:
    print match.group(1)

match
$1
$9
if($blah ~= /(\d+)g/){
    print $1
}

with re_context.match('^blah', s) as match:
    if match:
        ...
    else:
        ...

#!/usr/bin/env python2.6
import re

class SRE_Match_Wrapper:
    def __init__(self, match):
        self.match = match

    def __exit__(self, type, value, tb):
        pass

    def __enter__(self):
        return self.match

    def __getattr__(self, name):
        if name == "__exit__":
            return self.__exit__
        elif name == "__enter__":
            return self.__name__
        else:
            return getattr(self.match, name)

def rematch(pattern, inp):
    matcher = re.compile(pattern)
    x = SRE_Match_Wrapper(matcher.match(inp))
    return x
    return match

if __name__ == '__main__':
    # Example:
    with rematch("(\d+)g", "123g") as m:
        if m:
            print(m.group(1))

    with rematch("(\d+)g", "123") as m:
        if m:
            print(m.group(1))

_sre.SRE_Match
with
with rematch("(\d+)g", "123") as m:
    print(m.group(1)) # only executed if the match occurred


x==y
x.__eq__(y)
__cmp__
__eq__
__eq__
__cmp__
y.__eq__(x)
x.__eq__(y)
>>> class TestCmp(object):
...     def __cmp__(self, other):
...         print "__cmp__ got called"
...         return 0
... 
>>> class TestEq(object):
...     def __eq__(self, other):
...         print "__eq__ got called"
...         return True
... 
>>> tc = TestCmp()
>>> te = TestEq()
>>> 
>>> 1 == tc
__cmp__ got called
True
>>> tc == 1
__cmp__ got called
True
>>> 
>>> 1 == te
__eq__ got called
True
>>> te == 1
__eq__ got called
True
>>> 
>>> class TestStrCmp(str):
...     def __new__(cls, value):
...         return str.__new__(cls, value)
...     
...     def __cmp__(self, other):
...         print "__cmp__ got called"
...         return 0
... 
>>> class TestStrEq(str):
...     def __new__(cls, value):
...         return str.__new__(cls, value)
...     
...     def __eq__(self, other):
...         print "__eq__ got called"
...         return True
... 
>>> tsc = TestStrCmp("a")
>>> tse = TestStrEq("a")
>>> 
>>> "b" == tsc
False
>>> tsc == "b"
False
>>> 
>>> "b" == tse
__eq__ got called
True
>>> tse == "b"
__eq__ got called
True

__cmp__
__eq__
__rop__
__op__
__lt__
__ge__
__rop__
__op__
TestStrCmp
TestStrCmp
str
__eq__
__eq__
str
tsc == "b"
b.__eq__(tsc)
__rop__
TestStrEq
tse.__eq__
TestStrEq
str
TestEq
TestEq
__eq__
int
__eq__
TestCmp
tc
int
1.__cmp__(tc)

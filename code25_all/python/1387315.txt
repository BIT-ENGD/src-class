class Person(models.Model):
    surname = models.CharField(max_length=255, null=True, blank=True)
    first_name = models.CharField(max_length=255, null=True, blank=True)
    middle_names = models.CharField(max_length=255, null=True, blank=True)
    birth_year = WideYear(null=True, blank=True)
    birth_year_uncertain = models.BooleanField()
    death_year = WideYear(null=True, blank=True)
    death_year_uncertain = models.BooleanField()
    flourit_year = WideYear(null=True, blank=True)
    flourit_year_uncertain = models.BooleanField()
    FLOURIT_CHOICES = (
        (u'D', u'Birth and death dates'),
        (u'F', u'Flourit date'),
    )
    use_flourit = models.CharField('Date(s) to use', max_length=2, choices=FLOURIT_CHOICES)
    def __unicode__(self):
        if str(self.birth_year) == 'None':
            self.birth_year = '' 
        if str(self.death_year) == 'None':
            self.death_year = ''
        if str(self.flourit_year) == 'None':
            self.flourit_year = '' 
        if self.use_flourit == u'D':
            return '%s, %s %s (%s - %s)' % (self.surname, self.first_name, self.middle_names, self.birth_year, self.death_year)
        else:
            return '%s, %s %s (fl. %s)' % (self.surname, self.first_name, self.middle_names, self.flourit_year)

if str(self.birth_year) == 'None':
    self.birth_year = '' 
if str(self.death_year) == 'None':
    self.death_year = ''
if str(self.flourit_year) == 'None':
    self.flourit_year = ''

if str(self.(*)) == 'None':
   self.$1 = ''


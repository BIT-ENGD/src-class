class super(object)
 |  super(type) -> unbound super object
 |  super(type, obj) -> bound super object; requires isinstance(obj, type)
 |  super(type, type2) -> bound super object; requires issubclass(type2, type)
 |  Typical use to call a cooperative superclass method:

super(instance)
super(self).__init__()
super(ClassType, self).__init__()
super().__init__()
self.super().__init__()

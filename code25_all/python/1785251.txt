"mousePressEvent"
installEventFilter
MyTestxEdit
QTextEdit
QTextEdit
MyTestxEdit
installEventFilter
keyPressEvent
mousePressEvent
import sys
from PyQt4.QtGui import QApplication, QErrorMessage
from KdeQt.KQApplication import KQApplication
from KdeQt.KQMainWindow import KQMainWindow
from PyQt4.QtCore import *
from PyQt4.QtGui import *
import thread

class MyTestxEdit1(QTextEdit):
    def __init__(self,parent):
        QTextEdit.__init__(self)
        self.setMouseTracking(True)

class MyTestxEdit(QWidget):
    def __init__(self):
        QWidget.__init__(self)
        self.__qTextEdit=MyTestxEdit1(self)
        self.__qHBoxLayout=QHBoxLayout()
        self.setLayout(self.__qHBoxLayout)
        self.__qHBoxLayout.addWidget(self.__qTextEdit)        
        self.__qTextEdit.installEventFilter(self)


    def eventFilter(self,target,event):
        print "eventFilter "+str(event.type())
        if(event.type()==QEvent.MouseButtonPress):
            print "Mouse was presssed "+str(event.type())
            self.mousePressEvent(event) 
            return True
        return False                   


if __name__ == '__main__':
    app = KQApplication(sys.argv,[])
    mainWindow = KQMainWindow()#loc, splash, pluginFile, noopen, restartArgs)
    s = QSize(800, 600)
    mainWindow.resize(s)    
    testxEdit=MyTestxEdit()
    mainWindow.setCentralWidget(testxEdit)

    mainWindow.show()
    res = app.exec_()
    sys.exit(res)    


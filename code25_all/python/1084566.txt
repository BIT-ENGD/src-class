dict
class Test:
    def method1(anon_type, array=[], string="string", integer=12, obj=None):
        pass

target = {"method1": [
             {"anon": "None"}, 
             {"array": "[]"}, 
             {"string": "str"}, 
             {"integer": "int"},
             {"obj": "None"}]
         }
method1_dict = get_method_dict(Test().method1)

self.assertEqual(target, method1_dict)

>>> import inspect
>>> class Class:
...     def method(self, string='str', integer=12):
...             pass
... 
>>> m_desc = inspect.getargspec(Class().method)
>>> m_desc
ArgSpec(args=['self', 'string', 'integer'], varargs=None, keywords=None, defaults=('str', 12))
>>>

>>> class Class:
...     def method(self, no_def_args, string='str', integer=12):
...             pass
... 
>>> m_desc = inspect.getargspec(Class().method)
>>> m_desc
ArgSpec(args=['self', 'no_def_args', 'string', 'integer'], varargs=None, keywords=None, defaults=('str', 12))

no_def_args

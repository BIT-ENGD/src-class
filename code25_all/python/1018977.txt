__init__
import math
class poweroftwo(object):
    """any time this is set with an int, turns it's value to a tuple of the int
    and the int^2"""
    def __init__(self, value=None, name="var"):
        self.val = (value, math.pow(value, 2))
        self.name = name

    def __set__(self, obj, val):
        print "SET"
        self.val = (val, math.pow(val, 2))
    def __get__(self, obj, objecttype):
        print "GET"
        return self.val

class powoftwotest(object):
    def __init__(self, value):
        self.x = poweroftwo(value)

class powoftwotest_two(object):
    x = poweroftwo(10)


>>> a = powoftwotest_two()
>>> b = powoftwotest(10)
>>> a.x == b.x
>>> GET
>>> False #Why not true? shouldn't both a.x and b.x be instances of poweroftwo with the same values?


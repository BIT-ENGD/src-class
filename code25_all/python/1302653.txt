(1, 2, (3, 4), (5, 6), (7, 8, (9, 0)))

(
(1, 2),
(1, 2, 3, 4),
(1, 2, 5, 6),
(1, 2, 7, 8),
(1, 2, 7, 8, 9, 0),
)

def flatten(iterable):
    for i, item in enumerate(iterable):
        if hasattr(item, '__iter__'):
            for nested in flatten(item):
                yield nested
        else:
            yield item

[1, 2, 3, 4, 5, 6, 7, 8, 9]


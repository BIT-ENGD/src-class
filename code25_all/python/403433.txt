def check_in(): 
    db = MySQLdb.connect(host='localhost', user='root', passwd='$$', db='fillmyfridge')
    cursor=db.cursor(MySQLdb.cursors.DictCursor)
    user_input=raw_input('please enter the product barcode that you wish to checkin to the fridge: \n')
    cursor.execute("""update shop set stock = 1 where barcode = %s""", (user_input))
    db.commit()
    numrows = int(cursor.rowcount)
    if numrows >= 1:
        row = cursor.fetchone()
        print row["product"]
        cursor.execute('update stock set amount = amount + 1 where product = %s', row["product"])
        db.commit()
        cursor.execute('udpate shop set stock = 1 where barcode = user_input')
        db.commit()
    else:
        new_prodname = raw_input('what is the name of the product and press enter: \n')
        cursor.execute('insert into shop (product, barcode, category) values (%s, %s, %s)', (new_prodname, user_input, new_prodname))
        cursor = db.cursor()
        query = ('select * from shop where product = %s', (new_prodname))
        cursor.execute(query):
        db.commit()
        numrows = int(cursor.rowcount)
        if numrows<1:
            cursor.execute('insert into atock (barcode, quantity, amount, product) values (%s, 1, 1, %s)', (user_input, new_prodname))
            db.commit()
            cursor.execute('insert into shop (product, barcode, category, stock) values (%s, %s, %s, 1)', (new_prodname, user_input, new_prodname))
            print new_prodname 
            print 'has been added to the fridge stock'
        else:
            cursor.execute('update atock set amount = amount + 1 where product = %s', (new_prodname))
            db.commit()
            cursor.execute('insert into shop (product, barcode, category, stock) values (%s, %s, %s, 1)', (new_prodname, user_input, new_prodname))
            print new_prodname 
            print 'has been added to the fridge stock'

import MySQLdb

def check_out():
    db = MySQLdb.connect(host='localhost', user='root', passwd='$$', db='fillmyfridge')
    cursor=db.cursor()
    user_input=raw_input('please enter the product barcode you wish to remove from the fridge: \n')
    query = cursor.execute('update stock set instock=0, howmanytoorder=howmanytoorder + 1, amount = amount - 1 where barcode = %s', (user_input))
    if cursor.execute(query):
        db.commit()
        print 'the following product has been removed from the fridge nd needs to be ordered'
        cursor.execute('update shop set stock = 0 where barcode = %s' (user_input)
        db.commit()
    else:
        return 0


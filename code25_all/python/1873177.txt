# catalog.models

class Content(models.Model):

    class Meta:
        abstract = True

    BUNDESLAND_CHOICES = (
        ('bw', 'Baden-Württemberg'),
        ('by', 'Bayern'),
        ('be', 'Berlin'),
        ('bb', 'Brandenburg'),
        ('hb', 'Bremen'),
        ('hh', 'Hamburg'),
        ('he', 'Hessen'),
        ('mv', 'Mecklenburg-Vorpommern'),
        ('ni', 'Niedersachsen'),
        ('nw', 'Nordrhein-Westfalen'),
        ('rp', 'Rheinland-Pfalz'),
        ('sl', 'Saarland'),
        ('sn', 'Sachsen'),
        ('st', 'Sachsen-Anhalt'),
        ('sh', 'Schleswig-Holstein'),
        ('th', 'Thüringen'),
    )

    name = models.CharField(max_length=255, verbose_name='Agentur')
    address = models.CharField(max_length=255, verbose_name='Straße')
    state = models.CharField(max_length=2, choices=BUNDESLAND_CHOICES, verbose_name='Bundesland')
    city = models.CharField(max_length=255, verbose_name='Stadt')
    zip = models.CharField(max_length=10, verbose_name='PLZ')
    phone = models.CharField(max_length=40, blank=True, verbose_name='Telefonnr.')
    fax = models.CharField(max_length=40, blank=True, verbose_name='Fax')
    email = models.EmailField(verbose_name='E-Mail', help_text='Offizielle E-Mail')
    url = models.URLField(verbose_name='URL')
    owner = models.CharField(max_length=255, verbose_name='Besitzer')
    description = models.TextField(verbose_name='Beschreibung')
    category = models.ManyToManyField(Category, verbose_name='Kategorie')
    user = models.ForeignKey(User, verbose_name='Benutzer', null=True, blank=True)
    slug = models.SlugField(max_length=80, blank=True)
    identity = models.CharField(max_length=64, unique=True, blank=True)
    identity_used = models.BooleanField(default=False)
    show = models.BooleanField(default=False, verbose_name='Anzeigen')
    tp = models.DateTimeField(auto_now_add=True)


# agency.models
class AgencyActiveManager(models.Manager):
    def get_query_set(self):
        return super(AgencyActiveManager,self).get_query_set().filter(show=True)

class Agency(Content):
    clients = models.TextField(verbose_name='Klienten')
    active = AgencyActiveManager()
    objects = models.Manager()

    def __unicode__(self):
        return self.name

    def save(self, **kwargs):
        if not self.identity:
            self.identity = hashlib.sha256('%s:%s' %(get_word(),datetime.datetime.now())).hexdigest()
        if not self.slug:
            self.slug = slugify(self.name, instance=self)
        super(Agency, self).save(**kwargs)

# agency.admin

from django.contrib import admin
from agency.models import Agency

admin.site.register(Agency)

In [15]: Agency.objects.all()
Out[15]: [<Agency: Argentur>]

In [16]: Agency.objects.all()[0].pk
Out[16]: 1


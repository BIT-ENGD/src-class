class AClass:

    def __init__(self, foo, bar, verbose=False, silent=False):
        # Sets up variables needed for each instance, etc
        self.redirect = ''
        if silent:
            self.redirect = '> 2>&1'
        self.verbose = verbose

    def a_method(self):
        """ Responsible for running 4-6 things via system calls as described """

        if self.verbose and not self.silent:
            print "Creating a directory"
        try:
            os.mkdir('foobar')
        except OSError, e:
            raise OSError, "Problem creating directory %s: %s" % (e.filename, e.strerror)

        if self.verbose and not self.silent:
            print "Listing a directory"
        if (os.system('ls foobar %s') % self.redirect) is not 0:
            raise OSError, "Could not list directory foobar"

    def b_method(self):
        """ Looks very similar to a_method() """

    def run(self):
        """ Stitches everything together """

        try:
            a_method()
        except OSError, e:
            print "a_method(): %s" % e.strerror
            sys.exit(-1)

        try:
            b_method()
        except OSError, e:
            print "b_method(): %s" % e.strerror
            sys.exit(-1)

if self.verbose and not self.silent
try/catch
if
logger.debug('My message')
logging

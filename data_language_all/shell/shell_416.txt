#!/bin/sh
set -e

if [ "$(id -u)" != 0 ]; then
	echo >&2 "error: must be root to invoke $0"
	exit 1
fi

start() {
	# VirtualBox Guest Additions
	# - this will bail quickly and gracefully if we're not in VBox
	if modprobe vboxguest > /dev/null 2>&1 && modprobe vboxsf > /dev/null 2>&1; then
		# fire up VBoxService to do timesync, etc
		VBoxService --disable-automount
		# TODO some testing with VBoxService automount so we can potentially trim down this hacky script

		dockerUid="$(id -u docker)"
		dockerGid="$(id -g docker)"
		mountOptions="defaults,iocharset=utf8,uid=$dockerUid,gid=$dockerGid"

		# try mounting "$name" (which defaults to "$dir") at "$dir",
		# but quietly clean up empty directories if it fails
		try_mount_share() {
			dir="$1"
			name="${2:-$dir}"

			# normalize "dir" to be definitively root-relative
			# ie, "/Users" and "Users" will both translate to "/Users" explicitly
			dir="/${dir#/}"

			echo "Attempting mount of '$name' to '$dir' (vboxsf)"

			mkdir -p "$dir" 2>/dev/null
			if ! mount -t vboxsf -o "$mountOptions" "$name" "$dir" 2>/dev/null; then
				rmdir "$dir" 2>/dev/null || true
				while [ "$(dirname "$dir")" != "$dir" ]; do
					dir="$(dirname "$dir")"
					rmdir "$dir" 2>/dev/null || break
				done

				return 1
			fi

			return 0
		}

		shares="$(VBoxControl --nologo sharedfolder list -automount | tail -n+3 | cut  -d ' ' -f 3)"
		for line in $shares; do
			try_mount_share "$line"
		done
	fi
}

case "$1" in
	start) "$1" ;;
	*) echo "Usage $0 {start}"; exit 1 ;;
esac
#!/usr/bin/env bash
set -Eeuo pipefail

find -not -name '*.tcz' \
	| cpio --create --format newc --dot \
	| xz -9 --format=lzma --verbose --verbose --threads=0 --extreme \
	> /tmp/iso/boot/initrd.img

xorriso \
	-as mkisofs -o /tmp/boot2docker.iso \
	-A 'Boot2Docker' -V 'Boot2Docker' \
	-isohybrid-mbr /tmp/isohdpfx.bin \
	-partition_offset 16 \
	-b isolinux/isolinux.bin \
	-c isolinux/boot.cat \
	-no-emul-boot \
	-boot-load-size 4 \
	-boot-info-table \
	/tmp/iso

mkdir -p /tmp/stats
(
	cd /tmp
	echo '```console'
	for cmd in sha512sum sha256sum sha1sum md5sum; do
		echo "\$ $cmd boot2docker.iso"
		"$cmd" boot2docker.iso
	done
	echo '```'
) | tee /tmp/stats/sums.md
{
	echo "- Docker [v$DOCKER_VERSION](https://github.com/docker/docker-ce/releases/tag/v$DOCKER_VERSION)"

	echo "- Linux [v$LINUX_VERSION](https://cdn.kernel.org/pub/linux/kernel/v4.x/ChangeLog-$LINUX_VERSION)"

	echo "- Tiny Core Linux [v$TCL_VERSION](http://forum.tinycorelinux.net/index.php?board=31.0)"

	echo "- Parallels Tools v$PARALLELS_VERSION" # https://github.com/boot2docker/boot2docker/pull/1332#issuecomment-420273330

	ovtVersion="$(tcl-chroot vmtoolsd --version | grep -oE 'version [^ ]+' | cut -d' ' -f2)"
	echo "- VMware Tools (\`open-vm-tools\`) [v$ovtVersion](http://distro.ibiblio.org/tinycorelinux/$TCL_MAJOR/x86_64/tcz/open-vm-tools.tcz.info)"

	echo "- VirtualBox Guest Additions [v$VBOX_VERSION](https://download.virtualbox.org/virtualbox/$VBOX_VERSION/)"

	echo "- XenServer Tools (\`xe-guest-utilities\`) [v$XEN_VERSION](https://github.com/xenserver/xe-guest-utilities/tree/v$XEN_VERSION)"
} | tee /tmp/stats/state.md

#!/bin/bash -xe
#
# NOTE: This test script relies on the -e argument to bash in the shebang above.
#
# Streisand Gateway Test
#  - Confirms HTTP basic auth is present
#  - Confirms HTTP basic auth rejects an incorrect password
#  - Confirms using the correct username/password allows viewing the index
#
# TODO: Install the streisand gateway CA & remove the --insecure arguments.

# Confirm that not sending a password/username results in a 401 error
curl --insecure -I {{ gateway_test_url }} | grep "401 Unauthorized"

# Confirm that sending the wrong password/username results in a 401 error
curl --insecure -I -u "{{ gateway_test_user }}:badpassword" {{ gateway_test_url }} | grep "401 Unauthorized"

# Read the password into a var
password=$(cat "{{ gateway_password_file }}")

# Confirm that using the correct password/username results in a 200 OK
curl --insecure -I -u "{{ gateway_test_user }}:$password" {{ gateway_test_url }} | grep "200 OK"
#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"

events_main_cmd() {
  declare desc="shows contents of dokku events log"
  local cmd="events"
  if [[ -f $DOKKU_EVENTS_LOGFILE ]]; then
    if [[ $2 == "-t" ]]; then
      tail -F "$DOKKU_EVENTS_LOGFILE"
    else
      tail -n 100 "$DOKKU_EVENTS_LOGFILE"
    fi
  fi
}

events_main_cmd "$@"
#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"

events_main_cmd() {
  declare desc="shows contents of dokku events log"
  local cmd="events"
  if [[ -f $DOKKU_EVENTS_LOGFILE ]]; then
    if [[ $2 == "-t" ]]; then
      tail -F "$DOKKU_EVENTS_LOGFILE"
    else
      tail -n 100 "$DOKKU_EVENTS_LOGFILE"
    fi
  fi
}

events_main_cmd "$@"

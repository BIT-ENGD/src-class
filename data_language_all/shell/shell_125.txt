#!/usr/bin/env bash
# Summary: Display prefix for a Python version
# Usage: pyenv prefix [<version>]
#
# Displays the directory where a Python version is installed. If no
# version is given, `pyenv prefix' displays the location of the
# currently selected version.

set -e
[ -n "$PYENV_DEBUG" ] && set -x

# Provide pyenv completions
if [ "$1" = "--complete" ]; then
  echo system
  exec pyenv-versions --bare
fi

if [ -n "$1" ]; then
  OLDIFS="$IFS"
  { IFS=:
    export PYENV_VERSION="$*"
  }
  IFS="$OLDIFS"
elif [ -z "$PYENV_VERSION" ]; then
  PYENV_VERSION="$(pyenv-version-name)"
fi

PYENV_PREFIX_PATHS=()
OLDIFS="$IFS"
{ IFS=:
  for version in ${PYENV_VERSION}; do
    if [ "$version" = "system" ]; then
      if PYTHON_PATH="$(PYENV_VERSION="${version}" pyenv-which python 2>/dev/null)"; then
        PYENV_PREFIX_PATH="${PYTHON_PATH%/bin/*}"
        PYENV_PREFIX_PATH="${PYENV_PREFIX_PATH:-/}"
      else
        echo "pyenv: system version not found in PATH" >&2
        exit 1
      fi
    else
      PYENV_PREFIX_PATH="${PYENV_ROOT}/versions/${version}"
    fi
    if [ -d "$PYENV_PREFIX_PATH" ]; then
      PYENV_PREFIX_PATHS=("${PYENV_PREFIX_PATHS[@]}" "$PYENV_PREFIX_PATH")
    else
      echo "pyenv: version \`${version}' not installed" >&2
      exit 1
    fi
  done
}
IFS="$OLDIFS"

OLDIFS="$IFS"
{ IFS=:
  echo "${PYENV_PREFIX_PATHS[*]}"
}
IFS="$OLDIFS"
#!/bin/sh

# Set source and target directories
powerline_fonts_dir="$( cd "$( dirname "$0" )" && pwd )"

# if an argument is given it is used to select which fonts to uninstall
prefix="$1"

if test "$(uname)" = "Darwin" ; then
  # MacOS
  font_dir="$HOME/Library/Fonts"
else
  # Linux
  font_dir="$HOME/.local/share/fonts"
  if test ! -d "$font_dir" ; then
    echo "It seems there are no powerline fonts installed on your system. Uninstall not needed."
    exit 0
  fi
fi

# Remove all fonts from user fonts directory
echo "Removing fonts..."
find "$powerline_fonts_dir" \( -name "$prefix*.[ot]tf" -or -name "$prefix*.pcf.gz" \) -type f -print0 | xargs -n1 -0 -I % sh -c "rm -f \"\$0/\${1##*/}\"" "$font_dir" %

# Reset font cache on Linux
if which fc-cache >/dev/null 2>&1 ; then
    echo "Resetting font cache, this may take a moment..."
    fc-cache -f "$font_dir"
fi

echo "Powerline fonts uninstalled from $font_dir"
#!/bin/sh

# Set source and target directories
powerline_fonts_dir="$( cd "$( dirname "$0" )" && pwd )"

# if an argument is given it is used to select which fonts to uninstall
prefix="$1"

if test "$(uname)" = "Darwin" ; then
  # MacOS
  font_dir="$HOME/Library/Fonts"
else
  # Linux
  font_dir="$HOME/.local/share/fonts"
  if test ! -d "$font_dir" ; then
    echo "It seems there are no powerline fonts installed on your system. Uninstall not needed."
    exit 0
  fi
fi

# Remove all fonts from user fonts directory
echo "Removing fonts..."
find "$powerline_fonts_dir" \( -name "$prefix*.[ot]tf" -or -name "$prefix*.pcf.gz" \) -type f -print0 | xargs -n1 -0 -I % sh -c "rm -f \"\$0/\${1##*/}\"" "$font_dir" %

# Reset font cache on Linux
if which fc-cache >/dev/null 2>&1 ; then
    echo "Resetting font cache, this may take a moment..."
    fc-cache -f "$font_dir"
fi

echo "Powerline fonts uninstalled from $font_dir"

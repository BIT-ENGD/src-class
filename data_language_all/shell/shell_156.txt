#!/usr/bin/env bash

while test $# != 0
do
	case $1 in
		-r|--remote)
			if [[ -n $2 ]]
			then
				REMOTE=$2
				shift
			else			
				REMOTE=origin
			fi
			;;
		*)
			BRANCH=$1
	esac
	shift
done

if [[ -z $BRANCH ]] && [[ -n $REMOTE ]] 
then
	BRANCH=$REMOTE
	REMOTE=origin
fi

test -z $BRANCH && echo "branch required." 1>&2 && exit 1
if [[ -n $REMOTE ]]
then
	git ls-remote --exit-code $REMOTE &>/dev/null
	if [ $? = 0 ]
	then
		git push $REMOTE HEAD:refs/heads/$BRANCH
		git fetch $REMOTE
		git checkout --track -b $BRANCH $REMOTE/$BRANCH
		exit $?
	fi
fi

git checkout -b $BRANCH
#!/usr/bin/env bash

usage() {
cat <<HERE
usage: git alias                         # list all aliases
   or: git alias <search-pattern>        # show aliases matching pattern
   or: git alias <alias-name> <command>  # alias a command
HERE
}

case $# in
  0) git config --get-regexp 'alias.*' | sed 's/^alias\.//' | sed 's/[ ]/ = /' | sort ;;
  1) git alias | grep -e "$1" ;;
  2) git config --global alias."$1" "$2" ;;
  *) >&2 echo "error: too many arguments." && usage && exit 1 ;;
esac
#!/usr/bin/env bash

usage() {
cat <<HERE
usage: git alias                         # list all aliases
   or: git alias <search-pattern>        # show aliases matching pattern
   or: git alias <alias-name> <command>  # alias a command
HERE
}

case $# in
  0) git config --get-regexp 'alias.*' | sed 's/^alias\.//' | sed 's/[ ]/ = /' | sort ;;
  1) git alias | grep -e "$1" ;;
  2) git config --global alias."$1" "$2" ;;
  *) >&2 echo "error: too many arguments." && usage && exit 1 ;;
esac

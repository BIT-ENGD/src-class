#!/usr/bin/env bash

LIST=false
NO_EMAIL=false
FILE=""
EDITOR=$(git var GIT_EDITOR)

while [[ $# -gt 0 ]]; do
  case $1 in
    -l|--list )
      LIST=true
      shift
      ;;
    --no-email )
      NO_EMAIL=true
      shift
      ;;
    * )
      break
  esac
done

if ! $LIST; then
  FILE=$1
  if test "$FILE" = ""; then
    FILE=$(ls | egrep 'authors|contributors' -i|head -n1)
    if test "$FILE" = ""; then
      FILE='AUTHORS'
    fi
  fi
fi

#
# list authors sorted by number of commits (descending).
#

authors() {
  if $NO_EMAIL; then
    # eamil will be used to uniq authors.
    git shortlog -sne | awk '{$1=""; sub(" ", ""); print}' | awk -F'<' '!x[$1]++' | awk -F'<' '!x[$2]++' \
      | awk -F'<' '{gsub(/ +$/, "", $1); print $1}'
  else
    git shortlog -sne | awk '{$1=""; sub(" ", ""); print}' | awk -F'<' '!x[$1]++' | awk -F'<' '!x[$2]++'
  fi
}

#
# authors.
#

if $LIST; then
  authors
else
  authors >> $FILE
  test -n "$EDITOR" && $EDITOR $FILE
fi
#!/usr/bin/env bash
# Usage: pyenv version-file-write <file> <version>

set -e
[ -n "$PYENV_DEBUG" ] && set -x

PYENV_VERSION_FILE="$1"
shift || true
versions=("$@")

if [ -z "$versions" ] || [ -z "$PYENV_VERSION_FILE" ]; then
  pyenv-help --usage version-file-write >&2
  exit 1
fi

# Make sure the specified version is installed.
pyenv-prefix "${versions[@]}" >/dev/null

# Write the version out to disk.
# Create an empty file. Using "rm" might cause a permission error.
> "$PYENV_VERSION_FILE"
for version in "${versions[@]}"; do
  echo "$version" >> "$PYENV_VERSION_FILE"
done
#!/usr/bin/env bash
# Usage: pyenv version-file-write <file> <version>

set -e
[ -n "$PYENV_DEBUG" ] && set -x

PYENV_VERSION_FILE="$1"
shift || true
versions=("$@")

if [ -z "$versions" ] || [ -z "$PYENV_VERSION_FILE" ]; then
  pyenv-help --usage version-file-write >&2
  exit 1
fi

# Make sure the specified version is installed.
pyenv-prefix "${versions[@]}" >/dev/null

# Write the version out to disk.
# Create an empty file. Using "rm" might cause a permission error.
> "$PYENV_VERSION_FILE"
for version in "${versions[@]}"; do
  echo "$version" >> "$PYENV_VERSION_FILE"
done

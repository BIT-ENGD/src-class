/* ***** BEGIN LICENSE BLOCK *****
 *
 * This file is part of Weave.
 *
 * The Initial Developer of Weave is the Institute for Visualization
 * and Perception Research at the University of Massachusetts Lowell.
 * Portions created by the Initial Developer are Copyright (C) 2008-2015
 * the Initial Developer. All Rights Reserved.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
 * 
 * ***** END LICENSE BLOCK ***** */

package
{
	import mx.utils.StringUtil;
	
	/**
	 * This is a convenient global function for retrieving localized text.
	 * Sample syntax:
	 *     lang("hello world")
	 * 
	 * You can also specify a format string with parameters which will be passed to StringUtil.substitute():
	 *     lang("{0} and {1}", first, second)
	 * 
	 * @param text The original text or format string to translate.
	 * @param parameters Parameters to be passed to StringUtil.substitute() if the text is to be treated as a format string.
	 */
	public function lang(text:String, ...parameters):String
	{
		// call localize() either way to let the LocaleManager know that we are interested in translations of this text.
		var newText:String = WeaveAPI.LocaleManager.localize(text);
		
		try
		{
			if (WeaveAPI.LocaleManager.getLocale() == 'developer')
			{
				parameters.unshift(text);
				return 'lang("' + parameters.join('", "') + '")';
			}
		}
		catch (e:Error)
		{
		}
		
		if (parameters.length)
			return StringUtil.substitute(newText, parameters);
		
		return newText;
	}
}

{-# LANGUAGE CPP #-}
module Main where

import Control.Exception
import Control.Concurrent
#if __GLASGOW_HASKELL__ < 705
import Prelude hiding (catch)
#endif
import System.Mem

-- illustrates the BlockOnDeadMVar exception

main = do
  id <- myThreadId
  forkIO (catch (do m <- newEmptyMVar; takeMVar m)
		(\e -> throwTo id (e::SomeException)))
  catch (do yield; performGC; threadDelay 1000000)
	(\e -> print (e::SomeException))
-- !!! Simple test of dupChan
-- Embarassingly, the published version fails!

module Main where

import Control.Exception
import Control.Concurrent.Chan

main = do
	  chan <- newChan
	  ch <- dupChan chan
	  writeChan chan "done"
	  x <- readChan chan
	  y <- readChan ch
	  print ("Got "++x ++" "++y) 
 

Unicode Data
This library puts Unicode data in a format that can be programmatically manipulated. The current implementation includes Unicode blocks and scrips data.
Background
Unicode code points are divided into code blocks that generally contains characters within the same or related writing systems. For example Basic Latin or Arabic. However, the complete character set needed for a writing system is often spread across a number of code blocks. This character set is referred to as a script. If you want to know what writing system a particular character belongs to, it is generally more accurate to use the Unicode script data rather than the block data. You can read more about the difference here.
This library contains classes for Unicode scripts and blocks. It was generated from the Unicode 12.0 Scripts.txt and Blocks.txt data files. This library is exhaustive in that it includes every script and block in those data files.
Usage
A simple usage example:
```dart
import 'package:unicode_data/unicode_data.dart';
main() {
  unicodeBlockExamples();
  unicodeScriptExamples();
}
// Unicode Blocks
void unicodeBlockExamples() {
  // get a list of all blocks
  List blocks = UnicodeBlock.blocks;
// find the block name for a code point
  final codePoint = 'a'.runes.single;
  final found = blocks
      .where((block) => codePoint >= block.start && codePoint <= block.end);
  final blockName = found.single.name; // Basic Latin
// get the range for a specific block name
  final block = blocks.where((block) => block.name == 'Mongolian').single;
  final rangeStart = block.start; // 6144
  final rangeEnd = block.end; // 6319
}
// Unicode Scripts
void unicodeScriptExamples() {
  // get a list of all scripts
  List

FTIndicator









A light wight UI package contains local notification, progress HUD, toast, with blur effect, elegant API and themes Support for iOS. Inspired by Apple's process HUD, notifications and Android's toast.
3 IN 1

If you want use all three of the indicators, use FTIndicator .
Also, FTNotificationIndicator, FTProgressIndicator and FTToastIndicator are able to work separately. Use them all your will.



FTIndicator

FTNotificationIndicator
FTProgressIndicator
FTToastIndicator



ScreenShots
Portrait
| Style | Light | Dark  |
|:-------------:|:-------------:|:-------------:|
| Notification |  |  |
| Progress |  |  |
| Toast |  |  |
Landscape
| Style | Light | Dark  |
|:-------------:|:-------------:|:-------------:|
| Notification |  |  |
| Progress |  |  |
| Toast |  |  |
Installation
Manually

clone this repo.
Simply drop the '/FTIndicator' folder into your project.
import 'FTIndicator.h'

CocoaPods
FTIndicator is available through CocoaPods. To install it, simply add the following line to your Podfile:
⚠️ Notice：
major fix in 1.2.0: progress HUD doesn't show when app starts
FTNotificationIndicator, FTProgressIndicator and FTToastIndicator podfile stopped updating after v1.1.5. If you wanna use them separately, you should use them like this in your Podfile as a subPod:
ruby
    pod 'FTIndicator/FTNotificationIndicator'
    pod 'FTIndicator/FTProgressIndicator'
    pod 'FTIndicator/FTToastIndicator'
Use FTIndicator, all three of them

FTIndicator, 3 in 1 

ruby
pod 'FTIndicator'
Use separately

FTNotificationIndicator

~~pod 'FTNotificationIndicator~~ is not available anymore, use this:


FTProgressIndicator

~~pod "FTProgressIndicator"~~ is not available anymore, use this:


FTToastIndicator

~~pod 'FTToastIndicator'~~ is not available anymore, use this:

Usage
Use FTIndicator
Notification

show without image

objective-c
[FTIndicator showNotificationWithTitle:@"Here is a notification title."
                                message:@"Here is a notification message."];

show with image

objective-c
[FTIndicator showNotificationWithImage:[UIImage imageNamed:@"maps_icon"]
                                   title:@"Here is a notification title."
                               message:@"Here is a notification message."];

show with image, with tap handler and completion handler

objective-c
[FTIndicator showNotificationWithImage:[UIImage imageNamed:@"maps_icon"]
                                 title:@"Here is a notification title."
                               message:@"Here is a notification message. Try to tap and see tap handling or do nothing to see completion"
                            tapHandler:^{
                            // handle user tap
                            } completion:^{
                            // handle completion
                            }];

dismiss manually

objective-c
[FTIndicator dismissNotification];
Progress

show progress

```objective-c
[FTIndicator showProgressWithmessage:@"Here is a progress message."];  


show success

```objective-c
[FTIndicator showSuccessWithMessage:@"Here is a success message."]; 


show info

```objective-c
[FTIndicator showInfoWithMessage:@"Here is a info message."]; 


show error

```objective-c
[FTIndicator showErrorWithMessage:@"Here is a error message."];


dismiss manually

objective-c
[FTIndicator dismissProgress];
Toast

show with image

objective-c
[FTIndicator showToastMessage:@"Short Toast."];

dismiss manually

objective-c
[FTIndicator dismissToast];
Use FTNotificationIndicator, FTProgressIndicator, FTToastIndicator separately
FTNotificationIndicator

show with image

objective-c
[FTNotificationIndicator showNotificationWithImage:[UIImage imageNamed:@"maps_icon"]
                                             title:@"Here is a notification title."
                                           message:@"Here is a notification message."];

show without image

objective-c
[FTNotificationIndicator showNotificationWithTitle:@"Here is a notification title."
                                             message:@"Here is a notification message."];

dismiss manually

objective-c
[FTNotificationIndicator dismiss];
FTProgressIndicator

show progress

objective-c
[FTProgressIndicator showProgressWithmessage:@"Here is a progress message."];
objective-c
// or disable user interactions
[FTProgressIndicator showProgressWithmessage:@"Here is a progress message." userInteractionEnable:NO];

show success

objective-c
[FTProgressIndicator showSuccessWithMessage:@"Here is a success message."];
objective-c
// or disable user interactions
[FTProgressIndicator showSuccessWithMessage:@"Here is a success message." userInteractionEnable:NO];

show info

objective-c
[FTProgressIndicator showInfoWithMessage:@"Here is a info message."];
objective-c
// or disable user interactions
[FTProgressIndicator showInfoWithMessage:@"Here is a info message." userInteractionEnable:NO];

show error

objective-c
[FTProgressIndicator showErrorWithMessage:@"Here is a error message."];
objective-c
// or disable user interactions
[FTProgressIndicator showErrorWithMessage:@"Here is a error message." userInteractionEnable:NO];

dismiss manually

objective-c
[FTProgressIndicator dismiss];
FTToastIndicator

show with image

objective-c
[FTToastIndicator showToastMessage:@"Short Toast."];

dismiss manually

objective-c
[FTToastIndicator dismiss];
CHANGELOG
CHANGELOG
License
FTIndicator is available under the MIT license. See the LICENSE file for more info. 
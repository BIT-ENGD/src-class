Description
Chef cookbook to install and enable chef-handler-sns: A simple Chef report handler that reports status of a Chef run through Amazon SNS. Includes IAM roles support.
Amazon SNS can send notifications by SMS, email, Amazon SQS queues or to any HTTP endpoint.

Requirements
Cookbooks:

xml
chef_handler

Attributes


Attribute
Description
Default


node['chef_handler_sns']['topic_arn']
AWS topic ARN name (required).
required


node['chef_handler_sns']['access_key']
AWS access key (required, but will try to read it from ohai with IAM roles).
calculated from ohai with IAM roles


node['chef_handler_sns']['secret_key']
AWS secret key (required, but will try to read it from ohai with IAM roles). We do not recomend using this attribute, it is better to use the LWRP.
calculated from ohai with IAM roles


node['chef_handler_sns']['token']
AWS security token (read from ohai with IAM roles).
calculated from ohai with IAM roles


node['chef_handler_sns']['region']
AWS region.
calculated from ohai


node['chef_handler_sns']['subject']
Message subject string in erubis format.
calculated


node['chef_handler_sns']['body_template']
Full path of an erubis template file to use for the message body.
calculated


node['chef_handler_sns']['supports']
Type of Chef Handler to register as, ie :report, :exception or both.
{  "exception" => true}


node['chef_handler_sns']['version']
chef-handler-sns gem version to install.
latest stable


Recipes
chef_handler_sns::default
Installs and enables the Chef SNS Handler.
Resources
chef_handler_sns[topic_arn]
Installs and enables the Chef SNS handler.
chef_handler_sns actions

enable: Installs and enables the Chef Handler.

chef_handler_sns attributes


Attribute
Description
Default


topic_arn
AWS topic ARN name (required).
resource name


access_key
AWS access key (required, but will try to read it from ohai with IAM roles).
node['chef_handler_sns']['access_key']


secret_key
AWS secret key (required, but will try to read it from ohai with IAM roles).
node['chef_handler_sns']['secret_key']


token
AWS security token (read from ohai with IAM roles).
node['chef_handler_sns']['token']


region
AWS region.
node['chef_handler_sns']['region']


subject
Message subject string in erubis format.
node['chef_handler_sns']['subject']


body_template
Full path of an erubis template file to use for the message body.
node['chef_handler_sns']['body_template']


supports
Type of Chef Handler to register as, ie :report, :exception or both.
node['chef_handler_sns']['supports']


version
chef-handler-sns gem version to install.
node['chef_handler_sns']['version']


AWS Credentials permissions
If you are using AWS IAM credentials or AWS IAM role credentials, they should have at least the following privileges:
json
{
  "Statement": [
    {
      "Sid": "Stmt1234",
      "Effect": "Allow",
      "Action": [
        "sns:Publish"
      ],
      "Resource": [
        "arn:aws:sns:us-east-1:12341234:MyTopicName"
      ]
    }
  ]
}
Usage Examples
Using Amazon IAM roles
Using chef_handler_sns cookbook with IAM roles is rather easy.
Including in a Cookbook Recipe
First, you need to include this cookbook as a dependency in your cookbook:


Using the LWRP from a Cookbook Recipe
You can also use the chef_handler_sns LWRP directly instead of including the recipe:


Including in the Run List
To include this cookbook directly in your run list, you must set at least the topic_arn attribute:
json
{
  "name": "git.onddo.com",
  [...]
  "normal": {
    "chef_handler_sns": {
      "topic_arn": "arn:aws:sns:us-east-1:12341234:MyTopicName"
    }
  },
  "run_list": [
    [...]
    "recipe[chef_handler_sns]"
  ]
}
Passing the AWS credentials (machines without IAM roles)
If you are using Amazon EC2 without IAM roles or machines from other providers outside AWS, you must set the AWS credentials: access_key and secret_key (and sometimes also token).
Using the LWRP from a Cookbook Recipe


Installing old versions
If you are not using IAM roles and you don't need to use AWS security tokens, you can use old versions of chef-handler-sns (< 1.0.0). Those versions does not require nokogiri, so they have lighter dependencies and take less time to install.
ruby
chef_handler_sns "arn:aws:sns:us-east-1:12341234:MyTopicName" do
  access_key "***AMAZON-KEY***"
  secret_key "***AMAZON-SECRET***"
  version "0.2.6"
end
Testing
Requirements

berkshelf ~> 2.0
chefspec ~> 3.2
test-kitchen
vagrant
kitchen-vagrant >= 0.10.0
foodcritic ~> 3.0

Running the syntax style tests
bash
$ rake style
Running the integration tests
bash
$ rake integration
Or:
bash
$ kitchen test
$ kitchen verify
[...]
Running the unit tests
bash
$ rake unit
Or:
bash
$ rspec
ChefSpec matchers
enable_chef_handler_sns(topic_arn)
Assert that the Chef run enables chef_handler_sns.
ruby
topic_arn = "arn:aws:sns:us-east-1:12341234:MyTopicName"
resource = chef_run.chef_handler_sns(topic_arn)
expect(resource).to enable_chef_handler_sns(topic_arn).with(
  :topic_arn => topic_arn
)
Contributing

Fork the repository on Github
Create a named feature branch (like add_component_x)
Write you change
Write tests for your change (if applicable)
Run the tests, ensuring they all pass
Submit a Pull Request using Github

License and Author
|                      |                                          |
|:---------------------|:-----------------------------------------|
| Author:          | Xabier de Zuazo (xabier@onddo.com)
| Copyright:       | Copyright (c) 2014 Onddo Labs, SL. (www.onddo.com)
| License:         | Apache License, Version 2.0
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
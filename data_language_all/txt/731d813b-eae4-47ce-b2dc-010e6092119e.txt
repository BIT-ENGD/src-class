Javascript Hide & Reveal

 Links used, not displayed in MD doc 
Plugins Used


Modernizr: is a JavaScript library that detects HTML5 and CSS3 features in the userâ€™s browser.
EventShim: EventShim adds support for addEventListener(), removeEventListener(), and standard Event object properties to IE8's event model.

Workflow Tools Used


Gruntjs: In one word: automation.
LESS: LESS extends CSS with dynamic behavior such as variables, mixins, operations and functions.

Browser and Device Support

*** Note: This testing is in progress.... I am working on it though :)
Desktop Browsers
* Internet Explorer 8/9/10
* Google Chrome vs. 21+
* Apple Safari 5+
* Mozilla Firefox vs 10+

Tablet Devices
* iPad 2/3/Mini
* iOS 6.0+

Example Setup



Include the script tag and style tags
<link href="css/styles.css" rel="stylesheet">
<script type="text/javascript" src="js/image-reveal.js"></script>



Add the markup
<div id="image-slider" class="" style="margin-top: 10px;">
    <!-- Before is what we hide the overflow on creating the reveal effect -->
    <div id="before" class="img before" draggable="false">
        <div id="before-overlay" class="overlay"></div>
        <img src="img/before.png" draggable="false">
    </div>

    <!-- After because IE doesn't support background size -->
    <div id="after" class="img after" draggable="false">
        <div id="after-overlay" class="overlay"></div>
        <img src="img/after.png" draggable="false">
    </div>

    <!-- This is the handle that does it -->
    <div id="handle" class="responsive">
        <a href="#" alt="" title=""></a>
    </div>
</div>



On Document Ready we want to trigger our Class
<script language="javascript" type="text/javascript">
    window.onload = function() {
        var slider = new RevealSlider({
            'after-container': 'after',     // ID of the after container
            'before-container': 'before',   // ID of the before containers
            'ratio': '16/9',                // Ratio of the images ~ ex: 4/3 or 19/9
            'slider-element': 'handle',     // ID of the element to attach drag events
            'start': '50%',                 // Accepts any starting point in px or %
            'target': 'image-slider',       // ID of the slider container
        });
    };
</script>



Local Development Steps & Tools

First time installation
For the first time you can read the Documenation and then follow the steps below:

Download & Install Nodejs
Install Gruntjs by following the steps below.
Open terminal and CD into the directory containing this README.md
sudo npm install -g grunt-cli


Install Project Plugins
sudo npm install


Run
grunt



Now you should see a few things run and "Done, without errors."
Local Development
From here on out, just cd CD into the directory containing this README.md and run the following command:

Watch
grunt watch



We have setup tasks for javascript validation using Grunt JShint, script concatination via Grunt Uglify and less compilation using Grunt Less. Running the command above monitors the appropriate folders using Grunt Watch and runs tasks as a watched document is updated. All of these packages are installed in the first time installation steps.
Additional Notes

The only real limitation is that we require a fixed ratio the entire time...
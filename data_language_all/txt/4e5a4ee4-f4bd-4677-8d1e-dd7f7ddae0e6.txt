Bitflux - A Data-flow Library in Scala
Thanks to the emerging of those exciting tools 
such as Scala.React, Akka-stream, and Scala.Rx, etc., we have seen a 
surge of interest in applying the data-flow programming paradigm into the 
design and implementation of systems for critical business 
requirements. However, as a community aiming to raise the bar of 
programmer experience, can we do more to help the Scala developers 
“streamline” the complex real-world business logic with familiar 
techniques and concepts? Can we make it easier to test and deploy 
data-flow applications in the enterprise environment? Bitflux is an 
attempt to answer these questions.
Features
Simple DSL modeling real-world reactive applications with:

Composable functional flow objects
Higher-order data-flow graph adjustable at run-time
Recursive data-flow where output can be fed back to the input

Synchronous event propagation enables:

Flow of data as a sequence of time-aware events
Running the exactly same code in simulation and production mode
Deterministic concurrency


Build & Run the demo
sbt compile
sbt run

Sample Code 1


Sample Code 2

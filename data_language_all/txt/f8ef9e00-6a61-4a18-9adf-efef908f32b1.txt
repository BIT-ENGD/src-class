Nonlinear regression models in Julia

In this Julia package nonlinear regression models are formulated as Julia types that inherit from NLregMod.
A simple example is the predicted concentration in a 1 compartment model with a single bolus dose at time 0.
jl
conc = exp(logV) * exp(-exp(logK)*t)
where logV and logK are the logarithms of the volume of distribution and K is the elimination rate constant and t is the time of the measurement.
The logsd1 type represents this model and the data to which it is to be fit.
The fields of this type are t, the vector of times at which samples are drawn, y, the vector of measured concentrations, mu the mean responses at the current parameter values, resid the residuals at the current parameter values, and tgrad, the transpose of the gradient matrix.
The external constructors for this model allow it to be specified from t and y or in a Formula/Data specification.
A nonlinear regression model must provide methods for pnames, the parameter names, updtmu, update the mean response, residuals and tgrad from new parameter values, and initpars, determine initial parameter estimates from the data.

Plans for the near future


Nonlinear mixed-effects models fit using the Laplace approximation to the log-likelihood


Specification of partially linear models


Composite models consisting of a parameter transformation and a nonlinear model.


Partially linear models (this used to work but is now broken)
Partially linear models (those models with some parameters that occur
linearly in the model expression) are expressed as types that inherit
from the PLregMod abstract type.  A instance of a model type is
created from the values of any covariates in the model.
Example - a Michaelis-Menten fit
In the
Michaelis-Menten model
for enzyme kinetics,
julia
v = Vm * c / (K + c)
the relationship between the velocity, v, of a reaction and the
concentration, c, of the substrate depends on two parameters; Vm,
the maximum velocity and K, the Michaelis parameter.  The Vm
parameter occurs linearly in this expression whereas K is a
nonlinear parameter.
To fit such a model we create a MicMen object from the vector of
observed concentrations and a PLregFit object from this model and
the responses.

We can also use parameter transformations

Creating a PLregMod type
A PLregMod type contains the transposed gradient, usually called
tgrad with the conditionally linear parameters first, the
three-dimensional Jacobian array, usually called MMD, with each face
corresponding to the partial derivative of the conditionally linear
rows of tgrad with respect to the nonlinear parameters, and the
values of any covariates needed to evaluate the model.  The
model-matrix function, mmf, is a function of two read-only
arguments; nlp, the nonlinear parameters in the model function as a
vector and x the covariates for a single observation, also as a
vector, and two arguments, tg and MMD that are updated in the
function.  The tg vector is updated with the model matrix for the
conditionally linear parameters and the MMD slice, considered as a
matrix, is updated with the gradient.
For the Michaelis-Menten model the model-matrix function is
julia
function MicMenmmf(nlp,x,tg,MMD)
    x1 = x[1]
    denom = nlp[1] + x1
    MMD[1,1] = -(tg[1] =  x1/denom)/denom
end
The arguments are untyped, to allow for submatrices or views of
matrices and arrays, but they should be treated as three vectors and a
matrix, for the purposes of indexing.
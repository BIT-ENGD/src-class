tundrawolf
tundrawolf is implement of PEDT - Parallel Exchangeable Distribution Task specifications for nginx_lua.
PEDT v1.1 specifications supported.
Table of Contents

install
configurations in nginx.conf
import and usage
options
interfaces
helpers
Tundrawolf.infra.taskhelper
Tundrawolf.infra.httphelper
Tundrawolf.infra.requestdata
tundrawolf.dbg.*
system route discoveries in tundrawolf
testcase
history

install

git clone https://github.com/aimingoo/tundrawolf

or

luarocks install tundrawolf

configurations in nginx.conf
First, append path to nginx.conf:
conf
http {
    lua_package_path '...;${YOUR_Tundrawolf_DIR}/?.lua;;';
    ...

note1: you can skip package_path setting when tundrawolf installed by luarocks
note2: @see $(Tundrawolf)/nginx/conf/nginx.conf

And next, add proxy_pass_interface in locatoin part:
conf
http {
    ...
    server {
        ...
        location ~ ^/_/cast {
            ## for default distributed_request interface in infra.httphelper, copy from:
            ##  $(Tundrawolf)/nginx/conf/nginx.conf
        }
for custom distributed_request interface/location, please copy $(tundrawolf)/infra/httphelper.lua to your project, change it and update location in nginx.conf.
import and usage
Loading Tundrawolf into your source code:

options
the full options schema:
lua
options = {
    distributed_request = function(arrResult) .. end, -- a http client implement
    system_route = { .. }, -- any key/value pairs
    task_register_center = {
        download_task = function(taskId) .. end, -- PEDT interface
        register_task = function(taskDef) .. end,  -- PEDT interface
    },
    resource_status_center = {
        require = function(resId) .. end,-- PEDT interface
    }
}
interfaces

for detail, @see ${tundrawolf}/infra/specifications/*
for Promise in lua, @see https://github.com/aimingoo/Promise

all interfaces are promise supported except pedt.upgrade() and helpers.
all implements is harpseal based, @see https://github.com/aimingoo/harpseal#interfaces
helpers
some tool/helpers include in the package.
Tundrawolf.infra.taskhelper

a taskDef define helper.
Tundrawolf.infra.httphelper

a recommented/standard distributed request. @see:

${tundrawolf}/demo.lua

Tundrawolf.infra.requestdata

parse arguments of PEDT task from http request. @see

${ngx_4c}/module/n4c_executor.lua

tundrawolf.dbg.*
these are debug interfaces, please require/load as filemodule, or install by luarocks. @see:

${tundrawolf}/demo.lua

system route discoveries in tundrawolf
in tundrawolf, you can register and discovery any system resources. for examples:

all keys were cached always, so discoverer function call once  until you manual set invalid a_key:
lua
pedt.upgrade({system_route = {[a_key] = false}})
for more example, @see aimingoo/ngx_4c project.
testcase
try these:


history
text
2015.12.03  v1.0.4 released.
    - sync to Harpseal v1.0.4
2015.11.14  v1.0.1 released.
    - Tundrawolf.infra.requestdata interface published.
    - to be compatible ngx_cc at proxy_pass_interface.
2015.11.09  v1.0.0 released.
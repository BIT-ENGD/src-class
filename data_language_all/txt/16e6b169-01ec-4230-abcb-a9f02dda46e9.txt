doogie_robot
The doogie_robot stack provides a ROS interface communication to Doogie Mouse hardware plataform. For tutorials, please check [doogie_robot/Tutorials] on wiki.
Keywords: Micromouse, Gazebo, ROS
Author: Mateus Meneses
Affiliation: BIR - Brazilian Institute of Robotics
Maintainer: Mateus Meneses, mateusmenezes95@gmail.com 
Supported Versions

Kinetic: Built and tested under ROS Kinetic and Ubuntu 16.04

 [![Build Status](http://rsl-ci.ethz.ch/buildStatus/icon?job=ros_best_practices)](http://rsl-ci.ethz.ch/job/ros_best_practices/) TODO 
Dependencies

doogie_base : ROS packages stack with all common packages for working with Doogie Mouse






Table of Contents

doogie_robot
Supported Versions
Dependencies


Table of Contents
File System
Installation
Building from Source:


Example of Usage
Launch Doogie Mouse at Gazebo:


Purpose of the Project
License
Bugs & Feature Requests

File System

doogie_bringup : Package with launch files to bringup Doogie Mouse robot controllers and hardware device drivers.
doogie_drivers: Contains drivers used by Doogie Mouse robot.


Installation
 ### 1. Installation from Packages:

TODO

    sudo apt-get install ros-indigo-...


or you could also build this repository from source. 
Building from Source:
Attention, if you haven't installed ROS yet, please check Ubuntu install of ROS Kinetic. Desktop-Full Install is the recommended one in order to work with this repository.    
Building:
First, lets create a catkin workspace. 

If doogie_ws already exists, you can skip this step.

mkdir -p ~/doogie_ws/src

doogie_robot depends on doogie_base stack. So let's clone it inside our workspace source and install it.
cd ~/doogie_ws/src
git clone http://github.com/doogie-mouse/doogie_base.git
cd ..
rosdep install --from-paths src --ignore-src -r -y

Then, clone doogie_robot also in your workspace source.
git clone http://github.com/doogie-mouse/doogie_robot.git

Now, just build your catkin workspace.
cd ~/doogie_ws
catkin_make

Don't forget to source your workspace before using it.
source devel/setup.bash

Example of Usage
Launch Doogie Mouse at Gazebo:
Just launch the robot.launch
roslaunch doogie_bringup robot_bringup.launch


Purpose of the Project
Doogie Mouse platform was originally developed in 2019 as an undergraduate thesis (Theoprax methodoly) at Centro Universit√°rio SENAI CIMATEC in partnership with Brazillian Institute of Robotics, for teaching principles of artificial intelligence using high level framework for writing and reusing robot software.
It's a open source project and expects modifications and contributions from it's users. 

License
Doogie Mouse Simulator source code is released under a Apache 2.0.

Bugs & Feature Requests
Please report bugs and request features using the Issue Tracker.
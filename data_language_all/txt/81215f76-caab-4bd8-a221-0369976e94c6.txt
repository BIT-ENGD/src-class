Changes in 10.0.3:

Rainrider (1):
alternativepower: remove the realUnit check from the visibility condition


Val Voronov (5):
phaseindicator: Check phase only for player units
powerprediction: Avoid resetting while casting
powerprediction: Make it player-only
powerprediction: Add support for mutating spells
phaseindicator: Pass phaseReason to PostUpdate


3 files changed, 46 insertions(+), 34 deletions(-)

Changes in 10.0.2:

Adrian L Lange (2):
Replace Travis with GitHub Actions (#532)
Update README


Rainrider (1):
stagger: hide the element in Enable


4 files changed, 40 insertions(+), 30 deletions(-)

Changes in 10.0.1:

Adrian L Lange (1):
Update Interface version


Val Voronov (2):
tags: Update powercolor tag
power: Fix colouring by power type logic


3 files changed, 10 insertions(+), 7 deletions(-)

Changes in 10.0.0:

Adrian L Lange (3):
Update LICENSE
Bump Interface version
tags: Make the suffix symmetric with the prefix


Rainrider (11):
additionalpower: fix documentation
classpower: allow layouts to handle charged combo points (#540)
stagger: Add missing unit
Update the docs
alternativepower: replace deprecated UnitAlternatePowerInfo (#537)
runes: fix for death knights without specialization in Shadowlands (#539)
classpower: make holy power available in all specs
classpower: expose the element's visibility through a PostVisibility callback (#534)
phaseindicator: Add tooltip support (#529)
pvpclassificationindicator: update enum casing
castbar: Update safezone position according to the castbar orientation (#527)


Val Voronov (39):
power: Don't cache unit's connection status
health: Don't cache unit's connection status
Update docs
runes: Use AllPath for forced internal updates
power: Add GetDisplayPower overridable method
Check for atlases before setting our textures
classpower: Add PostUpdateColor callback
runes: Use ForceUpdate for forced internal updates
Fix trailing ands and ors
Remove useAtlas option
additionalpower: Remove unit from Posts
power: Pass atlas to PostUpdateColor
stagger: Enabled stagger only for player
alternativepower: Move colouring to its own method
additionalpower: Update visibility handler
additionalpower: Move colouring to its own method
power: Move colouring to its own method
Add alternative power to oUF.colors
health: Move colouring to its own method
runes: Move colouring to its own method
stagger: Move colouring to its own method
threat: Add threat colours to the oUF.colors table
Remove UNIT_HEALTH_FREQUENT event (#517)
castbar: Element revamp (#480)
tags: Update docs
tags: Pass additional args only if there's any
tags: Remove 1/2/3 static cases
tags: Fix ifs
tags: Remove an option to adjust output length
tags: Add UTF-8 support to string shortening
tags: Use ' instead of "
tags: Escape magic chars in tag names
tags: Pass custom arguments to tag functions
tags: Avoid unnecessary string operations
tags: Bail out on empty strings
tags: Fix tag function constructors
tags: Update tag syntax
tags: Fix getTagName method
core: Add oUF:GetActiveStyle() method


Wetxius (1):
castbar: Add fallback icon (#519)


18 files changed, 1162 insertions(+), 818 deletions(-)

Changes in 9.3.1:

Val Voronov (2):
auras: Add comments regarding anchoring restrictions
auras: Fix copypasta


1 file changed, 10 insertions(+), 1 deletion(-)

Changes in 9.3.0:

Val Voronov (1):
auras: Add .tooltipAnchor option (#511)


1 file changed, 21 insertions(+), 1 deletion(-)

Changes in 9.2.2:

Val Voronov (1):
blizzard: Do not hook nameplates' scripts more than once (#508)


1 file changed, 4 insertions(+), 1 deletion(-)

Changes in 9.2.1:

Adrian L Lange (1):
Use upstream version of the packager


Val Voronov (2):
Bump TOC for 8.2 (#507)
blizzard: Do not re-parent nameplates (#506)


3 files changed, 13 insertions(+), 6 deletions(-)

Changes in 9.2.0:

Val Voronov (1):
tags: Update the system (#501)


1 file changed, 151 insertions(+), 102 deletions(-)

Changes in 9.1.3:

Rainrider (1):
stagger: fix visibility toggling


1 file changed, 2 insertions(+)

Changes in 9.1.2:

Rainrider (1):
core: handle pass-through events for eventless frames as unitless


Val Voronov (5):
Renamed Private.UnitSelectionType to Private.unitSelectionType
Renamed Private.UnitExists to Private.unitExists
runes: Updated docs (#494)
powerprediction: Use next instead of pairs
powerprediction: Fixed a typo


10 files changed, 26 insertions(+), 26 deletions(-)

Changes in 9.1.1:

Rainrider (1):
elements: do not toggle visibility on enable in elements where it is part of the update process


Val Voronov (2):
core: Prevent multiple instances of the nameplate driver (#492)
core: Greatly reduced the number of UAE calls for the nameplates (#491)


4 files changed, 19 insertions(+), 15 deletions(-)

Changes in 9.1.0:

Val Voronov (5):
core: Use _initialAttribute-* to set attributes
Add .colorSelection option to health and power elements (#484)
threatindicator: Use a better default texture (#486)
pvpclassificationindicator: Add the element (#482)
core: Update the event system (#483)


9 files changed, 287 insertions(+), 39 deletions(-)

Changes in 9.0.2:

Rainrider (3):
core: unregister the event when unit validation fails
core: do not use table.remove as it alters the index which also breaks the loop in the __call meta method
core: keep the event table even with one handler left


2 files changed, 12 insertions(+), 17 deletions(-)

Changes in 9.0.1:

Rainrider (1):
Update toc interface and a happy new year everyone


2 files changed, 5 insertions(+), 5 deletions(-)

Changes in 9.0.0:

Adrian L Lange (17):
core: Add a flag to toggle arena prep support, defaulting to enabled
tags: Don't attempt to update tags if there's none on the frame
units: Disable .colorPower option until a solution presents itself
units: Remove dependency on original overrides for arena prep
core: Add callbacks to arena prep and adjust docs accordingly
core: Add documentation for PreUpdate and PostUpdate
units: Move arena-specific code to the other unit-specific file
arena: Add support for the UpdateColor override on Health and Power
tags: Add 'arenaspec' tag
tags: Add support for arena preperation in the 'raidcolor' tag
arena: Add callbacks to the health/power element pseudo updating
arena: Don't try to apply pseudo values to overridden elements
arena: Hide the fake frame if the opponent leaves
arena: Update all elements with pseudo values to appear as normal
core: Add basic support for arena preperation frames
tags: Add UpdateTags method
additionalpower: Add option to override the display pairs table (#450)


Rainrider (10):
core: re-work the event system (#472)
readycheckindicator: fix the match pattern
readycheckindicator: prevent enabling the element on party and raid pets
tags: fix missing end
tags: sort the tag functions
tags: update 'cpoints'
tags: tune the 'difficulty' tag a bit
tags: use PLAYER_TALENT_UPDATE for class power resources
tags: add events for 'faction' and 'deficit:name'
colors: fix non-existent self in HCYColorGradient (#466)


Sean Baildon (1):
auras: Display count text above cooldown spiral (#451)


Val Voronov (25):
Add SetFrequentUpdates method to health and power elements (#476)
Add SummonIndicator element (#471)
classpower: Use UnitPower* APIs for vehicles (#464)
core: Update oUF-enableArenaPrep docs
tags: Don't attempt to unregister tags if there's none on the frame
core: Remove remaining old vehicle hack code (#463)
core: Remove UpdateAllElements call from DisableElement (#462)
pvpindicator: Default factionGroup to 'Neutral' (#461)
Use custom UnitExists method (#460)
core: Fix elements' updates for non interactive boss units (#459)
phaseindicator: Show the indicator only for online players (#454)
tags: Add [runes] tag (#453)
core: Nameplate code refactoring
core: Update nameplate docs
core: Call the callback on PLAYER_TARGET_CHANGED if there's no nameplate
additionalpower: Update unit checks
classpower: Remove unnecessary unit checks
classpower: Update unit checks
additionalpower: Update unit checks
alternativepower: Update unit checks
classpower: Update unit checks
combatindicator: Update unit checks
power: Remove unnecessary unit checks
restingindicator: Update unit checks
runes: Update unit checks


27 files changed, 744 insertions(+), 360 deletions(-)

Changes in 8.0.2:

Val Voronov (1):
phaseindicator: Fix logic (#446)


1 file changed, 1 insertion(+), 1 deletion(-)

Changes in 8.0.1:

Val Voronov (1):
phaseindicator: Add war mode support


1 file changed, 1 insertion(+), 1 deletion(-)

Changes in 8.0.0:

Adrian L Lange (5):
tags: Add extra units support
core: Further enforce global uniqueness
core: Add a fallback to global for PetBattleFrameHider
portrait: Add new event for updates
core: Declare PetBattleFrameHider in Lua


Rainrider (22):
ToC bump for 8.0
castbar: fix documentation copy/pasta
castbar: make the spellID an attribute and remove it from the list of PostUpdate arguments
castbar: document the element attributes meant for external use
castbar: don't pass the castID to PostUpdate
castbar: remove the cast name PostUpdate argument for _STOP, _FAILED and *_INTERRUPTED
core: fix header names generation (#422)
power: use Enum.PowerType.Alternate instead of the global constant
alternativepower: use Enum.PowerType.Alternate instead of the global constant
tags: fix typo
runes: fix documentation typo
tags: update SPELL_POWER_* constants
classpower: update SPELL_POWER_* constants
castbar: remove rank returns from UnitCastingInfo and UnitChannelInfo
castbar: update for changed signature of UNIT_SPELLCAST_* events
powerprediction: UnitCastingInfo does not return spell ranks anymore
auras: UnitAura does not return spell ranks anymore
tags: UNIT_POWER is now named UNIT_POWER_UPDATE
power: UNIT_POWER is now named UNIT_POWER_UPDATE
alternativepower: UNIT_POWER is now named UNIT_POWER_UPDATE
stagger: take one more stock UI event into account
stagger: fix wrong event name and re-register stock UI events on disable


Val Voronov (11):
core: Proper vehicle fix
pvpindicator: Fix .Badge visibility logic
pvpindicator: Hide .Badge on disable
pvpindicator: Add honour level icon support
runes: Change var name
runes: Avoid unnecessary sorts if sorting isn't active
runes: Add sorting
auras: Remove aura count nil check
pvpindicator: Remove prestige
masterlooterindicator: Remove element
auras: Add aura count nil check


15 files changed, 257 insertions(+), 416 deletions(-)

Changes in 7.0.16:

Rainrider (1):
masterlooterindicator: fix for eventual nil masterlooter


jukx (1):
Update wowprogramming.com links in documentation


9 files changed, 13 insertions(+), 15 deletions(-)

Changes in 7.0.15:

Val Voronov (3):
Update interface version (#429)
Update LICENSE (#428)
core: Add frame:IsEnabled() method (#427)


3 files changed, 11 insertions(+), 5 deletions(-)

Changes in 7.0.14:

Adrian L Lange (1):
changelog: Fix link markup (#416)


Rainrider (4):
changelog: show newest commits on top
auras: use oUF's colors table for debuff types
colors: add debuff to the colors table
auras: Add more arguments to PostUpdateIcon (#418)


Val Voronov (1):
core: Update raid vehicle handling hack (#424)


4 files changed, 38 insertions(+), 23 deletions(-)

Changes in 7.0.13:

Adrian L Lange (1):
changelog: Add links to issues mentioned in commit messages (#414)


Rainrider (1):
core: update arena frames on ARENA_OPPONENT_UPDATE


Val Voronov (1):
healthprediction: Maths update


3 files changed, 26 insertions(+), 24 deletions(-)

Changes in 7.0.12:

Adrian L Lange (1):
castbar: Account for orientation and reverse fill for Spark repositioning (#408)


1 file changed, 19 insertions(+), 2 deletions(-)

Changes in 7.0.11:

Val Voronov (1):
core: Disable raid frames vehicle handling in Antorus raid (#404)


1 file changed, 70 insertions(+), 3 deletions(-)

Changes in 7.0.10:

Adrian L Lange (1):
core: Let the packager set a static version (#401)


1 file changed, 1 insertion(+), 1 deletion(-)

Changes in 7.0.9:

Val Voronov (1):
portrait: Use both UNIT_PORTRAIT_UPDATE and UNIT_MODEL_CHANGED (#400)


2 files changed, 5 insertions(+), 2 deletions(-)

Changes in 7.0.8:

Val Voronov (1):
portrait: Fix updates for *target units (#399)


2 files changed, 26 insertions(+), 23 deletions(-)

Changes in 7.0.7:

Adrian L Lange (1):
Update README (#397)


Rainrider (1):
core: update the frame units upon UNIT_EXITING_VEHICLE


2 files changed, 16 insertions(+), 8 deletions(-)

Changes in 7.0.6:

Belzaru (3):
Remove unnecessary Show.
Remove unnecessary code and rename variable.
Change units and percent calculation to be relative to maximum cast duration.


Rainrider (2):
stagger: add a nil check for UnitStagger (#392)
threatindicator: asure the element has SetVertexColor before using it


3 files changed, 12 insertions(+), 14 deletions(-)

Changes in 7.0.5:

Val Voronov (1):
core: Update units of already handled nameplates (#391)


1 file changed, 2 insertions(+)

Changes in 7.0.4:

Adrian L Lange (1):
utils: Pandoc is extremely picky with the prefixed spacing on sublists (#388)


Val Voronov (1):
classpower: Unregister all events (#387)


2 files changed, 5 insertions(+), 1 deletion(-)

Changes in 7.0.3:

Adrian L Lange (1):
utils: Use ordrered lists for commit messages


Val Voronov (1):
core: Set nameplate CVars immediately if already logged in


2 files changed, 15 insertions(+), 2 deletions(-)

Changes in 7.0.2:

Adrian L Lange (1):
toc: CurseForge wants IDs, not slugs (#382)


Val Voronov (1):
Update README


2 files changed, 8 insertions(+), 4 deletions(-)

Changes in 7.0.1:

Adrian L Lange (1):
Update Interface version (#380)


1 file changed, 1 insertion(+), 1 deletion(-)

Changes in 7.0.0:

Adrian L Lange (169):
We need to escape the regex pattern for travis config
Don't restrict builds away from tags
Only let travis run on master
Revert "Put the changelog in the cloned directory"
Only let travis run on master
Put the changelog in the cloned directory
Add automatic packaging with the help of TravisCI and BigWigs' packager script
Use a custom changelog generated before packaging
Don't count merge commits as actual changes in the changelog
Convert the changelog script to output markdown formatted logs
classpower: Only show active bars (#363)
tags: Update documentation
range: Make sure we actually have and send the correct object
core: Add documentation for oUF header attributes
totems: Update Override documentation
threatindicator: Update Override documentation
stagger: Update Override documentation
runes: Update Override documentation
resurrectindicator: Update Override documentation
restingindicator: Update Override documentation
readycheckindicator: Update Override documentation
range: Update Override documentation
raidtargetindicator: Update Override documentation
raidroleindicator: Update Override documentation
questindicator: Update Override documentation
pvpindicator: Update Override documentation
powerprediction: Update Override documentation
power: Update Override documentation
portrait: Update Override documentation
phaseindicator: Update Override documentation
masterlooterindicator: Update Override documentation
leaderindicator: Update Override documentation
healthprediction: Update Override documentation
health: Update Override documentation
grouproleindicator: Update Override documentation
combatindicator: Update Override documentation
classpower: Update Override documentation
assistantindicator: Update Override documentation
alternativepower: Update Override documentation
additionalpower: Update Override documentation
core: Further documentation updates for oUF:SpawnNamePlates
core: Update oUF:SpawnNamePlates documentation
core: Fix visibility documentation
blizzard: Use already defined constants (with fallbacks)
totems: Fix Path documentation
threatindicator: Fix Path documentation
stagger: Fix Path documentation
runes: Fix Path documentation
resurrectindicator: Fix Path documentation
restingindicator: Fix Path documentation
readycheckindicator: Fix Path documentation
raidtargetindicator: Fix Path documentation and a space
raidroleindicator: Fix Path documentation
questindicator: Fix Path documentation
pvpindicator: Fix Path documentation
powerprediction: Fix Path documentation
power: Fix Path documentation
portrait: Fix Path documentation
phaseindicator: Fix Path documentation
masterlooterindicator: Fix Path documentation
leaderindicator: Fix Path documentation
healthprediction: Fix Path documentation
health: Fix Path documentation
grouproleindicator: Fix Path documentation
combatindicator: Fix Path documentation
classpower: Fix Path documentation
assistantindicator: Fix Path documentation
alternativepower: Fix Path documentation
additionalpower: Fix Path documentation
range: Add proper Overrides and ForceUpdate
core: Update oUF:SpawnHeader docs
power: Fix documentation and UpdateColor params
health: Fix documentation
health: Separate the color updating to its own, overridable method
power: Separate the color updating to its own, overridable method
resurrectindicator: INCOMING_RESURRECT_CHANGED is not unitless
threatindicator: Update docs
stagger: Update docs
runes: Update docs
resurrectindicator: Update docs
restingindicator: Update docs
readycheckindicator: Update docs
range: Update docs
raidtargetindicator: Update docs
raidroleindicator: Update docs
questindicator: Update docs
pvpindicator: Update docs
powerprediction
power: Update docs
portrait: Update docs
phaseindicator: Update docs
masterlooterindicator: Update docs
leaderindicator: Update docs
healthprediction: Update docs
health: Update docs
grouproleindicator: Update docs
combatindicator: Update docs
classpower: Update docs
castbar: Update docs
auras: Update docs
assistantindicator: Update docs
alternativepower: Update docs
additionalpower: Update docs
totems: Update override docs
threatindicator: Update override docs
stagger: Update override and PostUpdate docs
runes: Update override docs
resurrectindicator: Update override docs
restingindicator: Update override docs
readycheckindicator: Update override docs
raidtargetindicator: Update override docs
raidroleindicator: Update override docs
questindicator: Update override docs
pvpindicator: Update override docs
powerprediction: Update override docs
power: Update override docs
portrait: Update override docs
phaseindicator: Update override docs
masterlooterindicator: Update override docs
leaderindicator: Update override docs
healthprediction: Update override docs
health: Update override docs
grouproleindicator: Update override docs
combatindicator: Update override docs
classpower: Update override docs
assistantindicator: Update override docs
alternativepower: Update override docs
additionalpower: Update override docs
combatindicator: Fix typo in docs
power: Remove unneccesary newline
health: Fix comment
Update TOC metadata
Add CurseForge packager support
threatindicator: Register necessary events for nameplates support (#344)
Update LICENSE (#342)
portraits: Misc changes (#338)
power: Reorder PostUpdate args (#339)
core: Expose header visibility (#329)
classpower: Denote that this comment represents a bug with the API
auras: Remove backwards compatibility code for layouts overriding internal behaviors
auras: Rename the visible offset to something sane
threat: Rename to ThreatIndicator
runebar: Rename file to Runes
ricons: Rename to RaidTargetIndicator
resurrect: Rename to ResurrectIndicator
resting: Rename to RestingIndicator
readycheck: Rename to ReadyCheckIndicator
raidrole: Rename to RaidRoleIndicator
qicon: Rename to QuestIndicator
pvp: Rename to PvPIndicator
picon: Rename to PhaseIndicator
masterlooter: Rename to MasterLooterIndicator
lfdrole: Rename to GroupRoleIndicator
leader: Rename to LeaderIndicator
healprediction: Rename to HealthPrediction
combat: Rename to CombatIndicator
aura: Rename file to auras
classicons: Rename to ClassPower
assistant: Rename to AssistantIndicator
altpowerbar: Rename to AlternativePower
cpoints: Remove element
Linting
aura: Update returns from UnitAura (#314)
classicons: Fake unit if player is in a vehicle
core: Make sure UpdateAllElements has an event
core: There are 5 arena and boss frames
additionalpower: Remove beta client compatibility code
totems: TotemFrame is parented to PlayerFrame
druidmana: Rename element to "AdditionalPower"


Erik Raetz (1):
Use GetCreatureDifficultyColor and fallback level 999


Gethe (1):
Add support for reverse fill statusbars


Jakub Šoustar (2):
totems: Use actual number of totem sub-widgets instead of MAX_TOTEMS
totems: Remove priorities


Phanx (1):
health: Ignore updates with nil unit (Blizz bug in 7.1) (#319)


Rainrider (112):
runes: update docs
masterlooterindicator: make sure all update paths trigger Pre|PostUpdate
raidroleindicator: make sure all update paths trigger Pre|PostUpdate
range: minor cleanup
portrait: check for PlayerModel instead of Model
core: update documentation
tags: update documentation
castbar: update documentation
auras: update documentation
classpower: update documentation
alternativepower: update documentation
additionalpower: update documentation
totems: update documentation
stagger: update documentation
runes: update documentation
range: update documentation
powerprediction: update documentation
power: update documentation
portrait: update documentation
healprediction: update documentation
health: update documentation
masterlooterindicator: remove unneeded IsShown() calls
pvpindicator: remove unneeded hasPrestige
range: set default alpha values
readycheckindicator: set default textures in Enable
threatindicator: update documentation
resurrectindicator: update documentation
restingindicator: update documentation
readycheckindicator: update documentation
range: update documentation
raidtargetindicator: update documentation
raidroleindicator: update documentation
questindicator: update documentation
pvpindicator: update documentation
phaseindicator: update documentation
masterlooterindicator: update documentation
leaderindicator: update documentation
grouproleindicator: update documentation
combarindicator: update documentation
castbar: update documentation
assistantindicator: update documentation
alternativepower: update documentation
additionalpower: update documentation
Remove unused parent variable
Pass on constant upvalues
Adhere to code style guidelines
tags: adhere to code style guidelines
docs: tags
docs: address nameplates feedback
docs: colors.lua
docs: yep
docs: add nameplates documentation
docs: Address feedback on ouf.lua
docs: ouf.lua
Gimme some brackets
docs: factory.lua
docs: events.lua
alternativepower: fix Update when called from Visibility on hide
alternativepower: add a Path call in Visibility on hide
healthprediction: more thorough documentation on .maxOverflow
healthprediction: hide over(Heal)Absorb on disable
auras: hide on disable
alternativepower: apply the default statusbar texture if needed
alternativepower: remove the .colorTexture option
alternativepower: fix the visibility and update path
range: fix Range.Override documentation
healthprediction: pass the amount of overheal to :PostUpdate
healthprediction: handle textures for over-absorb and overheal-absorb
castbar: remove deprecated element.interrupt
healthprediction: provide a saner example
docs: some small fixes for consistency
totems: update the documentation
threatindicator: update the documentation
stagger: update the documentation
runes: update the documentation
resurrectionindicator: update the documentation
restingindicator: update the documentation
readycheckindicator: update the documentation
range: update the documentation
raidtargetindicator: update the documentation
raidroleindicator: update the documentation
questindicator: update the documentation
pvpindicator: update the documentation
powerprediction: update the documentation
power: update the documentation
portraits: update the documentation
phaseindicator: update the documentation
masterlooterindicator: update the documentation
leaderindicator: update the documentation
healthprediction: update the documentation
health: update the documentation
grouproleindicator: update the documentation
combatindicator: update the documentation
classpower: update the documentation
castbar: update the documentation
auras: update the documentation
assistantindicator: update the documentation
alternativepower: update the documentation
additionalpower: update the documentation
castbar: add .timeToHold option
castbar: pass the spellid to Post* hooks where applicable
castbar: set .Text for failed and interrupted casts accordingly
castbar: delegate hiding the castbar to the OnUpdate script
castbar: update interruptible flag in UNIT_SPELLCAST(_NOT)_INTERRUPTIBLE
castbar: upvalue GetNetStats
castbar: rename object to self
castbar: remove some unused variables
castbar: deprecate .interrupt in favor of .notInterruptible
castbar: use SetColorTexture
castbar: add a .holdTime option
power: Allow using atlases
core:  update the pet frame properly after entering/exiting a vehicle


Sticklord (1):
core: Change the framestrata to LOW


Val Voronov (39):
Add README (#373)
threatindicator: Fix UnitThreatSituation error (#371)
stagger: Move Hide() call to a better spot
power: Add Show() call to Enable function
portrait: Move Show() call to a better spot
healthprediction: Remove redundant Show() calls
health: Add Show() call to Enable function
alternativepower: Move Hide() call to a better spot
core: oUF.xml cleanup (#369)
classpower: Element update (#368)
runes: Add nil and 0 spec checks (#367)
stagger: Move colour update to its own function (#359)
auras: Element update (#361)
additionalpower: Move colour update to its own function (#360)
runes: Add colouring support
runes: Min value should be 0
healthprediction: Element update (#353)
threatindicator: Add .feedbackUnit option
classpower: Element revamp (#347)
Move all colors to colors.lua.
Make code a bit more flexible.
additionalpower: Docs review.
additionalpower: Fix upvalues.
additionalpower: Docs review.
assistantindicator: Fix code style.
assistantindicator: Docs review.
alternativepower: Docs review.
additionalpower: Docs review.
additionalpower: Fix upvalues.
additionalpower: Review docs.
core: Fix code style.
core: Remove redundant arg.
auras: Reuse existing aura buttons, if any, and show widget on enable (#341)
alternativepower: Add unit to PostUpdate args (#337)
core: Add nameplate support (#335)
stagger: Revamp Update function (#334)
pvpindicator: Swap factionGroup only for player unit (#331)
runebar: Set cooldown start time to 0 if rune was energized (#310)
tags: Added 'powercolor' tag.


65 files changed, 5536 insertions(+), 4507 deletions(-)

Changes in 1.6.9:

Adrian L Lange (46):
druidmana: Add overrides for the display pairs table
classicons: Make sure we update for talent changes for druids
runebar: Allow PostUpdate during vehicle updates
runebar: Add Override support and rename the PostUpdate hook
runebar: Runes were simplified in Legion, now there's only one type
power: Remove pre-legion compatibility checks
health: Remove pre-legion compatibility checks
classicons: Remove pre-legion compatibility checks
tags: Update spec check for the holypower tag
tags: Soul Shards are class-wide in Legion
tags: Chi is only used for Windwalker monks in Legion
tags: Remove Shadow Orbs tag from Legion
tags: Add Arcane Charges tag
classicons: Update when max power changes
classicons: Add fallback texture color for vehicles
classicons: Pass powerType through PostUpdate
classicons: Add support for vehicle combo points
classicons: Only update textures if the classicons are textures
classicons: Use the colors provided by the color table for the textures
classicons: Add Combo Points for rogues and druids
classicons: Add Arcane Chages for Arcane Mages
classicons: Soul Shards are class-wide in Legion
classicons: Shadow Orbs no longer exist in Legion
classicons: Holy Power is only used for Retribution paladins
classicons: Chi is only used for Windwalker monks
druidmana: Add support for other classes in Legion
readycheck: Add PreUpdate/PostUpdate/PostUpdateFadeOut hooks
readycheck: Add support for overriding the textures
readycheck: Use the animation system for handling fading
stagger: Add fallback indices for live clients
runebar: RuneFrame was parented to PlayerFrame in 5.3
stagger: Color indices were exposed in Legion (build 21996)
power: Fix tapping for Legion
health: Fix tapping for Legion
power: Handle power colors from nested tables, such as the stagger colors
power: Update power colors and indices for Legion
tags: Remove 'pereclipse' tag
stagger: The default MonkStaggerBar is parented to PlayerFrame, no need to hide it manually
stagger: Monk stances no longer exist
eclipsebar: Remove element
tags: Use UNIT_POWER_FREQUENT instead of UNIT_COMBO_POINTS for cpoints
cpoints: Use UNIT_POWER_FREQUENT instead of UNIT_COMBO_POINTS
runebar: Bail if GetRuneCooldown returns nil values
castbar: Kill the pet casting bar if we spawn a player castbar
tags: No need to match the same string twice
core: Expose the headers


Chris Bannister (1):
aura: Dont have oUF aura specific logic inside CreateIcon


Phanx (1):
aura: Update UnitAura return values


Rainrider (3):
runebar: let the layout define the max number of runes
runebar: deactivating OnUpdate is handled in Update
runebar: account for energized runes


Trond A Ekseth (5):
Bump TOC version to 1.6.9.
Bump TOC interface version to 7.0 (70000).
totems: Update example to include cooldown template.
aura: Add missing internal state update after second createAuraIcon call.
aura: Make the previous commit backwards compatible.


Val Voronov (16):
aura: A better way of getting parent frame's name.
power: Added a comment.
aura: Fixed issue which was causing /fstack error.
pvp: Legion clean-up.
powerprediction: Legion clean-up.
power: Even better condition.
power: Better condition.
power: Alternative power colours use 0-1 range too.
power: Alternative power colours use 0-255 range.
druidmana: Fixed additional power bar update process.
powerprediction: (Un)register 'UNIT_SPELLCAST_SUCCEEDED' event.
pvp: Element revamp.
prestige: Remove prestige element.
powerprediction: Hide bars, when element is disabled.
prestige: Add prestige widget.
powerprediction: Add power cost prediction widget.


Valeriy Voronov (4):
classicons: Actually update widgets on forced update.
stagger: Perform an actual update on forced update event.
altpowerbar: Set OnLeave script only if frame doesn't have one yet.
altpowerbar: Use correct UnitAlternatePowerInfo() returns.


19 files changed, 634 insertions(+), 583 deletions(-)

Changes in 1.6.8:

Adrian L Lange (5):
tags: Only show spec-specific tags when the resource is both usable and available
classicons: Keep the overrides consistent with the rest of the elements
eclipsebar: arg1 of ECLIPSE_DIRECTION_CHANGE is a string now
eclipsebar: Use UNIT_POWER_FREQUENT since the astral phases has sped up significantly
eclipsebar: Use the correct spellIDs for eclipse peaks


Trond A Ekseth (10):
Bump TOC version to 1.6.8.
classicons: On enable, set the old max to the current total of icons.
healprediction: Rewrap docs.
stagger: Rewrap docs.
range :Set file mode -x.
classicons: Set file mode -x.
classicons: Rewrap doc text.
classicons: Run ClassPowerDisable on unsupported clases/specs.
classicons: Fix declaraction of Visibility function.
eclipsebar: Re-add .directionIsLunar.


7 files changed, 56 insertions(+), 50 deletions(-)

Changes in 1.6.7:

Adirelle (2):
colors: fixed HCYtoRGB that was returning values greater than 1.
stagger: hide element in Enable.


Adrian L Lange (4):
castbar: Show the castbar for original units' spells as well
events: Register the event with realUnit as well to allow elements to use both units while in a vehicle
runebar: Hide while in a vehicle
eclipsebar: Hide while in a vehicle


Ivan (1):
core: Remove hidden attribute.


Phanx (3):
EclipseBar: - Check the two eclipse buffs by name instead of looping over all active buffs. - Also call ECLIPSE_DIRECTION_CHANGE in Update.


EclipseBar: Don't call PostUnitAura if the eclipse state didn't change


EclipseBar: - Added power, maxPower, powerType to arguments passed to PostUpdatePower callback. - Updated example in header comments to show that 'EclipseBar' must be a frame, not a plain table.


Rainrider (18):
power: account for a possible non-zero altpower min value
power: pass only the unit to GetDisplayPower
power: min is actually the current power
power: don't call UnitIsConnected twice
classicons: allow for Visibility to be overridden
classicons: do trigger an update on ClassPower{Enable|Disable}
classicons: let the layout deside how many widgets they define
classicons: DARK_FORCE is not used anymore
power: allow for coloring if the altpowerbar is being displayed instead
classicons: add the UpdateTexture hook to the documentation
classicons: left over print removed
classicons: do not re-show segments after disabling the update
classicons: remove the PostVisibility hook and call an update on disable so layouts can hide additional stuff
classicon: aaaaaand ... whitespaces again
classicons: fix indentation
classicon: use SPELLS_CHANGED only if in the required spec or the required spell is unknown
classicons: call for an update from ClassPowerEnable
classicons: bug fixes and optimization


Trond A Ekseth (4):
Bump TOC version to 1.6.7.
Bump TOC interface version to 6.0 (60000).
power: Fix indentation in power docs.
LICENSE: I don't even...


Valeriy Voronov (1):
aura: Fixed cooldown animation.


12 files changed, 227 insertions(+), 186 deletions(-)

Changes in 1.6.6:

Adirelle (38):
stagger: small optimization.
stagger: added a hook to override the internal visibility function.
stagger: stance-based visibility.
stagger: update on UNIT_AURA instead of using an OnUpdate script.
stagger: minor optimization.
altpowerbar: fixed visibility.
core: register UNIT_ENTERED_VEHICLE, UNIT_EXITED_VEHICLE and UNIT_PET as unitless to properly get the updates.
events: do not register events for self.realUnit anymore.
altpowerbar: allow .Override.
colors: added a global toggle, namely oUF.useHCYColorGradient, to select which algorithm oUF.ColorGradient uses.
colors: provides the original ColorGradient as RGBColorGradient as well.
colors: provides a color gradient in (hue, chroma, luma) (HCY') space.
events: use RegisterUnitEvent to replace our home-brew event dispatcher.
healprediction: show the widget when enabled, hide it when disabled.
totems: hide the totem widgets when disabled.
threat: hide the widget when disabled.
ricons: hide the widget when disabled.
resting: hide the widget when disabled.
readycheck: : hide the widget when disabled.
range: restore opacity when disabled.
qicon: hide the widget when disabled.
pvp: hide the widget when disabled.
portraits: show the widget when enabled, hide it when disabled.
picon: hide the widget when disabled.
masterlooter: hide the widget when disabled.
lfdrole: hide the widget when disabled.
leader: hide the widget when disabled.
health: hide the widget when disabled.
eclipsebar: hide the widget when disabled.
cpoints: hide the widgets when disabled.
combat: hide the widget when disabled.
castbar: hide the widget when disabled.
assistant: hide the widget when disabled.
altpowerbar: hide the widget when disabled.
classicons: refactored class enable/disable code.
altpowerbar: add a .showOthersAnyway option to show it for other players.
altpowerbar: enforce the lower and upper bounds on :SetValue.
healprediction: add a .frequentUpdates option to update on UNIT_HEALTH_FREQUENT.


Clamsoda (1):
altpowerbar: Change HasScript to GetScript


Erik Raetz (1):
units: Adding two generic boss events.


Rainrider (5):
stagger: add monk's stagger bar
power: optimize a bit
power: UNUSED is now called CHI
threat: don't hide the element in Enable
aura: fix auras.visibleBuffs being off by 1 if auras.gap and debuffs are present


Trond A Ekseth (5):
Bump TOC version to 1.6.6.
Bump TOC interface version to 5.4 (50400).
Bump TOC version to 1.6.5.
Bump TOC interface version to 5.3 (50300).
Revert "core: Fall-back to pre-5.2 menus for raid frames."


Valeriy Voronov (1):
classicons: fixed ClassPowerEnable/Disable for Monk and Paladin


budha (2):
totems: export a copy of the (STANDARD|SHAMAN)_TOTEM_PRIORITIES table
totems: expose TOTEM_PRIORITIES to oUF Layouts


freebaser (4):
healpredication: fix show/hide statusbars
healprediction: support for healAbsorbBar
healprediction: New absorb amount event
healprediction: absorbBar support


31 files changed, 512 insertions(+), 189 deletions(-)

Changes in 1.6.5:

Rainrider (1):
tags: eliterare -> rareelite


Trond A Ekseth (4):
Bump TOC version to 1.6.5.
Bump TOC interface version to 5.3 (50300).
Revert "core: Fall-back to pre-5.2 menus for raid frames."
core: Fall-back to pre-5.2 menus for raid frames.


2 files changed, 6 insertions(+), 4 deletions(-)

Changes in 1.6.4:

Erik Raetz (1):
core: Adding togglemenu to header units


Trond A Ekseth (1):
Bump TOC version to 1.6.4.


2 files changed, 2 insertions(+), 2 deletions(-)

Changes in 1.6.3:

Trond A Ekseth (4):
TOC: Bump version to 1.6.3.
core: Ues the 5.2 secure unit dropdown.
tags: LIGHT_FORCE was renamed CHI.
units: Don't poll on boss unitids.


5 files changed, 4 insertions(+), 15 deletions(-)

Changes in 1.6.2:

Adrian L Lange (1):
tags: Support battle pets' level


Phanx (1):
aura: icon indices start at 1, not 0.


Rainrider (1):
altpowerbar: allow layouts to position the tooltip


Trond A Ekseth (5):
TOC: Bump version to 1.6.2.
TOC: Bump interface version to 50200 (5.2).
totem: Destroy the OnClick handler.
power: Correctly display tapping.
health: Correctly display tapping.


7 files changed, 19 insertions(+), 20 deletions(-)

Changes in 1.6.1:

Manriel (1):
TOC: Add notes in ruRU locale


Rainrider (2):
classicons: allow layouts to properly size and position on initial update
tags: account for the new 'minus' return of UnitClassification()


Trond A Ekseth (8):
TOC: Bump version to 1.6.1.
TOC: Bump interface version to 50100 (5.1).
altpowerbar: Support tooltip.
aura: Make :ForceUpdate call Update instead of UpdateAuras.
altpowerbar: Make coloring function like the other elements.
altpowerbar: Fix incorrect whitespace and move around some code.
core: Hide frames during pet battles.
classicons: The widgets are expected to be textures.


andy (1):
altpowerbar: use api to set statusbar colour


freebaser (3):
classicons: Chi powerType change
range: Add offline fallback
classicons: Make RequireSpell and RequireSpec local.


phanx (2):
totems: Prevent out-of-range error.
colors: Other add-ons can implement custom colors.


10 files changed, 122 insertions(+), 26 deletions(-)

Changes in 1.6.0:

Adirelle (5):
assistant: Add missing 'and'.
Added my own event dispatcher.
Added a :IsElementEnabled meta ; use it in :EnableElement and :DisableElement to avoid enabling/disabling an element twice.
Added arena units to :DisableBlizzard.
Fixed the bug with Clique support that prevented the headers to update properly.


Adrian L Lange (12):
tags: Add shadoworbs tag
tags: Add new chi tag
shadoworbs: New element
harmonyorbs: New element
threat: Add some basic documentation.
ricons: Add some basic documentation.
resurrect: Add some basic documentation.
resting: Add some basic documentation.
qicon: Add some basic documentation.
eclipsebar: Add some basic documentation.
blizzard: Remove focus entries from all dropdown menus.
Add resurrect icon element


Adrian Lund-Lange (2):
raidrole: Add support for main-assist
maintank: Rename to RaidRole


Chris Bannister (1):
Dont use chat latency


Erik Raetz (2):
portrait: Reset settings before setting the new model.
Portrait fix revised - Fixed model position not reseting correctly while swapping from model to questionmark and vise versa - Fixed bug where the questionmark model would persist because of the guid not reseting corretly - Fixed male worgen portraits - Removed else condition (obsolete) - Added ClearModel() to allow model value reseting correctly


Matt Emborsky (1):
aura: Fix calculation offset for columns based upon first being positioned at 0 instead of 1 offset.


Paul Owen (1):
holypower: Use UnitPowerMax to fetch maximum value.


Rainrider (3):
shadoworbs: can't call Show()/Hide() on an array
power: Point power type colors to oUF.colors.power instead of PowerBarColors
don't outsideAlpha units which UnitInRange does not check range for


Saiket (2):
blizzard: Prevent disabled player frame from animating while hidden.
blizzard: Prevent tainting the default UI's AnimationSystem when hiding default unit frames.


Trond A Ekseth (290):
TOC: Bump interface version to 50001 (5.0).
tags: Change RAID_ROSTER_UPDATE to GROUP_ROSTER_UPDATE.
threat: Update TexCoord.
threat: Check if there's a texture before we hide the frame.
runebar: Add alt to :PostUpdateType().
runebar: Add start, duration and runeReady to :PostUpdateRune().
runebar: Remove a scope.
runebar: Add :PostUpdateRune(rune, rid).
runebar: Add :PostUpdateType(rune, rid).
core: Remove maintank from the element list.
runebar: Correct coloring when logging in without Factory.
classbars: Is a stray file. :(
classicons: Remove deprecated code.
classicons: Add a third argumen to :PostUpdate().
classicons: Only run :SetDesaturated() if it exists.
classicons: Throw cpoints back to its own element.
classicons: Merges cpoints, harmonyorbs, holypower, shadoworbs and soulshards.
core: Change PARTY_MEMBERS_CHANGED to GROUP_ROSTER_UPDATE.
Revert "core: Workaround GetAddOnMetadata not returning X-values in MoP."
raidrole: Remove WoW4 compatibility.
masterlooter: Remove WoW4 compatibility.
lfdrole: Remove WoW4 compatibility.
eclipsebar: Remove WoW4 compatibility.
tags: Remove WoW4 compatibility.
leader: Remove WoW4 compatibility.
assistant: Remove WoW4 compatibility.
blizzard: Fix default buffs not showing at login.
shadoworbs: Add proper punctuation.
harmonyorbs: Add proper punctuation.
shadoworbs: Correct the number of orbs required in the docs.
tags: Fix typo in [holypower].
assistant: Additional MoP function changes.
leader: Fix syntax error.
eclipsebar: Merge in MoP function changes.
raidrole: Merge in MoP event changes.
masterlooter: Merge in MoP event changes.
lfdrole: Merge in MoP event changes.
assistant: Merge in MoP event changes.
leader: Merge in MoP event changes.
leader: Merge in MoP function changes.
assistant: Merge in MoP function changes.
pvp: Don't set the PvP icon to Neutral on MoP.
tags: Merge in MoP function changes.
core: Workaround GetAddOnMetadata not returning X-values in MoP.
assistant: Document :PostUpdate().
docs: Correct the order we close code and pre tags.
assistant: Document :PreUpdate().
assistant: Move the :Override() docs to the function.
altpowerbar: Document :PostUpdate().
altpowerbar: Document :PreUpdate().
docs: Support short docs with only title and description.
altpowerbar: Minor change to the indenting of the docs.
totems: Use the default UIs priority lists.
totems: Remove unused colors.
totems: Initial documentation.
soulshards: Initial documentation.
eclipsebar: Correct the parent in the example.
runebar: Apply textures in the same order we apply colors.
runebar: Initial documentation.
aura: Add missing punctuation.
aura: Capitalize widget types in the docs.
readycheck: Initial documentation.
range: Initial documentation.
docs: Arguments need to have the same padding.
raidrole: Initial documentation.
eclipsebar: Minor fixus to argument indentation.
aura: Minor fixes to argument indentation.
resurrect: Fix wrapping in docs.
qicon: Fix wrapping and add punctuation in docs.
eclipsebar: Change the wording in the docs slightly.
eclipsebar: Simplify example code.
eclipsebar: Move the function docs to the same indent level as the functions.
ricons: Remove whitespace error in docs.
threat: Remove whitespace error in docs.
pvp: Add some basic documentation.
power: Add some basic documentation.
portraits: Add some basic documentation.
picon: Add some basic documentation.
masterlooter: Add some basic documentation.
lfdrole: Add some basic documentation.
leader: Add some basic documentation.
holypower: Add some basic documentation.
docs: Support different types within one section.
docs: Correctly find the first block.
health: Add some basic documentation.
druidmana: Fix wrapping on sub-widget options.
docs: Use :sub(3) instead of trim() on source code.
healprediction: Add some basic documentation.
druidmana: Add basic documentation.
druidmana: Clean up comments.
cpoints: Add some basic documentation.
combat: Add some basic documentation.
docs: Improve path handling.
Assistant: All UI widgets support Show/Hide.
aura: Remove indentation in :SetPosition() documentation.
castbar: Add some basic documentation.
altpowerbar: Change the widget wording slightly.
altpowerbar: Add documentation.
docs: Support multiple examples within a example section.
assistant: Move Examples below notes.
aura: Add documentation for :PostUpdateGapIcon.
aura: Reword the description for :PostCreateIcon.
aura: Add documentation for :SetPosition.
aura: Change offset in :PostUpdateIcon to represent the actual aura icon index in the table.
aura: Add documentation for :PostUpdateIcon.
aura: Add documentation for :PostCreateIcon.
aura: Add a description for :CreateIcion.
aura: Rename Hooks to Hooks and Callbacks.
aura: Add documentation for :CustomFilter.
aura: Add documentation for :CreateIcon.
aura: Add some documentation.
assistant: Add some documentation.
docs: Remove already fixed issue.
docs: Move the 'cursor' further down after handling a section.
docs: Remove false comment.
docs: Replace link with an anchor.
docs: Replace sentence with sentence.
docs: Strip tab indents from comments.
docs: Implement support for multiple comments.
docs: split nextarg into two lines.
docs: Correctly parse indented argument lists.
docs: Remove restrictions around header names.
docs: Initial commit for the documentation generator.
aura: Change the arguments to :SetPosition() to be 1-based and not 0-based.
aura: Bail out if we try to access out of bounds.
aura: Re-run :SetPosition on ForceUpdates as well.
aura: Fix the :SetPosition offset for updates through UpdateAllElements.
aura: Add missing return checks for :PreSetPosition() on buffs and debuffs.
aura: Allow :PreSetPosition() to define the re-anchoring range.
power: Use type as a final color fallback.
power: Allow layouts to override alternative colors.
power: Allow power colors by type in self.colors.power.
runebar: Check for a valid texture before we set colors.
runebar: Don't call show/hide on enable/disable.
LICENSE: Six years? Cool.
blizzard: Move comments and add newlines for consistency.
power: Use UNIT_POWER_FREQUENT instead of OnUpdate polling.
soulshards: Use UNIT_POWER_FREQUENT instead of UNIT_POWER.
tags: Add [holypower].
tags: Add [soulshards].
holypower: Use Hide/Show instead of Alpha for consistency.
souldshards: Use Hide/Show instead of Alpha for consistency.
masterlooter: Hide the icon when the unit isn't in raid/party.
ricon: Move code around slightly.
resurrect: Remove extra newline.
resting: Remove extra newline.
picon: Remove extra newline.
masterlooter: Remove extra newline.
maintank: Remove extra newline.
lfdrole: Remove extra newline.
leader: Remove extra newline.
combat: Remove extra newline.
resurrect: Add {Pre, Post}Update.
resting: Add {Pre, Post}Update.
qicon: Add {Pre, Post}Update.
pvp: Add {Pre, Post}Update.
pvp: Don't check for the existence of self.PvP.
picon: Add {Pre, Post}Update.
masterlooter: Only check for ML in raid/party.
masterlooter: Add {Pre, Post}Update.
masterlooter: Change function definition for consistency.
lfdrole: Return on :PostUpdate().
maintank: Add {Pre, Post}Update.
leader: Add {Pre, Post}Update.
combat: Add {Pre, Post}Update.
assistant: Add {Pre, Post}Update.
lfdrole: Add {Pre,Post}Update.
cpoints: Don't return on :PreUpdate().
ricons: Add {Pre,Post}Update.
cpoints: Add :PreUpdate().
soulshards: Remove unit from {Pre,Post}Update.
holypower: Remove unit from {Pre,Post}Update.
health: Remove unused variable.
core: Correctly update pets on UNIT_PET.
core: Fix two typos.
core: Remove local references of globals.
core: Remove definition of Private.OnEvent.
core: Move updateActiveUnit() up to its local.
castbar: Move SafeZone calculations out of the OnUpdate handler.
castbar: Workaround GetNetStats() returning 0 instead of latencies.
Bump TOC interface version to 4.3 (40300).
core: Convert 'target' to 'Target' in generated names.
core: Append 'Raid' to the generated name if its for a certain group.
holypower: Add the number of holy powers to the :PostUpdate callback.
soulshards: Add the number of soulshards to the :PostUpdate callback.
cpoints: Add :PostUpdate(cp).
aura: Remove unnecessary :EnableMouse() call.
aura: Reset the size of the icons no every update.
aura: Run a full :SetPoisition when :UpdateAllElements is called without arguments.
changelog: Remove superfluous whitespace.
core: Accidental prints is what happens when you code without coffee.
core: Track enabled elements by name instead of update function.
range: Enable should return true when we enabled.
aura: Move definition of .owner and .isPlayer out of the internal CustomFilter function.
aura: Rename .debuff to .isDebuff.
aura: Expose .filter and .debuff to CustomFilter.
aura: Corretly hide the count display on gap auras.
changelog: Fix indentation fail. :(
aura: Continue where left off when we have to anchor.
aura: Reduce re-anchoring further by not skipping hidden icons.
aura: Move the gap implementation out of the anchoring code.
aura: Re-anchor when the amoun of visibleDebuffs has changed as well.
events: Remove non-core shared unit events from the default list.
totems: Tag PLAYER_TOTEM_UPDATE as shared.
runebar: Tag RUNE_{TYPE,POWER}_UPDATE as shared.
ricons: Tag RAID_TARGET_UPDATE as shared.
resurrect: Tag INCOMING_RESURRECT_CHANGED as shared.
resting: Tag PLAYER_UPDATE_RESTING as shared.
readycheck: Tag READY_CHECK* as shared.
picon: Tag UNIT_PHASE as shared.
masterlooter: Tag PARTY_{MEMBERS,LOOT_METHOD}_CHANGED as shared.
maintank: Tag events as shared.
lfdrole: Tag events as shared.
leader: Tag PARTY_{MEMBERS,LEADER}_CHANGED as shared.
eclipsebar: Tag unitless events as shared.
cpoints: Tag events as shared.
combat: Tag PLAYER_REGEN_{ENABLED,DISABLED} as shared.
assistant: Tag PARTY_MEMBERS_CHANGED as shared.
tags: Change how we expose our internal tables.
events: Add a third argument to :RegisterEvent() to populate the "shard" unit event table.
auras: Re-anchor when gap is enabled and the amount of visible buffs changed.
aura: Re-anchor on auras when gap is enabled, zero buffs and >0 debuffs.
utils: Commit my shortlog -> bbcode generator.
power: Remove divison by zero check and update arguments on ColorGradient.
health: Remove divison by zero check and update arguments on ColorGradient.
druidmana: Remove divison by zero check and update arguments on ColorGradient.
colors: Move division into ColorGradient.
power: Add check to prevent divison by zero.
health: Add check to prevent division by zero.
druidmana: Add check to prevent division by zero.
colors: Remove inf and NaN check from ColorGradient.
castbar: Don't process delay/update events when the castbar isn't shown.
aura: Reduce the amount of needless re-anchoring.
range: Add override function.
runes: Verify the object type before we attempt to apply a texture.
power: Verify the object type before we attempt to apply a texture.
health: Verify the object type before we attempt to apply a texture.
healprediction: Verify the object type before we attempt to apply a texture.
eclipsebar: Verify the object type before we attempt to apply a texture.
druidmana: Verify the object type before we attempt to apply a texture.
castbar: Verify the object type before we attempt to apply a texture.
power: Properly unregister all events on Disable.
health: Remove unnecessary UnregisterEvent for UNIT_POWER.
core: Change the position of where we call :HandleUnit().
portrait: Remove bad indenting.
Change the call order of things in :Spawn() so events are blocked correctly.
Silently block OnUpdate polled frames from registering events.
Tag frames with OnUpdate's as __eventless.
Expose :IsEventRegistered as the frame one won't return the correct information anymore.
Flip the shared event logic and drop the metatable.
Kill the oUF.units table.
Fix bad indenting.
Prevent the ResurrectIcon element from executing on 4.1.
Handle LoD layouts which use the factory correctly.
Expose the r,g,b values to the PostUpdate function.
We require additional events.
Allow the power element to display alternative power as well.
We don't OnUpdate poll anymore, so this check is redundant.
UHF overlap with UH now, so we only have to register one of them \:D/.
Set castbar.casting to nil when getting ready to start a channel. This is to work around edge cases where channels are started before the previous spell cast has been completed.
Bump TOC interface version to 4.1 (40100).
Add a totems element.
Don't assume the call to :UnregisterEvent() is correct when there's only one event handler.
Disable the arena frames through the CVar as well.
Remove everything related to pet happiness.
Use unit instead of value. Consistency change only.
Check if the groupFilter is a string before attempting to match it.
Copy/paste errors. We has them.
Properly set the correct .unit for non-onlyProcessChildren frames as well.
Handle the case where someone has modified the unitsuffix attribute after we have guessed the unit.
Refactor initObject and extend oUFs guessUnit to support maintank and mainassist.
So much fail today.
Fix the default threat icon.
Be consistent and always use 'unit'.
Split the unit handling code from :DisableBlizzard() into :HandleUnit().
Call :SetMinMaxValues() before :SetValue().
Use ForceUpdate so we run the {Pre,Post}Update handlers.
Cool, a print. This is what happens when you don't branch out from master like you should.
Update happiness correctly while using frequentUpdates.
Remove .parent from the buff icons.
Update the player frame slightly less.
Adopt Adirelle's changes, which correct updating of player pet when leaving a vehicle.
Add missing return values from UnitAura.
Don't allow frequentUpdates on frames that have a OnUpdate set.
Revert "Don't think we need to force an OnUpdate on the bossN unitids anymore."
Use UNIT_PET to update vehicles and change the code slightly.
Bump TOC version to 1.6.0.
For now, just expect that it should have a icon.stealable.
We don't have spell ranks anymore.
Use UNIT_HEALTH_FREQUENT instead of OnUpdate polling.


budha (2):
update totems display order: earth - fire - water - air
update runes display order: blood - frost - unholy


zorker (1):
Fixing the male worgen portrait problem. You can now use SetPortraitZoom instead on SetCamera. That new and yet not documented WoW API function got introduces with the new SetDisplayID() functionality in Cataclysm. (Mainly for showing Quest NPC's that you do not have yet in your cache).


42 files changed, 2654 insertions(+), 576 deletions(-)

Changes in 1.5.16:

Trond A Ekseth (3):
Bump TOC interface version to 4.3 (40300).
castbar: Workaround GetNetStats() returning 0 instead of latencies.
Bump TOC version to 1.5.16.


2 files changed, 24 insertions(+), 10 deletions(-)

Changes in 1.5.15:

Trond A Ekseth (4):
core: Accidental prints is what happens when you code without coffee.
core: Track enabled elements by name instead of update function.
range: Enable should return true when we enabled.
Bump TOC version to 1.5.15.


3 files changed, 22 insertions(+), 9 deletions(-)

Changes in 1.5.14:

Trond A Ekseth (15):
druidmana: Remove incorrect indentation.
power: Add check to prevent divison by zero.
health: Add check to prevent division by zero.
druidmana: Add check to prevent division by zero.
colors: Remove inf and NaN check from ColorGradient.
runes: Verify the object type before we attempt to apply a texture.
power: Verify the object type before we attempt to apply a texture.
health: Verify the object type before we attempt to apply a texture.
healprediction: Verify the object type before we attempt to apply a texture.
eclipsebar: Verify the object type before we attempt to apply a texture.
druidmana: Verify the object type before we attempt to apply a texture.
castbar: Verify the object type before we attempt to apply a texture.
Bump TOC version to 1.5.14.
power: Properly unregister all events on Disable.
health: Remove unnecessary UnregisterEvent for UNIT_POWER.


9 files changed, 37 insertions(+), 19 deletions(-)

Changes in 1.5.13:

Califpornia (3):
Renamed .lua file to match the .toc
Cleanup
Initial commit


Ennie (1):
Make changes according to haste's suggestions.


John Ross (4):
better vehicle support
fixed gradient lookup, added check even if unit is in a vehicle
added event to better track when to show and hide bar
follow normal plugin format as well as add add a faster update for form switching


Trond A Ekseth (15):
Change indentation to be more consistent.
Commas are required in Lua.
Fix the tag events for curmana and maxmana.
Add useful information to the post-callback.
Add the missing 'then'.
Remove some old defensive code.
Remove unnecessary global oUF fallback.
Remove unnecessary global oUF fallback.
Split the mana tag into curmana and maxmana to be consistent with curpp and maxpp.
Move the tag into the tag element.
Remove extra newlines.
Change OnPowerUpdate to OnDruidManaUpdate so we can tell the difference.
Clean up the file.
Rename and allow oUF_DruidMana to load.
Bump TOC version to 1.5.13.


6 files changed, 169 insertions(+), 48 deletions(-)

Changes in 1.5.12:

Adirelle (1):
Added a :IsElementEnabled meta ; use it in :EnableElement and :DisableElement to avoid enabling/disabling an element twice.


Adrian L Lange (1):
Add resurrect icon element


Rainrider (1):
don't outsideAlpha units which UnitInRange does not check range for


Trond A Ekseth (11):
Bump TOC version to 1.5.12.
Bump TOC interface version to 4.2 (40200).
Remove dead code.
Remove the 4.1 check.
Only hide the default alt. power bar when we create one for a player unit.
Don't error when we encounter units which aren't in a raid.
Apply a round of sed and some manual style changes.
Add MainTank icon element by Neav.
Fix bad indenting.
Prevent the ResurrectIcon element from executing on 4.1.
Handle LoD layouts which use the factory correctly.


9 files changed, 152 insertions(+), 27 deletions(-)

Changes in 1.5.11:

Trond A Ekseth (9):
Bump TOC version to 1.5.11.
Expose the r,g,b values to the PostUpdate function.
We require additional events.
Allow the power element to display alternative power as well.
More leftover happiness fluff :-(.
Don't need to piggyback no UP anymore, as pets can't be sad.
We don't OnUpdate poll anymore, so this check is redundant.
UHF overlap with UH now, so we only have to register one of them \:D/.
Set castbar.casting to nil when getting ready to start a channel. This is to work around edge cases where channels are started before the previous spell cast has been completed.


5 files changed, 32 insertions(+), 19 deletions(-)

Changes in 1.5.10:

Adirelle (2):
Added arena units to :DisableBlizzard.
Fixed the bug with Clique support that prevented the headers to update properly.


Trond A Ekseth (7):
Bump TOC version to 1.5.10.
Looks like we had leftovers :(.
Nuke pet happiness from orbit.
Bump TOC interface version to 4.1 (40100).
Add a totems element.
Don't assume the call to :UnregisterEvent() is correct when there's only one event handler.
Disable the arena frames through the CVar as well.


11 files changed, 145 insertions(+), 114 deletions(-)

Changes in 1.5.9:

Chris Bannister (1):
Dont use chat latency


Trond A Ekseth (20):
Bump TOC version to 1.5.9.
Disable happiness related stuff on 4.1.
Use unit instead of value. Consistency change only.
Check if the groupFilter is a string before attempting to match it.
Copy/paste errors. We has them.
Properly set the correct .unit for non-onlyProcessChildren frames as well.
Handle the case where someone has modified the unitsuffix attribute after we have guessed the unit.
Refactor initObject and extend oUFs guessUnit to support maintank and mainassist.
So much fail today.
Fix the default threat icon.
Be consistent and always use 'unit'.
Split the unit handling code from :DisableBlizzard() into :HandleUnit().
Call :SetMinMaxValues() before :SetValue().
Use ForceUpdate so we run the {Pre,Post}Update handlers.
Cool, a print. This is what happens when you don't branch out from master like you should.
Update happiness correctly while using frequentUpdates.
Use __owner instead of :GetParent().
UH and UHF doesn't properly overlap, so we have to register the both.
We only need to register one of the main health events as they overlap.
Use UNIT_HEALTH_FREQUENT instead of OnUpdate polling.


14 files changed, 158 insertions(+), 134 deletions(-)

Changes in 1.5.8:

Trond A Ekseth (6):
Bump TOC version to 1.5.8.
Update the player frame slightly less.
Adopt Adirelle's changes, which correct updating of player pet when leaving a vehicle.
Add missing return values from UnitAura.
Don't allow frequentUpdates on frames that have a OnUpdate set.
Revert "Don't think we need to force an OnUpdate on the bossN unitids anymore."


5 files changed, 24 insertions(+), 8 deletions(-)

Changes in 1.5.7:

Trond A Ekseth (2):
Bump TOC version to 1.5.7.
Use UNIT_PET to update vehicles and change the code slightly.


2 files changed, 33 insertions(+), 30 deletions(-)

Changes in 1.5.6:

Chris Bannister (3):
Revert "Add caster"
Incase groupFilter is a number, which it can be
Add caster


Trond A Ekseth (32):
Bump TOC version to 1.5.6.
Drop out of RaidIcon:ForceUpdate() if the frame doesn't have a unit.
Merge the vehicle element into the core and fix a bug with party/raid units in vehicles being chain updated.
Remove double space.
There are four boss frmaes, not three.
The readyCheck events don't use unitids, but send actual player names. Work around this and kill the 4.0.1 support code.
Convert our event handler back to a pure function if we no longer have multiple registrations.
Prevent double registration of the same function.
Use :Hide() instead of an empty function.
Actually, let's just kill the function instead.
One less typo.
Don't think we need to force an OnUpdate on the bossN unitids anymore.
Unregister events on TargetofFocusFrame as well when we disable the FocusFrame.
Unregister events om .powerBarAlt if it exists.
Use the correct update function, and correctly check unit arguments.
We might want to hide the element, and not the entire frame.
Make :ForceUpdate() call the correct function.
Remove some double spaces.
Don't create hidden holes in the aura table.
AltPowerBar should be a good element and use the namespace, and not the global.
Kick out the coloring code and remove the global access to our internal namespace.
Move the event system to its own file as well.
Move disabling of blizzard frames to its own file.
Four more years!
Move the factory fluff to its own file.
Start the 2011 clean-up.
Hide the element on init.
Add the element to the full-update list.
Start on a alternative power bar element.
Add frame wide {Pre,Post}Update.
Fix broken logic.
Fix indenting.


p3lim (2):
Bump the layer to prevent interfering with backdrops
Vehicles still exists while the player has full control


tekkub (1):
That can get racey


21 files changed, 505 insertions(+), 384 deletions(-)

Changes in 1.5.5:

Evilpaul (1):
ensure new power elements display corretly when in-vehicle


Trond A Ekseth (6):
Bump TOC version to 1.5.5.
Register PMC as we can't rely on the secure group header anymore.
Properly hide the RuneFrame so it doesn't repop after exiting a vehicle on CC.
Kill the OnClick handler on the aura icons.
Use obj.onUpdateFrequency to check so we can change the value "on the fly".
Allow layouts to se the OnUpdate frequency through obj.onUpdateFrequency.


8 files changed, 28 insertions(+), 33 deletions(-)

Changes in 1.5.4:

Trond A Ekseth (2):
Bump TOC version to 1.5.4.
Fix the frameref fail.


2 files changed, 2 insertions(+), 2 deletions(-)

Changes in 1.5.3:

Trond A Ekseth (9):
Bump TOC version to 1.5.3.
Always send nil instead of rank and add a note to kill it in 1.6.x.
Allow custom values for fadeTimer and finishedTimer.
Let the raid into the ready check fun.
Extend the guessUnit to support the party pet header as well.
Add a oUF-headerType attribute.
Now with less 7AM coding. :(
Require the event to be correct when validating powerType, so PEW updates and such can get through.
Stricten the register event validation so you can't register events to handlers that don't exist.


5 files changed, 48 insertions(+), 31 deletions(-)

Changes in 1.5.2:

Trond A Ekseth (4):
Bump TOC version to 1.5.2.
Fix the damn ready check icon and work around the bugs caused by RegisterAttributeDriver.
Feed guessUnit to the elements function as well.
Use self.id and not self:GetID().


3 files changed, 84 insertions(+), 15 deletions(-)

Changes in 1.5.1:

Trond A Ekseth (2):
Bump TOC version to 1.5.1.
Damn you XML! (and how vim auto-completes your tags)


2 files changed, 1 insertion(+), 2 deletions(-)

Changes in 1.5:

Evilpaul (28):
addition of EclipseBar element
addition of QuestIcon element
change of power type name
change of power type name
addition of PhaseIcon element
addition of SoulShards element
addition of HolyPower element
Add :ForceUpdate() support
register Path as the update function
use new return values from UnitGroupRolesAssigned
update version
adjust the minmax values on all events to ensure this works for targets
set statusbar minmaxvalues at enable
use the correct health reference
use the new location for maxOverflow
use short name for consistancy
Update to use the new override method
contain both indicator bars under .HealPrediction
make sure something exists before we try to use it
some tidying up
add PreUpdate and PostUpdate functionality
remove hide option
consolidate into 1 update routine
typo in name
typo
initial version of functionality
use a better name
first commit


Trond A Ekseth (123):
Bump TOC version to 1.5.
Replace the not so true comment with typos with a new one.
Add an example template for onlyProcessChildren.
Remove some attributes from the template example.
Change RegisterStateDrive to RegisterAttributeDrive.
A copy/paste error walks into a bar and passes two people...
Set interface version to 40000.
Expose the unit variable so it can be used correctly in oUF-initialConfigFunction.
Set the attributes on the correct frame.
Add self.id to sub-objects.
Use repeat until instaed of while do end.
Simplify the event check in UNIT_POWER.
Fix a leaked global.
Don't assign 'false' to anything.
Use unit instead of self.unit where we can.
Add missing event and make some minor changes to the code.
Make some micro-optimizations to tags.
Add tagfs.overrideUnit to send realUnit as a second argument to the tag function(s).
Always activate vehicle switch on frames by default.
Add *type1 and toggleForVehicle to all frames.
Call :SetAttribute('*type2', 'menu') on single units as well.
Run oUF-initialConfigFunction on all header created frames, as the initial frame needs a sizes as well.
Don't call oUF-initialConfigFunction on frame with oUF-onlyProcessChildren.
Remove support code for initial-* attributes.
Add a third argument to the style function which indicates if the frame was spawned from a header or not.
Use a less generic name on the template.
Remove double newline.
Add support for Clique.
Add a ReadyCheck element which mostly uses Blizzard's functions.
Add missing commas.
Use the correct function for event registration.
Remove double newline.
Remove 3.3.x support code.
Fix the sub-frames to work correctly, and some other stuff.
Don't style the main object spawned by a header if the attribute 'oUF-onlyProcessChildren' is defined.
Access unit through self.__owner in the frequent update function.
It's deficit, not defict.
Switch license back to MIT.
Make party frames work with the latest beta patch.
Actually clean up the generated names.
Remove local.
Allow powerType to be nil so the soul shard element is correctly updated on login.
Allow powerType to be nil so holy power is correctly updated on login.
Allow powerType to be nil so happiness is correctly updated at login.
Use element and not self in ForceUpdate on the happiness element.
Add powerType to the argument list of happiness.
Use element and not self in ForceUpdate on the holy power element.
Correctly set ForceUpdate for Raid Icons.
Add missing function argument.
Add missing :ForceUpdate() function to Happiness.
Check that the powertype is SOUL_SHARDS before updating.
Fix :ForceUpdate().
Check for holy power before updating.
Fix the copy/paste error.
Tail calls!
Fix :ForceUpdate().
Run a round of sed.
Run a round of sed.
Less defensive coding.
Make :ForceUpdate() actually work.
Tail call post update because we can.
Run a round of sed.
Remove the fallback variable and assert.
Load the heal prediction element.
Use UNIT_CONNECTION to refresh [status] and [offline].
Use UNIT_CONNECTION to update connected state.
Register UNIT_CONNECTION on CC to improve disconnected state.
Rename __parent to __owner.
Add :ForceUpdate() to Threat.
Add :ForceUpdate() to Runes.
Add :ForceUpdate() to RaidIcon.
Add :ForceUpdate() to Resting.
Add :ForceUpdate() to PvP.
Remove unit argument from :ForceUpdate().
Remove unit argument from :ForceUpdate().
Remove unit argument from :ForceUpdate().
Add :ForceUpdate() to Portrait.
Add :ForceUpdate() to MasterLooter.
Add :ForceUpdate() to LFDRole.
Add :ForceUpdate() to Leader.
Add :ForceUpdate() to Power.
Add :ForceUpdate() to Health.
Use the correct variable.
Add :ForceUpdate() to Happiness.
Add :ForceUpdate() to CPoints.
Remove unit argument from :ForceUpdate().
Add :ForceUpdate() to Combat.
Fix syntax error.
Add :ForceUpdate() to Castbar.
Remove use of :GetParent().
Add :ForceUpdate() to Auras.
Add :ForceUpdate() to Assistant.
Remove validation of parents and remove :GetParent() usage.
Complain when the health statusbar is incorrectly parentend.
Complain when the power statusbar is incorrectly parented.
Clean up the generated names some.
Change :SpawnHeader() to work on both live and beta.
Remove unnecessary variable check.
Now with two less syntax errors.
Continue to support UNIT_HAPPINESS on live.
Use UNIT_POWER instaed of UNIT_HAPPINESS.
Use UNIT_POWER instaed of UNIT_HAPPINESS.
Use UNIT_POWER and UNIT_MAXPOWER.
Use UNIT_POWER and UNIT_MAXPOWER.
Use UNIT_POWER instead of UNIT_HAPPINESS.
Possible solution to the new initialConfigFunction requirements.
Remove the runeMap code as it currently does nothing.
Update Threat to the new override method.
Update RaidIcon to the new override method.
Update Resting to the new override method.
Update PvP to the new override method.
Update Power to the new override method.
Update Portrait to the new override method.
Update MasterLooter to the new override method.
Update LFDRole to the new override method.
Update Leader to the new override method.
Update Health to the new override method.
Update Happiness to the new override method.
Update CPoints to the new override method.
Update Combat to the new override method.
Update Assistant to the new override method.
Don't check for custom Update functions on elements.
Kill :UpdateElement().


yaroot (1):
Add unitsuffix to the unit.


30 files changed, 1055 insertions(+), 293 deletions(-)

Changes in 1.4.3:

Trond A Ekseth (3):
Bump TOC version to 1.4.3.
Convert SecureButton_GetUnit()'s playerpet return into pet.
Add highlight for stealable buffs.


3 files changed, 24 insertions(+), 1 deletion(-)

Changes in 1.4.2:

Trond A Ekseth (5):
Bump TOC version to 1.4.2.
Remove leftover code from the previous aura system.
Continuation of previous commit.
Prevent Auras from accidently overwriting buffs with debuffs.
Revert "Make aura filters not prematurely break out of the update routine."


2 files changed, 9 insertions(+), 7 deletions(-)

Changes in 1.4.1:

Trond A Ekseth (11):
Bump TOC version to 1.4.1.
Make the suffix matching greedy, so it doesn't match it's own symbol on the prefix.
Correctly remove frequent update references when calling :Untag().
Make aura filters not prematurely break out of the update routine.
Fix the castingbar sheild not showing correctly at times.
Fix invalid type checks.
Now with even less copy/paste fail.
Damn copy paste.
Pop an error if the parent isn't self.
Pop an error if the parent isn't self.
Expose the error function.


7 files changed, 20 insertions(+), 7 deletions(-)

Changes in 1.4:

Adirelle (3):
Have the aura tooltip update itself using .UpdateTooltip callback.
Fully refresh frame on vehicle event even if the modified unit hasn't changed.
Fully refresh frame on vehicle event even if the modified unit hasn't changed.


Adrian L Lange (1):
Add a fallback texture to cpoints if its a texture.


Bastian Hoyer (2):
When Update is called by PARTY_MEMBER_ENABLE the unit parameter is sometimes nil. That caused UnitIsUnit to bug.
elements/combat.lua was missing the header for embedded oUF


Trond A Ekseth (104):
Bump TOC version to 1.4.
Fix the frequent updates OnUpdate cache, so it doesn't create a new updater for every eventless tag.
Fix the drycode errors in the factory system.
Swoosh, one less double newline.
Fix the party condition to not work in raids.
One less typo.
Multitasking is hard :(.
Make the range element use it's own table, instead of iterating over .objects.
Add .IterateStyles().
Add :{Enable,Disable}Factory().
Add :Factory() for delayed spawning of frames.
Properly set the difference between buffs and debuffs again.
Remove text support in CPoints.
Kill the status text and todo list.
Fix the post-calls on the castbar and make the interrruptible ones work even without a CB shield.
Add support for spacing-{x,y} on aura icon position.
Update combo points on PLAYER_TARGET_CHANGED.
Use PLAYER_TARGET_CHANGED on [cpoints] since it fires slightly faster than UNIT_TARGET.
Update [cpoints] to work for vehicles and make it work when it isn't located on the player frame.
Fix [perhp] and [perpp].
Manually merge becc45bccf9805e7c053729ca2e04e38b2d78917, edit and fix errors.
Use UnitIsUnit for the pet check.
Add happiness tag.
Comment out the XML header example.
Needless defensive coding, yay!
Fix broken update logic for unitless events.
Remove a depricated comment.
Add some missing unitless events.
Disable the PlayerFrame first so we can actually register new events on it.
Remove logic leftovers.
Disable the party frames based on the attribute and not visibility.
Possibly work around the "unit stuck as question mark bug".
Correctly unregister UNIT_HEALTH.
Use the party unit now that we have it.
Deprecate initial-* stuff in the metatable.
Remove the alpha trick.
Move some of the variable initialization above the execution of the style function.
Use the GUID instead of the name.
Don't trust the rune duration to match across readiness.
Don't trust the rune duration to match across readiness.
Oh hi, it's 2010.
Print less.
Generate frame names for that aren's assigned one.
Send party/raid as unit to the style function based on the showParty/showRaid attributes.
Move some code around.
Merge :SetManyAttributes into :SpawnHeader (again).
Improve :DisableBlizzard slightly.
Disable the party frames if 'party' is in the visibility list for headers.
Fix syntax error in vehicle.
Fix syntax error in vehicle.
Allow custom states on the headers.
Remove some debug output now that it's been tested.
Simplify the visibility toggle for headers.
Expose self.colors as _COLORS and remove _CLASS_COLORS.
Overhaul most of the tag system.
Allow ColorGradient to exist in the oUF namespace as well.
Move the division by zero check up a bit we can return with less work done.
Remove the function wrapper for some of the simpler tags.
Simplify the pattern.
Unmangle most of the tag functions.
Change the tag syntax to be more robust.
Change :SetManyAttributes() to be 'safer' by making sure the showX attributes are set last.
Revert "Merge :SetManyAttributes into :SpawnHeader so we actually get to set attributes before the state drive shows the header."
Let Blizzard handle updating of PlayerFrame.unit so we don't taint the UI into oblivion.
Don't expose the internal metatable anymore.
Update the arguments on the Post functions.
Add the interruptible shield fluff.
Merge :SetManyAttributes into :SpawnHeader so we actually get to set attributes before the state drive shows the header.
Remove excess arguments in CreateIcon.
Change the rune Update function to update all runes.
Remove un-used variable.
Convert a variable over to a string.
Port the threat element over to the new system.
Split the status element into resting and combat, and port them over to the new system.
Port the raid icon element over to the new standard.
Port the PvP element over to the new standard.
Port the portrait element over to the new standard.
Port the master looter element over to the new standard.
Port the LFD element over to the new standard.
Change the syntax of the LFD element to match the rest of oUF.
Port the party leader element over to the new standard.
Port the happiness element over to the new standard.
Port over the assistant element to the new standard.
Remove cruft from the rune element.
Port over the aura element to the new standard.
Port combo points over to the new standard, and remove the whole cpoints unit crap.
Meh...
Port the castbar element over to the new standard.
Change {Enable,Disable,Update}Element to work with the new way to override update functions.
Port the power element over to the new standard.
Only allow oUF to use oUF as global.
Port the health element over to the new standard.
Add a quick tail call.
Rename PLAYER_ENTERING_WORLD to UpdateAllElements.
Remove oUF.ColorGradient.
Always activate the visibility state drive.
Rename the attributes that toggle visibility as the outcome can conflict with what the layout wants to display.
Fix a typo.
Remove highlight comment.
Complete :SpawnHeader.
Split :Spawn into :Spawn and :SpawnHeader.
Fix a typo.
Update and expose the function used to disable the blizzard unit frames.
Remove 3.2 support code.


freebaser (1):
OCD combat TexCoord


25 files changed, 1104 insertions(+), 892 deletions(-)

Changes in 1.3.28:

Trond A Ekseth (2):
Bump TOC version to 1.3.28.
Let Blizzard handle updating of PlayerFrame.unit so we don't taint the UI into oblivion.


3 files changed, 7 insertions(+), 7 deletions(-)

Changes in 1.3.27:

Adirelle (4):
Simplified vehicle switch again.
Use gsub instead of table lookup to get master units.
Update .realUnit on vehicle switch.
Attempt at simplifying vehicle switching.


Trond A Ekseth (27):
Bump TOC version to 1.3.27.
Don't allow external add-ons to set the global to oUF if oUF is present and loaded.
Use UnitPower instead of UnitMana.
Check the unitsuffix for target as well.
Re-add Adirelle's event check as it prevents double updates.
Change the PEW update to a tail call.
Don't enable the vehicle element on target.
Expose our update function so hidden units get updated on OnShow.
Change syntax style to match the rest of oUF.
Change syntax style to match the rest of oUF.
Remove failspaces.
Always lower the unit variable in :Spawn.
Update the ClassColors code to handle the fact that oUF might now have a global.
Remove most of the local cache of globals.
Move the health color into the health element.
Move the power colors into the power element.
Use the max value for disconnected units.
Fix that tab-completion error...
Use the max value for disconnected units.
Use UnitPower instead of UnitMana.
Fix the copy/paste error for child units on exit.
Make some fixes to the vehicle swapping so it doesn't bug out into oblivion.
Correctly update the Blizzard buff frames unit.
Experimental vehicle support based around toggleForVehicle.
Update the print function.
Kill the boss frames and set a onupdate on the boss object.
Remove redundant check in the OnEvent handler.


6 files changed, 96 insertions(+), 82 deletions(-)

Changes in 1.3.26:

Trond A Ekseth (6):
Bump TOC version to 1.3.26.
Add the missing arguments returned by UnitAura.
Work around the alpha resetting crapness of playermodels.
Use the alternative power color if it's available (and we have no color for that token).
Don't go through the event system to update the power while using frequent updates.
Register the UNIT_HEALTH event on party frames, even if we have frequent updates enabled.


5 files changed, 50 insertions(+), 42 deletions(-)

Changes in 1.3.25:

Hendrik Leppkes (1):
Add LFD Role element to show the current role of your party members in a LFD Dungeon.


Trond A Ekseth (12):
Bumping TOC version to 1.3.25.
Sleep deprivation? Not at all.
Correctly update the runes when they are reset by abilities.
Add 1.4 note.
Missed a tag update point.
Don't use :EnableElement().
Break out of the event UnregisterEvent loop as soon as we've removed the event.
Don't use ipairs where we don't have to.
Properly disable elements that don't have a update function.
Make tags use the color table on the parent and not the one in the oUF global.
Set a statusbar texture if it doesn't exist.
Remove the 3.2 support code.


22 files changed, 113 insertions(+), 313 deletions(-)

Changes in 1.3.24:

Trond A Ekseth (2):
Bumping TOC version to 1.3.24.
Don't have local lookup for colors as people like to swap table references.


2 files changed, 4 insertions(+), 4 deletions(-)

Changes in 1.3.23:

Trond A Ekseth (2):
Bumping TOC version to 1.3.23.
Artificially set the runebar colors at login.


2 files changed, 6 insertions(+), 4 deletions(-)

Changes in 1.3.22:

Hendrik Leppkes (1):
Fix Target of Target Frame for 3.3


Trond A Ekseth (18):
Bumping TOC version to 1.3.22.
Merge Zariel's code with Blizzard's.
Fix a case were sorting auras would result in spacing.
So much for trying to avoid another level of metatables!
Make the ClassColor updater work for embedded oUF versions.
Move frame only functions away from the oUF table.
Use slightly more tail calls.
Add (Pre|Post)UpdatePortrait().
Expose what style the oUF object was created by.
Check perc against itself, because we rely on the fact that NaN can't equal NaN.
Check harder for invalid values in the color gradient function.
Uhm, yes.
Remove the divison by zero check, because... it's moved :D
Translate divison by zeros into 1 in the ColorGradient function.
Yes... Suddenly the 3.3 version works again.
Make it work on 3.2 and 3.3!
Put new addon namespace to good use Conflicts:
Add the event var to some PEW calls.


Zariel (4):
Fix reload getting the color
Fix runebar color
Revert that fix
Fix OnShow not calling PEW correctly


20 files changed, 601 insertions(+), 299 deletions(-)

Changes in 1.3.21:

Trond A Ekseth (3):
Bumping TOC version to 1.3.21.
Correct logic for detecting conversion units and invalid units for children frames.
Add children to the units table as well.


Zariel (1):
Whirly bird of options, up and down with a custom order


3 files changed, 45 insertions(+), 16 deletions(-)

Changes in 1.3.20:

Trond A Ekseth (6):
Bump the TOC version to 1.3.20.
Allow headers to have unitsuffixes of multiple target's target.
Remove support for .runes as it wasn't working in the first place.
Make the event registrator correctly work with tags that contain symbols.
Make some minor changes to Zariel's patch.
Change interupt to interrupt.


Zariel (7):
Sed ftw
Dont capitalize that
Fix consistancy
Fix update
Interupts why?
Remove unsued var
Only update the updated runes colour


5 files changed, 32 insertions(+), 24 deletions(-)

Changes in 1.3.19:

Trond A Ekseth (15):
Bump TOC version to 1.3.19.
Set the OnUpdate on the rune frame, and not the oUF object.
Add a multiplier field to the color on the bar bg.
Break out of the loop early if we need to update.
Add a TODO comment.
Add some comments for Zariel.
Remove unused variables.
Let the layout create the actual bars.
Inject our colors into the table in the core.
Actually use the local we set.
Minor syntax changes.
Remove unused variables.
Only allow colors as arrays.
Properly unregister the runebar events when the element is disabled.
Only allow colors as arrays.


Zariel (4):
Add some usage
Run OnUpdate for each bar
Fix typos and remove uneeded BG setup
Set color at PEW, add comments, clean up


2 files changed, 53 insertions(+), 81 deletions(-)

Changes in 1.3.18:

Trond A Ekseth (1):
Bump TOC version to 1.3.18.


Zariel (2):
Fix min max values
Remove unneeded check


2 files changed, 3 insertions(+), 3 deletions(-)

Changes in 1.3.17:

= (2):
Hide original frame
Runebarlol


Trond A Ekseth (14):
Bump TOC version to 1.3.17.
Update TOC Interface version to 30200.
Add :PreAuraSetPosition(auras, max).
Properly set OnUpdate and OnEvent on headers with playertarget and playerpet units.
Some more indent changes.
Make [missingpp] return nil instead of zero.
Make [missinghp] return nil instead of zero.
Change the indentation on the pre-defined tags.
Change GetDifficultyColor to GetQuestDifficultyColor in the difficulty tag.
No longer escape the escaped!
Add a [defict:name] tag, which I stole from Shadowed.
Use the correct index on the [group] tag.
Might want to actually load it too.
Add an assistant modulem. Based on jyuny1's code.


7 files changed, 329 insertions(+), 38 deletions(-)

Changes in 1.3.16:

Trond A Ekseth (13):
Bump TOC version to 1.3.16.
Drop out early if loot method is set to master, but we aren't actually in a party anymore.
Remove an empty line (not OCD!)
Not enough tails.
[group] tag improvements from Shadowed!
Add a [group] tag.
Slightly less 3AM English.
Work around elements disabling themselves during the update.
That was slightly too strict.
Add a retard check to the element functions.
Use the correct variable to check for the OnUpdate.
Make frequentUpdate on tags run on seperate timers.
Update the license.


6 files changed, 69 insertions(+), 44 deletions(-)

Changes in 1.3.15:

Trond A Ekseth (6):
Bump TOC version to 1.3.15.
Add CancelUnitBuff to auras on player units.
Make tags use the internal colors instead of RAID_CLASS_COLORS.
Add support for !ClassColors.
Remove the unit specific events that aren't needed.
Don't expose the style function on header units.


4 files changed, 37 insertions(+), 17 deletions(-)

Changes in 1.3.14:

Trond A Ekseth (8):
Bump TOC version to 1.3.14.
Add :PostCastStop to the castbar OnUpdate.
Add :PostChannelStop to the castbar OnUpdate.
Make sure that we have a valid reaction return before we try to set it as the health color.
Make sure that we have a valid reaction return before we try to set it as the power color.
Make the cooldown on the aura icons optional.
Fix issues with events not being correctly removed when untagging tags.
Don't create more icons than we actually need on the Auras element.


6 files changed, 42 insertions(+), 20 deletions(-)

Changes in 1.3.13:

Trond A Ekseth (2):
Bump TOC version to 1.3.13.
Quick fix to the border issue introduced in the previous revision.


2 files changed, 5 insertions(+), 1 deletion(-)

Changes in 1.3.12:

Trond A Ekseth (3):
Bump TOC version to 1.3.12.
Always return true if the icon has a name.
Avoid nil calls to the custom aura filter function.


2 files changed, 29 insertions(+), 26 deletions(-)

Changes in 1.3.11:

Trond A Ekseth (2):
Bump TOC version to 1.3.11.
Remove PTR support code and make auras work correctly when onlyShowPlayer is active.


2 files changed, 4 insertions(+), 8 deletions(-)

Changes in 1.3.10:

Trond A Ekseth (2):
Bump TOC version to 1.3.10.
Don't error when the unit isn't on the threat table.


2 files changed, 2 insertions(+), 2 deletions(-)

Changes in 1.3.9:

Hendrik Leppkes (2):
Don't have to run that code all the time, just when unit changes.
Updated vehicle switch to work in combat using the restricted environment


Trond A Ekseth (6):
Bump the TOC version to 1.3.9.
Set interface version to 3.1.
Move stuff around.
Make onlyShowPlayer work as intended on 3.1.
Add :CustomAuraFilter and prepare for 3.1.
Remove the :UpdateTag() function when we Untag a fontstring.


4 files changed, 87 insertions(+), 54 deletions(-)

Changes in 1.3.8:

Hendrik Leppkes (3):
Fix the debuff offset when updating icons in "Auras" mode.
Fix a bug that counted buffs as debuffs and vice versa.
Add "disableCooldown" option to aura element that hides the cooldown spiral if set to true.


Tekkub (1):
Fix the [plus] tag.


Trond A Ekseth (14):
Bump the TOC version to 1.3.8.
Use next in some iterators.
Use the internal table for reaction coloring.
Re-add colors.reaction.
Hopefully the last fix to the portraits.
Happy new year!
Take another stab at the portrait.
Check if the name has changed before we update portraits.
Fix a syntax error.
Replace all the ipairs().
Allow frequentUpdates on tags to set a lower OnUpdate timer.
Add .colorClassPet to Power.
Add .colorClassPet to Health.
Add missing events to the power tags.


8 files changed, 53 insertions(+), 31 deletions(-)

Changes in 1.3.7:

Trond A Ekseth (2):
Bump version to 1.3.7.
Fix syntax error.


2 files changed, 2 insertions(+), 2 deletions(-)

Changes in 1.3.6:

Trond A Ekseth (1):
Bump version to 1.3.6.


evl (1):
Reworked vehicle swapping.


3 files changed, 39 insertions(+), 87 deletions(-)

Changes in 1.3.5:

Trond A Ekseth (6):
Bump version to 1.3.5.
Properly block events without handlers from registering.
Validate that we have a channel before we continue.
Add .isPlayer to the aura icons.
Remove un-used variable.
Allow the castbar to work on eventless units.


4 files changed, 25 insertions(+), 19 deletions(-)

Changes in 1.3.4:

Trond A Ekseth (9):
Bump version to 1.3.4.
Validate that the unit has a vehicle UI before we swap the units.
Strip away raid and party support on vehicles.
Use the correct variables in :PostChannelUpdate.
Use the correct variables in :PostChannelStart.
Use the correct variables in :PostCastDelayed.
Use the correct variables in :PostCastStart.
Move the frequent update flag to the fontstring
Add missing events to some tags.


4 files changed, 40 insertions(+), 45 deletions(-)

Changes in 1.3.3:

Trond A Ekseth (3):
Bump version to 1.3.3
Make the unit swapping work when leaving a vehicle in combat.
Make appends work on tags.


4 files changed, 11 insertions(+), 7 deletions(-)

Changes in 1.3.2:

Trond A Ekseth (45):
Fix [smartlevel].
Seems like we missed one.
Update internal tag references.
Hack to fix the vehicles.
Correctly hide the master loot icon when the player leaves the group.
Make master loot work in raids.
Remove the events we don't need for masterlooter.
Untag the previous tag if people try to double tag.
Fix event registration on tags.
Add .frequentTagUpdates to force OnUpdate polling.
Drop out early if we should in the tags.
Dry-code improvements to masterlooter.
Don't allow nil units on threat.
Force an update to the default auras.
Update comments in tags
Update comments on tags.
Actually print an error on invalid tags.
Make argcheck not error.
Minor clean up and saner variables.
Let's stay at 1.3 for now.
Update comments on tags.
Update documentation on power.
Add some minor castbar documentation.
Update documentation on auras.
Update documentation on auras.
Add missing event to [cpoints].
Slight improvement.
More horrid changes.
Pure madness...
Don't update hidden fontstrings.
Bump the version to 1.3.2
Make the leader icon work on units inside our raid.
Add the missing texcoord.
Call the correct function in status.lua
Clean up the mess that was masterlooter.
Add TOC entry for MasterLooter.
Import p3lims code.
Too tired...
Add fallback texture to Resting and Combat.
Convert player(pet|taget) into (pet|target).
Some mone argument validation.
Add [cpoints].
Correctly set PlayerFrame.unit when entering a vehicle.
Fix syntax error.
Kill the pet casting bar if we spawn a pet unit.


12 files changed, 274 insertions(+), 70 deletions(-)

Changes in 1.3.1:

Tekkub (1):
More fixes for player level


Trond A Ekseth (3):
Bump version to 1.3.1.
Check if we should set :SetAuraPosition or not.
Add missing unit argument in status.


5 files changed, 9 insertions(+), 6 deletions(-)

Changes in 1.3:

Tekkub (1):
Track PLAYER_LEVEL_UP for [level] tag


Trond A Ekseth (35):
Move the vehicle element to it's own file.
Support __unit in tags.
Experimental vehicle swapping.
Remove dupe code.
Revert "Allow unit overriding on tags."
Allow unit overriding on tags.
Create the .__elements table before we run the style function.
Handle UnitName returning nil in the tag system.
Add missing self.
Make sure the safe zone has correct height.
Axe the element system.
Some minor fixes.
Minor changes.
Experimental event changes.
Rename the var for the frame metatable.
:(
Sneaky sneaky!
Clean up auras.
Remove block in auras.
Fix faulty logic.
Added :CustomDelayText() and :CustomTimeText().
Remove icons.onlyShowDuration and add icons.onlyShowPlayer.
Properly nil out the casting state.
Fix a typo.
Bump version to 1.3.
Remove .Name.
Tag system redone.
Remove double call in power.lua.
Remove double call in health.lua.
Add safe zone on channeled spells.
Revert "Don't allow custom raid headers as it just confuses people."
Don't allow custom raid headers as it just confuses people.
Move the HandleUnit check to the correct position.
Bump version to 1.2.2.
Use the new castid.


18 files changed, 763 insertions(+), 385 deletions(-)

Changes in 1.2.1:

Trond A Ekseth (8):
Update the TOC interface version while we're at it.
Possibly the end cpoint solution.
Remove all 3.0 checks.
Handle dtype being an empty string.
Add .Health.colorHealth.
Bump version to 1.2.1.
Removet the variable requirement for model based portraits.
Add fallback texture to threat.


8 files changed, 42 insertions(+), 108 deletions(-)

Changes in 1.2:

Trond A Ekseth (5):
Add fallback textures to the castbar.
Prevent the castbar from hiding itself when targeting a casting unit.
Bump version to 1.2.
Add support for (multiple) suffix units on headers.
Bump version to 1.1.5.


4 files changed, 155 insertions(+), 94 deletions(-)

Changes in 1.1.4:

Trond A Ekseth (3):
Fix castbar spark.
Fix the [sex] tag.
Bump version to 1.1.4.


4 files changed, 4 insertions(+), 4 deletions(-)

Changes in 1.1.3:

Trond A Ekseth (5):
Revert "Fix safe zone."
Revert "And the battle RAGES on!"
Bump version to 1.1.3.
Hide the castbar when we aren't casting.
Add missing comma in castbar code.


3 files changed, 7 insertions(+), 7 deletions(-)

Changes in 1.1.2:

Trond A Ekseth (11):
Make unit reaction work on beta.
Increase version to 1.1.2.
And the battle RAGES on!
Add object :Enable() and :Object() disable.
Fix safe zone.
Should actually work now.
Make sure we set the correct duration when we target a casting unit.
Shorten the name of the tags file.
Remove empty line.
Button smasher friendlyness.
Redo the castbar arithmetics.


7 files changed, 79 insertions(+), 55 deletions(-)

Changes in 1.1.1:

Tekkub (22):
Get rid of the string.sub calls
More tags
Seems party frames don't have a unit on creation, so lets just use the base frame's .unit value
Typo
First batch of converted tags... I'm taking a break
Shove our tables into the oUF object so people can add custom tags easily
Add stupid comment blocks
Fix space compactor
Flesh out event registration
Add taggedstring to XML loader
Remove testey stuffs
Tweak gsubber design, calling string.gsub is so WoW 2.0
Bring in Zariel's tags
Move tagger into modules
Super simple tag parser.  Pulled in the old WatchDog tags.  Doesn't actually do anything yet.
Typo
Allow HP bars to be class-colored for NPCs also
Screw all the fancy shit, we're just gonna do a texture for threat
Hide threat bits on init
Forgot to rename a few vars
Flesh out threat module, totally drycoded
Add threat module placeholder


Trond A Ekseth (31):
Use a shorter path to get the parent.
Use the correct metadata var.
Make sure we use the correct global in taggedstring.
Use the correct object reference.
2006 called, they want their XML back.
The unit can be nil according to blizzards code.
Might want to use the correct local to create a global reference.
Allow parenting oUF.
Rename .safezone to .SafeZone, but retain compat.
Prevent the threat module from loading on 2.4.
Remove check for self.Threat on updates.
Allow power bars to be class-colored for NPCs also.
Minor fix to the docs.
Seems I missed quite a lot of the documentation.
Add a missing entry in the aura docs.
Only show the leader icon for your own party.
Stricter validation of the happiness object.
Stricter validation of the raid icon object.
Use UNIT_MAXMANA instead of UNIT_MANA.
Bump version to 1.1.1.
Add a fallback texture to leader if it is a texture.
Add a fallback texture to raid icons.
Add a fallback texture to happiness.
Add a fallback texture to health.
Add a fallback texture to power.
Add a multiplier to the health background.
Only validate that we have b(lue).
Add a multiplier to the power background.
Only validate that we have b(lue).
The frequent update on power is no longer hardcoded.
Fix a typo.


17 files changed, 407 insertions(+), 44 deletions(-)

Changes in 1.1:

Tekkub (2):
Fix power bar for DKs
Fix bug with UnitAura in wrath


Trond A Ekseth (61):
Fix invalid post call in the castbar code.
Hajnal!
Logic is hard on an empty stomach.
That's what I get for not using auto-completion of words.
Hide the focus frame on wotlk.
Shorten the castbar post functions.
More castbare changes.
Fix file modes.
Make the castingbar variables more consistent.
Make compo points work on wotlk.
Add documentation for range.
Add documentation for health.
Add missing entry in docs.
Change local scoping.
Add documentation for power.
Add documentation for auras.
Allow Auras.filter.
Add an extra sanity check to prevent a possible division by zero.
Experimental fix to the frequent health update issue.
Allow frequent power updates on pets.
Add a event handler for UNIT_MAXRUNIC_POWER.
Check the events before we update it.
Make the OnTargetUpdate report itself as an event.
Renamed bar.colors to bar.smoothGradient.
Added bar.colorDisconnected.
Check if .PvP actually exists.
Add callbacks for updating of tapped units.
Check if .Happiness actually exists.
Add callbacks for happiness updating.
Don't darken the color on the health background.
Don't darken the color on the power background.
The Hopeless Pursuit Of Remission...
Yet another copy paste error.
Fix a copy paste error.
.Power now has most of the .Health color types.
Move tapped color to colors.tapped.
Add .visibleBuffs, .visibleDebuffs and .visibleAuras on the aura elements.
Bump version to 1.1.
Allow the registered layout to only be a function.
Revert "Make the initial-* vars "optional"."
Make the initial-* vars "optional".
Fix the health onupdate.
How colors are used is now changed. Added Health.colorTapping. Added Health.colorHappiness. Added Health.colorClass. Added Health.colorReaction. Added Health.colorSmooth. Added support for WotLK built-in QuickHealth. Added support for WotLK predict power (player only).
Fix error in :UNIT_SPELLCAST_CHANNEL_UPDATE().
Add icons.showDebuffType and icons.showBuffType.
Change the argument order on :OverrideUpdatePower and :PostUpdatePower to be consistent with the oUF event handler.
Change the argument order on :OverrideUpdateHealth and :PostUpdateHealth to be consistent with the oUF event handler.
Add icons.showType as both buffs/debuffs have type in beta.
Make the last last debuff show.
Use UnitAura for .Auras and allow extended WotLK filters.
Make the swirly swirl swirl.
Remove the dupe mapping registers.
Remove unused vars.
Make the aura changes work on live and beta.
Make the power changes work on live and beta.
I fail at using macros.
I fail at using macros.
Fixes issues with spell interruptions on the castbar. (cherry picked from commit 3f13c55cf1d6a19292a26b7e6843413f02f2e530)
Fixes issues with spell interruptions on the castbar. (cherry picked from commit 3f13c55cf1d6a19292a26b7e6843413f02f2e530)
Add credit for the original castbar codebase.
Don't set the color on the statusbar.


evl (1):
Added .Spark to castbar.


10 files changed, 571 insertions(+), 267 deletions(-)

Changes in 1.0.4:

Trond A Ekseth (2):
Bump TOC version to 1.0.4.
Fix error in :UNIT_SPELLCAST_CHANNEL_UPDATE(). (cherry picked from commit 372e0c6b5dd984e5aa33d9b51d6e40ee94cc4db5)


2 files changed, 2 insertions(+), 2 deletions(-)

Changes in 1.0.3:

Trond A Ekseth (4):
I fail at using macros.
Bumping version to 1.0.3.
Fixes issues with spell interruptions on the castbar.
Add credit for the original castbar codebase. (cherry picked from commit 0b4e7a0cf1ea643c441674ad1e9000e1de85e3cf)


2 files changed, 11 insertions(+), 4 deletions(-)

Changes in 1.0.2:

Trond A Ekseth (3):
Bumping version to 1.0.2.
Rename .OnCastBarUpdate to .OnCastbarUpdate for consistency.
Added Castbars. Code by tekkub.


2 files changed, 215 insertions(+), 1 deletion(-)

Changes in 1.0.1:

Trond A Ekseth (3):
Bumping version to 1.0.1
Remove locals so external add-ons can override.
We are stable now. Fetch versions from the TOC.


3 files changed, 2 insertions(+), 16 deletions(-)

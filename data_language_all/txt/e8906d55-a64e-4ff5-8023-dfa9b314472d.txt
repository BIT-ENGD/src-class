1.　字種
1.1　Unicodeコードポイントのグループ分け

Unicodeコードポイントのグループ分けには、Unicodeスクリプト、ブロック、カテゴリ、バイナリ・プロパティがあります。

Unicodeコードポイントのグループ分け特徴
Unicodeスクリプト全てのUnicodeコードポイントは単一のUnicodeスクリプトに割り当てられます。rf. Unicode® Standard Annex #24 UNICODE SCRIPT PROPERTY
Unicodeブロック連続するUnicodeコードポイントの塊。全てのUnicodeブロックはUnicodeコードポイントの下限と上限で定義されます。rf. Character Block Property Data File
Unicodeカテゴリ全てのUnicodeコードポイントは一般カテゴリに割り当てられます。そして、全てのUnicodeコードポイントはサブカテゴリにも割り当てられます。rf. 5.7.1 General Category Values - Unicode® Standard Annex #44 UNICODE CHARACTER DATABASE
Unicodeバイナリ・プロパティUnicodeプロパティのうち、バイナリ型で定義されているものです。そのうちの一部がJavaの正規表現で定義されています。
rf.

Table 9. Property Table - Unicode® Standard Annex #44 UNICODE CHARACTER DATABASE
PropList.txt




1.1.1　Unicodeスクリプト

UnicodeスクリプトはUnicode Standard Annex#24: Script Namesで規定されており、すべてのUnicode文字は、単一のUnicodeスクリプト(Latinなどの特定のスクリプトか、3つの特殊値Common、Inherited、Unknownのいずれか)に割り当てられます。

特殊なスクリプト説明
Common用字をまたがって共通に使うスクリプト
Inherite隣接した文字からスクリプトを受け継ぐスクリプト
Unknown未知のスクリプト


Unicodeスクリプトjava.lang.Character.UnicodeScript
ArabicARABIC
ArmenianARMENIAN
AvestanAVESTAN
BalineseBALINESE
BamumBAMUM
BatakBATAK
BengaliBENGALI
BopomofoBOPOMOFO
BrahmiBRAHMI
BrailleBRAILLE
BugineseBUGINESE
BuhidBUHID
Canadian_AboriginalCANADIAN_ABORIGINAL
CarianCARIAN
ChakmaCHAKMA
ChamCHAM
CherokeeCHEROKEE
CommonCOMMON
CopticCOPTIC
CuneiformCUNEIFORM
CypriotCYPRIOT
CyrillicCYRILLIC
DeseretDESERET
DevanagariDEVANAGARI
Egyptian_HieroglyphsEGYPTIAN_HIEROGLYPHS
EthiopicETHIOPIC
GeorgianGEORGIAN
GlagoliticGLAGOLITIC
GothicGOTHIC
GreekGREEK
GujaratiGUJARATI
GurmukhiGURMUKHI
HanHAN
HangulHANGUL
HanunooHANUNOO
HebrewHEBREW
HiraganaHIRAGANA
Imperial_AramaicIMPERIAL_ARAMAIC
InheritedINHERITED
Inscriptional_PahlaviINSCRIPTIONAL_PAHLAVI
Inscriptional_ParthianINSCRIPTIONAL_PARTHIAN
JavaneseJAVANESE
KaithiKAITHI
KannadaKANNADA
KatakanaKATAKANA
Kayah_LiKAYAH_LI
KharoshthiKHAROSHTHI
KhmerKHMER
LaoLAO
LatinLATIN
LepchaLEPCHA
LimbuLIMBU
Linear_BLINEAR_B
LisuLISU
LycianLYCIAN
LydianLYDIAN
MalayalamMALAYALAM
MandaicMANDAIC
Meetei_MayekMEETEI_MAYEK
Meroitic CursiveMEROITIC_CURSIVE
Meroitic HieroglyphsMEROITIC_HIEROGLYPHS
MiaoMIAO
MongolianMONGOLIAN
MyanmarMyanmar
New_Tai_LueNEW_TAI_LUE
NkoNKO
OghamOGHAM
Ol_ChikiOL_CHIKI
Old_ItalicOLD_ITALIC
Old_PersianOLD_PERSIAN
Old_South_ArabianOLD_SOUTH_ARABIAN
Old_TurkicOLD_TURKIC
OriyaORIYA
OsmanyaOSMANYA
Phags_PaPHAGS_PA
PhoenicianPHOENICIAN
RejangREJANG
RunicRUNIC
SamaritanSAMARITAN
SaurashtraSAURASHTRA
SharadaSHARADA
ShavianSHAVIAN
SinhalaSINHALA
Sora SompengSORA_SOMPENG
SundaneseSUNDANESE
Syloti_NagriSYLOTI_NAGRI
SyriacSYRIAC
TagalogTAGALOG
TagbanwaTAGBANWA
Tai_LeTAI_LE
Tai_ThamTAI_THAM
Tai_VietTAI_VIET
TakriTAKRI
TamilTAMIL
TeluguTELUGU
ThaanaTHAANA
ThaiTHAI
TibetanTIBETAN
TifinaghTIFINAGH
UgariticUGARITIC
UnknownUNKNOWN
VaiVAI
YiYI

scala
  @Test
  def testCharacterUnicodeScriptOf(): Unit = {
    assert(Character.UnicodeScript.of(hiraganaCodePoint) == Character.UnicodeScript.HIRAGANA)
    assert(Character.UnicodeScript.of(katakanaCodePoint) == Character.UnicodeScript.KATAKANA)
    assert(Character.UnicodeScript.of(kanjiCodePoint)    == Character.UnicodeScript.HAN)
    assert(Character.UnicodeScript.of(alphabetCodePoint) == Character.UnicodeScript.LATIN)
    assert(Character.UnicodeScript.of(symbolCodePoint)   == Character.UnicodeScript.COMMON)
  }

1.1.2　Unicodeブロック

全てのUnicodeブロックはUnicodeコードポイントの下限と上限で定義されます。
各Unicodeブロックの下限と上限のUnicodeコードポイントは「Character Block Property Data File」で確認できます。

Unicodeブロックjava.lang.Character.UnicodeBlock
Aegean NumbersAEGEAN_NUMBERS
Alchemical SymbolsALCHEMICAL_SYMBOLS
Alphabetic Presentation FormsALPHABETIC_PRESENTATION_FORMS
Ancient Greek Musical NotationANCIENT_GREEK_MUSICAL_NOTATION
Ancient Greek NumbersANCIENT_GREEK_NUMBERS
Ancient SymbolsANCIENT_SYMBOLS
ArabicARABIC
Arabic Extended-AARABIC_EXTENDED_A
Arabic Mathematical Alphabetic SymbolsARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS
Arabic Presentation Forms-AARABIC_PRESENTATION_FORMS_A
Arabic Presentation Forms-BARABIC_PRESENTATION_FORMS_B
Arabic SupplementARABIC_SUPPLEMENT
ArmenianARMENIAN
ArrowsARROWS
AvestanAVESTAN
BalineseBALINESE
BamumBAMUM
Bamum SupplementBAMUM_SUPPLEMENT
Basic LatinBASIC_LATIN
BatakBATAK
BengaliBENGALI
Block ElementsBLOCK_ELEMENTS
BopomofoBOPOMOFO
Bopomofo ExtendedBOPOMOFO_EXTENDED
Box DrawingBOX_DRAWING
BrahmiBRAHMI
Braille PatternsBRAILLE_PATTERNS
BugineseBUGINESE
BuhidBUHID
Byzantine Musical SymbolsBYZANTINE_MUSICAL_SYMBOLS
CarianCARIAN
ChamCHAM
CherokeeCHEROKEE
CJK CompatibilityCJK_COMPATIBILITY
CJK Compatibility FormsCJK_COMPATIBILITY_FORMS
CJK Compatibility IdeographsCJK_COMPATIBILITY_IDEOGRAPHS
CJK Compatibility Ideographs SupplementCJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT
CJK Radicals SupplementCJK_RADICALS_SUPPLEMENT
CJK StrokesCJK_STROKES
CJK Symbols and PunctuationCJK_SYMBOLS_AND_PUNCTUATION
CJK Unified IdeographsCJK_UNIFIED_IDEOGRAPHS
CJK Unified Ideographs Extension ACJK_UNIFIED_IDEOGRAPHS_EXTENSION_A
CJK Unified Ideographs Extension BCJK_UNIFIED_IDEOGRAPHS_EXTENSION_B
CJK Unified Ideographs Extension CCJK_UNIFIED_IDEOGRAPHS_EXTENSION_C
CJK Unified Ideographs Extension DCJK_UNIFIED_IDEOGRAPHS_EXTENSION_D
Combining Diacritical MarksCOMBINING_DIACRITICAL_MARKS
Combining Diacritical Marks SupplementCOMBINING_DIACRITICAL_MARKS_SUPPLEMENT
Combining Half MarksCOMBINING_HALF_MARKS
Combining Diacritical Marks for SymbolsCOMBINING_MARKS_FOR_SYMBOLS
Common Indic Number FormsCOMMON_INDIC_NUMBER_FORMS
Control PicturesCONTROL_PICTURES
CopticCOPTIC
Counting Rod NumeralsCOUNTING_ROD_NUMERALS
CuneiformCUNEIFORM
Cuneiform Numbers and PunctuationCUNEIFORM_NUMBERS_AND_PUNCTUATION
Currency SymbolsCURRENCY_SYMBOLS
Cypriot SyllabaryCYPRIOT_SYLLABARY
CyrillicCYRILLIC
Cyrillic Extended-ACYRILLIC_EXTENDED_A
Cyrillic Extended-BCYRILLIC_EXTENDED_B
Cyrillic SupplementaryCYRILLIC_SUPPLEMENTARY
DeseretDESERET
DevanagariDEVANAGARI
Devanagari ExtendedDEVANAGARI_EXTENDED
DingbatsDINGBATS
Domino TilesDOMINO_TILES
Egyptian HieroglyphsEGYPTIAN_HIEROGLYPHS
EmoticonsEMOTICONS
Enclosed Alphanumeric SupplementENCLOSED_ALPHANUMERIC_SUPPLEMENT
Enclosed AlphanumericsENCLOSED_ALPHANUMERICS
Enclosed CJK Letters and MonthsENCLOSED_CJK_LETTERS_AND_MONTHS
Enclosed Ideographic SupplementENCLOSED_IDEOGRAPHIC_SUPPLEMENT
EthiopicETHIOPIC
Ethiopic ExtendedETHIOPIC_EXTENDED
Ethiopic Extended-AETHIOPIC_EXTENDED_A
Ethiopic SupplementETHIOPIC_SUPPLEMENT
General PunctuationGENERAL_PUNCTUATION
Geometric ShapesGEOMETRIC_SHAPES
GeorgianGEORGIAN
Georgian SupplementGEORGIAN_SUPPLEMENT
GlagoliticGLAGOLITIC
GothicGOTHIC
Greek and CopticGREEK
Greek ExtendedGREEK_EXTENDED
GujaratiGUJARATI
GurmukhiGURMUKHI
Halfwidth and Fullwidth FormsHALFWIDTH_AND_FULLWIDTH_FORMS
Hangul Compatibility JamoHANGUL_COMPATIBILITY_JAMO
Hangul JamoHANGUL_JAMO
Hangul Jamo Extended-AHANGUL_JAMO_EXTENDED_A
Hangul Jamo Extended-BHANGUL_JAMO_EXTENDED_B
Hangul SyllablesHANGUL_SYLLABLES
HanunooHANUNOO
HebrewHEBREW
HiraganaHIRAGANA
Ideographic Description CharactersIDEOGRAPHIC_DESCRIPTION_CHARACTERS
Imperial AramaicIMPERIAL_ARAMAIC
Inscriptional PahlaviINSCRIPTIONAL_PAHLAVI
Inscriptional ParthianINSCRIPTIONAL_PARTHIAN
IPA ExtensionsIPA_EXTENSIONS
JavaneseJAVANESE
KaithiKAITHI
Kana SupplementKANA_SUPPLEMENT
KanbunKANBUN
Kangxi RadicalsKANGXI_RADICALS
KannadaKANNADA
KatakanaKATAKANA
Katakana Phonetic ExtensionsKATAKANA_PHONETIC_EXTENSIONS
Kayah LiKAYAH_LI
KharoshthiKHAROSHTHI
KhmerKHMER
Khmer SymbolsKHMER_SYMBOLS
LaoLAO
Latin-1 SupplementLATIN_1_SUPPLEMENT
Latin Extended-ALATIN_EXTENDED_A
Latin Extended AdditionalLATIN_EXTENDED_ADDITIONAL
Latin Extended-BLATIN_EXTENDED_B
Latin Extended-CLATIN_EXTENDED_C
Latin Extended-DLATIN_EXTENDED_D
LepchaLEPCHA
Letterlike SymbolsLETTERLIKE_SYMBOLS
LimbuLIMBU
Linear B IdeogramsLINEAR_B_IDEOGRAMS
Linear B SyllabaryLINEAR_B_SYLLABARY
LisuLISU
LycianLYCIAN
LydianLYDIAN
Mahjong TilesMAHJONG_TILES
MalayalamMALAYALAM
MandaicMANDAIC
Mathematical Alphanumeric SymbolsMATHEMATICAL_ALPHANUMERIC_SYMBOLS
Mathematical OperatorsMATHEMATICAL_OPERATORS
Meetei MayekMEETEI_MAYEK
Meetei Mayek ExtensionsMEETEI_MAYEK_EXTENSIONS
Meroitic CursiveMEROITIC_CURSIVE
Meroitic HieroglyphsMEROITIC_HIEROGLYPHS
MiaoMIAO
Miscellaneous Mathematical Symbols-AMISCELLANEOUS_MATHEMATICAL_SYMBOLS_A
Miscellaneous Mathematical Symbols-BMISCELLANEOUS_MATHEMATICAL_SYMBOLS_B
Miscellaneous SymbolsMISCELLANEOUS_SYMBOLS
Miscellaneous Symbols and ArrowsMISCELLANEOUS_SYMBOLS_AND_ARROWS
Miscellaneous Symbols And PictographsMISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS
Miscellaneous TechnicalMISCELLANEOUS_TECHNICAL
Modifier Tone LettersMODIFIER_TONE_LETTERS
MongolianMONGOLIAN
Musical SymbolsMUSICAL_SYMBOLS
MyanmarMYANMAR
Myanmar Extended-AMYANMAR_EXTENDED_A
New Tai LueNEW_TAI_LUE
NKoNKO
Number FormsNUMBER_FORMS
OghamOGHAM
Ol ChikiOL_CHIKI
Old ItalicOLD_ITALIC
Old PersianOLD_PERSIAN
Old South ArabianOLD_SOUTH_ARABIAN
Old TurkicOLD_TURKIC
Optical Character RecognitionOPTICAL_CHARACTER_RECOGNITION
OriyaORIYA
OsmanyaOSMANYA
Phags-paPHAGS_PA
Phaistos DiscPHAISTOS_DISC
PhoenicianPHOENICIAN
Phonetic ExtensionsPHONETIC_EXTENSIONS
Phonetic Extensions SupplementPHONETIC_EXTENSIONS_SUPPLEMENT
Playing CardsPLAYING_CARDS
Private Use AreaPRIVATE_USE_AREA
RejangREJANG
Rumi Numeral SymbolsRUMI_NUMERAL_SYMBOLS
RunicRUNIC
SamaritanSAMARITAN
SaurashtraSAURASHTRA
SharadaSHARADA
ShavianSHAVIAN
SinhalaSINHALA
Small Form VariantsSMALL_FORM_VARIANTS
Sora SompengSORA_SOMPENG
Spacing Modifier LettersSPACING_MODIFIER_LETTERS
SpecialsSPECIALS
SundaneseSUNDANESE
Sundanese SupplementSUNDANESE_SUPPLEMENT
Superscripts and SubscriptsSUPERSCRIPTS_AND_SUBSCRIPTS
Supplemental Arrows-ASUPPLEMENTAL_ARROWS_A
Supplemental Arrows-BSUPPLEMENTAL_ARROWS_B
Supplemental Mathematical OperatorsSUPPLEMENTAL_MATHEMATICAL_OPERATORS
Supplemental PunctuationSUPPLEMENTAL_PUNCTUATION
Supplementary Private Use Area-ASUPPLEMENTARY_PRIVATE_USE_AREA_A
Supplementary Private Use Area-BSUPPLEMENTARY_PRIVATE_USE_AREA_B
Syloti NagriSYLOTI_NAGRI
SyriacSYRIAC
TagalogTAGALOG
TagbanwaTAGBANWA
TagsTAGS
Tai LeTAI_LE
Tai ThamTAI_THAM
Tai VietTAI_VIET
Tai Xuan Jing SymbolsTAI_XUAN_JING_SYMBOLS
TakriTAKRI
TamilTAMIL
TeluguTELUGU
ThaanaTHAANA
ThaiTHAI
TibetanTIBETAN
TifinaghTIFINAGH
Transport And Map SymbolsTRANSPORT_AND_MAP_SYMBOLS
UgariticUGARITIC
Unified Canadian Aboriginal SyllabicsUNIFIED_CANADIAN_ABORIGINAL_SYLLABICS
Unified Canadian Aboriginal Syllabics ExtendedUNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED
VaiVAI
Variation SelectorsVARIATION_SELECTORS
Variation Selectors SupplementVARIATION_SELECTORS_SUPPLEMENT
Vedic ExtensionsVEDIC_EXTENSIONS
Vertical FormsVERTICAL_FORMS
Yi RadicalsYI_RADICALS
Yi SyllablesYI_SYLLABLES
Yijing Hexagram SymbolsYIJING_HEXAGRAM_SYMBOLS



1.1.3　Unicodeカテゴリ

全てのUnicodeコードポイントは一般カテゴリに割り当てられます。そして、全てのUnicodeコードポイントはサブカテゴリにも割り当てられます。rf. 5.7.1 General Category Values - Unicode® Standard Annex #44 UNICODE CHARACTER DATABASE
一般カテゴリ

Unicodeカテゴリ説明サブカテゴリ
Cその他 (Other)Cc | Cf | Cs | Co | Cn
Lアルファベット (Letter)Lu | Ll | Lt | Lm | Lo
LCcase付きアルファベット（Cased Letter）Lu | Ll | Lt
M記号 (Mark)Mn | Mc | Me
N数字 (Number)Nd | Nl | No
P句読記号 (Punctuation)Pc | Pd | Ps | Pe | Pi | Pf | Po
S記号 (Symbol)Sm | Sc | Sk | So
Z区切り文字 (Separator)Zs | Zl | Zp

サブカテゴリ

Unicodeカテゴリ説明java.lang.Character
CcC0/C1制御文字 (Control）CONTROL
Cf非可視整形用文字 (Format)FORMAT
Cn未定義コードポイント (Unassigned)UNASSIGNED
Co私的利用領域 (Private use)PRIVATE_USE
Csサロゲート (Surrogate)SURROGATE
Ll小文字アルファベット (Lower case letter)LOWERCASE_LETTER
Lm擬似文字 (Modifier letter)MODIFIER_LETTER
Loその他の文字 (Other letter)OTHER_LETTER
Ltタイトル文字 (Title case letter)TITLECASE_LETTER
Lu大文字アルファベット (Upper case letter)UPPERCASE_LETTER
Mc修飾文字 (Spacing mark)COMBINING_SPACING_MARK
Me他の文字を囲むための文字 (Enclosing mark)ENCLOSING_MARK
Mn他の文字を修飾するための文字 (Non-spacing mark)NON_SPACING_MARK
Nd10 進数字 (Decimal number)DECIMAL_DIGIT_NUMBER
Nl数値を表す文字 (Letter number)LETTER_NUMBER
Noその他の数字 (Other number)OTHER_NUMBER
Pd連結用句読記号 (Connector punctuation)DASH_PUNCTUATION
Pcダッシュ (Dash punctuation)CONNECTOR_PUNCTUATION
Pe閉じ句読記号 (Close punctuation)END_PUNCTUATION
Pf末尾句読記号 (Final punctuation)FINAL_QUOTE_PUNCTUATION
Pi先頭句読記号 (Initial punctuation)INITIAL_QUOTE_PUNCTUATION
Poその他の句読記号 (Other punctuation)OTHER_PUNCTUATION
Ps開き句読記号 (Open punctuation)START_PUNCTUATION
Sc通貨記号 (Currency symbol)CURRENCY_SYMBOL
Sk合わせ文字 (Modifier symbol)MODIFIER_SYMBOL
Sm数学記号 (Mathematical symbol)MATH_SYMBOL
Soその他の記号 (Other symbol)OTHER_SYMBOL
Zl行区切り文字 (Line separator)、U+2028のみLINE_SEPARATOR
Zp段落区切り文字 (Paragraph separator)、U+2029のみPARAGRAPH_SEPARATOR
Zs空白文字 (Space separator)SPACE_SEPARATOR


任意のCharやコードポイントからUnicodeカテゴリを取得するには、Character.getTypeメソッドを使用します。

1.1.4　Unicodeバイナリ・プロパティ

Unicodeプロパティのうち、バイナリ型で定義されているものです。そのうち下記のものがJavaの正規表現で定義されています。

Unicodeバイナリ・プロパティ説明
Alphabeticアルファベット
Ideographic表意文字（漢字など）
Letter文字
Lowercaselower caseの文字
Uppercaseupper caseの文字
Titlecasetitle caseの文字
Punctuation句読点
Control制御文字
White_Space空白文字
Digit数字
Hex_Digit16進数での数字
Join_Control結合制御文字
Noncharacter_Code_Point文字ではないコードポイント
Assigned割り当てられた文字


1.2　java.lang.Characterクラスによる文字の字種情報の取得

java.lang.CharacterクラスのメソッドgetName、getType、getDirectionalityにより文字の字種情報を取得します。
1.2.1　Character.getName

Character.getNameメソッドは、コードポイントがunassignedの場合はnull、それ以外は次の結果を返します。
java
Character.UnicodeBlock.of(codePoint).toString().replace('_', ' ') + " " + Integer.toHexString(codePoint).toUpperCase(Locale.ENGLISH);


1.2.2　Character.getType

Character.getTypeメソッドはCharやコードポイントに対してUnicodeカテゴリを返します。


1.2.3　Character.getDirectionality

Character.getDirectionalityは文字の方向性（双方向文字タイプ）を取得するために使用します。文字の方向性というのは、例えば、日本語の文字は「左から右に表示する」といった情報のことです。
rf. 5.7.2 Bidirectional Class Values - Unicode® Standard Annex #44 UNICODE CHARACTER DATABASE

双方向文字タイプjava.lang.Character
AN弱い双方向文字タイプDIRECTIONALITY_ARABIC_NUMBER
BN弱い双方向文字タイプDIRECTIONALITY_BOUNDARY_NEUTRAL
CS弱い双方向文字タイプDIRECTIONALITY_COMMON_NUMBER_SEPARATOR
EN弱い双方向文字タイプDIRECTIONALITY_EUROPEAN_NUMBER
ES弱い双方向文字タイプDIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR
ET弱い双方向文字タイプDIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR
L強力な双方向文字タイプDIRECTIONALITY_LEFT_TO_RIGHT
LRE強力な双方向文字タイプ（U+202A）DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING
LRO強力な双方向文字タイプ（U+202D）DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE
NSM弱い双方向文字タイプDIRECTIONALITY_NONSPACING_MARK
ONニュートラルな双方向文字タイプDIRECTIONALITY_OTHER_NEUTRALS
Bニュートラルな双方向文字タイプDIRECTIONALITY_PARAGRAPH_SEPARATOR
PDF弱い双方向文字タイプ（U+202C）DIRECTIONALITY_POP_DIRECTIONAL_FORMAT
R強力な双方向文字タイプDIRECTIONALITY_RIGHT_TO_LEFT
AL強力な双方向文字タイプDIRECTIONALITY_RIGHT_TO_LEFT_ARABIC
RLE強力な双方向文字タイプ（U+202B）DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING
RLO強力な双方向文字タイプ（U+202E）DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE
Sニュートラルな双方向文字タイプDIRECTIONALITY_SEGMENT_SEPARATOR
 未定義の双方向文字タイプDIRECTIONALITY_UNDEFINED
WSニュートラルな双方向文字タイプDIRECTIONALITY_WHITESPACE



1.3　java.lang.Characterクラスによる文字の字種判定

Characterクラスのメソッドで字種の判定を行います。引数はCharでもコードポイント（Int）でも可です。ただし引数がCharだとCharにはBMP領域の文字しか格納できないので、補助文字は判定できません。

java.lang.Characterの字種判定メソッド説明
isDefinedUnicodeで定義されている。
isDigit半角数字・全角数字などの数字である。「〇」以外の漢数字は数字として判定されない。（Character.getType(codePoint)がDECIMAL_DIGIT_NUMBERである。）
isLetter汎用文字である。（Character.getType(codePoint)がUPPERCASE_LETER, LOWERCASE_LETTER, TITLECASE_LETTER, MODIFIER_LETTER, OTHER_LETTERのいずれかである。）
isLetterOrDigitCharacter.isLetterまたはCharacter.isDigit
isLowerCase小文字である。Character.getType(codePoint)がLOWERCASE_LETTERであるか、Unicode標準で規定された寄与プロパティOther_Lowercaseを持つ。
isTitleCaseタイトルケース文字である。Character.getType(codePoint)がTITLECASE_LETTERである。
isUpperCase大文字である。Character.getType(codePoint)がUPPERCASE_LETTERであるか、Unicode標準で規定された寄与プロパティOther_Uppercaseを持つ。
isSpaceCharUnicode標準の空白文字である。Character.getType(codePoint)がSPACE_SEPARATOR, LINE_SEPARATOR, PARAGRAPH_SEPARATORのいずれかである。
isWhiteSpace空白文字である。次のいずれかを満たす場合、空白文字とみなされます。

Unicode の空白文字 (SPACE_SEPARATOR、LINE_SEPARATOR、または PARAGRAPH_SEPARATOR) であるが、改行なしの空白 ('\u00A0'、'\u2007'、'\u202F') ではない。
'\t' (U+0009 水平タブ) である
'\n' (U+000A 改行) である。
'\u000B' (U+000B 垂直タブ) である
'\f' (U+000C フォームフィード) である。
'\r' (U+000D 復帰) である。
'\u001C' (U+001C ファイル区切り文字) である。
'\u001D' (U+001D グループ区切り文字) である。
'\u001E' (U+001E レコード区切り文字) である。
'\u001F' (U+001F 単位区切り文字) である。


isMirroredUnicode 仕様に従って、指定された文字 (Unicode コードポイント) をミラー化するかどうかを判定します。テキスト内で右から左に文字が描画される場合、文字のミラー化により、グリフが水平方向にミラー化されます。たとえば、'\u0028' LEFT PARENTHESIS は、セマンティクスでは開き括弧として定義されています。これは、左から右に描画されるテキストでは「(」になり、右から左に描画されるテキストでは「)」になります。
isISOControl参照された文字 (Unicode コードポイント) が ISO 制御文字かどうかを判定します。コードが '\u0000' - '\u001F' の範囲、または '\u007F' - '\u009F' の範囲の場合は、ISO 制御文字と見なされます。
isIdentifierIgnorable指定された文字 (Unicode コードポイント) が、Java 識別子または Unicode 識別子内で無視可能な文字かどうかを判定します。次の Unicode 文字は、Java 識別子や Unicode 識別子内で無視できます。
空白以外の ISO 制御文字

'\u0000' - '\u0008'
'\u000E' - '\u001B'
'\u007F' - '\u009F'

Character.getType(codePoint)がFORMATであるすべての文字


isUnicodeIdentifierStart指定された文字 (Unicode コードポイント) を Unicode 識別子の最初の文字として指定可能かどうかを判定します。次の条件のどれかに当てはまる場合にだけ、その文字を Unicode 識別子の最初に指定できます。

Character.isLetter(codePoint) が true を返す。
Character.getType(codePoint) が LETTER_NUMBER を返す。


isUnicodeIdentifierPart指定された文字 (Unicode コードポイント) を Unicode 識別子の最初の文字以外に使用可能かどうかを判定します。次の文のどれかに当てはまる場合にだけ、その文字を Unicode 識別子の一部に使用できます。

汎用文字である
連結句読点文字である ('_' など)
数字である
数値汎用文字である (ローマ数字文字など)
連結マークである
非スペーシングマークである
この文字の Character.isIdentifierIgnorable が true を返す。


isJavaIdentifierStart
文字 (Unicode コードポイント) を Java 識別子の最初の文字として指定可能かどうかを判定します。次の条件のどれかに当てはまる場合にだけ、その文字を Java 識別子の最初に指定できます。

Character.isLetter(codePoint) が次を返す: true
Character.getType(codePoint) が次を返す: LETTER_NUMBER
参照される文字が通貨記号である ('$' など)
参照文字が連結句読点文字である ('_' など)


isJavaIdentifierPart文字 (Unicode コードポイント) を Java 識別子の最初の文字以外に使用可能かどうかを判定します。次のどれかに当てはまる場合にだけ、その文字を Java 識別子の一部に指定できます。

汎用文字である
通貨記号である ('$' など)
連結句読点文字である ('_' など)
数字である
数値汎用文字である (ローマ数字文字など)
連結マークである
非スペーシングマークである
文字の Character.isIdentifierIgnorable(codePoint) が true を返す。




1.4　正規表現の字種によるマッチング

正規表現には字種に関したマッチングを行うために、POSIX文字クラスや定義済み文字クラス（Unicodeスクリプト、ブロック、カテゴリ、バイナリ・プロパティなど）が用意されています。
1.4.1　POSIX文字クラス(US-ASCIIのみ)

POSIX（Portable Operating System Interface）標準に従う文字クラスにすべてのASCII文字を表すASCII文字クラスが追加されています。
rf. 9.3.5 RE Bracket Expression - The Open Group Base Specifications Issue 7 IEEE Std 1003.1™, 2013 Edition

クラスマッチ
\p{Lower}小文字の英字[a-z]
\p{Upper}大文字の英字[A-Z]
\p{ASCII}すべてのASCII文字[\x00-\x7F]
\p{Alpha}英字[\p{Lower}\p{Upper}]
\p{Digit}10 進数字[0-9]
\p{Alnum}英数字[\p{Alpha}\p{Digit}]
\p{Punct}句読文字!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~のうちのひとつ
\p{Graph}表示できる文字[\p{Alnum}\p{Punct}]
\p{Print}プリント可能文字[\p{Graph}\x20]
\p{Blank}空白またはタブ[\t]
\p{Cntrl}制御文字[\x00-\x1F\x7F]
\p{XDigit}16進数字[0-9a-fA-F]
\p{Space}空白文字[\t\n\x0B\f\r]


1.4.2　java.lang.Characterクラス(単純なJava文字タイプ)


クラスマッチ
\p{javaLowerCase}java.lang.Character.isLowerCase()と等価
\p{javaUpperCase}java.lang.Character.isUpperCase()と等価
\p{javaWhitespace}java.lang.Character.isWhitespace()と等価
\p{javaMirrored}java.lang.Character.isMirrored()と等価


1.4.3　Unicodeスクリプト、ブロック、カテゴリ、バイナリ・プロパティのクラス

Unicodeブロックには接頭辞"In"、バイナリ・プロパティには接頭辞"Is"をつけることで定義済み文字クラスとして正規表現で記述できます。

クラスマッチ
\p{IsLatin}Latin 書体文字(スクリプト)
\p{InGreek}Greek ブロックの文字(ブロック)
\p{Lu}大文字(カテゴリ)
\p{IsAlphabetic}英字(バイナリ・プロパティ)
\p{Sc}通貨記号(カテゴリ)
\P{InGreek}ギリシャ語ブロック以外の文字(否定)
[\p{L}&&[^\p{Lu}]]大文字以外の文字(減算)


1.4.4　POSIX文字クラスと定義済の文字クラスの互換性

POSIX文字クラスと定義済の文字クラスは、UNICODE_CHARACTER_CLASSフラグが指定されている場合、Unicode正規表現の付録C: 互換性プロパティの勧告に適合しています。

クラスマッチ
\p{Lower}小文字\p{IsLowercase}
\p{Upper}大文字\p{IsUppercase}
\p{ASCII}すべてのASCII文字[\x00-\x7F]
\p{Alpha}英字\p{IsAlphabetic}
\p{Digit}10進数字\p{IsDigit}
\p{Alnum}英数字[\p{IsAlphabetic}\p{IsDigit}]
\p{Punct}句読点文字\p{IsPunctuation}
\p{Graph}表示できる文字[^\p{IsWhite_Space}\p{gc=Cc}\p{gc=Cs}\p{gc=Cn}]
\p{Print}プリント可能文字[\p{Graph}\p{Blank}&&[^\p{Cntrl}]]
\p{Blank}空白またはタブ[\p{IsWhite_Space}&&[^\p{gc=Zl}\p{gc=Zp}\x0a\x0b\x0c\x0d\x85]]
\p{Cntrl}制御文字\p{gc=Cc}
\p{XDigit}16進数字[\p{gc=Nd}\p{IsHex_Digit}]
\p{Space}空白文字\p{IsWhite_Space}
\d数字\p{IsDigit}
\D数字以外[^\d]
\s空白文字\p{IsWhite_Space}
\S非空白文字[^\s]
\w単語構成文字[\p{Alpha}\p{gc=Mn}\p{gc=Me}\p{gc=Mc}\p{Digit}\p{gc=Pc}\p{IsJoin_Control}]
\W非単語文字[^\w]


1.4.5　日本語の字種のマッチング


ひらがな

正規表現説明範囲
\p{Hiragana}ひらがな（Unicodeスクリプト）[U+3040, U+309F]
\p{InHiragana}ひらがな（Unicodeブロック）[U+3040, U+309F]
\p{InKanaSupplement}歴史的仮名（衣と江の仮名文字が0x1B000と0x1B001に対応）（Unicodeブロック）[U+1B000, U+1B0FF]

カタカナ

正規表現説明範囲
\p{Katakana}カタカナ（Unicodeスクリプト）[U+30A0, U+30FF]
\p{InKatakana}カタカナ（Unicodeブロック）[U+30A0, U+30FF]
\p{InKatakanaPhoneticExtensions}アイヌ語などの翻字に使用する小書カタカナ（Unicodeブロック）[U+31F0, U+31FF]

ローマ字

正規表現説明範囲
\p{Upper}大文字（POSIX文字クラス）[U+0041, U+005A]
\p{IsUppercase}大文字（Unicodeスクリプト）[U+0041, U+005A]
A-Z大文字[U+0041, U+005A]
\p{Lower}小文字（POSIX文字クラス）[U+0061, U+007A]
\p{IsLowercase}小文字（Unicodeスクリプト）[U+0061, U+007A]
a-z小文字[U+0061, U+007A]

アラビア数字

正規表現説明範囲
\d10進数字[U+0030, U+0039]
\p{Digit}10進数字（POSIX文字クラス）[U+0030, U+0039]
\p{IsDigit}10進数字（Unicodeスクリプト）[U+0030, U+0039]
0-910進数字[U+0030, U+0039]

漢字

正規表現説明範囲
\p{script=Han}漢字（Unicodeスクリプト）\p{script=Han}（Unicode Utilities: UnicodeSet）
\p{InCJKCompatibilityIdeographs}CJK互換漢字（Unicodeブロック）[U+F900, U+FAFF]
\p{InCJKCompatibilityIdeographs Supplement}CJK互換漢字補助（Unicodeブロック）[U+2F800, U+2FA1D]
\p{InCJKRadicalsSupplement}CJK部首補助（Unicodeブロック）[U+2E80, U+2EFF]
\p{InCJKStrokes}CJKの筆画（Unicodeブロック）[U+31C0, U+31EF]
\p{InCJKSymbolsAndPunctuation}CJK記号と句読点（Unicodeブロック）[U+3000, U+303F]
\p{InCJKUnifiedIdeographs}CJK統合漢字（Unicodeブロック）[U+4E00, U+9FFF]
\p{InCJKUnifiedIdeographsExtensionA}CJK統合漢字拡張A（Unicodeブロック）[U+3400, U+4DBF]
\p{InCJKUnifiedIdeographsExtensionB}CJK統合漢字拡張B（Unicodeブロック）[U+20000, U+2A6DF]
\p{InCJKUnifiedIdeographsExtensionC}CJK統合漢字拡張C（Unicodeブロック）[U+2A700, U+2B73F]
\p{InCJKUnifiedIdeographsExtensionD}CJK統合漢字拡張D（Unicodeブロック）[U+2B740, U+2B81F]
\p{InIdeographicDescriptionCharacters}漢字構成記述文字（Unicodeブロック）[U+2FF0, U+2FFF]
\p{InKanbun}漢文の返り点（Unicodeブロック）[U+3190, U+319F]
\uFA0E-\uFA2Dカナダ漢字（IBM拡張文字）[U+FA0E, U+FA2D]
\uFA2E\uFA2Fこれらの字と0x9FCCはUnicode6.1から追加[U+FA2E, U+FA2F]
\uFA30-\uFA6A康煕別掲字（こうきべっけいじ）・人名許容体[U+FA30, U+FA6A]
\uFA6B-\uFA6DARIB外字（日本のデータ放送用）[U+FA6B, U+FA6D]


1.4.6　主に日本語フォントで用いられる漢字の定義とマッチング


変数・メソッド説明


regex正規表現を返す。


patternPatternクラスを返す。


isDefined文字（Charかコードポイント）を与えると漢字として定義されているかを返す。


notDefinedisDefinedの否定を返す。



次の漢字データに関するREADME


漢字集合クラスデータ


常用漢字JoyoKanjiCharacterjoyo_kanji.csv


教育漢字（小学１〜６年生）PrimarySchoolKanjiCharacter 


教育漢字（小学１年生）PrimarySchool1stGradeKanjiCharacterprimary_school_1st_grade.csv


教育漢字（小学２年生）PrimarySchool2ndGradeKanjiCharacterprimary_school_2nd_grade.csv


教育漢字（小学３年生）PrimarySchool3rdGradeKanjiCharacterprimary_school_3rd_grade.csv


教育漢字（小学４年生）PrimarySchool4thGradeKanjiCharacterprimary_school_4th_grade.csv


教育漢字（小学５年生）PrimarySchool5thGradeKanjiCharacterprimary_school_5th_grade.csv


教育漢字（小学６年生）PrimarySchool6thGradeKanjiCharacterprimary_school_6th_grade.csv


JIS第一水準JISLevel1KanjiCharacterjis_level_1.csv


JIS第二水準JISLevel2KanjiCharacterjis_level_2.csv


JIS第一・二水準JISLevel1to2KanjiCharacter 


JIS第三水準JISLevel3KanjiCharacterjis_level_3.csv


JIS第一・二・三水準JISLevel1to3KanjiCharacter 


JIS第四水準JISLevel4KanjiCharacterjis_level_4.csv


JIS第一・二・三・四水準JISLevel1to4KanjiCharacter 


人名用漢字JinmeiyoKanjiCharacterjinmeiyo_kanji_1.csvjinmeiyo_kanji_2.csv


JIS水準漢字の一覧を出力するプログラムはこちらJISStandardKanjiです。Shift-JISやwindows-31jではJIS水準漢字を全て出力するには符号化文字集合が足りないので、x-SJIS_0213かx-MS932_0213、もしくはUnicodeを使う必要があります。

1.5　字種の変換

case付きのアルファベットをlower case、title case、upper caseに揃える方法と、ひらがなからカタカナ・カタカナからひらがなに変換する方法について説明します。
1.5.1　letter case

letter caseにはlower case、title case、upper caseが存在します。

letter case例説明
lower caseabc全部小文字
title caseAbc先頭文字が大文字で残りは小文字１文字で複数文字あるように見える文字には、title caseを持っている文字があります。例：upper case:「Ǉ」（U+01C7）title case:「ǈ」（U+01C8）lower case:「 ǉ」（U+01C9）
upper caseABC全部大文字


1.5.2　文字のletter caseの変換

Charやコードポイントのletter caseをjava.lang.CharacterクラスのtoUpperCase、toTitleCase、toLowerCaseメソッドでいずれか一方に揃えます。


1.5.3　文字列のletter caseの変換

Stringのletter caseをtoUpperCase、toLowerCaseメソッドで一方に揃えます。


1.5.4　ひらがなとカタカナの相互変換

自作のJapaneseCharacterCaseConverterは、ひらがなとカタカナのコードポイントの差分を利用してひらがなとカタカナの相互変換を実行します。
JapaneseCharacterCaseConverterの実装。
処理に使用するのNormalizedStringとStringOptionについては次章で説明します。

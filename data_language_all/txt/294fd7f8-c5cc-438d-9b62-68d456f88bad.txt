04-EOS单节点测试网络
由于EOS的版本在不断的更新迭代，本地编译最新版本的方式更新比较繁琐，而且容易出问题。
因此，我们推荐使用Docker容器的方式配置EOS本地测试环境，这样方便维护升级，而且简单。
此外，EOS的Docker Image会每天定时更新并被推送到dockerhub，可以直接去拉取官方的最新版本Image使用。
下面的步骤会以Mac系统为例，由于我们使用Docker环境，理论上不依赖具体的操作系统环境，只要使用的系统能够安装Docker即可。
系统配置要求：
* 硬盘存储空间 > 8GB
* 内存 > 4GB

安装docker和docker-compose

可以到Docker官方网站下载Docker，推荐以下版本:

下载安装后，启动Docker服务，不同的系统启动Docker服务方式不同，请具体查看启动方式。
确认docker安装成功并且docker服务启动之后，再继续进行下一步。
不熟悉Docker的同学，可以去查一下Docker的简单命令介绍，这里我们给出CentOS下面常用的命令：
Bash
yum install docker  安装服务
systemctl start docker.service 启动服务
systemctl enable docker.service 开机启动服务
docker pull centos 下载映像到本地
docker images centos 查看映像列表
docker run -i -t centos /bin/bash 以交互式启动容器
docker run centos echo 'Hello World'
其他参考资料：docker 命令
如果使用的是Mac系统版本的Docker，docker-compose会跟随docker一起被安装。
如果使用的是CentOS等其他Linux系统，需要单独安装docker-compose，参考安装：
```Bash
sudo curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
docker-compose --version
Bash
docker pull eosio/eos-dev:v1.0.8
docker tag eosio/eos-dev:v1.0.8 eosio/eos-dev:latest
Bash
docker volume create --name=local-nodeos-data-volume
docker volume create --name=local-keosd-data-volume
Bash
$cleos wallet create

Creating wallet: default
Save password to use in the future to unlock this wallet.
Without password imported keys will not be retrievable.
"#######################PASSWORD######################"
Bash
$cleos wallet create -n 2ndWallet
Creating wallet: 2ndWallet
Save password to use in the future to unlock this wallet.
Without password imported keys will not be retrievable.
"#######################PASSWORD######################"
**注意**：解锁非默认钱包时候需要加-n参数：Bash
cleos wallet unlock -n 2ndWallet 
Bash
$cleos create key   # ActiveKey


Private key: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
Public key: EOS7UN5ZY6WYpVhjkjPG4bh5rQxHgAeFKnjLBNok22cATD82JPjai
Bash
$cleos wallet keys

[
  "EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV",
  "EOS7UN5ZY6WYpVhjkjPG4bh5rQxHgAeFKnjLBNok22cATD82JPjai",
  "EOS8eHNwPjCvcQRnUP1feykKmKexWkRz5zXznK3GTJFPibut7kiaM"
]
同样可以同时查询公钥、私钥，但是需要Wallet密码：Bash
cleos wallet private_keys
Bash
executed transaction: cc1f8d2f1798160e6faf5f18f61ec86e98ae78b6d47d1c19b1580bd75f777582  200 bytes  7297 us
eosio <= eosio::newaccount            {"creator":"eosio","name":"token","owner":{"threshold":1,"keys":[{"key":"EOS8eHNwPjCvcQRnUP1feykKmKe...
warning: transaction executed locally, but may not be confirmed by the network yet
```
注意

如果执行以上create account命令可能遇到如下错误：
Bash
Error:
Error 3090003: provided keys, permissions, and delays do not satisfy declared authorizations
Ensure that you have the related private keys inside your wallet and your wallet is unlocked.

此error 需要 import config.ini 中默认的eosio签名账户private key：
Bash
cleos wallet import 5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3
然后再重新执行create account的命令即可。
原因：eosio是authorizing account（授权帐户）。 在区块链上执行的操作必须使用与eosio帐户关联的密钥对进行签名。 eosio帐户是用于引导EOSIO节点的特殊帐户。
查看刚创建的账户：
Bash
cleos get account token --json
同样可以查看主账户eosio：
Bash
cleos get account eosio --json
关于以上内容，EOS官方最近也给出教程可供参考（不使用docker）。
04-启动连接主网的节点
使用docker-compose-main-net-v1.0.5.yaml文件启动节点，注意此文件依赖：genesis.json 和 config-main-net.ini文件。
启动连接主网的节点：
Bash
docker-compose -f docker-compose-main-net-v1.0.5.yaml up -d
注意cleos的alias稍有变化：
Bash
alias cleos='docker-compose -f docker-compose-main-net-v1.0.5.yaml exec keosd /opt/eosio/bin/cleos -u http://nodeosd:8888 --wallet-url http://localhost:8900'
注意：以上启动的节点中使用的Keys是公开的测试账户，私钥已经暴露，十分不安全，仅作为学习、实验参考。同样万不可导入个人真实私钥去连接主网，或启动节点！谨记！
04-使用已存在的超级节点
同样启动keosd，使用docker-compose-main-net-v1.0.5.yaml即可。
注意下面将cleos命令中的 http://nodeosd:8888 替换成了某个超级节点的地址http://40.114.68.16:8888
Bash
alias cleos='docker-compose -f docker-compose-main-net-v1.0.5.yaml exec keosd /opt/eosio/bin/cleos -u http://40.114.68.16:8888 --wallet-url http://localhost:8900'
注意：一定要注意选择安全的前21个超级节点，此外这样使用的安全性仍有待验证，大家可以使用超级节点来做查询，不要通过此方式提交任何交易。
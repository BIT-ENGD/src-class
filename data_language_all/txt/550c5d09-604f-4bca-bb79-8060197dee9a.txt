Ben’s dotfiles
Installation
Using Git and the bootstrap script
You can clone the repository wherever you want. (I like to keep it in ~/bin/dotfiles.) The bootstrapper script will pull in the latest version and copy the files to your home folder.
bash
git clone https://github.com/mathiasbynens/dotfiles.git && cd dotfiles && source bootstrap.sh
To update, cd into your local dotfiles repository and then:
bash
source bootstrap.sh
Specify the $PATH
If ~/.path exists, it will be sourced along with the other files, before any feature testing (such as detecting which version of ls is being used) takes place.
Here’s an example ~/.path file that adds ~/bin to the $PATH:
bash
export PATH="$HOME/bin:$PATH"
Add custom commands without creating a new fork
If ~/.extra exists, it will be sourced along with the other files. You can use this to add a few custom commands without the need to fork this entire repository, or to add commands you don’t want to commit to a public repository. You could also use ~/.extra to override settings, functions and aliases from my dotfiles repository. It’s probably better to fork this repository instead, though.
Sensible OS X defaults
When setting up a new Mac, you may want to set some sensible OS X defaults:
bash
./.osx
Thanks
Grown from Matias's dotfiles.
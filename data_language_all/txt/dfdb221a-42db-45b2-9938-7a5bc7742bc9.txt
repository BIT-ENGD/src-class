Advanced Software Architecture
Course Overview

Objective The primary objective of the course is to introduce students to the concepts and patterns of software architecture.  We will implement a complex software system that requires sounded architectural design decisions.
Expectation The class will include lectures on topics relating to software architecture and on supplemental paper reading assignments.  Programming assignments will augment the theoretical aspects of software architecture.  Please understand that this is a graduate-level engineering course.  As such, students are expected to devote a large amount of time to the programming assignments and course project.

Logistics

Instructor John J. Tran
Lecture Monday 6:10 - 10:10 PM, Friday 6:10 - 10:10 PM, or Saturday 6:10 - 10:10 PM 
Office Hours Monday 10-11 PM, Friday 10-11 PM, Saturday 10-11 PM 
Text Book  None; we will read papers and online journals.

Learning Objectives

Functional programmming - importance of immutability and functions as first class citizens
Building a software system vs. building an application
Classic software architecture curriculum
Design patterns for software architecture
Layered architecture
Event-driven
Microkernel
Microservices
Analysis of existing software and corresponding architecture styles and patterns

Grading Allocation

Quiz (8) - 40 points
Homework (4) - 40 points
Project - 20 points

Final Project Homework assignments culminate in a final project: a complete software system. Students will engage in a team or individual projects to leverage the opensource projects to facilitate their project development. Successful completion of the course project is a requirement for passing this course.
Grading Scale

A: 94 to 100
A-: 90 to 93
B+: 85 to 89
B: 80 to 84 Graduate students will receive NC (No Credit) for scores below 80
B-: 77 to 79
C+: 74 to 76
C: 70 to 73 Undergraduates will receive NC (No Credit) for scores below 70

ADA Statement
Reasonable accommodation will be provided to any student who is registered with the Office of Students with Disabilities and requests needed accommodation.
Academic Integrity
Cheating on assignments and exams will not be tolerated. All parties involved will receive a grade of F for the course and be reported to the Computer Science Department.
Course Schedule

Lecture 1: [9/25,9/26,9/28] 
Introduction

Functional Programming Primer


Lecture 2: [10/2,10/3,10/5] 


Classic Software Architecture


Lecture 3: [10/9,10/10,10/12] 

Design Patterns & Software Architecture Patterns

Quiz 1


Lecture 4: [10/16,10/17,10/19] 


Framework for Building Complex Software Systems 


Lecture 5: [10/23,10/24,10/26] 

Software Arhictecture Pattern 1: Layered Architecture 

Quiz 2


Lecture 6: [10/30,10/31,11/2] 

Software Arhictecture Pattern 2: Event-Driven (Part 1) 
Quiz 3

Homework 1


Lecture 7: [11/6,11/7,11/9] 

Software Arhictecture Pattern 2: Event-Driven (Part 2) 
Quiz 4

Homework 2


Lecture 8: [11/13,11/14,11/16] 

Software Arhictecture Pattern 4: Microservices 
Quiz 5

Homework 3


Lecture 9: [11/20,11/21,11/23] 

Software Arhictecture Pattern 3: Microkernel
Analysis of Popular Frameworks and Systems

Quiz 6


Lecture 10: [11/27,11/28,11/30]

Project Discussion
Quiz 7

Homeowork 4


Final Project: [12/12/2015] 

Project demonstration and presentation; Time and Location TBD
Quiz 8

Testing your application
Used libraries
RSK comes with the following libraries for testing purposes:

Mocha - Node.js and browser test runner
Chai - Assertion library
Enzyme - Testing utilities for React

You may also want to take a look at the following related packages:

jsdom
react-addons-test-utils

Running tests
To test your application simply run the
yarn test
command which will:

recursively find all files ending with .test.js in your src/ directory
mocha execute found files

bash
yarn test
Conventions

test filenames MUST end with test.js or yarn test will not be able to
  detect them
test filenames SHOULD be named after the related component (e.g. create
  Login.test.js for Login.js component)

Basic example
To help you on your way RSK comes with the following
basic test case
you can use as a starting point:

React-intl example√ü
React-intl users MUST render/wrap components inside an IntlProvider like the
example below:
The example below example is a drop-in test for the RSK Header component:

Please note that NOT using IntlProvider will produce the following error:

Invariant Violation: [React Intl] Could not find required intl object.
 needs to exist in the component ancestry.

Linting
In order to check if your JavaScript and CSS code follows the suggested style
guidelines run:
bash
yarn run lint
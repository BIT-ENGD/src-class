RoboND_RTAB_SLAM
Create a 2D occupancy grid and 3D octomap from a provided ROS simulated environment using RTAB Slam
Install RTAB-Map package
To install rtabmap_ros
bash
$ apt-get udpate
$ sudo apt-get install ros-kinetic-rtabmap ros-kinetic-rtabmap-ros
Robot Model
  
Launching
1- Launch the gazebo world and your robot.
Empty World:
bash
$ roslaunch slam_project empty_world.launch
Kitchen World:
bash
$ roslaunch slam_project kitchen_world.launch
  
Personal World:
bash
$ roslaunch slam_project personal_world.launch
  
2- Launch your teleop node.
bash
$ roslaunch slam_project teleop.launch
3- Launch your mapping node.
bash
$ roslaunch slam_project mapping.launch
or for localization:
bash
$ roslaunch slam_project localization.launch
4- Launch Rviz.
bash
$ roslaunch slam_project rviz.launch
Debugging:
Debugging with Transform Frames
The tf library allows you to debug your coordinate frames (or the tf tree) in several ways. view_frames will create a graphical representation of that tree, providing you with a broad view of how different frames (or links) in your setup connect to each other.
bash
$ rosrun tf view_frames
The above will create a PDF file that will depict your tf tree as shown below.
  
The tf library also allows you to dynamically collect and display information between two transforms using tf_monitor.
bash
$ rosrun tf tf_monitor frame_1 frame_2
roswtf/rqt_graph
Another debugging tool under the tf library that is useful for debugging your setup is roswtf. To see the ROS graph run the following command:
bash
$ rqt_graph
  
roswtf will examine and analyze the setup or the graph above, including any running nodes and environment variables, and warn you about any potential issues or errors.
bash
$ roswtf
Sample output is as following:

Debugging with rqt_console
'rqt_console' aggregates all of the log messages and allows you to sort them.
bash
$ rqt_console
Image View using rqt_image_view
rqt_image_view is a great tool to visualize images streaming from camera and depth maps from sensors. Use it to make sure you are properly receiving the data you want on its specific topic.
bash
$ rqt_image_view
following is output of rgb image
  
and output of depth image
  
RTAB Database Analysis
The rtabmap-databaseViewer is a great tool for exploring your database when you are done generating it. It is isolated from ROS and allows for complete analysis of your mapping session. This is how you will check for loop closures, generate 3D maps for viewing, extract images, check feature mapping rich zones, and much more!
bash
$ rtabmap-databaseViewer ~/.ros/rtabmap.db
Real time mapping visualization
Another tool that you can use is rtabmapviz, which is an additional node for real time visualization of feature mapping, loop closures, and more. Itâ€™s not recommended to use this tool while mapping in simulation due to the computing overhead. rtabmapviz is great to deploy on a real robot during live mapping to ensure that you are getting the necessary features to complete loop closures.
Kitchen World 3D Map
  
  
  
Kitchen World 2D Map
  
Personal World 3D Map
  
  
  
Personal World 2D Map
  
Use the following link to download the full rtabmap databases for both kitchen world and personal world
https://s3-ap-southeast-1.amazonaws.com/muthanna/rtab_db.zip
Kitchen 3D Map video

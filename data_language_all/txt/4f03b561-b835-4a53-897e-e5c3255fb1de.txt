FunctionalTables

<img alt="Lifecycle" src="https://img.shields.io/badge/lifecycle-maturing-blue.svg" />
<img alt="Lifecycle" src="https://img.shields.io/badge/lifecycle-stable-green.svg" />
<img alt="Lifecycle" src="https://img.shields.io/badge/lifecycle-retired-orange.svg" />
<img alt="Lifecycle" src="https://img.shields.io/badge/lifecycle-archived-red.svg" />
<img alt="Lifecycle" src="https://img.shields.io/badge/lifecycle-dormant-blue.svg" /> 


Julia package for working with (potentially large) columns of data.
Design
A table is a collection of columns, indexed by Symbols.
Columns are immutable, which allows compression and type narrowing when applicable. Columns do not support random access, just iterate.
Columns are created by collecting elements into sinks, which are then finalized. While being collected into, sinks can change representation, eg decide whether to use RLE or other compression schemes, mmap to disk for large data, etc --- these can be configured and ideally ignored by the user.
NamedTuples are used pervasively throughout the interface.
Status
Heavily experimental, API changes radically without warnings or deprecations. This primarily an experiment, the package will be registered if it works out.
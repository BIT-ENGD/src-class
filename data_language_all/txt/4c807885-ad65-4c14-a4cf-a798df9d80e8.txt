Network Analysis
@contents
Pages = ["NetworkAnalysis.md"]
Depth = 3
Converting Between Networks Representations
Marconi provides functionality to convert between S,Z,Y, and T Parameters. See the library for more details.
Interpolations
To interpolate networks, one can just call interpolate with a network object and some
array or range of new frequencies. For evenly-spaced networks, interpolate will use a
cubic spline interpolation, while uneven spaced networks will use a standard linear gridded
interpolation.
@eval
cd("../../..") # hide
cp("examples/Amp.s2p","docs/build/man/Amp.s2p", force = true) # hide
cp("examples/CE3520K3.s2p","docs/build/man/CE3520K3.s2p", force = true) # hide
nothing
@setup interpolation
using Marconi
using PGFPlotsX
```@example interpolation
Uneven network
amp = readTouchstone("Amp.s2p")
@example cascade
function sillyFilter(f_center=1e9,rolloff=1;freq,Z0)
    s21 = f_center / (abs(freq-f_center)+f_center)*rolloff
    return [sqrt(1-s21^2)  s21;s21 sqrt(1-s21^2)]
end
filter = EquationNetwork(2,50,sillyFilter)
amp = readTouchstone("Amp.s2p")
net = cascade(amp,filter)
ax = plotRectangular(net,(2,1),label="Cascaded S(2,1)")
plotRectangular!(ax,amp,(2,1),label="Amplifier S(2,1)")
plotRectangular!(ax,filter,(2,1),freqs=net.frequency,label="Filter S(2,1)")
ax["ylabel"] = "dB"
ax # hide
```
R.swift.Library    
Library containing types supporting code generated by R.swift
Why use this?
Regular users probably want to include this library to use R.swift. Developers of other libraries can use this library to extend upon the types and code R.swift generates and uses.
Installation
CocoaPods (recommended)
Be aware: If you just want to use R.swift follow the installation instructions for R.swift.

Add pod 'R.swift.Library' to your Podfile
Run pod install

Carthage

Add github "mac-cain13/R.swift.Library" to your Cartfile
Run carthage

Swift Package Manager (Requires Xcode 11)

Open your Xcode project.
Select File > Swift Packages > Add Package Dependency...
Paste https://github.com/mac-cain13/R.swift.Library to the text field and click on the Next button.
Choose appropriate version and click on the Next button. (If you need latest one, just click on the Next button.)
Confirm that Rswift in the Package Product column is checked and your app's name is selected in the Add to Target column.
Click on the Next button.

Manually
As an embedded framework using git submodules.

If your project is not yet a git repository, run git init
Add R.swift.Library as a submodule by running: git submodule add https://github.com/mac-cain13/R.swift.Library.git
Open the new R.swift.Library folder, and drag the R.swift.Library.xcodeproj into the Project Navigator of your application's Xcode project.
Select the R.swift.Library.xcodeproj in the Project Navigator and verify the deployment target matches that of your application target.
Select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the "Targets" heading in the sidebar.
In the tab bar at the top of that window, open the "General" panel.
Click on the + button under the "Embedded Binaries" section.
Choose the Rswift.framework


The Rswift.framework is automagically added as a target dependency, linked framework and embedded framework in a copy files build phase which is all you need to build on the simulator and a device.

License
R.swift and R.swift.Library are created by Mathijs Kadijk and released under a MIT License.
TimerOutputs
 
TimerOutputs is a small Julia package that is used to generate formatted output from timings made in different sections of a program. It exports the macro @timeit that is similar to the @time macro in Base except one also assigns a label to the code section being timed. It is then possible to print a nicely formatted table presenting how much time was spent in each section and how many calls were made. Multiple calls to code sections with the same label will accumulate the time data for that label.
This package is inspired by the TimerOutput class in deal.ii which works in a similar way.
Usage
The easiest way to show how the package work is with a few examples of different way of timing sections.

Printing to now gives a formatted table showing the number of calls, the total time spent in each section, and the percentage of the time spent in each section since to was created as well as the percentage of the total time timed:
julia
julia> print(to)
+--------------------------------+-----------+--------+---------+
| Wall time elapsed since start  |    4.05 s |        |         |
|                                |           |        |         |
| Section              | n calls | wall time | % tot  | % timed |
+----------------------+---------+-----------+--------+---------+
| sleep                |     101 |    1.31 s |  32.4% |     43% |
| throwing             |       1 |   0.502 s |  12.4% |   16.4% |
| test function        |       1 |   0.501 s |  12.4% |   16.4% |
| nested               |       1 |   0.501 s |  12.4% |   16.4% |
| multi statements     |       1 |   0.218 s |  5.37% |   7.13% |
| randoms              |       1 |  0.0178 s | 0.439% |  0.583% |
+----------------------+---------+-----------+--------+---------+
Resetting
It is possible to reset a timer by calling reset_timer!(to::TimerOutput). This will remove all sections and reset the start of the timer to the current time:
jl
julia> reset_timer!(to)
+--------------------------------+-----------+--------+---------+
| Wall time elapsed since start  |6.43e-05 s |        |         |
|                                |           |        |         |
| Section              | n calls | wall time | % tot  | % timed |
+----------------------+---------+-----------+--------+---------+
+----------------------+---------+-----------+--------+---------+
Disable
By setting the variable DISABLE_TIMING = true in Julia before loading TimerOutputs, the @timeit macro is changed to do nothing. This is useful if one wants to avoid the overhead of the timings without having to actually remove the macros from the code.
Overhead
There is a small overhead in the timings (a try catch for exception safety and a dictionary lookup for the label) which means that this package is not suitable to measure sections that finish very quickly.
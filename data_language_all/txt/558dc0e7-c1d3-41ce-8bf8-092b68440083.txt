

SwiftOverlays
SwiftOverlays is a Swift GUI library for displaying various popups and notifications.
Features
SwiftOverlays provides several ways to notify user:

[x] Wait overlay: a simple overlay with activity indicator



[x] Wait overlay with text 



[x] Overlay with text only
[x] Overlay with image and text (can be used with PPSwiftGifs to show custom animated GIF instead of UIActivityIndicatorView)
[x] All of the above with blocking any user interaction
[x] Notification on top of the status bar, similar to native iOS local/push notifications


Installation
Manual
Just clone and add SwiftOverlays.swift to your project.
Carthage

> Cartfile
nano Cartfile
put github "peterprokop/SwiftOverlays" ~> 2.0.0 into Cartfile
Save it: ctrl-x, y, enter
Run carthage update
Copy SwiftOverlays.framework from Carthage/Build/iOS to your project
Make sure that SwiftOverlays is added in Embedded Binaries section of your target (or else you will get dyld library not loaded referenced from ... reason image not found error)
Add import SwiftOverlays on top of your view controller's code

Cocoapods

Make sure that you use latest stable Cocoapods version: pod --version
If not, update it: sudo gem install cocoapods
pod init in you project root dir
nano Podfile, add:

pod 'SwiftOverlays', '~> 2.0.0'
use_frameworks! 
- Save it: ctrl-x, y, enter
- pod update
- Open generated .xcworkspace
- Don't forget to import SwiftOverlays: import SwiftOverlays!
Requirements

iOS 7.0+ (8.0+ if you use Cocoapods)
Xcode 8.0+
Swift 3.0 (if you need older swift version, see following branches: swift-1.1, swift-1.2,
swift-2.1 and others)

Usage
If you're using CocoaPods, import the library with import SwiftOverlays
You can use UIViewController convenience methods provided by library:

Using with UITableViewController/UICollectionViewController
You can't use SwiftOverlays convenience methods directly with UITableViewController - because its view is, well, an UITableView, and overlay will be scrolled along with it.
Instead I suggest using UIViewController instead of UITableViewController and adding UITableView as a subview.
(the same applies to UICollectionViewController)
If for some reason you can't use UIViewController, you can do something like:
swift
if let superview = self.view.superview {
  SwiftOverlays.showCenteredWaitOverlayWithText(superview, text: "Please wait...")
  SwiftOverlays.removeAllOverlaysFromView(superview)
}
(but in that case overlay will be added to the superview, and you should obviously do that only if superview is available - for example in viewDidAppear method of your controller.).
Contribution
You are welcome to fork and submit pull requests
Other Projects
StarryStars - iOS GUI library for displaying and editing ratings.
/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.aimodule;

@:umodule("AIModule")
@:glueCppIncludes("EnvironmentQuery/Generators/EnvQueryGenerator_Donut.h")
@:uextern @:uclass extern class UEnvQueryGenerator_Donut extends unreal.aimodule.UEnvQueryGenerator_ProjectedPoints {
  @:uproperty public var bDefineArc : Bool;
  
  /**
    context
  **/
  @:uproperty public var Center : unreal.TSubclassOf<unreal.aimodule.UEnvQueryContext>;
  
  /**
    If true, the rings of the wheel will be rotated in a spiral pattern.  If false, they will all be at a zero
    rotation, looking more like the spokes on a wheel.
  **/
  @:uproperty public var bUseSpiralPattern : Bool;
  
  /**
    If you generate items on a piece of circle you define angle of Arc cut here
  **/
  @:uproperty public var ArcAngle : unreal.aimodule.FAIDataProviderFloatValue;
  
  /**
    If you generate items on a piece of circle you define direction of Arc cut here
  **/
  @:uproperty public var ArcDirection : unreal.aimodule.FEnvDirection;
  
  /**
    number of items to generate for each ring
  **/
  @:uproperty public var PointsPerRing : unreal.aimodule.FAIDataProviderIntValue;
  
  /**
    number of rings to generate
  **/
  @:uproperty public var NumberOfRings : unreal.aimodule.FAIDataProviderIntValue;
  
  /**
    max distance between point and context
  **/
  @:uproperty public var OuterRadius : unreal.aimodule.FAIDataProviderFloatValue;
  
  /**
    min distance between point and context
  **/
  @:uproperty public var InnerRadius : unreal.aimodule.FAIDataProviderFloatValue;
  
}

% The Clever Algorithms Project: http://www.CleverAlgorithms.com
% (c) Copyright 2010 Jason Brownlee. Some Rights Reserved. 
% This work is licensed under a Creative Commons Attribution-Noncommercial-Share Alike 2.5 Australia License.

% This is an algorithm description, see:
% Jason Brownlee. A Template for Standardized Algorithm Descriptions. Technical Report CA-TR-20100107-1, The Clever Algorithms Project http://www.CleverAlgorithms.com, January 2010.

% Name
% The algorithm name defines the canonical name used to refer to the technique, in addition to common aliases, abbreviations, and acronyms. The name is used in terms of the heading and sub-headings of an algorithm description.
\section{Memetic Algorithm} 
\label{sec:memetic_algorithm}
\index{Memetic Algorithm}

% other names
% What is the canonical name and common aliases for a technique?
% What are the common abbreviations and acronyms for a technique?
\emph{Memetic Algorithm, MA.}

% Taxonomy: Lineage and locality
% The algorithm taxonomy defines where a techniques fits into the field, both the specific subfields of Computational Intelligence and Biologically Inspired Computation as well as the broader field of Artificial Intelligence. The taxonomy also provides a context for determining the relation- ships between algorithms. The taxonomy may be described in terms of a series of relationship statements or pictorially as a venn diagram or a graph with hierarchical structure.
\subsection{Taxonomy}
% To what fields of study does a technique belong?
Memetic Algorithms have elements of Metaheuristics and Computational Intelligence. Although they have principles of Evolutionary Algorithms, they may not strictly be considered an Evolutionary Technique.
% What are the closely related approaches to a technique?
Memetic Algorithms have functional similarities to Baldwinian Evolutionary Algorithms, Lamarckian Evolutionary Algorithms, Hybrid Evolutionary Algorithms, and Cultural Algorithms (Section~\ref{sec:cultural_algorithm}). Using ideas of memes and Memetic Algorithms in optimization may be referred to as Memetic Computing.

% Inspiration: Motivating system
% The inspiration describes the specific system or process that provoked the inception of the algorithm. The inspiring system may non-exclusively be natural, biological, physical, or social. The description of the inspiring system may include relevant domain specific theory, observation, nomenclature, and most important must include those salient attributes of the system that are somehow abstractly or conceptually manifest in the technique. The inspiration is described textually with citations and may include diagrams to highlight features and relationships within the inspiring system.
% Optional
\subsection{Inspiration}
% What is the system or process that motivated the development of a technique?
Memetic Algorithms are inspired by the interplay of genetic evolution and memetic evolution. Universal Darwinism is the generalization of genes beyond biological-based systems to any system where discrete units of information can be inherited and be subjected to evolutionary forces of selection and variation. The term `meme' is used to refer to a piece of discrete cultural information, suggesting at the interplay of genetic and cultural evolution.
% Which features of the motivating system are relevant to a technique?

% Metaphor: Explanation via analogy
% The metaphor is a description of the technique in the context of the inspiring system or a different suitable system. The features of the technique are made apparent through an analogous description of the features of the inspiring system. The explanation through analogy is not expected to be literal scientific truth, rather the method is used as an allegorical communication tool. The inspiring system is not explicitly described, this is the role of the ‘inspiration’ element, which represents a loose dependency for this element. The explanation is textual and uses the nomenclature of the metaphorical system.
% Optional
\subsection{Metaphor}
% What is the explanation of a technique in the context of the inspiring system?
The genotype is evolved based on the interaction the phenotype has with the environment. This interaction is metered by cultural phenomena that influence the selection mechanisms, and even the pairing and recombination mechanisms. Cultural information is shared between individuals, spreading through the population as memes relative to their fitness or fitness the memes impart to the individuals. Collectively, the interplay of the geneotype and the memeotype strengthen the fitness of population in the environment.
% What are the functionalities inferred for a technique from the analogous inspiring system?

% Strategy: Problem solving plan
% The strategy is an abstract description of the computational model. The strategy describes the information processing actions a technique shall take in order to achieve an objective. The strategy provides a logical separation between a computational realization (procedure) and a analogous system (metaphor). A given problem solving strategy may be realized as one of a number specific algorithms or problem solving systems. The strategy description is textual using information processing and algorithmic terminology.
\subsection{Strategy}
% What is the information processing objective of a technique?
The objective of the information processing strategy is to exploit a population based global search technique to broadly locate good areas of the search space, combined with the repeated usage of a local search heuristic by individual solutions to locate local optimum.
% What is a techniques plan of action?
Ideally, memetic algorithms embrace the duality of genetic and cultural evolution, allowing the transmission, selection, inheritance, and variation of memes as well as genes.

% Procedure: Abstract computation
% The algorithmic procedure summarizes the specifics of realizing a strategy as a systemized and parameterized computation. It outlines how the algorithm is organized in terms of the data structures and representations. The procedure may be described in terms of software engineering and computer science artifacts such as Pseudocode, design diagrams, and relevant mathematical equations.
\subsection{Procedure}
% What is the computational recipe for a technique?
% What are the data structures and representations used in a technique?
Algorithm~\ref{alg:ma} provides a pseudocode listing of the Memetic Algorithm for minimizing a cost function. The procedure describes a simple or first order Memetic Algorithm that shows the improvement of individual solutions separate from a global search, although does not show the independent evolution of memes. 

\begin{algorithm}[ht]
	\SetLine  

	% data
	\SetKwData{ProblemSize}{ProblemSize}
	\SetKwData{MaxIterations}{$iterations_{max}$}
	\SetKwData{PopulationSize}{$Pop_{size}$}
	\SetKwData{MemeticPopulationSize}{$MemePop_{size}$}
	\SetKwData{Best}{$S_{best}$}
	\SetKwData{Population}{Population}
	\SetKwData{MemeticPopulation}{MemeticPopulation}
	\SetKwData{Candidate}{$S_{i}$}
	\SetKwData{CandidateCost}{$Si_{cost}$}
	
	% functions
	\SetKwFunction{Cost}{Cost}
	\SetKwFunction{InitializePopulation}{InitializePopulation}
	\SetKwFunction{StopCondition}{StopCondition}
	\SetKwFunction{StochasticGlobalSearch}{StochasticGlobalSearch}
	\SetKwFunction{SelectMemeticPopulation}{SelectMemeticPopulation}
	\SetKwFunction{GetBestSolution}{GetBestSolution}
	\SetKwFunction{LocalSearch}{LocalSearch}
	
	% I/O
	\KwIn{\ProblemSize, \PopulationSize, \MemeticPopulationSize}		
	\KwOut{\Best}
  
	% Algorithm
	\Population $\leftarrow$ \InitializePopulation{\ProblemSize, \PopulationSize}\;
	
	% loop
	\While{$\neg$\StopCondition{}} {	
		\ForEach{\Candidate $\in$ \Population} {
			\CandidateCost $\leftarrow$ \Cost{\Candidate}\;
		}
		\Best $\leftarrow$ \GetBestSolution{\Population}\;
		\Population $\leftarrow$ \StochasticGlobalSearch{\Population}\;
		\MemeticPopulation $\leftarrow$ \SelectMemeticPopulation{\Population, \MemeticPopulationSize}\;
		\ForEach{\Candidate $\in$ \MemeticPopulation} {
			\Candidate $\leftarrow$ \LocalSearch{\Candidate}\;
		}
	}
	\Return{\Best}\;
	% end
	\caption{Pseudocode for the Memetic Algorithm.}
	\label{alg:ma}
\end{algorithm}

% Heuristics: Usage guidelines
% The heuristics element describe the commonsense, best practice, and demonstrated rules for applying and configuring a parameterized algorithm. The heuristics relate to the technical details of the techniques procedure and data structures for general classes of application (neither specific implementations not specific problem instances). The heuristics are described textually, such as a series of guidelines in a bullet-point structure.
\subsection{Heuristics}
% What are the suggested configurations for a technique?
% What are the guidelines for the application of a technique to a problem instance?
\begin{itemize}
	\item The global search provides the broad exploration mechanism, whereas the individual solution improvement via local search provides an exploitation mechanism. 
	\item Balance is needed between the local and global mechanisms to ensure the system does not prematurely converge to a local optimum and does not consume unnecessary computational resources.
	\item The local search should be problem and representation specific, where as the global search may be generic and non-specific (black-box).
	\item Memetic Algorithms have been applied to a range of constraint, combinatorial, and continuous function optimization problem domains.
\end{itemize}

% Code Listing
% The code description provides a minimal but functional version of the technique implemented with a programming language. The code description must be able to be typed into an appropriate computer, compiled or interpreted as need be, and provide a working execution of the technique. The technique implementation also includes a minimal problem instance to which it is applied, and both the problem and algorithm implementations are complete enough to demonstrate the techniques procedure. The description is presented as a programming source code listing.
\subsection{Code Listing}
% How is a technique implemented as an executable program?
% How is a technique applied to a concrete problem instance?
Listing~\ref{memetic_algorithm} provides an example of the Memetic Algorithm implemented in the Ruby Programming Language. 
% problem
The demonstration problem is an instance of a continuous function optimization that seeks $\min f(x)$ where $f=\sum_{i=1}^n x_{i}^2$, $-5.0\leq x_i \leq 5.0$ and $n=3$. The optimal solution for this basin function is $(v_0,\ldots,v_{n-1})=0.0$.
% algorithm
The Memetic Algorithm uses a canonical Genetic Algorithm as the global search technique that operates on binary strings, uses tournament selection, point mutations, uniform crossover and a binary coded decimal decoding of bits to real values. A bit climber local search is used that performs probabilistic bit flips (point mutations) and only accepts solutions with the same or improving fitness. 

% the listing
\lstinputlisting[firstline=7,language=ruby,caption=Memetic Algorithm in Ruby, label=memetic_algorithm]{../src/algorithms/physical/memetic_algorithm.rb}

% References: Deeper understanding
% The references element description includes a listing of both primary sources of information about the technique as well as useful introductory sources for novices to gain a deeper understanding of the theory and application of the technique. The description consists of hand-selected reference material including books, peer reviewed conference papers, journal articles, and potentially websites. A bullet-pointed structure is suggested.
\subsection{References}
% What are the primary sources for a technique?
% What are the suggested reference sources for learning more about a technique?

% 
% Primary Sources
% 
\subsubsection{Primary Sources}
% seminal
The concept of a Memetic Algorithm is credited to Moscato \cite{Moscato1989}, who was inspired by the description of meme's in Dawkins' ``The Selfish Gene'' \cite{Dawkins1976}. Moscato proposed Memetic Algorithms as the marriage between population based global search and heuristic local search made by each individual without the constraints of a genetic representation and investigated variations on the Traveling Salesman Problem.
% early

% 
% Learn More
% 
\subsubsection{Learn More}
% reviews
Moscato and Cotta provide a gentle introduction to the field of Memetic Algorithms as a book chapter that covers formal descriptions of the approach, a summary of the fields of application, and the state of the art \cite{Moscato2003}.
An overview and classification of the types of Memetic Algorithms is presented by Ong et al.\ who describe a class of adaptive Memetic Algorithms \cite{Ong2006}. Krasnogor and Smith also provide a taxonomy of Memetic Algorithms, focusing on the properties needed to design `competent' implementations of the approach with examples on a number of combinatorial optimization problems \cite{Krasnogor2005}. Work by Krasnogor and Gustafson investigate what they refer to as `self-generating' Memetic Algorithms that use the memetic principle to co-evolve the local search applied by individual solutions \cite{Krasnogor2004}. 
% books
For a broader overview of the field, see the 2005 book ``Recent Advances in Memetic Algorithms'' that provides an overview and a number of studies \cite{Hart2005}.



% The Clever Algorithms Project: http://www.CleverAlgorithms.com
% (c) Copyright 2010 Jason Brownlee. Some Rights Reserved. 
% This work is licensed under a Creative Commons Attribution-Noncommercial-Share Alike 2.5 Australia License.

% This is an algorithm description, see:
% Jason Brownlee. A Template for Standardized Algorithm Descriptions. Technical Report CA-TR-20100107-1, The Clever Algorithms Project http://www.CleverAlgorithms.com, January 2010.

% Name
% The algorithm name defines the canonical name used to refer to the technique, in addition to common aliases, abbreviations, and acronyms. The name is used in terms of the heading and sub-headings of an algorithm description.
\section{Cultural Algorithm} 
\label{sec:cultural_algorithm}
\index{Cultural Algorithm}

% other names
% What is the canonical name and common aliases for a technique?
% What are the common abbreviations and acronyms for a technique?
\emph{Cultural Algorithm, CA.}

% Taxonomy: Lineage and locality
% The algorithm taxonomy defines where a techniques fits into the field, both the specific subfields of Computational Intelligence and Biologically Inspired Computation as well as the broader field of Artificial Intelligence. The taxonomy also provides a context for determining the relation- ships between algorithms. The taxonomy may be described in terms of a series of relationship statements or pictorially as a venn diagram or a graph with hierarchical structure.
\subsection{Taxonomy}
% To what fields of study does a technique belong?
The Cultural Algorithm is an extension to the field of Evolutionary Computation and may be considered a Meta-Evolutionary Algorithm. It more broadly belongs to the field of Computational Intelligence and Metaheuristics.
% What are the closely related approaches to a technique?
It is related to other high-order extensions of Evolutionary Computation such as the Memetic Algorithm (Section~\ref{sec:memetic_algorithm}).

% Inspiration: Motivating system
% The inspiration describes the specific system or process that provoked the inception of the algorithm. The inspiring system may non-exclusively be natural, biological, physical, or social. The description of the inspiring system may include relevant domain specific theory, observation, nomenclature, and most important must include those salient attributes of the system that are somehow abstractly or conceptually manifest in the technique. The inspiration is described textually with citations and may include diagrams to highlight features and relationships within the inspiring system.
% Optional
\subsection{Inspiration}
% What is the system or process that motivated the development of a technique?
The Cultural Algorithm is inspired by the principle of cultural evolution.
% Which features of the motivating system are relevant to a technique?
Culture includes the habits, knowledge, beliefs, customs, and morals of a member of society. Culture does not exist independent of the environment, and can interact with the environment via positive or negative feedback cycles. The study of the interaction of culture in the environment is referred to as Cultural Ecology.

% Metaphor: Explanation via analogy
% The metaphor is a description of the technique in the context of the inspiring system or a different suitable system. The features of the technique are made apparent through an analogous description of the features of the inspiring system. The explanation through analogy is not expected to be literal scientific truth, rather the method is used as an allegorical communication tool. The inspiring system is not explicitly described, this is the role of the ‘inspiration’ element, which represents a loose dependency for this element. The explanation is textual and uses the nomenclature of the metaphorical system.
% Optional
\subsection{Metaphor}
% What is the explanation of a technique in the context of the inspiring system?
The Cultural Algorithm may be explained in the context of the inspiring system. As the evolutionary process unfolds, individuals accumulate information about the world which is communicated to other individuals in the population. Collectively this corpus of information is a knowledge base that members of the population may tap-into and exploit. Positive feedback mechanisms can occur where cultural knowledge indicates useful areas of the environment, information which is passed down between generations, exploited, refined, and adapted as situations change. Additionally, areas of potential hazard may also be communicated through the cultural knowledge base.
% What are the functionalities inferred for a technique from the analogous inspiring system?

% Strategy: Problem solving plan
% The strategy is an abstract description of the computational model. The strategy describes the information processing actions a technique shall take in order to achieve an objective. The strategy provides a logical separation between a computational realization (procedure) and a analogous system (metaphor). A given problem solving strategy may be realized as one of a number specific algorithms or problem solving systems. The strategy description is textual using information processing and algorithmic terminology.
\subsection{Strategy}
% What is the information processing objective of a technique?
The information processing objective of the algorithm is to improve the learning or convergence of an embedded search technique (typically an evolutionary algorithm) using a higher-order cultural evolution. 
% What is a techniques plan of action?
The algorithm operates at two levels: a population level and a cultural level. The population level is like an evolutionary search, where individuals represent candidate solutions, are mostly distinct and their characteristics are translated into an objective or cost function in the problem domain. The second level is the knowledge or believe space where information acquired by generations  is stored, and which is accessible to the current generation. A communication protocol is used to allow the two spaces to interact and the types of information that can be exchanged.

% Procedure: Abstract computation
% The algorithmic procedure summarizes the specifics of realizing a strategy as a systemized and parameterized computation. It outlines how the algorithm is organized in terms of the data structures and representations. The procedure may be described in terms of software engineering and computer science artifacts such as Pseudocode, design diagrams, and relevant mathematical equations.
\subsection{Procedure}
% What are the data structures and representations used in a technique?
The focus of the algorithm is the \texttt{Knowledge\-Base} data structure that records different knowledge types based on the nature of the problem. For example, the structure may be used to record the best candidate solution found as well as generalized information about areas of the search space that are expected to payoff (result in good candidate solutions). This cultural knowledge is discovered by the population-based evolutionary search, and is in turn used to influence subsequent generations. The acceptance function constrain the communication of knowledge from the population to the knowledge base.

% What is the computational recipe for a technique?
Algorithm~\ref{alg:cultural_algorithm} provides a pseudocode listing of the Cultural Algorithm. The algorithm is abstract, providing flexibility in the interpretation of the processes such as the acceptance of information, the structure of the knowledge base, and the specific embedded evolutionary algorithm.


\begin{algorithm}[ht]
	\SetLine

	% params
	\SetKwData{ProblemSize}{$Problem_{size}$}
	\SetKwData{PopulationSize}{$Population_{num}$}	
	% data
	\SetKwData{Population}{Population}
	\SetKwData{KnowledgeBase}{KnowledgeBase}
	\SetKwData{CandidateSituational}{$SituationalKnowledge_{candidate}$}
	\SetKwData{CandidateNormative}{$NormativeKnowledge_{candidate}$}
	\SetKwData{Children}{Children}
	
	% functions
	\SetKwFunction{InitializePopulation}{InitializePopulation}  
	\SetKwFunction{InitializeKnowledgebase}{InitializeKnowledgebase} 
	\SetKwFunction{StopCondition}{StopCondition} 
	\SetKwFunction{Evaluate}{Evaluate}
	\SetKwFunction{AcceptSituationalKnowledge}{AcceptSituationalKnowledge}
	\SetKwFunction{UpdateSituationalKnowledge}{UpdateSituationalKnowledge}
	\SetKwFunction{ReproduceWithInfluence}{ReproduceWithInfluence}
	\SetKwFunction{Select}{Select}
	\SetKwFunction{AcceptNormativeKnowledge}{AcceptNormativeKnowledge}
	\SetKwFunction{UpdateNormativeKnowledge}{UpdateNormativeKnowledge}
  
	% I/O
	\KwIn{\ProblemSize, \PopulationSize}		
	\KwOut{\KnowledgeBase}
	
  % Algorithm
	\Population $\leftarrow$ \InitializePopulation{\ProblemSize, \PopulationSize}\;
	\KnowledgeBase $\leftarrow$ \InitializeKnowledgebase{\ProblemSize, \PopulationSize}\;

	\While{$\neg$\StopCondition{}} {
		% eval
		\Evaluate{\Population}\;
		\CandidateSituational $\leftarrow$ \AcceptSituationalKnowledge{\Population}\;
		% situational
		\UpdateSituationalKnowledge{\KnowledgeBase, \CandidateSituational}\;
		% reproduce
		\Children $\leftarrow$ \ReproduceWithInfluence{\Population, \KnowledgeBase}\;
		\Population $\leftarrow$ \Select{\Children, \Population}\;
		% normative
		\CandidateNormative $\leftarrow$ \AcceptNormativeKnowledge{\Population}\;
		\UpdateNormativeKnowledge{\KnowledgeBase, \CandidateNormative}\;
	}
	\Return{\KnowledgeBase}\;
	% end
	\caption{Pseudocode for the Cultural Algorithm.}
	\label{alg:cultural_algorithm}
\end{algorithm}

% Heuristics: Usage guidelines
% The heuristics element describe the commonsense, best practice, and demonstrated rules for applying and configuring a parameterized algorithm. The heuristics relate to the technical details of the techniques procedure and data structures for general classes of application (neither specific implementations not specific problem instances). The heuristics are described textually, such as a series of guidelines in a bullet-point structure.
\subsection{Heuristics}
% What are the suggested configurations for a technique?
% What are the guidelines for the application of a technique to a problem instance?
\begin{itemize}
	\item The Cultural Algorithm was initially used as a simulation tool to investigate Cultural Ecology. It has been adapted for use as an optimization algorithm for a wide variety of domains not-limited to constraint optimization, combinatorial optimization, and continuous function optimization.
	\item The knowledge base structure provides a mechanism for incorporating problem-specific information into the execution of an evolutionary search.
	\item The acceptance functions that control the flow of information into the knowledge base are typically greedy, only including the best information from the current generation, and not replacing existing knowledge unless it is an improvement.
	\item Acceptance functions are traditionally deterministic, although probabilistic and fuzzy acceptance functions have been investigated.
\end{itemize}

% Code Listing
% The code description provides a minimal but functional version of the technique implemented with a programming language. The code description must be able to be typed into an appropriate computer, compiled or interpreted as need be, and provide a working execution of the technique. The technique implementation also includes a minimal problem instance to which it is applied, and both the problem and algorithm implementations are complete enough to demonstrate the techniques procedure. The description is presented as a programming source code listing.
\subsection{Code Listing}
% How is a technique implemented as an executable program?
% How is a technique applied to a concrete problem instance?
Listing~\ref{cultural_algorithm} provides an example of the Cultural Algorithm implemented in the Ruby Programming Language. 
% problem
The demonstration problem is an instance of a continuous function optimization that seeks $\min f(x)$ where $f=\sum_{i=1}^n x_{i}^2$, $-5.0\leq x_i \leq 5.0$ and $n=2$. The optimal solution for this basin function is $(v_0,\ldots,v_{n-1})=0.0$.

% algorithm
The Cultural Algorithm was implemented based on the description of the Cultural Algorithm Evolutionary Program (CAEP) presented by Reynolds \cite{Reynolds1999}. 
A real-valued Genetic Algorithm was used as the embedded evolutionary algorithm.
The overall best solution is taken as the `situational' cultural knowledge, whereas the bounds of the top 20\% of the best solutions each generation are taken as the `normative' cultural knowledge. 
The situational knowledge is returned as the result of the search, whereas the normative knowledge is used to influence the evolutionary process. Specifically, vector bounds in the normative knowledge are used to define a subspace from which new candidate solutions are uniformly sampled during the reproduction step of the evolutionary algorithm's variation mechanism. 
A real-valued representation and a binary tournament selection strategy are used by the evolutionary algorithm.

% the listing
\lstinputlisting[firstline=7,language=ruby,caption=Cultural Algorithm in Ruby, label=cultural_algorithm]{../src/algorithms/physical/cultural_algorithm.rb}

% References: Deeper understanding
% The references element description includes a listing of both primary sources of information about the technique as well as useful introductory sources for novices to gain a deeper understanding of the theory and application of the technique. The description consists of hand-selected reference material including books, peer reviewed conference papers, journal articles, and potentially websites. A bullet-pointed structure is suggested.
\subsection{References}
% What are the primary sources for a technique?
% What are the suggested reference sources for learning more about a technique?

% 
% Primary Sources
% 
\subsubsection{Primary Sources}
% seminal
The Cultural Algorithm was proposed by Reynolds in 1994 that combined the method with the Version Space Algorithm (a binary string based Genetic Algorithm), where generalizations of individual solutions were communicated as cultural knowledge in the form of schema patterns (strings of 1's, 0's and \#'s, where `\#' represents a wildcard) \cite{Reynolds1994}. 
% early

% 
% Learn More
% 
\subsubsection{Learn More}
% reviews
Chung and Reynolds provide a study of the Cultural Algorithm on a testbed of constraint satisfaction problems \cite{Chung1996}.
Reynolds provides a detailed overview of the history of the technique as a book chapter that presents the state of the art and summaries of application areas including concept learning and continuous function optimization \cite{Reynolds1999}.
Coello Coello and Becerra proposed a variation of the Cultural Algorithm that uses Evolutionary Programming as the embedded weak search method, for use with Multi-Objective Optimization problems \cite{CoelloCoello2003}.
% books



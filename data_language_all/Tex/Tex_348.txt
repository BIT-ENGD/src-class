% The Clever Algorithms Project: http://www.CleverAlgorithms.com
% (c) Copyright 2010 Jason Brownlee. Some Rights Reserved. 
% This work is licensed under a Creative Commons Attribution-Noncommercial-Share Alike 2.5 Australia License.

% This is an algorithm description, see:
% Jason Brownlee. A Template for Standardized Algorithm Descriptions. Technical Report CA-TR-20100107-1, The Clever Algorithms Project http://www.CleverAlgorithms.com, January 2010.

% Name
% The algorithm name defines the canonical name used to refer to the technique, in addition to common aliases, abbreviations, and acronyms. The name is used in terms of the heading and sub-headings of an algorithm description.
\section{Harmony Search} 
\label{sec:harmony_search}
\index{Harmony Search}

% other names
% What is the canonical name and common aliases for a technique?
% What are the common abbreviations and acronyms for a technique?
\emph{Harmony Search, HS.}

% Taxonomy: Lineage and locality
% The algorithm taxonomy defines where a techniques fits into the field, both the specific subfields of Computational Intelligence and Biologically Inspired Computation as well as the broader field of Artificial Intelligence. The taxonomy also provides a context for determining the relation- ships between algorithms. The taxonomy may be described in terms of a series of relationship statements or pictorially as a venn diagram or a graph with hierarchical structure.
\subsection{Taxonomy}
% To what fields of study does a technique belong?
% What are the closely related approaches to a technique?
Harmony Search belongs to the fields of Computational Intelligence and Metaheuristics.

% Inspiration: Motivating system
% The inspiration describes the specific system or process that provoked the inception of the algorithm. The inspiring system may non-exclusively be natural, biological, physical, or social. The description of the inspiring system may include relevant domain specific theory, observation, nomenclature, and most important must include those salient attributes of the system that are somehow abstractly or conceptually manifest in the technique. The inspiration is described textually with citations and may include diagrams to highlight features and relationships within the inspiring system.
% Optional
\subsection{Inspiration}
% What is the system or process that motivated the development of a technique?
Harmony Search was inspired by the improvisation of Jazz musicians. Specifically, the process by which the musicians (who may have never played together before) rapidly refine their individual improvisation through variation resulting in an aesthetic harmony.  
% Which features of the motivating system are relevant to a technique?


% Metaphor: Explanation via analogy
% The metaphor is a description of the technique in the context of the inspiring system or a different suitable system. The features of the technique are made apparent through an analogous description of the features of the inspiring system. The explanation through analogy is not expected to be literal scientific truth, rather the method is used as an allegorical communication tool. The inspiring system is not explicitly described, this is the role of the ‘inspiration’ element, which represents a loose dependency for this element. The explanation is textual and uses the nomenclature of the metaphorical system.
% Optional
\subsection{Metaphor}
% What is the explanation of a technique in the context of the inspiring system?
% What are the functionalities inferred for a technique from the analogous inspiring system?
Each musician corresponds to an attribute in a candidate solution from a problem domain, and each instrument's pitch and range corresponds to the bounds and constraints on the decision variable. The harmony between the musicians is taken as a complete candidate solution at a given time, and the audiences aesthetic appreciation of the harmony represent the problem specific cost function. The musicians seek harmony over time through small variations and improvisations, which results in an improvement against the cost function.

% Strategy: Problem solving plan
% The strategy is an abstract description of the computational model. The strategy describes the information processing actions a technique shall take in order to achieve an objective. The strategy provides a logical separation between a computational realization (procedure) and a analogous system (metaphor). A given problem solving strategy may be realized as one of a number specific algorithms or problem solving systems. The strategy description is textual using information processing and algorithmic terminology.
\subsection{Strategy}
% What is the information processing objective of a technique?
The information processing objective of the technique is to use good candidate solutions already discovered to influence the creation of new candidate solutions toward locating the problems optima.
% What is a techniques plan of action?
This is achieved by stochastically creating candidate solutions in a step-wise manner, where each component is either drawn randomly from a memory of high-quality solutions, adjusted from the memory of high-quality solutions, or assigned randomly within the bounds of the problem. The memory of candidate solutions is initially random, and a greedy acceptance criteria is used to admit new candidate solutions only if they have an improved objective value, replacing an existing member.

% Procedure: Abstract computation
% The algorithmic procedure summarizes the specifics of realizing a strategy as a systemized and parameterized computation. It outlines how the algorithm is organized in terms of the data structures and representations. The procedure may be described in terms of software engineering and computer science artifacts such as Pseudocode, design diagrams, and relevant mathematical equations.
\subsection{Procedure}
% What is the computational recipe for a technique?
% What are the data structures and representations used in a technique?
Algorithm~\ref{alg:harmony_search} provides a pseudocode listing of the Harmony Search algorithm for minimizing a cost function. 
The adjustment of a pitch selected from the harmony memory is typically linear, for example for continuous function optimization: 
\begin{equation}
	x' \leftarrow x + range \times \epsilon
\end{equation}
where $range$ is a the user parameter (pitch bandwidth) to control the size of the changes, and $\epsilon$ is a uniformly random number $\in [-1,1]$.

\begin{algorithm}[ht]
	\SetLine

	% params
	\SetKwData{NumPitches}{$Pitch_{num}$}
	\SetKwData{PitchBounds}{$Pitch_{bounds}$}
	\SetKwData{MemorySize}{$Memory_{size}$}
	\SetKwData{ConsolidationRate}{$Consolidation_{rate}$}
	\SetKwData{AdjustRate}{$PitchAdjust_{rate}$}
	\SetKwData{MaxImprovisations}{$Improvisation_{max}$}	
	% data
	\SetKwData{Harmonies}{Harmonies}
	\SetKwData{Best}{$Harmony_{best}$}
	\SetKwData{CandidateHarmony}{$Harmony$}
	\SetKwData{CandidateHarmonyPitch}{$Harmony_{pitch}^i$}
	\SetKwData{RandomHarmonyPitch}{$RandomHarmony_{pitch}^i$}
	\SetKwData{Pitch}{$Pitch_{i}$}
	% functions
	\SetKwFunction{InitializeHarmonyMemory}{InitializeHarmonyMemory} 
	\SetKwFunction{EvaluateHarmonies}{EvaluateHarmonies} 
	\SetKwFunction{SelectRandomHarmonyPitch}{SelectRandomHarmonyPitch} 
  \SetKwFunction{Rand}{Rand} 
	\SetKwFunction{AdjustPitch}{AdjustPitch} 
	\SetKwFunction{RandomPitch}{RandomPitch} 
	\SetKwFunction{Cost}{Cost} 
	\SetKwFunction{Worst}{Worst} 
	
	% I/O
	\KwIn{\NumPitches, \PitchBounds, \MemorySize, \ConsolidationRate, \AdjustRate, \MaxImprovisations}		
	\KwOut{\Best}

  % Algorithm
	\Harmonies $\leftarrow$ \InitializeHarmonyMemory{\NumPitches, \PitchBounds, \MemorySize}\;
	\EvaluateHarmonies{\Harmonies}\;
	\For{$i$ \KwTo \MaxImprovisations} {
		\CandidateHarmony $\leftarrow$ $\emptyset$\;		
		\ForEach{\Pitch $\in$ \NumPitches} {			
			\eIf{\Rand{} $\leq$ \ConsolidationRate} {
				\RandomHarmonyPitch $\leftarrow$ \SelectRandomHarmonyPitch{\Harmonies, \Pitch}\;
				\eIf{\Rand{} $\leq$ \AdjustRate} {
					\CandidateHarmonyPitch $\leftarrow$ \AdjustPitch{\RandomHarmonyPitch}\;
				}{
					\CandidateHarmonyPitch $\leftarrow$ \RandomHarmonyPitch\;
				}
			}{
				\CandidateHarmonyPitch $\leftarrow$ \RandomPitch{\PitchBounds}\;
			}		
		}
		\EvaluateHarmonies{\CandidateHarmony}\;
		\If{\Cost{\CandidateHarmony} $\leq$ \Cost{\Worst{\Harmonies}}} {
			\Worst{\Harmonies} $\leftarrow$ \CandidateHarmony\;
		}
	}
	\Return{\Best}\;
	% end
	\caption{Pseudocode for Harmony Search.}
	\label{alg:harmony_search}
\end{algorithm}

% Heuristics: Usage guidelines
% The heuristics element describe the commonsense, best practice, and demonstrated rules for applying and configuring a parameterized algorithm. The heuristics relate to the technical details of the techniques procedure and data structures for general classes of application (neither specific implementations not specific problem instances). The heuristics are described textually, such as a series of guidelines in a bullet-point structure.
\subsection{Heuristics}
% What are the suggested configurations for a technique?
% What are the guidelines for the application of a technique to a problem instance?
\begin{itemize}
	\item Harmony Search was designed as a generalized optimization method for continuous, discrete, and constrained optimization and has been applied to numerous types of optimization problems.
	\item The harmony memory considering rate (HMCR) $\in [0,1]$ controls the use of information from the harmony memory or the generation of a random pitch. As such, it controls the rate of convergence of the algorithm and is typically configured $\in [0.7,0.95]$.
	\item The pitch adjustment rate (PAR) $\in [0,1]$ controls the frequency of adjustment of pitches selected from harmony memory, typically configured $\in [0.1,0.5]$. High values can result in the premature convergence of the search.
	\item The pitch adjustment rate and the adjustment method (amount of adjustment or fret width) are typically fixed, having a linear effect through time. Non-linear methods have been considered, for example refer to Geem \cite{Geem2010a}.
	\item When creating a new harmony, aggregations of pitches can be taken from across musicians in the harmony memory.
	\item The harmony memory update is typically a greedy process, although other considerations such as diversity may be used where the most similar harmony is replaced.
\end{itemize}

% Code Listing
% The code description provides a minimal but functional version of the technique implemented with a programming language. The code description must be able to be typed into an appropriate computer, compiled or interpreted as need be, and provide a working execution of the technique. The technique implementation also includes a minimal problem instance to which it is applied, and both the problem and algorithm implementations are complete enough to demonstrate the techniques procedure. The description is presented as a programming source code listing.
\subsection{Code Listing}
% How is a technique implemented as an executable program?
% How is a technique applied to a concrete problem instance?
Listing~\ref{harmony_search} provides an example of the Harmony Search algorithm implemented in the Ruby Programming Language. 
% problem
The demonstration problem is an instance of a continuous function optimization that seeks $min f(x)$ where $f=\sum_{i=1}^n x_{i}^2$, $-5.0\leq x_i \leq 5.0$ and $n=3$. The optimal solution for this basin function is $(v_0,\ldots,v_{n-1})=0.0$.
% algorithm
The algorithm implementation and parameterization are based on the description by Yang \cite{Yang2009}, with refinement from Geem \cite{Geem2010a}.

% the listing
\lstinputlisting[firstline=7,language=ruby,caption=Harmony Search in Ruby, label=harmony_search]{../src/algorithms/physical/harmony_search.rb}

% References: Deeper understanding
% The references element description includes a listing of both primary sources of information about the technique as well as useful introductory sources for novices to gain a deeper understanding of the theory and application of the technique. The description consists of hand-selected reference material including books, peer reviewed conference papers, journal articles, and potentially websites. A bullet-pointed structure is suggested.
\subsection{References}
% What are the primary sources for a technique?
% What are the suggested reference sources for learning more about a technique?

% 
% Primary Sources
% 
\subsubsection{Primary Sources}
% seminal
Geem et al.\ proposed the Harmony Search algorithm in 2001, which was applied to a range of optimization problems including a constraint optimization, the Traveling Salesman problem, and the design of a water supply network \cite{Geem2001}.
% early

% 
% Learn More
% 
\subsubsection{Learn More}
% reviews
% books
A book on Harmony Search, edited by Geem provides a collection of papers on the technique and its applications \cite{Geem2009}, chapter 1 provides a useful summary of the method heuristics for its configuration \cite{Yang2009}. Similarly a second edited volume by Geem focuses on studies that provide more advanced applications of the approach \cite{Geem2010}, and chapter 1 provides a detailed walkthrough of the technique itself \cite{Geem2010a}. Geem also provides a treatment of Harmony Search applied to the optimal design of water distribution networks \cite{Geem2009a} and edits yet a third volume on papers related to the application of the technique to structural design optimization problems \cite{Geem2009b}.



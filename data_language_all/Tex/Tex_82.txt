\subsection*{Mini-FAQ}

\par F: Was sind die Voraussetzungen die der Leser dieses Buchs erfüllen sollte?
\par A: Grundlagenwissen der Programmiersprachen C und / oder C++ sind wünschenswert.

\par F: Sollte ich wirklich x86/x64/ARM und MIPS auf einmal lernen? Ist das nicht zuviel?
\par A: Anfänger können erstmal nur über x86/x64 lesen und den ARM- und MIPS-Teil überspringen oder überfliegen.

\par F: Kann ich eine russische oder englische Version als Druckausgabe kaufen?
\par A: Leider nicht, bisher ist kein Verleger an einer russischen oder englischen Version interessiert.
Bis es soweit ist, können Sie Ihren Lieblings-Copy-Shop bitten es zu drucken und zu binden.

\par F: Gibt es eine EPUB- oder MOBI-Version?
\par A: Dieses Buch ist in hohem Maße abhängig von \TeX{}- / \LaTeX{}-spezifischen Techniken,
was das Konvertieren zu HTML schwierig macht (EPUB und MOBI basieren auf HTML).

\par F: Warum sollte ich heutzutage noch Assembler lernen?
\par A: Fall Sie kein \ac{OS}-Entwickler sind, werden Sie vermutlich nie in Assembler programmieren müssen \textemdash{}
aktuelle Compiler (2010 und später) können sehr viel besser optimieren als Menschen\footnote{Ein lesenswerter Artikel zu diesem Thema: \InSqBrackets{\AgnerFog}}.

Auch sind aktuelle \ac{CPU}s sehr komplexe Komponenten und Wissen über Assembler hilft nicht wirklich
um die Interna zu verstehen.

Davon abgesehen, gibt es mindestens zwei Bereiche in denen ein gutes Verständnis von Assembler hilfreich
sein kann: Zuallererst, bei der Security- und Malware-Forschung, aber auch um ein besseres Verständnis des kompilierten
Codes zu bekommen.
Dieses Buch ist somit für diejenigen geschrieben, die Assembler eher verstehen als darin programmieren wollen.
Das ist der Grund, warum viele Ausgabe-Beispiele des Compilers in diesem Buch enthalten sind.

\par F: Ich habe in der PDF-Datei auf einen Link geklickt. Wie komme ich zurück?
\par A: Im Adobe Acrobat Reader geht dies durch betätigen von Alt+CursorLinks.
In Evince durch die ``<''-Taste.

\par F: Darf ich dieses Buch drucken / für Lehrzwecke benutzen?
\par A: Selbstverständlich! Das ist der Grund warum es unter der Creative Commons Lizenz (CC BY-SA 4.0) veröffentlicht wird.

\par F: Warum ist dieses Buch kostenlos? Du hast gute Arbeit geleistet. Das ist verdächtig, wie bei vielen anderen kostenlosen Dingen.
\par A: Meiner Erfahrung nach schreiben Autoren von technischer Literatur diese des Lernens willen. Es ist nicht möglich angemessen
viel Geld hierfür zu bekommen.

\par F: Wie kann man einen Job im Bereich des Reverse Engineering bekommen?
\par A: Von Zeit zu Zeit gibt es Threads zu Jobangeboten auf \FNURLREDDIT{}
(\RedditHiringThread{}).
Versuchen Sie es dort einmal.

Ein ähnlicher Job-Thread ist unter\q{netsec} subreddit: \NetsecHiringThread{} zu finden.

\myindex{LISP}
\par F: Wie kann ich ganz allgemein programmieren lernen?
\par A: Das Programmiererleben wird sehr viel einfacher, wenn man C und LIPS beherrscht. Ich würde empfehlen die Übungsaufgaben aus [\KRBook] und \ac{SICP} zu lösen.

\par F: Ich habe eine Frage...
\par A: Senden Sie sie mir per E-Mail (\EMAIL).

% The Clever Algorithms Project: http://www.CleverAlgorithms.com
% (c) Copyright 2010 Jason Brownlee. Some Rights Reserved. 
% This work is licensed under a Creative Commons Attribution-Noncommercial-Share Alike 2.5 Australia License.

% This is an algorithm description, see:
% Jason Brownlee. A Template for Standardized Algorithm Descriptions. Technical Report CA-TR-20100107-1, The Clever Algorithms Project http://www.CleverAlgorithms.com, January 2010.

% Name
% The algorithm name defines the canonical name used to refer to the technique, in addition to common aliases, abbreviations, and acronyms. The name is used in terms of the heading and sub-headings of an algorithm description.
\section{Clonal Selection Algorithm} 
\label{sec:clonal_selection_algorithm}
\index{Clonal Selection Algorithm}
\index{CLONALG}

% other names
% What is the canonical name and common aliases for a technique?
% What are the common abbreviations and acronyms for a technique?
\emph{Clonal Selection Algorithm, CSA, CLONALG.}

% Taxonomy: Lineage and locality
% The algorithm taxonomy defines where a techniques fits into the field, both the specific subfields of Computational Intelligence and Biologically Inspired Computation as well as the broader field of Artificial Intelligence. The taxonomy also provides a context for determining the relation- ships between algorithms. The taxonomy may be described in terms of a series of relationship statements or pictorially as a venn diagram or a graph with hierarchical structure.
\subsection{Taxonomy}
% To what fields of study does a technique belong?
The Clonal Selection Algorithm (CLONALG) belongs to the field of Artificial Immune Systems.
% What are the closely related approaches to a technique?
It is related to other Clonal Selection Algorithms such as the Artificial Immune Recognition System (Section~\ref{sec:airs}), the B-Cell Algorithm (BCA), and the Multi-objective Immune System Algorithm (MISA).
% extensions
There are numerious extensions to CLONALG including tweaks such as the CLONALG1 and CLONALG2 approaches, a version for classification called CLONCLAS,  and an adaptive version called Adaptive Clonal Selection (ACS).

% Inspiration: Motivating system
% The inspiration describes the specific system or process that provoked the inception of the algorithm. The inspiring system may non-exclusively be natural, biological, physical, or social. The description of the inspiring system may include relevant domain specific theory, observation, nomenclature, and most important must include those salient attributes of the system that are somehow abstractly or conceptually manifest in the technique. The inspiration is described textually with citations and may include diagrams to highlight features and relationships within the inspiring system.
% Optional
\subsection{Inspiration}
% What is the system or process that motivated the development of a technique?
The Clonal Selection algorithm is inspired by the Clonal Selection theory of acquired immunity.
% Which features of the motivating system are relevant to a technique?
The clonal selection theory credited to Burnet was proposed to account for the behavior and capabilities of antibodies in the acquired immune system \cite{Burnet1957, Burnet1959}. Inspired itself by the principles of Darwinian natural selection theory of evolution, the theory proposes that antigens select-for lymphocytes (both B and T-cells). When a lymphocyte is selected and binds to an antigenic determinant, the cell proliferates making many thousands more copies of itself and differentiates into different cell types (plasma and memory cells). Plasma cells have a short lifespan and produce vast quantities of antibody molecules, whereas memory cells live for an extended period in the host anticipating future recognition of the same determinant. The important feature of the theory is that when a cell is selected and proliferates, it is subjected to small copying errors (changes to the genome called somatic hypermutation) that change the shape of the expressed receptors and subsequent determinant recognition capabilities of both the antibodies bound to the lymphocytes cells surface, and the antibodies that plasma cells produce.

% Metaphor: Explanation via analogy
% The metaphor is a description of the technique in the context of the inspiring system or a different suitable system. The features of the technique are made apparent through an analogous description of the features of the inspiring system. The explanation through analogy is not expected to be literal scientific truth, rather the method is used as an allegorical communication tool. The inspiring system is not explicitly described, this is the role of the ‘inspiration’ element, which represents a loose dependency for this element. The explanation is textual and uses the nomenclature of the metaphorical system.
% Optional
\subsection{Metaphor}
% What is the explanation of a technique in the context of the inspiring system?
% What are the functionalities inferred for a technique from the analogous inspiring system?
The theory suggests that starting with an initial repertoire of general immune cells, the system is able to change itself (the compositions and densities of cells and their receptors) in response to experience with the environment. Through a blind process of selection and accumulated variation on the large scale of many billions of cells, the acquired immune system is capable of acquiring the necessary information to protect the host organism from the specific pathogenic dangers of the environment. It also suggests that the system must anticipate (guess) at the pathogen to which it will be exposed, and requires exposure to pathogen that may harm the host before it can acquire the necessary information to provide a defense.

% Strategy: Problem solving plan
% The strategy is an abstract description of the computational model. The strategy describes the information processing actions a technique shall take in order to achieve an objective. The strategy provides a logical separation between a computational realization (procedure) and a analogous system (metaphor). A given problem solving strategy may be realized as one of a number specific algorithms or problem solving systems. The strategy description is textual using information processing and algorithmic terminology.
\subsection{Strategy}
% What is the information processing objective of a technique?
The information processing principles of the clonal selection theory describe a general learning strategy.
% What is a techniques plan of action?
This strategy involves a population of adaptive information units (each representing a problem-solution or component) subjected to a competitive processes for selection, which together with the resultant duplication and variation ultimately improves the adaptive fit of the information units to their environment.

% Procedure: Abstract computation
% The algorithmic procedure summarizes the specifics of realizing a strategy as a systemized and parameterized computation. It outlines how the algorithm is organized in terms of the data structures and representations. The procedure may be described in terms of software engineering and computer science artifacts such as Pseudocode, design diagrams, and relevant mathematical equations.
\subsection{Procedure}
% What is the computational recipe for a technique?
% What are the data structures and representations used in a technique?
Algorithm~\ref{alg:clonalg} provides a pseudocode listing of the Clonal Selection Algorithm (CLONALG) for minimizing a cost function. 
% description
The general CLONALG model involves the selection of antibodies (candidate solutions) based on affinity either by matching against an antigen pattern or via evaluation of a pattern by a cost function. Selected antibodies are subjected to cloning proportional to affinity, and the hypermutation of clones inversely-proportional to clone affinity. The resultant clonal-set competes with the existent antibody population for membership in the next generation. In addition, low-affinity population members are replaced by randomly generated antibodies. The pattern recognition variation of the algorithm includes the maintenance of a memory solution set which in its entirety represents a solution to the problem. A binary-encoding scheme is employed for the binary-pattern recognition and continuous function optimization examples, and an integer permutation scheme is employed for the Traveling Salesman Problem (TSP).

\begin{algorithm}[ht]
  \SetLine  
  % data
  \SetKwData{Pop}{Population}
  \SetKwData{Length}{$Problem_{size}$}
  \SetKwData{Selectsize}{$Selection_{size}$}
  \SetKwData{RandomCells}{$RandomCells_{num}$}
  \SetKwData{PopSize}{$Population_{size}$}
  \SetKwData{CloneRate}{$Clone_{rate}$}
  \SetKwData{MutationRate}{$Mutation_{rate}$}

	 % functions
  \SetKwFunction{StopCondition}{StopCondition}
  \SetKwFunction{Hypermutate}{Hypermutate}
  \SetKwFunction{Affinity}{Affinity}
  \SetKwFunction{Select}{Select}
  \SetKwFunction{Clone}{Clone}
  \SetKwFunction{Replace}{Replace}
  \SetKwFunction{CreateRandomCells}{CreateRandomCells}  
  
  \KwIn{\PopSize, \Selectsize, \Length, \RandomCells, \CloneRate, \MutationRate}		
  \KwOut{\Pop}
  
	\Pop $\leftarrow$ \CreateRandomCells{\PopSize, \Length}\;	
	\While{$\neg$\StopCondition{}}{
		\ForEach{$p_i \in$ \Pop}{
			\Affinity{$p_i$}\;
		}
		$Population_{select} \leftarrow$ \Select{\Pop, \Selectsize}\;
		$Population_{clones} \leftarrow \emptyset$\;
		\ForEach{$p_i \in Population_{select}$}{
			$Population_{clones} \leftarrow$ \Clone{$p_i$, \CloneRate}\;
		}	 
		\ForEach{$p_i \in Population_{clones}$}{
			\Hypermutate{$p_i$, \MutationRate}\;
			\Affinity{$p_i$}\;
		}	 
		\Pop $\leftarrow$ \Select{\Pop, $Population_{clones}$, \PopSize}\;
		$Population_{rand} \leftarrow$ \CreateRandomCells{\RandomCells}\;
		\Replace{\Pop, $Population_{rand}$}\;
	}
	\Return{\Pop}\;
	
	\caption{Pseudocode for CLONALG.}
	\label{alg:clonalg}
\end{algorithm}

% Heuristics: Usage guidelines
% The heuristics element describe the commonsense, best practice, and demonstrated rules for applying and configuring a parameterized algorithm. The heuristics relate to the technical details of the techniques procedure and data structures for general classes of application (neither specific implementations not specific problem instances). The heuristics are described textually, such as a series of guidelines in a bullet-point structure.
\subsection{Heuristics}
% What are the suggested configurations for a technique?
% What are the guidelines for the application of a technique to a problem instance?
\begin{itemize}
	\item The CLONALG was designed as a general machine learning approach and has been applied to pattern recognition, function optimization, and combinatorial optimization problem domains.
	\item Binary string representations are used and decoded to a representation suitable for a specific problem domain.
	\item The number of clones created for each selected member is calculated as a function of the repertoire size $N_c=round(\beta \cdot N)$, where $\beta$ is the user parameter $Clone_{rate}$. 
	\item A rank-based affinity-proportionate function is used to determine the number of clones created for selected members of the population for pattern recognition problem instances.
	\item The number of random antibodies inserted each iteration is typically very low (1-2).
	\item Point mutations (bit-flips) are used in the hypermutation operation.
	\item The function $exp(-\rho \cdot f)$ is used to determine the probability of individual component mutation for a given candidate solution, where $f$ is the candidates affinity (normalized maximizing cost value), and $\rho$ is the user parameter $Mutation_{rate}$.
\end{itemize}

% The code description provides a minimal but functional version of the technique implemented with a programming language. The code description must be able to be typed into an appropriate computer, compiled or interpreted as need be, and provide a working execution of the technique. The technique implementation also includes a minimal problem instance to which it is applied, and both the problem and algorithm implementations are complete enough to demonstrate the techniques procedure. The description is presented as a programming source code listing.
\subsection{Code Listing}
% How is a technique implemented as an executable program?
% How is a technique applied to a concrete problem instance?
Listing~\ref{clonal_selection_algorithm} provides an example of the Clonal Selection Algorithm (CLONALG) implemented in the Ruby Programming Language.
% problem
The demonstration problem is an instance of a continuous function optimization that seeks $\min f(x)$ where $f=\sum_{i=1}^n x_{i}^2$, $-5.0\leq x_i \leq 5.0$ and $n=3$. The optimal solution for this basin function is $(v_0,\ldots,v_{n-1})=0.0$.
% algorithm
The algorithm is implemented as described by de Castro and Von Zuben for function optimization \cite{Castro2002a}.

% the listing
\lstinputlisting[firstline=7,language=ruby,caption=CLONALG in Ruby, label=clonal_selection_algorithm]{../src/algorithms/immune/clonal_selection_algorithm.rb}


% References: Deeper understanding
% The references element description includes a listing of both primary sources of information about the technique as well as useful introductory sources for novices to gain a deeper understanding of the theory and application of the technique. The description consists of hand-selected reference material including books, peer reviewed conference papers, journal articles, and potentially websites. A bullet-pointed structure is suggested.
\subsection{References}
% What are the primary sources for a technique?
% What are the suggested reference sources for learning more about a technique?

% 
% Primary Sources
% 
\subsubsection{Primary Sources}
% seminal
Hidden at the back of a technical report on the applications of Artificial Immune Systems de~Castro and Von~Zuben \cite{Castro1999} proposed the Clonal Selection Algorithm (CSA) as a computational realization of the clonal selection principle for pattern matching and optimization.
% early
The algorithm was later published \cite{Castro2000}, and investigated where it was renamed to CLONALG (CLONal selection ALGorithm) \cite{Castro2002a}.

% 
% Learn More
% 
\subsubsection{Learn More}
% parallel
Watkins et~al. proposed to exploit the \emph{inherent distributedness} of the CLONALG and proposed a parallel version of the pattern recognition version of the algorithm \cite{Watkins2003}.
% clonclas
White and Garret also investigated the pattern recognition version of CLONALG and generalized the approach for the task of binary pattern classification renaming it to Clonal Classification (CLONCLAS) where their approach was compared to a number of simple Hamming distance based heuristics \cite{White2003}.
% acs
In an attempt to address concerns of algorithm efficiency, parameterization, and representation selection for continuous function optimization Garrett proposed an updated version of CLONALG called Adaptive Clonal Selection (ACS) \cite{Garrett2004}.
% reviews
In their book, de Castro and Timmis provide a detailed treatment of CLONALG including a description of the approach (starting page 79) and a step through of the algorithm (starting page 99) \cite{Castro2002b}.
Cutello and Nicosia provide a study of the clonal selection principle and algorithms inspired by the theory \cite{Cutello2005}.
Brownlee provides a review of Clonal Selection algorithms providing a taxonomy, algorithm reviews, and a broader bibliography \cite{Brownlee2007b}.

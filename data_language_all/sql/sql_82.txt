UPDATE `creature_template` SET `mindmg`=12985, `maxdmg`=18594, `attackpower` = ROUND((`mindmg`+`maxdmg`) / 4 * 3) WHERE `entry`=52157; -- Ohgan
--TODO: Change the operator name sql.alerts@sparkhound.com
--TODO: Uncomment --EXEC (@TSQL) when confirmed

USE [msdb]
GO

--These jobs do not have a notify operator setting
select j.job_id, j.name, CategoryName = jc.name, j.enabled, j.description
, OwnerName = suser_sname(j.owner_sid), date_created,date_modified, j.notify_email_operator_id
  from msdb.dbo.sysjobs  j
inner join msdb.dbo.syscategories jc
on j.category_id = jc.category_id
where j.notify_email_operator_id = 0  
and j.name not in ('syspolicy_purge_history')

DECLARE AddFailureNotifications CURSOR FAST_FORWARD 
FOR
select convert(nvarchar(4000),	'
EXEC msdb.dbo.sp_update_job @job_id=N'''+convert(varchar(64), job_id)+''', /*'+j.name+'*/ 
		@notify_level_email=2, 
		@notify_email_operator_name=N''sql.alerts@sparkhound.com''')
from msdb.dbo.sysjobs  j
where j.notify_email_operator_id = 0  
and j.name not in ('syspolicy_purge_history')

declare @TSQL nvarchar(4000) = null
OPEN AddFailureNotifications
FETCH NEXT FROM AddFailureNotifications 
INTO @TSQL

WHILE @@FETCH_STATUS = 0
BEGIN
	--EXEC (@TSQL)
	SELECT @TSQL
	FETCH NEXT FROM AddFailureNotifications 
	INTO @TSQL
END

CLOSE AddFailureNotifications
DEALLOCATE AddFailureNotifications;

/*

--Change the operator name sql.alerts@sparkhound.com
--you may need to change the @server_name value below
USE [msdb]
GO
BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'[Uncategorized (Local)]' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'[Uncategorized (Local)]'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
END
DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'Add Failure Notifications', 
		@enabled=1, 
		@notify_level_eventlog=2, 
		@notify_level_email=2, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'Adds failure notification emails to any jobs that are created', 
		@category_name=N'[Uncategorized (Local)]', 
		@owner_login_name=N'sa', 
		@notify_email_operator_name=N'sql.alerts@sparkhound.com', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'tsql', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'USE [msdb]
GO
DECLARE AddFailureNotifications CURSOR FAST_FORWARD 
FOR
select convert(nvarchar(4000),	''
EXEC msdb.dbo.sp_update_job @job_id=N''''''+convert(varchar(64), job_id)+'''''', 
		@notify_level_email=2, 
		@notify_level_netsend=2, 
		@notify_level_page=2, 
		@notify_email_operator_name=N''''sql.alerts@sparkhound.com'''''')
from msdb.dbo.sysjobs 
where notify_email_operator_id = 0
declare @tsql nvarchar(4000) = null
OPEN AddFailureNotifications
FETCH NEXT FROM AddFailureNotifications 
INTO @tsql
WHILE @@FETCH_STATUS = 0
BEGIN
	EXEC (@TSQL)
	FETCH NEXT FROM AddFailureNotifications 
	INTO @tsql
END', 
		@database_name=N'msdb', 
		@flags=4
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobschedule @job_id=@jobId, @name=N'nightly', 
		@enabled=1, 
		@freq_type=4, 
		@freq_interval=1, 
		@freq_subday_type=1, 
		@freq_subday_interval=0, 
		@freq_relative_interval=0, 
		@freq_recurrence_factor=0, 
		@active_start_date=20150216, 
		@active_end_date=99991231, 
		@active_start_time=200000, 
		@active_end_time=235959, 
		@schedule_uid=N'fd1a2b03-1e0b-487d-ac6f-9eac60fc4f6a'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:
GO
*/
